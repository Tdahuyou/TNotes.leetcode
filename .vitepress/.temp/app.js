import { ssrRenderAttrs, ssrRenderSlot, ssrInterpolate, ssrRenderAttr, ssrRenderList, ssrRenderComponent, ssrRenderVNode, ssrRenderClass, ssrIncludeBooleanAttr, ssrRenderStyle, renderToString } from "vue/server-renderer";
import { shallowRef, inject, computed, ref, watch, onUnmounted, reactive, markRaw, readonly, nextTick, defineComponent, h, toRaw, onMounted, mergeProps, useSSRContext, unref, watchEffect, watchPostEffect, onUpdated, resolveComponent, createVNode, resolveDynamicComponent, withCtx, renderSlot, createTextVNode, toDisplayString, createBlock, createCommentVNode, openBlock, Fragment, renderList, defineAsyncComponent, provide, toHandlers, withKeys, onBeforeUnmount, useSlots, createSlots, withDirectives, vShow, createSSRApp } from "vue";
import mermaid from "mermaid";
import { usePreferredDark, useDark, useMediaQuery, useWindowSize, onKeyStroke, useWindowScroll, useScrollLock } from "@vueuse/core";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
import { marked } from "marked";
import { Transformer } from "markmap-lib";
import { Markmap } from "markmap-view";
import { Toolbar } from "markmap-toolbar";
const init = async (externalDiagrams) => {
  try {
    if (mermaid.registerExternalDiagrams)
      await mermaid.registerExternalDiagrams(externalDiagrams);
  } catch (e) {
    console.error(e);
  }
};
const render$1 = async (id, code, config) => {
  mermaid.initialize(config);
  const { svg } = await mermaid.render(id, code);
  return svg;
};
function deserializeFunctions(r) {
  return Array.isArray(r) ? r.map(deserializeFunctions) : typeof r == "object" && r !== null ? Object.keys(r).reduce((t, n) => (t[n] = deserializeFunctions(r[n]), t), {}) : typeof r == "string" && r.startsWith("_vp-fn_") ? new Function(`return ${r.slice(7)}`)() : r;
}
const siteData = deserializeFunctions(JSON.parse('{"lang":"zh-Hans","dir":"ltr","title":"TNotes.leetcode","description":"TNotes.leetcode","base":"/TNotes.leetcode/","head":[],"router":{"prefetchLinks":false},"appearance":"dark","themeConfig":{"docFooter":{"prev":"上一篇","next":"下一篇"},"externalLinkIcon":true,"outline":{"level":[2,3],"label":"目录"},"nav":[{"text":"👀 TOC","link":"/TOC"},{"text":"Menus","items":[{"text":"🏠 Home","link":"/"},{"text":"⚙️ Settings","link":"/Settings"},{"text":"🎯 Words","link":"/Words"},{"text":"🔗 References","link":"/References"},{"text":"📒 TNotes","link":"https://tdahuyou.github.io/notes"},{"text":"📂 TNotes.yuque","link":"https://www.yuque.com/tdahuyou/tnotes.yuque"}]}],"search":{"provider":"local","options":{"miniSearch":{"options":{"tokenize":"_vp-fn_(text, language) => {\\n              if (language === \\"zh\\") {\\n                return text.match(/[\\\\u4e00-\\\\u9fa5]+|\\\\S+/g) || [];\\n              }\\n              return text.split(/\\\\s+/);\\n            }","processTerm":"_vp-fn_(term) => term.toLowerCase()"},"searchOptions":{"fuzzy":0.2,"prefix":true,"boost":{"title":10,"headings":5,"text":3,"code":1}}}}},"sidebar":[{"text":"1. 其他","collapsed":true,"items":[{"text":"✅ 9996. hello-algo","link":"/notes/9996. hello-algo/README"},{"text":"✅ 9999. 油猴脚本 - LeetCode 题目描述爬取","link":"/notes/9999. 油猴脚本 - LeetCode 题目描述爬取/README"},{"text":"⏰ 9997. GitHub 技术社区 Doocs 开源项目 leetcode","link":"/notes/9997. GitHub 技术社区 Doocs 开源项目 leetcode/README"},{"text":"⏰ 9998. leetcode 刷题指南 - 新手快速入门 - 数据结构、算法","link":"/notes/9998. leetcode 刷题指南 - 新手快速入门 - 数据结构、算法/README"}]},{"text":"2. 0001~0100","collapsed":true,"items":[{"text":"✅ 0001. 两数之和【简单】","link":"/notes/0001. 两数之和【简单】/README"},{"text":"✅ 0002. 两数相加【中等】","link":"/notes/0002. 两数相加【中等】/README"},{"text":"✅ 0003. 无重复字符的最长子串【中等】","link":"/notes/0003. 无重复字符的最长子串【中等】/README"},{"text":"⏰ 0004. 寻找两个正序数组的中位数【困难】","link":"/notes/0004. 寻找两个正序数组的中位数【困难】/README"},{"text":"⏰ 0005. 最长回文子串【中等】","link":"/notes/0005. 最长回文子串【中等】/README"},{"text":"⏰ 0006. Z 字形变换【中等】","link":"/notes/0006. Z 字形变换【中等】/README"},{"text":"⏰ 0007. 整数反转【中等】","link":"/notes/0007. 整数反转【中等】/README"},{"text":"⏰ 0008. 字符串转换整数 (atoi)【中等】","link":"/notes/0008. 字符串转换整数 (atoi)【中等】/README"},{"text":"⏰ 0009. 回文数【简单】","link":"/notes/0009. 回文数【简单】/README"},{"text":"⏰ 0010. 正则表达式匹配【困难】","link":"/notes/0010. 正则表达式匹配【困难】/README"},{"text":"⏰ 0011. 盛最多水的容器【中等】","link":"/notes/0011. 盛最多水的容器【中等】/README"},{"text":"⏰ 0012. 整数转罗马数字【中等】","link":"/notes/0012. 整数转罗马数字【中等】/README"},{"text":"⏰ 0013. 罗马数字转整数【简单】","link":"/notes/0013. 罗马数字转整数【简单】/README"},{"text":"⏰ 0014. 最长公共前缀【简单】","link":"/notes/0014. 最长公共前缀【简单】/README"},{"text":"✅ 0015. 三数之和【中等】","link":"/notes/0015. 三数之和【中等】/README"},{"text":"⏰ 0016. 最接近的三数之和【中等】","link":"/notes/0016. 最接近的三数之和【中等】/README"},{"text":"⏰ 0017. 电话号码的字母组合【中等】","link":"/notes/0017. 电话号码的字母组合【中等】/README"},{"text":"⏰ 0018. 四数之和【中等】","link":"/notes/0018. 四数之和【中等】/README"},{"text":"⏰ 0019. 删除链表的倒数第 N 个结点【中等】","link":"/notes/0019. 删除链表的倒数第 N 个结点【中等】/README"},{"text":"⏰ 0020. 有效的括号【简单】","link":"/notes/0020. 有效的括号【简单】/README"},{"text":"⏰ 0021. 合并两个有序链表【简单】","link":"/notes/0021. 合并两个有序链表【简单】/README"},{"text":"⏰ 0022. 括号生成【中等】","link":"/notes/0022. 括号生成【中等】/README"},{"text":"⏰ 0023. 合并 K 个升序链表【困难】","link":"/notes/0023. 合并 K 个升序链表【困难】/README"},{"text":"⏰ 0024. 两两交换链表中的节点【中等】","link":"/notes/0024. 两两交换链表中的节点【中等】/README"},{"text":"⏰ 0025. K 个一组翻转链表【困难】","link":"/notes/0025. K 个一组翻转链表【困难】/README"},{"text":"✅ 0026. 删除有序数组中的重复项【简单】","link":"/notes/0026. 删除有序数组中的重复项【简单】/README"},{"text":"⏰ 0027. 移除元素【简单】","link":"/notes/0027. 移除元素【简单】/README"},{"text":"⏰ 0028. 找出字符串中第一个匹配项的下标【简单】","link":"/notes/0028. 找出字符串中第一个匹配项的下标【简单】/README"},{"text":"⏰ 0029. 两数相除【中等】","link":"/notes/0029. 两数相除【中等】/README"},{"text":"⏰ 0030. 串联所有单词的子串【困难】","link":"/notes/0030. 串联所有单词的子串【困难】/README"},{"text":"⏰ 0031. 下一个排列【中等】","link":"/notes/0031. 下一个排列【中等】/README"},{"text":"⏰ 0032. 最长有效括号【困难】","link":"/notes/0032. 最长有效括号【困难】/README"},{"text":"⏰ 0033. 搜索旋转排序数组【中等】","link":"/notes/0033. 搜索旋转排序数组【中等】/README"},{"text":"⏰ 0034. 在排序数组中查找元素的第一个和最后一个位置【中等】","link":"/notes/0034. 在排序数组中查找元素的第一个和最后一个位置【中等】/README"},{"text":"⏰ 0035. 搜索插入位置【简单】","link":"/notes/0035. 搜索插入位置【简单】/README"},{"text":"⏰ 0036. 有效的数独【中等】","link":"/notes/0036. 有效的数独【中等】/README"},{"text":"⏰ 0037. 解数独【困难】","link":"/notes/0037. 解数独【困难】/README"},{"text":"⏰ 0038. 外观数列【中等】","link":"/notes/0038. 外观数列【中等】/README"},{"text":"⏰ 0039. 组合总和【中等】","link":"/notes/0039. 组合总和【中等】/README"},{"text":"⏰ 0040. 组合总和 II【中等】","link":"/notes/0040. 组合总和 II【中等】/README"},{"text":"⏰ 0041. 缺失的第一个正数【困难】","link":"/notes/0041. 缺失的第一个正数【困难】/README"},{"text":"⏰ 0042. 接雨水【困难】","link":"/notes/0042. 接雨水【困难】/README"},{"text":"⏰ 0043. 字符串相乘【中等】","link":"/notes/0043. 字符串相乘【中等】/README"},{"text":"⏰ 0044. 通配符匹配【困难】","link":"/notes/0044. 通配符匹配【困难】/README"},{"text":"⏰ 0045. 跳跃游戏 II【中等】","link":"/notes/0045. 跳跃游戏 II【中等】/README"},{"text":"⏰ 0046. 全排列【中等】","link":"/notes/0046. 全排列【中等】/README"},{"text":"⏰ 0047. 全排列 II【中等】","link":"/notes/0047. 全排列 II【中等】/README"},{"text":"⏰ 0048. 旋转图像【中等】","link":"/notes/0048. 旋转图像【中等】/README"},{"text":"⏰ 0049. 字母异位词分组【中等】","link":"/notes/0049. 字母异位词分组【中等】/README"},{"text":"⏰ 0050. Pow(x, n)【中等】","link":"/notes/0050. Pow(x, n)【中等】/README"},{"text":"⏰ 0051. N 皇后【困难】","link":"/notes/0051. N 皇后【困难】/README"},{"text":"⏰ 0052. N 皇后 II【困难】","link":"/notes/0052. N 皇后 II【困难】/README"},{"text":"⏰ 0053. 最大子数组和【中等】","link":"/notes/0053. 最大子数组和【中等】/README"},{"text":"⏰ 0054. 螺旋矩阵【中等】","link":"/notes/0054. 螺旋矩阵【中等】/README"},{"text":"⏰ 0055. 跳跃游戏【中等】","link":"/notes/0055. 跳跃游戏【中等】/README"},{"text":"⏰ 0056. 合并区间【中等】","link":"/notes/0056. 合并区间【中等】/README"},{"text":"⏰ 0057. 插入区间【中等】","link":"/notes/0057. 插入区间【中等】/README"},{"text":"⏰ 0058. 最后一个单词的长度【简单】","link":"/notes/0058. 最后一个单词的长度【简单】/README"},{"text":"⏰ 0059. 螺旋矩阵 II【中等】","link":"/notes/0059. 螺旋矩阵 II【中等】/README"},{"text":"⏰ 0060. 排列序列【困难】","link":"/notes/0060. 排列序列【困难】/README"},{"text":"⏰ 0061. 旋转链表【中等】","link":"/notes/0061. 旋转链表【中等】/README"},{"text":"⏰ 0062. 不同路径【中等】","link":"/notes/0062. 不同路径【中等】/README"},{"text":"⏰ 0063. 不同路径 II【中等】","link":"/notes/0063. 不同路径 II【中等】/README"},{"text":"⏰ 0064. 最小路径和【中等】","link":"/notes/0064. 最小路径和【中等】/README"},{"text":"⏰ 0065. 有效数字【困难】","link":"/notes/0065. 有效数字【困难】/README"},{"text":"⏰ 0066. 加一【简单】","link":"/notes/0066. 加一【简单】/README"},{"text":"⏰ 0067. 二进制求和【简单】","link":"/notes/0067. 二进制求和【简单】/README"},{"text":"⏰ 0068. 文本左右对齐【困难】","link":"/notes/0068. 文本左右对齐【困难】/README"},{"text":"✅ 0069. x 的平方根【简单】","link":"/notes/0069. x 的平方根【简单】/README"},{"text":"✅ 0070. 爬楼梯【简单】","link":"/notes/0070. 爬楼梯【简单】/README"},{"text":"⏰ 0071. 简化路径【中等】","link":"/notes/0071. 简化路径【中等】/README"},{"text":"⏰ 0072. 编辑距离【中等】","link":"/notes/0072. 编辑距离【中等】/README"},{"text":"⏰ 0073. 矩阵置零【中等】","link":"/notes/0073. 矩阵置零【中等】/README"},{"text":"⏰ 0074. 搜索二维矩阵【中等】","link":"/notes/0074. 搜索二维矩阵【中等】/README"},{"text":"⏰ 0075. 颜色分类【中等】","link":"/notes/0075. 颜色分类【中等】/README"},{"text":"⏰ 0076. 最小覆盖子串【困难】","link":"/notes/0076. 最小覆盖子串【困难】/README"},{"text":"⏰ 0077. 组合【中等】","link":"/notes/0077. 组合【中等】/README"},{"text":"⏰ 0078. 子集【中等】","link":"/notes/0078. 子集【中等】/README"},{"text":"⏰ 0079. 单词搜索【中等】","link":"/notes/0079. 单词搜索【中等】/README"},{"text":"⏰ 0080. 删除有序数组中的重复项 II【中等】","link":"/notes/0080. 删除有序数组中的重复项 II【中等】/README"},{"text":"⏰ 0081. 搜索旋转排序数组 II【中等】","link":"/notes/0081. 搜索旋转排序数组 II【中等】/README"},{"text":"⏰ 0082. 删除排序链表中的重复元素 II【中等】","link":"/notes/0082. 删除排序链表中的重复元素 II【中等】/README"},{"text":"✅ 0083. 删除排序链表中的重复元素【简单】","link":"/notes/0083. 删除排序链表中的重复元素【简单】/README"},{"text":"⏰ 0084. 柱状图中最大的矩形【困难】","link":"/notes/0084. 柱状图中最大的矩形【困难】/README"},{"text":"⏰ 0085. 最大矩形【困难】","link":"/notes/0085. 最大矩形【困难】/README"},{"text":"⏰ 0086. 分隔链表【中等】","link":"/notes/0086. 分隔链表【中等】/README"},{"text":"⏰ 0087. 扰乱字符串【困难】","link":"/notes/0087. 扰乱字符串【困难】/README"},{"text":"⏰ 0088. 合并两个有序数组【简单】","link":"/notes/0088. 合并两个有序数组【简单】/README"},{"text":"⏰ 0089. 格雷编码【中等】","link":"/notes/0089. 格雷编码【中等】/README"},{"text":"⏰ 0090. 子集 II【中等】","link":"/notes/0090. 子集 II【中等】/README"},{"text":"⏰ 0091. 解码方法【中等】","link":"/notes/0091. 解码方法【中等】/README"},{"text":"⏰ 0092. 反转链表 II【中等】","link":"/notes/0092. 反转链表 II【中等】/README"},{"text":"⏰ 0093. 复原 IP 地址【中等】","link":"/notes/0093. 复原 IP 地址【中等】/README"},{"text":"⏰ 0094. 二叉树的中序遍历【简单】","link":"/notes/0094. 二叉树的中序遍历【简单】/README"},{"text":"⏰ 0095. 不同的二叉搜索树 II【中等】","link":"/notes/0095. 不同的二叉搜索树 II【中等】/README"},{"text":"⏰ 0096. 不同的二叉搜索树【中等】","link":"/notes/0096. 不同的二叉搜索树【中等】/README"},{"text":"⏰ 0097. 交错字符串【中等】","link":"/notes/0097. 交错字符串【中等】/README"},{"text":"⏰ 0098. 验证二叉搜索树【中等】","link":"/notes/0098. 验证二叉搜索树【中等】/README"},{"text":"⏰ 0099. 恢复二叉搜索树【中等】","link":"/notes/0099. 恢复二叉搜索树【中等】/README"},{"text":"✅ 0100. 相同的树【简单】","link":"/notes/0100. 相同的树【简单】/README"}]},{"text":"3. 0101~0200","collapsed":true,"items":[{"text":"✅ 0101. 对称二叉树【简单】","link":"/notes/0101. 对称二叉树【简单】/README"},{"text":"⏰ 0102. 二叉树的层序遍历【中等】","link":"/notes/0102. 二叉树的层序遍历【中等】/README"},{"text":"⏰ 0103. 二叉树的锯齿形层序遍历【中等】","link":"/notes/0103. 二叉树的锯齿形层序遍历【中等】/README"},{"text":"✅ 0104. 二叉树的最大深度【简单】","link":"/notes/0104. 二叉树的最大深度【简单】/README"},{"text":"⏰ 0105. 从前序与中序遍历序列构造二叉树【中等】","link":"/notes/0105. 从前序与中序遍历序列构造二叉树【中等】/README"},{"text":"⏰ 0106. 从中序与后序遍历序列构造二叉树【中等】","link":"/notes/0106. 从中序与后序遍历序列构造二叉树【中等】/README"},{"text":"⏰ 0107. 二叉树的层序遍历 II【中等】","link":"/notes/0107. 二叉树的层序遍历 II【中等】/README"},{"text":"✅ 0108. 将有序数组转换为二叉搜索树【简单】","link":"/notes/0108. 将有序数组转换为二叉搜索树【简单】/README"},{"text":"⏰ 0109. 有序链表转换二叉搜索树【中等】","link":"/notes/0109. 有序链表转换二叉搜索树【中等】/README"},{"text":"⏰ 0110. 平衡二叉树【简单】","link":"/notes/0110. 平衡二叉树【简单】/README"},{"text":"⏰ 0111. 二叉树的最小深度【简单】","link":"/notes/0111. 二叉树的最小深度【简单】/README"},{"text":"⏰ 0112. 路径总和【简单】","link":"/notes/0112. 路径总和【简单】/README"},{"text":"⏰ 0113. 路径总和 II【中等】","link":"/notes/0113. 路径总和 II【中等】/README"},{"text":"⏰ 0114. 二叉树展开为链表【中等】","link":"/notes/0114. 二叉树展开为链表【中等】/README"},{"text":"⏰ 0115. 不同的子序列【困难】","link":"/notes/0115. 不同的子序列【困难】/README"},{"text":"⏰ 0116. 填充每个节点的下一个右侧节点指针【中等】","link":"/notes/0116. 填充每个节点的下一个右侧节点指针【中等】/README"},{"text":"⏰ 0117. 填充每个节点的下一个右侧节点指针 II【中等】","link":"/notes/0117. 填充每个节点的下一个右侧节点指针 II【中等】/README"},{"text":"⏰ 0118. 杨辉三角【简单】","link":"/notes/0118. 杨辉三角【简单】/README"},{"text":"⏰ 0119. 杨辉三角 II【简单】","link":"/notes/0119. 杨辉三角 II【简单】/README"},{"text":"⏰ 0120. 三角形最小路径和【中等】","link":"/notes/0120. 三角形最小路径和【中等】/README"},{"text":"✅ 0121. 买卖股票的最佳时机【简单】","link":"/notes/0121. 买卖股票的最佳时机【简单】/README"},{"text":"⏰ 0122. 买卖股票的最佳时机 II【中等】","link":"/notes/0122. 买卖股票的最佳时机 II【中等】/README"},{"text":"⏰ 0123. 买卖股票的最佳时机 III【困难】","link":"/notes/0123. 买卖股票的最佳时机 III【困难】/README"},{"text":"⏰ 0124. 二叉树中的最大路径和【困难】","link":"/notes/0124. 二叉树中的最大路径和【困难】/README"},{"text":"⏰ 0125. 验证回文串【简单】","link":"/notes/0125. 验证回文串【简单】/README"},{"text":"⏰ 0126. 单词接龙 II【困难】","link":"/notes/0126. 单词接龙 II【困难】/README"},{"text":"⏰ 0127. 单词接龙【困难】","link":"/notes/0127. 单词接龙【困难】/README"},{"text":"⏰ 0128. 最长连续序列【中等】","link":"/notes/0128. 最长连续序列【中等】/README"},{"text":"⏰ 0129. 求根节点到叶节点数字之和【中等】","link":"/notes/0129. 求根节点到叶节点数字之和【中等】/README"},{"text":"⏰ 0130. 被围绕的区域【中等】","link":"/notes/0130. 被围绕的区域【中等】/README"},{"text":"⏰ 0131. 分割回文串【中等】","link":"/notes/0131. 分割回文串【中等】/README"},{"text":"⏰ 0132. 分割回文串 II【困难】","link":"/notes/0132. 分割回文串 II【困难】/README"},{"text":"⏰ 0133. 克隆图【中等】","link":"/notes/0133. 克隆图【中等】/README"},{"text":"⏰ 0134. 加油站【中等】","link":"/notes/0134. 加油站【中等】/README"},{"text":"⏰ 0135. 分发糖果【困难】","link":"/notes/0135. 分发糖果【困难】/README"},{"text":"⏰ 0136. 只出现一次的数字【简单】","link":"/notes/0136. 只出现一次的数字【简单】/README"},{"text":"⏰ 0137. 只出现一次的数字 II【中等】","link":"/notes/0137. 只出现一次的数字 II【中等】/README"},{"text":"⏰ 0138. 随机链表的复制【中等】","link":"/notes/0138. 随机链表的复制【中等】/README"},{"text":"⏰ 0139. 单词拆分【中等】","link":"/notes/0139. 单词拆分【中等】/README"},{"text":"⏰ 0140. 单词拆分 II【困难】","link":"/notes/0140. 单词拆分 II【困难】/README"},{"text":"⏰ 0141. 环形链表【简单】","link":"/notes/0141. 环形链表【简单】/README"},{"text":"⏰ 0142. 环形链表 II【中等】","link":"/notes/0142. 环形链表 II【中等】/README"},{"text":"⏰ 0143. 重排链表【中等】","link":"/notes/0143. 重排链表【中等】/README"},{"text":"⏰ 0144. 二叉树的前序遍历【简单】","link":"/notes/0144. 二叉树的前序遍历【简单】/README"},{"text":"⏰ 0145. 二叉树的后序遍历【简单】","link":"/notes/0145. 二叉树的后序遍历【简单】/README"},{"text":"⏰ 0146. LRU 缓存【中等】","link":"/notes/0146. LRU 缓存【中等】/README"},{"text":"⏰ 0147. 对链表进行插入排序【中等】","link":"/notes/0147. 对链表进行插入排序【中等】/README"},{"text":"⏰ 0148. 排序链表【中等】","link":"/notes/0148. 排序链表【中等】/README"},{"text":"⏰ 0149. 直线上最多的点数【困难】","link":"/notes/0149. 直线上最多的点数【困难】/README"},{"text":"⏰ 0150. 逆波兰表达式求值【中等】","link":"/notes/0150. 逆波兰表达式求值【中等】/README"},{"text":"⏰ 0151. 反转字符串中的单词【中等】","link":"/notes/0151. 反转字符串中的单词【中等】/README"},{"text":"⏰ 0152. 乘积最大子数组【中等】","link":"/notes/0152. 乘积最大子数组【中等】/README"},{"text":"⏰ 0153. 寻找旋转排序数组中的最小值【中等】","link":"/notes/0153. 寻找旋转排序数组中的最小值【中等】/README"},{"text":"⏰ 0154. 寻找旋转排序数组中的最小值 II【困难】","link":"/notes/0154. 寻找旋转排序数组中的最小值 II【困难】/README"},{"text":"⏰ 0155. 最小栈【中等】","link":"/notes/0155. 最小栈【中等】/README"},{"text":"⏰ 0156. 上下翻转二叉树【中等】","link":"/notes/0156. 上下翻转二叉树【中等】/README"},{"text":"⏰ 0157. 用 Read4 读取 N 个字符【简单】","link":"/notes/0157. 用 Read4 读取 N 个字符【简单】/README"},{"text":"⏰ 0158. 用 Read4 读取 N 个字符 II - 多次调用【困难】","link":"/notes/0158. 用 Read4 读取 N 个字符 II - 多次调用【困难】/README"},{"text":"⏰ 0159. 至多包含两个不同字符的最长子串【中等】","link":"/notes/0159. 至多包含两个不同字符的最长子串【中等】/README"},{"text":"⏰ 0160. 相交链表【简单】","link":"/notes/0160. 相交链表【简单】/README"},{"text":"⏰ 0161. 相隔为 1 的编辑距离【中等】","link":"/notes/0161. 相隔为 1 的编辑距离【中等】/README"},{"text":"⏰ 0162. 寻找峰值【中等】","link":"/notes/0162. 寻找峰值【中等】/README"},{"text":"⏰ 0163. 缺失的区间【简单】","link":"/notes/0163. 缺失的区间【简单】/README"},{"text":"⏰ 0164. 最大间距【中等】","link":"/notes/0164. 最大间距【中等】/README"},{"text":"⏰ 0165. 比较版本号【中等】","link":"/notes/0165. 比较版本号【中等】/README"},{"text":"⏰ 0166. 分数到小数【中等】","link":"/notes/0166. 分数到小数【中等】/README"},{"text":"⏰ 0167. 两数之和 II - 输入有序数组【中等】","link":"/notes/0167. 两数之和 II - 输入有序数组【中等】/README"},{"text":"⏰ 0168. Excel 表列名称【简单】","link":"/notes/0168. Excel 表列名称【简单】/README"},{"text":"⏰ 0169. 多数元素【简单】","link":"/notes/0169. 多数元素【简单】/README"},{"text":"⏰ 0170. 两数之和 III - 数据结构设计【简单】","link":"/notes/0170. 两数之和 III - 数据结构设计【简单】/README"},{"text":"⏰ 0171. Excel 表列序号【简单】","link":"/notes/0171. Excel 表列序号【简单】/README"},{"text":"⏰ 0172. 阶乘后的零【中等】","link":"/notes/0172. 阶乘后的零【中等】/README"},{"text":"⏰ 0173. 二叉搜索树迭代器【中等】","link":"/notes/0173. 二叉搜索树迭代器【中等】/README"},{"text":"⏰ 0174. 地下城游戏【困难】","link":"/notes/0174. 地下城游戏【困难】/README"},{"text":"⏰ 0175. 组合两个表【简单】","link":"/notes/0175. 组合两个表【简单】/README"},{"text":"⏰ 0176. 第二高的薪水【中等】","link":"/notes/0176. 第二高的薪水【中等】/README"},{"text":"⏰ 0177. 第N高的薪水【中等】","link":"/notes/0177. 第N高的薪水【中等】/README"},{"text":"⏰ 0178. 分数排名【中等】","link":"/notes/0178. 分数排名【中等】/README"},{"text":"⏰ 0179. 最大数【中等】","link":"/notes/0179. 最大数【中等】/README"},{"text":"⏰ 0180. 连续出现的数字【中等】","link":"/notes/0180. 连续出现的数字【中等】/README"},{"text":"⏰ 0181. 超过经理收入的员工【简单】","link":"/notes/0181. 超过经理收入的员工【简单】/README"},{"text":"⏰ 0182. 查找重复的电子邮箱【简单】","link":"/notes/0182. 查找重复的电子邮箱【简单】/README"},{"text":"⏰ 0183. 从不订购的客户【简单】","link":"/notes/0183. 从不订购的客户【简单】/README"},{"text":"⏰ 0184. 部门工资最高的员工【中等】","link":"/notes/0184. 部门工资最高的员工【中等】/README"},{"text":"⏰ 0185. 部门工资前三高的所有员工【困难】","link":"/notes/0185. 部门工资前三高的所有员工【困难】/README"},{"text":"⏰ 0186. 反转字符串中的单词 II【中等】","link":"/notes/0186. 反转字符串中的单词 II【中等】/README"},{"text":"⏰ 0187. 重复的DNA序列【中等】","link":"/notes/0187. 重复的DNA序列【中等】/README"},{"text":"⏰ 0188. 买卖股票的最佳时机 IV【困难】","link":"/notes/0188. 买卖股票的最佳时机 IV【困难】/README"},{"text":"⏰ 0189. 轮转数组【中等】","link":"/notes/0189. 轮转数组【中等】/README"},{"text":"⏰ 0190. 颠倒二进制位【简单】","link":"/notes/0190. 颠倒二进制位【简单】/README"},{"text":"⏰ 0191. 位1的个数【简单】","link":"/notes/0191. 位1的个数【简单】/README"},{"text":"⏰ 0192. 统计词频【中等】","link":"/notes/0192. 统计词频【中等】/README"},{"text":"⏰ 0193. 有效电话号码【简单】","link":"/notes/0193. 有效电话号码【简单】/README"},{"text":"⏰ 0194. 转置文件【中等】","link":"/notes/0194. 转置文件【中等】/README"},{"text":"⏰ 0195. 第十行【简单】","link":"/notes/0195. 第十行【简单】/README"},{"text":"⏰ 0196. 删除重复的电子邮箱【简单】","link":"/notes/0196. 删除重复的电子邮箱【简单】/README"},{"text":"⏰ 0197. 上升的温度【简单】","link":"/notes/0197. 上升的温度【简单】/README"},{"text":"⏰ 0198. 打家劫舍【中等】","link":"/notes/0198. 打家劫舍【中等】/README"},{"text":"⏰ 0199. 二叉树的右视图【中等】","link":"/notes/0199. 二叉树的右视图【中等】/README"},{"text":"⏰ 0200. 岛屿数量【中等】","link":"/notes/0200. 岛屿数量【中等】/README"}]},{"text":"4. 0201~0300","collapsed":true,"items":[{"text":"⏰ 0201. 数字范围按位与【中等】","link":"/notes/0201. 数字范围按位与【中等】/README"},{"text":"⏰ 0202. 快乐数【简单】","link":"/notes/0202. 快乐数【简单】/README"},{"text":"⏰ 0203. 移除链表元素【简单】","link":"/notes/0203. 移除链表元素【简单】/README"},{"text":"⏰ 0204. 计数质数【中等】","link":"/notes/0204. 计数质数【中等】/README"},{"text":"⏰ 0205. 同构字符串【简单】","link":"/notes/0205. 同构字符串【简单】/README"},{"text":"⏰ 0206. 反转链表【简单】","link":"/notes/0206. 反转链表【简单】/README"},{"text":"⏰ 0207. 课程表【中等】","link":"/notes/0207. 课程表【中等】/README"},{"text":"⏰ 0208. 实现 Trie (前缀树)【中等】","link":"/notes/0208. 实现 Trie (前缀树)【中等】/README"},{"text":"⏰ 0209. 长度最小的子数组【中等】","link":"/notes/0209. 长度最小的子数组【中等】/README"},{"text":"⏰ 0210. 课程表 II【中等】","link":"/notes/0210. 课程表 II【中等】/README"},{"text":"⏰ 0211. 添加与搜索单词 - 数据结构设计【中等】","link":"/notes/0211. 添加与搜索单词 - 数据结构设计【中等】/README"},{"text":"⏰ 0212. 单词搜索 II【困难】","link":"/notes/0212. 单词搜索 II【困难】/README"},{"text":"⏰ 0213. 打家劫舍 II【中等】","link":"/notes/0213. 打家劫舍 II【中等】/README"},{"text":"⏰ 0214. 最短回文串【困难】","link":"/notes/0214. 最短回文串【困难】/README"},{"text":"⏰ 0215. 数组中的第K个最大元素【中等】","link":"/notes/0215. 数组中的第K个最大元素【中等】/README"},{"text":"⏰ 0216. 组合总和 III【中等】","link":"/notes/0216. 组合总和 III【中等】/README"},{"text":"⏰ 0217. 存在重复元素【简单】","link":"/notes/0217. 存在重复元素【简单】/README"},{"text":"⏰ 0218. 天际线问题【困难】","link":"/notes/0218. 天际线问题【困难】/README"},{"text":"⏰ 0219. 存在重复元素 II【简单】","link":"/notes/0219. 存在重复元素 II【简单】/README"},{"text":"⏰ 0220. 存在重复元素 III【困难】","link":"/notes/0220. 存在重复元素 III【困难】/README"},{"text":"⏰ 0221. 最大正方形【中等】","link":"/notes/0221. 最大正方形【中等】/README"},{"text":"⏰ 0222. 完全二叉树的节点个数【简单】","link":"/notes/0222. 完全二叉树的节点个数【简单】/README"},{"text":"⏰ 0223. 矩形面积【中等】","link":"/notes/0223. 矩形面积【中等】/README"},{"text":"⏰ 0224. 基本计算器【困难】","link":"/notes/0224. 基本计算器【困难】/README"},{"text":"⏰ 0225. 用队列实现栈【简单】","link":"/notes/0225. 用队列实现栈【简单】/README"},{"text":"⏰ 0226. 翻转二叉树【简单】","link":"/notes/0226. 翻转二叉树【简单】/README"},{"text":"⏰ 0227. 基本计算器 II【中等】","link":"/notes/0227. 基本计算器 II【中等】/README"},{"text":"✅ 0228. 汇总区间【简单】","link":"/notes/0228. 汇总区间【简单】/README"},{"text":"⏰ 0229. 多数元素 II【中等】","link":"/notes/0229. 多数元素 II【中等】/README"},{"text":"⏰ 0230. 二叉搜索树中第 K 小的元素【中等】","link":"/notes/0230. 二叉搜索树中第 K 小的元素【中等】/README"},{"text":"⏰ 0231. 2 的幂【简单】","link":"/notes/0231. 2 的幂【简单】/README"},{"text":"⏰ 0232. 用栈实现队列【简单】","link":"/notes/0232. 用栈实现队列【简单】/README"},{"text":"⏰ 0233. 数字 1 的个数【困难】","link":"/notes/0233. 数字 1 的个数【困难】/README"},{"text":"⏰ 0234. 回文链表【简单】","link":"/notes/0234. 回文链表【简单】/README"},{"text":"⏰ 0235. 二叉搜索树的最近公共祖先【中等】","link":"/notes/0235. 二叉搜索树的最近公共祖先【中等】/README"},{"text":"⏰ 0236. 二叉树的最近公共祖先【中等】","link":"/notes/0236. 二叉树的最近公共祖先【中等】/README"},{"text":"⏰ 0237. 删除链表中的节点【中等】","link":"/notes/0237. 删除链表中的节点【中等】/README"},{"text":"⏰ 0238. 除自身以外数组的乘积【中等】","link":"/notes/0238. 除自身以外数组的乘积【中等】/README"},{"text":"⏰ 0239. 滑动窗口最大值【困难】","link":"/notes/0239. 滑动窗口最大值【困难】/README"},{"text":"⏰ 0240. 搜索二维矩阵 II【中等】","link":"/notes/0240. 搜索二维矩阵 II【中等】/README"},{"text":"⏰ 0241. 为运算表达式设计优先级【中等】","link":"/notes/0241. 为运算表达式设计优先级【中等】/README"},{"text":"⏰ 0242. 有效的字母异位词【简单】","link":"/notes/0242. 有效的字母异位词【简单】/README"},{"text":"⏰ 0243. 最短单词距离【简单】","link":"/notes/0243. 最短单词距离【简单】/README"},{"text":"⏰ 0244. 最短单词距离 II【中等】","link":"/notes/0244. 最短单词距离 II【中等】/README"},{"text":"⏰ 0245. 最短单词距离 III【中等】","link":"/notes/0245. 最短单词距离 III【中等】/README"},{"text":"⏰ 0246. 中心对称数【简单】","link":"/notes/0246. 中心对称数【简单】/README"},{"text":"⏰ 0247. 中心对称数 II【中等】","link":"/notes/0247. 中心对称数 II【中等】/README"},{"text":"⏰ 0248. 中心对称数 III【困难】","link":"/notes/0248. 中心对称数 III【困难】/README"},{"text":"⏰ 0249. 移位字符串分组【中等】","link":"/notes/0249. 移位字符串分组【中等】/README"},{"text":"⏰ 0250. 统计同值子树【中等】","link":"/notes/0250. 统计同值子树【中等】/README"},{"text":"⏰ 0251. 展开二维向量【中等】","link":"/notes/0251. 展开二维向量【中等】/README"},{"text":"⏰ 0252. 会议室【简单】","link":"/notes/0252. 会议室【简单】/README"},{"text":"⏰ 0253. 会议室 II【中等】","link":"/notes/0253. 会议室 II【中等】/README"},{"text":"⏰ 0254. 因子的组合【中等】","link":"/notes/0254. 因子的组合【中等】/README"},{"text":"⏰ 0255. 验证二叉搜索树的前序遍历序列【中等】","link":"/notes/0255. 验证二叉搜索树的前序遍历序列【中等】/README"},{"text":"⏰ 0256. 粉刷房子【中等】","link":"/notes/0256. 粉刷房子【中等】/README"},{"text":"⏰ 0257. 二叉树的所有路径【简单】","link":"/notes/0257. 二叉树的所有路径【简单】/README"},{"text":"⏰ 0258. 各位相加【简单】","link":"/notes/0258. 各位相加【简单】/README"},{"text":"⏰ 0259. 较小的三数之和【中等】","link":"/notes/0259. 较小的三数之和【中等】/README"},{"text":"⏰ 0260. 只出现一次的数字 III【中等】","link":"/notes/0260. 只出现一次的数字 III【中等】/README"},{"text":"⏰ 0261. 以图判树【中等】","link":"/notes/0261. 以图判树【中等】/README"},{"text":"⏰ 0262. 行程和用户【困难】","link":"/notes/0262. 行程和用户【困难】/README"},{"text":"⏰ 0263. 丑数【简单】","link":"/notes/0263. 丑数【简单】/README"},{"text":"⏰ 0264. 丑数 II【中等】","link":"/notes/0264. 丑数 II【中等】/README"},{"text":"⏰ 0265. 粉刷房子 II【困难】","link":"/notes/0265. 粉刷房子 II【困难】/README"},{"text":"⏰ 0266. 回文排列【简单】","link":"/notes/0266. 回文排列【简单】/README"},{"text":"⏰ 0267. 回文排列 II【中等】","link":"/notes/0267. 回文排列 II【中等】/README"},{"text":"✅ 0268. 丢失的数字【简单】","link":"/notes/0268. 丢失的数字【简单】/README"},{"text":"⏰ 0269. 火星词典【困难】","link":"/notes/0269. 火星词典【困难】/README"},{"text":"⏰ 0270. 最接近的二叉搜索树值【简单】","link":"/notes/0270. 最接近的二叉搜索树值【简单】/README"},{"text":"⏰ 0271. 字符串的编码与解码【中等】","link":"/notes/0271. 字符串的编码与解码【中等】/README"},{"text":"⏰ 0272. 最接近的二叉搜索树值 II【困难】","link":"/notes/0272. 最接近的二叉搜索树值 II【困难】/README"},{"text":"⏰ 0273. 整数转换英文表示【困难】","link":"/notes/0273. 整数转换英文表示【困难】/README"},{"text":"⏰ 0274. H 指数【中等】","link":"/notes/0274. H 指数【中等】/README"},{"text":"⏰ 0275. H 指数 II【中等】","link":"/notes/0275. H 指数 II【中等】/README"},{"text":"⏰ 0276. 栅栏涂色【中等】","link":"/notes/0276. 栅栏涂色【中等】/README"},{"text":"⏰ 0277. 搜寻名人【中等】","link":"/notes/0277. 搜寻名人【中等】/README"},{"text":"⏰ 0278. 第一个错误的版本【简单】","link":"/notes/0278. 第一个错误的版本【简单】/README"},{"text":"⏰ 0279. 完全平方数【中等】","link":"/notes/0279. 完全平方数【中等】/README"},{"text":"⏰ 0280. 摆动排序【中等】","link":"/notes/0280. 摆动排序【中等】/README"},{"text":"⏰ 0281. 锯齿迭代器【中等】","link":"/notes/0281. 锯齿迭代器【中等】/README"},{"text":"⏰ 0282. 给表达式添加运算符【困难】","link":"/notes/0282. 给表达式添加运算符【困难】/README"},{"text":"⏰ 0283. 移动零【简单】","link":"/notes/0283. 移动零【简单】/README"},{"text":"⏰ 0284. 窥视迭代器【中等】","link":"/notes/0284. 窥视迭代器【中等】/README"},{"text":"⏰ 0285. 二叉搜索树中的中序后继【中等】","link":"/notes/0285. 二叉搜索树中的中序后继【中等】/README"},{"text":"⏰ 0286. 墙与门【中等】","link":"/notes/0286. 墙与门【中等】/README"},{"text":"⏰ 0287. 寻找重复数【中等】","link":"/notes/0287. 寻找重复数【中等】/README"},{"text":"⏰ 0288. 单词的唯一缩写【中等】","link":"/notes/0288. 单词的唯一缩写【中等】/README"},{"text":"⏰ 0289. 生命游戏【中等】","link":"/notes/0289. 生命游戏【中等】/README"},{"text":"⏰ 0290. 单词规律【简单】","link":"/notes/0290. 单词规律【简单】/README"},{"text":"⏰ 0291. 单词规律 II【中等】","link":"/notes/0291. 单词规律 II【中等】/README"},{"text":"⏰ 0292. Nim 游戏【简单】","link":"/notes/0292. Nim 游戏【简单】/README"},{"text":"⏰ 0293. 翻转游戏【简单】","link":"/notes/0293. 翻转游戏【简单】/README"},{"text":"⏰ 0294. 翻转游戏 II【中等】","link":"/notes/0294. 翻转游戏 II【中等】/README"},{"text":"⏰ 0295. 数据流的中位数【困难】","link":"/notes/0295. 数据流的中位数【困难】/README"},{"text":"⏰ 0296. 最佳的碰头地点【困难】","link":"/notes/0296. 最佳的碰头地点【困难】/README"},{"text":"⏰ 0297. 二叉树的序列化与反序列化【困难】","link":"/notes/0297. 二叉树的序列化与反序列化【困难】/README"},{"text":"⏰ 0298. 二叉树最长连续序列【中等】","link":"/notes/0298. 二叉树最长连续序列【中等】/README"},{"text":"⏰ 0299. 猜数字游戏【中等】","link":"/notes/0299. 猜数字游戏【中等】/README"},{"text":"⏰ 0300. 最长递增子序列【中等】","link":"/notes/0300. 最长递增子序列【中等】/README"}]},{"text":"5. 0301~0400","collapsed":true,"items":[{"text":"⏰ 0301. 删除无效的括号【困难】","link":"/notes/0301. 删除无效的括号【困难】/README"},{"text":"⏰ 0302. 包含全部黑色像素的最小矩形【困难】","link":"/notes/0302. 包含全部黑色像素的最小矩形【困难】/README"},{"text":"✅ 0303. 区域和检索 - 数组不可变【简单】","link":"/notes/0303. 区域和检索 - 数组不可变【简单】/README"},{"text":"⏰ 0304. 二维区域和检索 - 矩阵不可变【中等】","link":"/notes/0304. 二维区域和检索 - 矩阵不可变【中等】/README"},{"text":"⏰ 0305. 岛屿数量 II【困难】","link":"/notes/0305. 岛屿数量 II【困难】/README"},{"text":"⏰ 0306. 累加数【中等】","link":"/notes/0306. 累加数【中等】/README"},{"text":"⏰ 0307. 区域和检索 - 数组可修改【中等】","link":"/notes/0307. 区域和检索 - 数组可修改【中等】/README"},{"text":"⏰ 0308. 二维区域和检索 - 矩阵可修改【中等】","link":"/notes/0308. 二维区域和检索 - 矩阵可修改【中等】/README"},{"text":"⏰ 0309. 买卖股票的最佳时机含冷冻期【中等】","link":"/notes/0309. 买卖股票的最佳时机含冷冻期【中等】/README"},{"text":"⏰ 0310. 最小高度树【中等】","link":"/notes/0310. 最小高度树【中等】/README"},{"text":"⏰ 0311. 稀疏矩阵的乘法【中等】","link":"/notes/0311. 稀疏矩阵的乘法【中等】/README"},{"text":"⏰ 0312. 戳气球【困难】","link":"/notes/0312. 戳气球【困难】/README"},{"text":"⏰ 0313. 超级丑数【中等】","link":"/notes/0313. 超级丑数【中等】/README"},{"text":"⏰ 0314. 二叉树的垂直遍历【中等】","link":"/notes/0314. 二叉树的垂直遍历【中等】/README"},{"text":"⏰ 0315. 计算右侧小于当前元素的个数【困难】","link":"/notes/0315. 计算右侧小于当前元素的个数【困难】/README"},{"text":"⏰ 0316. 去除重复字母【中等】","link":"/notes/0316. 去除重复字母【中等】/README"},{"text":"⏰ 0317. 离建筑物最近的距离【困难】","link":"/notes/0317. 离建筑物最近的距离【困难】/README"},{"text":"⏰ 0318. 最大单词长度乘积【中等】","link":"/notes/0318. 最大单词长度乘积【中等】/README"},{"text":"⏰ 0319. 灯泡开关【中等】","link":"/notes/0319. 灯泡开关【中等】/README"},{"text":"⏰ 0320. 列举单词的全部缩写【中等】","link":"/notes/0320. 列举单词的全部缩写【中等】/README"},{"text":"⏰ 0321. 拼接最大数【困难】","link":"/notes/0321. 拼接最大数【困难】/README"},{"text":"⏰ 0322. 零钱兑换【中等】","link":"/notes/0322. 零钱兑换【中等】/README"},{"text":"⏰ 0323. 无向图中连通分量的数目【中等】","link":"/notes/0323. 无向图中连通分量的数目【中等】/README"},{"text":"⏰ 0324. 摆动排序 II【中等】","link":"/notes/0324. 摆动排序 II【中等】/README"},{"text":"⏰ 0325. 和等于 k 的最长子数组长度【中等】","link":"/notes/0325. 和等于 k 的最长子数组长度【中等】/README"},{"text":"⏰ 0326. 3 的幂【简单】","link":"/notes/0326. 3 的幂【简单】/README"},{"text":"⏰ 0327. 区间和的个数【困难】","link":"/notes/0327. 区间和的个数【困难】/README"},{"text":"⏰ 0328. 奇偶链表【中等】","link":"/notes/0328. 奇偶链表【中等】/README"},{"text":"⏰ 0329. 矩阵中的最长递增路径【困难】","link":"/notes/0329. 矩阵中的最长递增路径【困难】/README"},{"text":"⏰ 0330. 按要求补齐数组【困难】","link":"/notes/0330. 按要求补齐数组【困难】/README"},{"text":"⏰ 0331. 验证二叉树的前序序列化【中等】","link":"/notes/0331. 验证二叉树的前序序列化【中等】/README"},{"text":"⏰ 0332. 重新安排行程【困难】","link":"/notes/0332. 重新安排行程【困难】/README"},{"text":"⏰ 0333. 最大二叉搜索子树【中等】","link":"/notes/0333. 最大二叉搜索子树【中等】/README"},{"text":"⏰ 0334. 递增的三元子序列【中等】","link":"/notes/0334. 递增的三元子序列【中等】/README"},{"text":"⏰ 0335. 路径交叉【困难】","link":"/notes/0335. 路径交叉【困难】/README"},{"text":"⏰ 0336. 回文对【困难】","link":"/notes/0336. 回文对【困难】/README"},{"text":"⏰ 0337. 打家劫舍 III【中等】","link":"/notes/0337. 打家劫舍 III【中等】/README"},{"text":"⏰ 0338. 比特位计数【简单】","link":"/notes/0338. 比特位计数【简单】/README"},{"text":"⏰ 0339. 嵌套列表加权和【中等】","link":"/notes/0339. 嵌套列表加权和【中等】/README"},{"text":"⏰ 0340. 至多包含 K 个不同字符的最长子串【中等】","link":"/notes/0340. 至多包含 K 个不同字符的最长子串【中等】/README"},{"text":"⏰ 0341. 扁平化嵌套列表迭代器【中等】","link":"/notes/0341. 扁平化嵌套列表迭代器【中等】/README"},{"text":"⏰ 0342. 4的幂【简单】","link":"/notes/0342. 4的幂【简单】/README"},{"text":"⏰ 0343. 整数拆分【中等】","link":"/notes/0343. 整数拆分【中等】/README"},{"text":"⏰ 0344. 反转字符串【简单】","link":"/notes/0344. 反转字符串【简单】/README"},{"text":"⏰ 0345. 反转字符串中的元音字母【简单】","link":"/notes/0345. 反转字符串中的元音字母【简单】/README"},{"text":"⏰ 0346. 数据流中的移动平均值【简单】","link":"/notes/0346. 数据流中的移动平均值【简单】/README"},{"text":"⏰ 0347. 前 K 个高频元素【中等】","link":"/notes/0347. 前 K 个高频元素【中等】/README"},{"text":"⏰ 0348. 设计井字棋【中等】","link":"/notes/0348. 设计井字棋【中等】/README"},{"text":"✅ 0349. 两个数组的交集【简单】","link":"/notes/0349. 两个数组的交集【简单】/README"},{"text":"✅ 0350. 两个数组的交集 II【简单】","link":"/notes/0350. 两个数组的交集 II【简单】/README"},{"text":"⏰ 0351. 安卓系统手势解锁【中等】","link":"/notes/0351. 安卓系统手势解锁【中等】/README"},{"text":"⏰ 0352. 将数据流变为多个不相交区间【困难】","link":"/notes/0352. 将数据流变为多个不相交区间【困难】/README"},{"text":"⏰ 0353. 贪吃蛇【中等】","link":"/notes/0353. 贪吃蛇【中等】/README"},{"text":"⏰ 0354. 俄罗斯套娃信封问题【困难】","link":"/notes/0354. 俄罗斯套娃信封问题【困难】/README"},{"text":"⏰ 0355. 设计推特【中等】","link":"/notes/0355. 设计推特【中等】/README"},{"text":"⏰ 0356. 直线镜像【中等】","link":"/notes/0356. 直线镜像【中等】/README"},{"text":"⏰ 0357. 统计各位数字都不同的数字个数【中等】","link":"/notes/0357. 统计各位数字都不同的数字个数【中等】/README"},{"text":"⏰ 0358. K 距离间隔重排字符串【困难】","link":"/notes/0358. K 距离间隔重排字符串【困难】/README"},{"text":"⏰ 0359. 日志速率限制器【简单】","link":"/notes/0359. 日志速率限制器【简单】/README"},{"text":"⏰ 0360. 有序转化数组【中等】","link":"/notes/0360. 有序转化数组【中等】/README"},{"text":"⏰ 0361. 轰炸敌人【中等】","link":"/notes/0361. 轰炸敌人【中等】/README"},{"text":"⏰ 0362. 敲击计数器【中等】","link":"/notes/0362. 敲击计数器【中等】/README"},{"text":"⏰ 0363. 矩形区域不超过 K 的最大数值和【困难】","link":"/notes/0363. 矩形区域不超过 K 的最大数值和【困难】/README"},{"text":"⏰ 0364. 嵌套列表加权和 II【中等】","link":"/notes/0364. 嵌套列表加权和 II【中等】/README"},{"text":"⏰ 0365. 水壶问题【中等】","link":"/notes/0365. 水壶问题【中等】/README"},{"text":"⏰ 0366. 寻找二叉树的叶子节点【中等】","link":"/notes/0366. 寻找二叉树的叶子节点【中等】/README"},{"text":"⏰ 0367. 有效的完全平方数【简单】","link":"/notes/0367. 有效的完全平方数【简单】/README"},{"text":"⏰ 0368. 最大整除子集【中等】","link":"/notes/0368. 最大整除子集【中等】/README"},{"text":"⏰ 0369. 给单链表加一【中等】","link":"/notes/0369. 给单链表加一【中等】/README"},{"text":"⏰ 0370. 区间加法【中等】","link":"/notes/0370. 区间加法【中等】/README"},{"text":"⏰ 0371. 两整数之和【中等】","link":"/notes/0371. 两整数之和【中等】/README"},{"text":"⏰ 0372. 超级次方【中等】","link":"/notes/0372. 超级次方【中等】/README"},{"text":"⏰ 0373. 查找和最小的 K 对数字【中等】","link":"/notes/0373. 查找和最小的 K 对数字【中等】/README"},{"text":"⏰ 0374. 猜数字大小【简单】","link":"/notes/0374. 猜数字大小【简单】/README"},{"text":"⏰ 0375. 猜数字大小 II【中等】","link":"/notes/0375. 猜数字大小 II【中等】/README"},{"text":"⏰ 0376. 摆动序列【中等】","link":"/notes/0376. 摆动序列【中等】/README"},{"text":"⏰ 0377. 组合总和 Ⅳ【中等】","link":"/notes/0377. 组合总和 Ⅳ【中等】/README"},{"text":"⏰ 0378. 有序矩阵中第 K 小的元素【中等】","link":"/notes/0378. 有序矩阵中第 K 小的元素【中等】/README"},{"text":"⏰ 0379. 电话目录管理系统【中等】","link":"/notes/0379. 电话目录管理系统【中等】/README"},{"text":"⏰ 0380. O(1) 时间插入、删除和获取随机元素【中等】","link":"/notes/0380. O(1) 时间插入、删除和获取随机元素【中等】/README"},{"text":"⏰ 0381. O(1) 时间插入、删除和获取随机元素 - 允许重复【困难】","link":"/notes/0381. O(1) 时间插入、删除和获取随机元素 - 允许重复【困难】/README"},{"text":"⏰ 0382. 链表随机节点【中等】","link":"/notes/0382. 链表随机节点【中等】/README"},{"text":"⏰ 0383. 赎金信【简单】","link":"/notes/0383. 赎金信【简单】/README"},{"text":"⏰ 0384. 打乱数组【中等】","link":"/notes/0384. 打乱数组【中等】/README"},{"text":"⏰ 0385. 迷你语法分析器【中等】","link":"/notes/0385. 迷你语法分析器【中等】/README"},{"text":"⏰ 0386. 字典序排数【中等】","link":"/notes/0386. 字典序排数【中等】/README"},{"text":"⏰ 0387. 字符串中的第一个唯一字符【简单】","link":"/notes/0387. 字符串中的第一个唯一字符【简单】/README"},{"text":"⏰ 0388. 文件的最长绝对路径【中等】","link":"/notes/0388. 文件的最长绝对路径【中等】/README"},{"text":"⏰ 0389. 找不同【简单】","link":"/notes/0389. 找不同【简单】/README"},{"text":"⏰ 0390. 消除游戏【中等】","link":"/notes/0390. 消除游戏【中等】/README"},{"text":"⏰ 0391. 完美矩形【困难】","link":"/notes/0391. 完美矩形【困难】/README"},{"text":"⏰ 0392. 判断子序列【简单】","link":"/notes/0392. 判断子序列【简单】/README"},{"text":"⏰ 0393. UTF-8 编码验证【中等】","link":"/notes/0393. UTF-8 编码验证【中等】/README"},{"text":"⏰ 0394. 字符串解码【中等】","link":"/notes/0394. 字符串解码【中等】/README"},{"text":"⏰ 0395. 至少有 K 个重复字符的最长子串【中等】","link":"/notes/0395. 至少有 K 个重复字符的最长子串【中等】/README"},{"text":"⏰ 0396. 旋转函数【中等】","link":"/notes/0396. 旋转函数【中等】/README"},{"text":"⏰ 0397. 整数替换【中等】","link":"/notes/0397. 整数替换【中等】/README"},{"text":"⏰ 0398. 随机数索引【中等】","link":"/notes/0398. 随机数索引【中等】/README"},{"text":"⏰ 0399. 除法求值【中等】","link":"/notes/0399. 除法求值【中等】/README"},{"text":"⏰ 0400. 第 N 位数字【中等】","link":"/notes/0400. 第 N 位数字【中等】/README"}]},{"text":"6. 0401~0500","collapsed":true,"items":[{"text":"⏰ 0401. 二进制手表【简单】","link":"/notes/0401. 二进制手表【简单】/README"},{"text":"⏰ 0402. 移掉 K 位数字【中等】","link":"/notes/0402. 移掉 K 位数字【中等】/README"},{"text":"⏰ 0403. 青蛙过河【困难】","link":"/notes/0403. 青蛙过河【困难】/README"},{"text":"⏰ 0404. 左叶子之和【简单】","link":"/notes/0404. 左叶子之和【简单】/README"},{"text":"⏰ 0405. 数字转换为十六进制数【简单】","link":"/notes/0405. 数字转换为十六进制数【简单】/README"},{"text":"⏰ 0406. 根据身高重建队列【中等】","link":"/notes/0406. 根据身高重建队列【中等】/README"},{"text":"⏰ 0407. 接雨水 II【困难】","link":"/notes/0407. 接雨水 II【困难】/README"},{"text":"⏰ 0408. 有效单词缩写【简单】","link":"/notes/0408. 有效单词缩写【简单】/README"},{"text":"⏰ 0409. 最长回文串【简单】","link":"/notes/0409. 最长回文串【简单】/README"},{"text":"⏰ 0410. 分割数组的最大值【困难】","link":"/notes/0410. 分割数组的最大值【困难】/README"},{"text":"⏰ 0411. 最短独占单词缩写【困难】","link":"/notes/0411. 最短独占单词缩写【困难】/README"},{"text":"⏰ 0412. Fizz Buzz【简单】","link":"/notes/0412. Fizz Buzz【简单】/README"},{"text":"⏰ 0413. 等差数列划分【中等】","link":"/notes/0413. 等差数列划分【中等】/README"},{"text":"✅ 0414. 第三大的数【简单】","link":"/notes/0414. 第三大的数【简单】/README"},{"text":"⏰ 0415. 字符串相加【简单】","link":"/notes/0415. 字符串相加【简单】/README"},{"text":"⏰ 0416. 分割等和子集【中等】","link":"/notes/0416. 分割等和子集【中等】/README"},{"text":"⏰ 0417. 太平洋大西洋水流问题【中等】","link":"/notes/0417. 太平洋大西洋水流问题【中等】/README"},{"text":"⏰ 0418. 屏幕可显示句子的数量【中等】","link":"/notes/0418. 屏幕可显示句子的数量【中等】/README"},{"text":"⏰ 0419. 棋盘上的战舰【中等】","link":"/notes/0419. 棋盘上的战舰【中等】/README"},{"text":"⏰ 0420. 强密码检验器【困难】","link":"/notes/0420. 强密码检验器【困难】/README"},{"text":"⏰ 0421. 数组中两个数的最大异或值【中等】","link":"/notes/0421. 数组中两个数的最大异或值【中等】/README"},{"text":"⏰ 0422. 有效的单词方块【简单】","link":"/notes/0422. 有效的单词方块【简单】/README"},{"text":"⏰ 0423. 从英文中重建数字【中等】","link":"/notes/0423. 从英文中重建数字【中等】/README"},{"text":"⏰ 0424. 替换后的最长重复字符【中等】","link":"/notes/0424. 替换后的最长重复字符【中等】/README"},{"text":"⏰ 0425. 单词方块【困难】","link":"/notes/0425. 单词方块【困难】/README"},{"text":"⏰ 0426. 将二叉搜索树转化为排序的双向链表【中等】","link":"/notes/0426. 将二叉搜索树转化为排序的双向链表【中等】/README"},{"text":"⏰ 0427. 建立四叉树【中等】","link":"/notes/0427. 建立四叉树【中等】/README"},{"text":"⏰ 0428. 序列化和反序列化 N 叉树【困难】","link":"/notes/0428. 序列化和反序列化 N 叉树【困难】/README"},{"text":"⏰ 0429. N 叉树的层序遍历【中等】","link":"/notes/0429. N 叉树的层序遍历【中等】/README"},{"text":"⏰ 0430. 扁平化多级双向链表【中等】","link":"/notes/0430. 扁平化多级双向链表【中等】/README"},{"text":"⏰ 0431. 将 N 叉树编码为二叉树【困难】","link":"/notes/0431. 将 N 叉树编码为二叉树【困难】/README"},{"text":"⏰ 0432. 全 O(1) 的数据结构【困难】","link":"/notes/0432. 全 O(1) 的数据结构【困难】/README"},{"text":"⏰ 0433. 最小基因变化【中等】","link":"/notes/0433. 最小基因变化【中等】/README"},{"text":"⏰ 0434. 字符串中的单词数【简单】","link":"/notes/0434. 字符串中的单词数【简单】/README"},{"text":"⏰ 0435. 无重叠区间【中等】","link":"/notes/0435. 无重叠区间【中等】/README"},{"text":"⏰ 0436. 寻找右区间【中等】","link":"/notes/0436. 寻找右区间【中等】/README"},{"text":"⏰ 0437. 路径总和 III【中等】","link":"/notes/0437. 路径总和 III【中等】/README"},{"text":"⏰ 0438. 找到字符串中所有字母异位词【中等】","link":"/notes/0438. 找到字符串中所有字母异位词【中等】/README"},{"text":"⏰ 0439. 三元表达式解析器【中等】","link":"/notes/0439. 三元表达式解析器【中等】/README"},{"text":"⏰ 0440. 字典序的第K小数字【困难】","link":"/notes/0440. 字典序的第K小数字【困难】/README"},{"text":"⏰ 0441. 排列硬币【简单】","link":"/notes/0441. 排列硬币【简单】/README"},{"text":"⏰ 0442. 数组中重复的数据【中等】","link":"/notes/0442. 数组中重复的数据【中等】/README"},{"text":"⏰ 0443. 压缩字符串【中等】","link":"/notes/0443. 压缩字符串【中等】/README"},{"text":"⏰ 0444. 序列重建【中等】","link":"/notes/0444. 序列重建【中等】/README"},{"text":"⏰ 0445. 两数相加 II【中等】","link":"/notes/0445. 两数相加 II【中等】/README"},{"text":"⏰ 0446. 等差数列划分 II - 子序列【困难】","link":"/notes/0446. 等差数列划分 II - 子序列【困难】/README"},{"text":"⏰ 0447. 回旋镖的数量【中等】","link":"/notes/0447. 回旋镖的数量【中等】/README"},{"text":"✅ 0448. 找到所有数组中消失的数字【简单】","link":"/notes/0448. 找到所有数组中消失的数字【简单】/README"},{"text":"⏰ 0449. 序列化和反序列化二叉搜索树【中等】","link":"/notes/0449. 序列化和反序列化二叉搜索树【中等】/README"},{"text":"⏰ 0450. 删除二叉搜索树中的节点【中等】","link":"/notes/0450. 删除二叉搜索树中的节点【中等】/README"},{"text":"⏰ 0451. 根据字符出现频率排序【中等】","link":"/notes/0451. 根据字符出现频率排序【中等】/README"},{"text":"⏰ 0452. 用最少数量的箭引爆气球【中等】","link":"/notes/0452. 用最少数量的箭引爆气球【中等】/README"},{"text":"⏰ 0453. 最小操作次数使数组元素相等【中等】","link":"/notes/0453. 最小操作次数使数组元素相等【中等】/README"},{"text":"⏰ 0454. 四数相加 II【中等】","link":"/notes/0454. 四数相加 II【中等】/README"},{"text":"✅ 0455. 分发饼干【简单】","link":"/notes/0455. 分发饼干【简单】/README"},{"text":"⏰ 0456. 132 模式【中等】","link":"/notes/0456. 132 模式【中等】/README"},{"text":"⏰ 0457. 环形数组是否存在循环【中等】","link":"/notes/0457. 环形数组是否存在循环【中等】/README"},{"text":"⏰ 0458. 可怜的小猪【困难】","link":"/notes/0458. 可怜的小猪【困难】/README"},{"text":"⏰ 0459. 重复的子字符串【简单】","link":"/notes/0459. 重复的子字符串【简单】/README"},{"text":"⏰ 0460. LFU 缓存【困难】","link":"/notes/0460. LFU 缓存【困难】/README"},{"text":"⏰ 0461. 汉明距离【简单】","link":"/notes/0461. 汉明距离【简单】/README"},{"text":"⏰ 0462. 最小操作次数使数组元素相等 II【中等】","link":"/notes/0462. 最小操作次数使数组元素相等 II【中等】/README"},{"text":"⏰ 0463. 岛屿的周长【简单】","link":"/notes/0463. 岛屿的周长【简单】/README"},{"text":"⏰ 0464. 我能赢吗【中等】","link":"/notes/0464. 我能赢吗【中等】/README"},{"text":"⏰ 0465. 最优账单平衡【困难】","link":"/notes/0465. 最优账单平衡【困难】/README"},{"text":"⏰ 0466. 统计重复个数【困难】","link":"/notes/0466. 统计重复个数【困难】/README"},{"text":"⏰ 0467. 环绕字符串中唯一的子字符串【中等】","link":"/notes/0467. 环绕字符串中唯一的子字符串【中等】/README"},{"text":"⏰ 0468. 验证IP地址【中等】","link":"/notes/0468. 验证IP地址【中等】/README"},{"text":"⏰ 0469. 凸多边形【中等】","link":"/notes/0469. 凸多边形【中等】/README"},{"text":"⏰ 0470. 用 Rand7() 实现 Rand10()【中等】","link":"/notes/0470. 用 Rand7() 实现 Rand10()【中等】/README"},{"text":"⏰ 0471. 编码最短长度的字符串【困难】","link":"/notes/0471. 编码最短长度的字符串【困难】/README"},{"text":"⏰ 0472. 连接词【困难】","link":"/notes/0472. 连接词【困难】/README"},{"text":"⏰ 0473. 火柴拼正方形【中等】","link":"/notes/0473. 火柴拼正方形【中等】/README"},{"text":"⏰ 0474. 一和零【中等】","link":"/notes/0474. 一和零【中等】/README"},{"text":"⏰ 0475. 供暖器【中等】","link":"/notes/0475. 供暖器【中等】/README"},{"text":"⏰ 0476. 数字的补数【简单】","link":"/notes/0476. 数字的补数【简单】/README"},{"text":"⏰ 0477. 汉明距离总和【中等】","link":"/notes/0477. 汉明距离总和【中等】/README"},{"text":"⏰ 0478. 在圆内随机生成点【中等】","link":"/notes/0478. 在圆内随机生成点【中等】/README"},{"text":"⏰ 0479. 最大回文数乘积【困难】","link":"/notes/0479. 最大回文数乘积【困难】/README"},{"text":"⏰ 0480. 滑动窗口中位数【困难】","link":"/notes/0480. 滑动窗口中位数【困难】/README"},{"text":"⏰ 0481. 神奇字符串【中等】","link":"/notes/0481. 神奇字符串【中等】/README"},{"text":"⏰ 0482. 密钥格式化【简单】","link":"/notes/0482. 密钥格式化【简单】/README"},{"text":"⏰ 0483. 最小好进制【困难】","link":"/notes/0483. 最小好进制【困难】/README"},{"text":"⏰ 0484. 寻找排列【中等】","link":"/notes/0484. 寻找排列【中等】/README"},{"text":"⏰ 0485. 最大连续 1 的个数【简单】","link":"/notes/0485. 最大连续 1 的个数【简单】/README"},{"text":"⏰ 0486. 预测赢家【中等】","link":"/notes/0486. 预测赢家【中等】/README"},{"text":"⏰ 0487. 最大连续1的个数 II【中等】","link":"/notes/0487. 最大连续1的个数 II【中等】/README"},{"text":"⏰ 0488. 祖玛游戏【困难】","link":"/notes/0488. 祖玛游戏【困难】/README"},{"text":"⏰ 0489. 扫地机器人【困难】","link":"/notes/0489. 扫地机器人【困难】/README"},{"text":"⏰ 0490. 迷宫【中等】","link":"/notes/0490. 迷宫【中等】/README"},{"text":"⏰ 0491. 非递减子序列【中等】","link":"/notes/0491. 非递减子序列【中等】/README"},{"text":"⏰ 0492. 构造矩形【简单】","link":"/notes/0492. 构造矩形【简单】/README"},{"text":"⏰ 0493. 翻转对【困难】","link":"/notes/0493. 翻转对【困难】/README"},{"text":"⏰ 0494. 目标和【中等】","link":"/notes/0494. 目标和【中等】/README"},{"text":"✅ 0495. 提莫攻击【简单】","link":"/notes/0495. 提莫攻击【简单】/README"},{"text":"⏰ 0496. 下一个更大元素 I【简单】","link":"/notes/0496. 下一个更大元素 I【简单】/README"},{"text":"⏰ 0497. 非重叠矩形中的随机点【中等】","link":"/notes/0497. 非重叠矩形中的随机点【中等】/README"},{"text":"⏰ 0498. 对角线遍历【中等】","link":"/notes/0498. 对角线遍历【中等】/README"},{"text":"⏰ 0499. 迷宫 III【困难】","link":"/notes/0499. 迷宫 III【困难】/README"},{"text":"✅ 0500. 键盘行【简单】","link":"/notes/0500. 键盘行【简单】/README"}]},{"text":"7. 0501~0600","collapsed":true,"items":[{"text":"⏰ 0501. 二叉搜索树中的众数【简单】","link":"/notes/0501. 二叉搜索树中的众数【简单】/README"},{"text":"⏰ 0502. IPO【困难】","link":"/notes/0502. IPO【困难】/README"},{"text":"⏰ 0503. 下一个更大元素 II【中等】","link":"/notes/0503. 下一个更大元素 II【中等】/README"},{"text":"⏰ 0504. 七进制数【简单】","link":"/notes/0504. 七进制数【简单】/README"},{"text":"⏰ 0505. 迷宫 II【中等】","link":"/notes/0505. 迷宫 II【中等】/README"},{"text":"⏰ 0506. 相对名次【简单】","link":"/notes/0506. 相对名次【简单】/README"},{"text":"⏰ 0507. 完美数【简单】","link":"/notes/0507. 完美数【简单】/README"},{"text":"⏰ 0508. 出现次数最多的子树元素和【中等】","link":"/notes/0508. 出现次数最多的子树元素和【中等】/README"},{"text":"✅ 0509. 斐波那契数【简单】","link":"/notes/0509. 斐波那契数【简单】/README"},{"text":"⏰ 0510. 二叉搜索树中的中序后继 II【中等】","link":"/notes/0510. 二叉搜索树中的中序后继 II【中等】/README"},{"text":"⏰ 0511. 游戏玩法分析 I【简单】","link":"/notes/0511. 游戏玩法分析 I【简单】/README"},{"text":"⏰ 0512. 游戏玩法分析 II【简单】","link":"/notes/0512. 游戏玩法分析 II【简单】/README"},{"text":"⏰ 0513. 找树左下角的值【中等】","link":"/notes/0513. 找树左下角的值【中等】/README"},{"text":"⏰ 0514. 自由之路【困难】","link":"/notes/0514. 自由之路【困难】/README"},{"text":"⏰ 0515. 在每个树行中找最大值【中等】","link":"/notes/0515. 在每个树行中找最大值【中等】/README"},{"text":"⏰ 0516. 最长回文子序列【中等】","link":"/notes/0516. 最长回文子序列【中等】/README"},{"text":"⏰ 0517. 超级洗衣机【困难】","link":"/notes/0517. 超级洗衣机【困难】/README"},{"text":"⏰ 0518. 零钱兑换 II【中等】","link":"/notes/0518. 零钱兑换 II【中等】/README"},{"text":"⏰ 0519. 随机翻转矩阵【中等】","link":"/notes/0519. 随机翻转矩阵【中等】/README"},{"text":"⏰ 0520. 检测大写字母【简单】","link":"/notes/0520. 检测大写字母【简单】/README"},{"text":"⏰ 0521. 最长特殊序列 Ⅰ【简单】","link":"/notes/0521. 最长特殊序列 Ⅰ【简单】/README"},{"text":"⏰ 0522. 最长特殊序列 II【中等】","link":"/notes/0522. 最长特殊序列 II【中等】/README"},{"text":"⏰ 0523. 连续的子数组和【中等】","link":"/notes/0523. 连续的子数组和【中等】/README"},{"text":"⏰ 0524. 通过删除字母匹配到字典里最长单词【中等】","link":"/notes/0524. 通过删除字母匹配到字典里最长单词【中等】/README"},{"text":"⏰ 0525. 连续数组【中等】","link":"/notes/0525. 连续数组【中等】/README"},{"text":"⏰ 0526. 优美的排列【中等】","link":"/notes/0526. 优美的排列【中等】/README"},{"text":"⏰ 0527. 单词缩写【困难】","link":"/notes/0527. 单词缩写【困难】/README"},{"text":"⏰ 0528. 按权重随机选择【中等】","link":"/notes/0528. 按权重随机选择【中等】/README"},{"text":"⏰ 0529. 扫雷游戏【中等】","link":"/notes/0529. 扫雷游戏【中等】/README"},{"text":"⏰ 0530. 二叉搜索树的最小绝对差【简单】","link":"/notes/0530. 二叉搜索树的最小绝对差【简单】/README"},{"text":"⏰ 0531. 孤独像素 I【中等】","link":"/notes/0531. 孤独像素 I【中等】/README"},{"text":"⏰ 0532. 数组中的 k-diff 数对【中等】","link":"/notes/0532. 数组中的 k-diff 数对【中等】/README"},{"text":"⏰ 0533. 孤独像素 II【中等】","link":"/notes/0533. 孤独像素 II【中等】/README"},{"text":"⏰ 0534. 游戏玩法分析 III【中等】","link":"/notes/0534. 游戏玩法分析 III【中等】/README"},{"text":"⏰ 0535. TinyURL 的加密与解密【中等】","link":"/notes/0535. TinyURL 的加密与解密【中等】/README"},{"text":"⏰ 0536. 从字符串生成二叉树【中等】","link":"/notes/0536. 从字符串生成二叉树【中等】/README"},{"text":"⏰ 0537. 复数乘法【中等】","link":"/notes/0537. 复数乘法【中等】/README"},{"text":"⏰ 0538. 把二叉搜索树转换为累加树【中等】","link":"/notes/0538. 把二叉搜索树转换为累加树【中等】/README"},{"text":"⏰ 0539. 最小时间差【中等】","link":"/notes/0539. 最小时间差【中等】/README"},{"text":"⏰ 0540. 有序数组中的单一元素【中等】","link":"/notes/0540. 有序数组中的单一元素【中等】/README"},{"text":"⏰ 0541. 反转字符串 II【简单】","link":"/notes/0541. 反转字符串 II【简单】/README"},{"text":"⏰ 0542. 01 矩阵【中等】","link":"/notes/0542. 01 矩阵【中等】/README"},{"text":"⏰ 0543. 二叉树的直径【简单】","link":"/notes/0543. 二叉树的直径【简单】/README"},{"text":"⏰ 0544. 输出比赛匹配对【中等】","link":"/notes/0544. 输出比赛匹配对【中等】/README"},{"text":"⏰ 0545. 二叉树的边界【中等】","link":"/notes/0545. 二叉树的边界【中等】/README"},{"text":"⏰ 0546. 移除盒子【困难】","link":"/notes/0546. 移除盒子【困难】/README"},{"text":"⏰ 0547. 省份数量【中等】","link":"/notes/0547. 省份数量【中等】/README"},{"text":"⏰ 0548. 将数组分割成和相等的子数组【困难】","link":"/notes/0548. 将数组分割成和相等的子数组【困难】/README"},{"text":"⏰ 0549. 二叉树最长连续序列 II【中等】","link":"/notes/0549. 二叉树最长连续序列 II【中等】/README"},{"text":"⏰ 0550. 游戏玩法分析 IV【中等】","link":"/notes/0550. 游戏玩法分析 IV【中等】/README"},{"text":"⏰ 0551. 学生出勤记录 I【简单】","link":"/notes/0551. 学生出勤记录 I【简单】/README"},{"text":"⏰ 0552. 学生出勤记录 II【困难】","link":"/notes/0552. 学生出勤记录 II【困难】/README"},{"text":"⏰ 0553. 最优除法【中等】","link":"/notes/0553. 最优除法【中等】/README"},{"text":"⏰ 0554. 砖墙【中等】","link":"/notes/0554. 砖墙【中等】/README"},{"text":"⏰ 0555. 分割连接字符串【中等】","link":"/notes/0555. 分割连接字符串【中等】/README"},{"text":"⏰ 0556. 下一个更大元素 III【中等】","link":"/notes/0556. 下一个更大元素 III【中等】/README"},{"text":"⏰ 0557. 反转字符串中的单词 III【简单】","link":"/notes/0557. 反转字符串中的单词 III【简单】/README"},{"text":"⏰ 0558. 四叉树交集【中等】","link":"/notes/0558. 四叉树交集【中等】/README"},{"text":"⏰ 0559. N 叉树的最大深度【简单】","link":"/notes/0559. N 叉树的最大深度【简单】/README"},{"text":"⏰ 0560. 和为 K 的子数组【中等】","link":"/notes/0560. 和为 K 的子数组【中等】/README"},{"text":"✅ 0561. 数组拆分【简单】","link":"/notes/0561. 数组拆分【简单】/README"},{"text":"⏰ 0562. 矩阵中最长的连续1线段【中等】","link":"/notes/0562. 矩阵中最长的连续1线段【中等】/README"},{"text":"⏰ 0563. 二叉树的坡度【简单】","link":"/notes/0563. 二叉树的坡度【简单】/README"},{"text":"⏰ 0564. 寻找最近的回文数【困难】","link":"/notes/0564. 寻找最近的回文数【困难】/README"},{"text":"⏰ 0565. 数组嵌套【中等】","link":"/notes/0565. 数组嵌套【中等】/README"},{"text":"✅ 0566. 重塑矩阵【简单】","link":"/notes/0566. 重塑矩阵【简单】/README"},{"text":"⏰ 0567. 字符串的排列【中等】","link":"/notes/0567. 字符串的排列【中等】/README"},{"text":"⏰ 0568. 最大休假天数【困难】","link":"/notes/0568. 最大休假天数【困难】/README"},{"text":"⏰ 0569. 员工薪水中位数【困难】","link":"/notes/0569. 员工薪水中位数【困难】/README"},{"text":"⏰ 0570. 至少有5名直接下属的经理【中等】","link":"/notes/0570. 至少有5名直接下属的经理【中等】/README"},{"text":"⏰ 0571. 给定数字的频率查询中位数【困难】","link":"/notes/0571. 给定数字的频率查询中位数【困难】/README"},{"text":"⏰ 0572. 另一棵树的子树【简单】","link":"/notes/0572. 另一棵树的子树【简单】/README"},{"text":"⏰ 0573. 松鼠模拟【中等】","link":"/notes/0573. 松鼠模拟【中等】/README"},{"text":"⏰ 0574. 当选者【中等】","link":"/notes/0574. 当选者【中等】/README"},{"text":"⏰ 0575. 分糖果【简单】","link":"/notes/0575. 分糖果【简单】/README"},{"text":"⏰ 0576. 出界的路径数【中等】","link":"/notes/0576. 出界的路径数【中等】/README"},{"text":"⏰ 0577. 员工奖金【简单】","link":"/notes/0577. 员工奖金【简单】/README"},{"text":"⏰ 0578. 查询回答率最高的问题【中等】","link":"/notes/0578. 查询回答率最高的问题【中等】/README"},{"text":"⏰ 0579. 查询员工的累计薪水【困难】","link":"/notes/0579. 查询员工的累计薪水【困难】/README"},{"text":"⏰ 0580. 统计各专业学生人数【中等】","link":"/notes/0580. 统计各专业学生人数【中等】/README"},{"text":"⏰ 0581. 最短无序连续子数组【中等】","link":"/notes/0581. 最短无序连续子数组【中等】/README"},{"text":"⏰ 0582. 杀掉进程【中等】","link":"/notes/0582. 杀掉进程【中等】/README"},{"text":"⏰ 0583. 两个字符串的删除操作【中等】","link":"/notes/0583. 两个字符串的删除操作【中等】/README"},{"text":"⏰ 0584. 寻找用户推荐人【简单】","link":"/notes/0584. 寻找用户推荐人【简单】/README"},{"text":"⏰ 0585. 2016年的投资【中等】","link":"/notes/0585. 2016年的投资【中等】/README"},{"text":"⏰ 0586. 订单最多的客户【简单】","link":"/notes/0586. 订单最多的客户【简单】/README"},{"text":"⏰ 0587. 安装栅栏【困难】","link":"/notes/0587. 安装栅栏【困难】/README"},{"text":"⏰ 0588. 设计内存文件系统【困难】","link":"/notes/0588. 设计内存文件系统【困难】/README"},{"text":"⏰ 0589. N 叉树的前序遍历【简单】","link":"/notes/0589. N 叉树的前序遍历【简单】/README"},{"text":"⏰ 0590. N 叉树的后序遍历【简单】","link":"/notes/0590. N 叉树的后序遍历【简单】/README"},{"text":"⏰ 0591. 标签验证器【困难】","link":"/notes/0591. 标签验证器【困难】/README"},{"text":"⏰ 0592. 分数加减运算【中等】","link":"/notes/0592. 分数加减运算【中等】/README"},{"text":"⏰ 0593. 有效的正方形【中等】","link":"/notes/0593. 有效的正方形【中等】/README"},{"text":"⏰ 0594. 最长和谐子序列【简单】","link":"/notes/0594. 最长和谐子序列【简单】/README"},{"text":"⏰ 0595. 大的国家【简单】","link":"/notes/0595. 大的国家【简单】/README"},{"text":"⏰ 0596. 超过 5 名学生的课【简单】","link":"/notes/0596. 超过 5 名学生的课【简单】/README"},{"text":"⏰ 0597. 好友申请 I：总体通过率【简单】","link":"/notes/0597. 好友申请 I：总体通过率【简单】/README"},{"text":"⏰ 0598. 区间加法 II【简单】","link":"/notes/0598. 区间加法 II【简单】/README"},{"text":"✅ 0599. 两个列表的最小索引总和【简单】","link":"/notes/0599. 两个列表的最小索引总和【简单】/README"},{"text":"⏰ 0600. 不含连续1的非负整数【困难】","link":"/notes/0600. 不含连续1的非负整数【困难】/README"}]},{"text":"8. 0601~0700","collapsed":true,"items":[{"text":"⏰ 0601. 体育馆的人流量【困难】","link":"/notes/0601. 体育馆的人流量【困难】/README"},{"text":"⏰ 0602. 好友申请 II ：谁有最多的好友【中等】","link":"/notes/0602. 好友申请 II ：谁有最多的好友【中等】/README"},{"text":"⏰ 0603. 连续空余座位【简单】","link":"/notes/0603. 连续空余座位【简单】/README"},{"text":"⏰ 0604. 迭代压缩字符串【简单】","link":"/notes/0604. 迭代压缩字符串【简单】/README"},{"text":"✅ 0605. 种花问题【简单】","link":"/notes/0605. 种花问题【简单】/README"},{"text":"⏰ 0606. 根据二叉树创建字符串【中等】","link":"/notes/0606. 根据二叉树创建字符串【中等】/README"},{"text":"⏰ 0607. 销售员【简单】","link":"/notes/0607. 销售员【简单】/README"},{"text":"⏰ 0608. 树节点【中等】","link":"/notes/0608. 树节点【中等】/README"},{"text":"⏰ 0609. 在系统中查找重复文件【中等】","link":"/notes/0609. 在系统中查找重复文件【中等】/README"},{"text":"⏰ 0610. 判断三角形【简单】","link":"/notes/0610. 判断三角形【简单】/README"},{"text":"⏰ 0611. 有效三角形的个数【中等】","link":"/notes/0611. 有效三角形的个数【中等】/README"},{"text":"⏰ 0612. 平面上的最近距离【中等】","link":"/notes/0612. 平面上的最近距离【中等】/README"},{"text":"⏰ 0613. 直线上的最近距离【简单】","link":"/notes/0613. 直线上的最近距离【简单】/README"},{"text":"⏰ 0614. 二级关注者【中等】","link":"/notes/0614. 二级关注者【中等】/README"},{"text":"⏰ 0615. 平均工资：部门与公司比较【困难】","link":"/notes/0615. 平均工资：部门与公司比较【困难】/README"},{"text":"⏰ 0616. 给字符串添加加粗标签【中等】","link":"/notes/0616. 给字符串添加加粗标签【中等】/README"},{"text":"⏰ 0617. 合并二叉树【简单】","link":"/notes/0617. 合并二叉树【简单】/README"},{"text":"⏰ 0618. 学生地理信息报告【困难】","link":"/notes/0618. 学生地理信息报告【困难】/README"},{"text":"⏰ 0619. 只出现一次的最大数字【简单】","link":"/notes/0619. 只出现一次的最大数字【简单】/README"},{"text":"⏰ 0620. 有趣的电影【简单】","link":"/notes/0620. 有趣的电影【简单】/README"},{"text":"⏰ 0621. 任务调度器【中等】","link":"/notes/0621. 任务调度器【中等】/README"},{"text":"⏰ 0622. 设计循环队列【中等】","link":"/notes/0622. 设计循环队列【中等】/README"},{"text":"⏰ 0623. 在二叉树中增加一行【中等】","link":"/notes/0623. 在二叉树中增加一行【中等】/README"},{"text":"⏰ 0624. 数组列表中的最大距离【中等】","link":"/notes/0624. 数组列表中的最大距离【中等】/README"},{"text":"⏰ 0625. 最小因式分解【中等】","link":"/notes/0625. 最小因式分解【中等】/README"},{"text":"⏰ 0626. 换座位【中等】","link":"/notes/0626. 换座位【中等】/README"},{"text":"⏰ 0627. 变更性别【简单】","link":"/notes/0627. 变更性别【简单】/README"},{"text":"✅ 0628. 三个数的最大乘积【简单】","link":"/notes/0628. 三个数的最大乘积【简单】/README"},{"text":"⏰ 0629. K 个逆序对数组【困难】","link":"/notes/0629. K 个逆序对数组【困难】/README"},{"text":"⏰ 0630. 课程表 III【困难】","link":"/notes/0630. 课程表 III【困难】/README"},{"text":"⏰ 0631. 设计 Excel 求和公式【困难】","link":"/notes/0631. 设计 Excel 求和公式【困难】/README"},{"text":"⏰ 0632. 最小区间【困难】","link":"/notes/0632. 最小区间【困难】/README"},{"text":"⏰ 0633. 平方数之和【中等】","link":"/notes/0633. 平方数之和【中等】/README"},{"text":"⏰ 0634. 寻找数组的错位排列【中等】","link":"/notes/0634. 寻找数组的错位排列【中等】/README"},{"text":"⏰ 0635. 设计日志存储系统【中等】","link":"/notes/0635. 设计日志存储系统【中等】/README"},{"text":"⏰ 0636. 函数的独占时间【中等】","link":"/notes/0636. 函数的独占时间【中等】/README"},{"text":"⏰ 0637. 二叉树的层平均值【简单】","link":"/notes/0637. 二叉树的层平均值【简单】/README"},{"text":"⏰ 0638. 大礼包【中等】","link":"/notes/0638. 大礼包【中等】/README"},{"text":"⏰ 0639. 解码方法 II【困难】","link":"/notes/0639. 解码方法 II【困难】/README"},{"text":"⏰ 0640. 求解方程【中等】","link":"/notes/0640. 求解方程【中等】/README"},{"text":"⏰ 0641. 设计循环双端队列【中等】","link":"/notes/0641. 设计循环双端队列【中等】/README"},{"text":"⏰ 0642. 设计搜索自动补全系统【困难】","link":"/notes/0642. 设计搜索自动补全系统【困难】/README"},{"text":"⏰ 0643. 子数组最大平均数 I【简单】","link":"/notes/0643. 子数组最大平均数 I【简单】/README"},{"text":"⏰ 0644. 子数组最大平均数 II【困难】","link":"/notes/0644. 子数组最大平均数 II【困难】/README"},{"text":"⏰ 0645. 错误的集合【简单】","link":"/notes/0645. 错误的集合【简单】/README"},{"text":"⏰ 0646. 最长数对链【中等】","link":"/notes/0646. 最长数对链【中等】/README"},{"text":"⏰ 0647. 回文子串【中等】","link":"/notes/0647. 回文子串【中等】/README"},{"text":"⏰ 0648. 单词替换【中等】","link":"/notes/0648. 单词替换【中等】/README"},{"text":"⏰ 0649. Dota2 参议院【中等】","link":"/notes/0649. Dota2 参议院【中等】/README"},{"text":"⏰ 0650. 两个键的键盘【中等】","link":"/notes/0650. 两个键的键盘【中等】/README"},{"text":"⏰ 0651. 四个键的键盘【中等】","link":"/notes/0651. 四个键的键盘【中等】/README"},{"text":"⏰ 0652. 寻找重复的子树【中等】","link":"/notes/0652. 寻找重复的子树【中等】/README"},{"text":"⏰ 0653. 两数之和 IV - 输入二叉搜索树【简单】","link":"/notes/0653. 两数之和 IV - 输入二叉搜索树【简单】/README"},{"text":"⏰ 0654. 最大二叉树【中等】","link":"/notes/0654. 最大二叉树【中等】/README"},{"text":"⏰ 0655. 输出二叉树【中等】","link":"/notes/0655. 输出二叉树【中等】/README"},{"text":"⏰ 0656. 成本最小路径【困难】","link":"/notes/0656. 成本最小路径【困难】/README"},{"text":"⏰ 0657. 机器人能否返回原点【简单】","link":"/notes/0657. 机器人能否返回原点【简单】/README"},{"text":"⏰ 0658. 找到 K 个最接近的元素【中等】","link":"/notes/0658. 找到 K 个最接近的元素【中等】/README"},{"text":"⏰ 0659. 分割数组为连续子序列【中等】","link":"/notes/0659. 分割数组为连续子序列【中等】/README"},{"text":"⏰ 0660. 移除 9【困难】","link":"/notes/0660. 移除 9【困难】/README"},{"text":"⏰ 0661. 图片平滑器【简单】","link":"/notes/0661. 图片平滑器【简单】/README"},{"text":"⏰ 0662. 二叉树最大宽度【中等】","link":"/notes/0662. 二叉树最大宽度【中等】/README"},{"text":"⏰ 0663. 均匀树划分【中等】","link":"/notes/0663. 均匀树划分【中等】/README"},{"text":"⏰ 0664. 奇怪的打印机【困难】","link":"/notes/0664. 奇怪的打印机【困难】/README"},{"text":"⏰ 0665. 非递减数列【中等】","link":"/notes/0665. 非递减数列【中等】/README"},{"text":"⏰ 0666. 路径总和 IV【中等】","link":"/notes/0666. 路径总和 IV【中等】/README"},{"text":"⏰ 0667. 优美的排列 II【中等】","link":"/notes/0667. 优美的排列 II【中等】/README"},{"text":"⏰ 0668. 乘法表中第k小的数【困难】","link":"/notes/0668. 乘法表中第k小的数【困难】/README"},{"text":"⏰ 0669. 修剪二叉搜索树【中等】","link":"/notes/0669. 修剪二叉搜索树【中等】/README"},{"text":"⏰ 0670. 最大交换【中等】","link":"/notes/0670. 最大交换【中等】/README"},{"text":"⏰ 0671. 二叉树中第二小的节点【简单】","link":"/notes/0671. 二叉树中第二小的节点【简单】/README"},{"text":"⏰ 0672. 灯泡开关 Ⅱ【中等】","link":"/notes/0672. 灯泡开关 Ⅱ【中等】/README"},{"text":"⏰ 0673. 最长递增子序列的个数【中等】","link":"/notes/0673. 最长递增子序列的个数【中等】/README"},{"text":"⏰ 0674. 最长连续递增序列【简单】","link":"/notes/0674. 最长连续递增序列【简单】/README"},{"text":"⏰ 0675. 为高尔夫比赛砍树【困难】","link":"/notes/0675. 为高尔夫比赛砍树【困难】/README"},{"text":"⏰ 0676. 实现一个魔法字典【中等】","link":"/notes/0676. 实现一个魔法字典【中等】/README"},{"text":"⏰ 0677. 键值映射【中等】","link":"/notes/0677. 键值映射【中等】/README"},{"text":"⏰ 0678. 有效的括号字符串【中等】","link":"/notes/0678. 有效的括号字符串【中等】/README"},{"text":"⏰ 0679. 24 点游戏【困难】","link":"/notes/0679. 24 点游戏【困难】/README"},{"text":"⏰ 0680. 验证回文串 II【简单】","link":"/notes/0680. 验证回文串 II【简单】/README"},{"text":"⏰ 0681. 最近时刻【中等】","link":"/notes/0681. 最近时刻【中等】/README"},{"text":"⏰ 0682. 棒球比赛【简单】","link":"/notes/0682. 棒球比赛【简单】/README"},{"text":"⏰ 0683. K 个关闭的灯泡【困难】","link":"/notes/0683. K 个关闭的灯泡【困难】/README"},{"text":"⏰ 0684. 冗余连接【中等】","link":"/notes/0684. 冗余连接【中等】/README"},{"text":"⏰ 0685. 冗余连接 II【困难】","link":"/notes/0685. 冗余连接 II【困难】/README"},{"text":"⏰ 0686. 重复叠加字符串匹配【中等】","link":"/notes/0686. 重复叠加字符串匹配【中等】/README"},{"text":"⏰ 0687. 最长同值路径【中等】","link":"/notes/0687. 最长同值路径【中等】/README"},{"text":"⏰ 0688. 骑士在棋盘上的概率【中等】","link":"/notes/0688. 骑士在棋盘上的概率【中等】/README"},{"text":"⏰ 0689. 三个无重叠子数组的最大和【困难】","link":"/notes/0689. 三个无重叠子数组的最大和【困难】/README"},{"text":"⏰ 0690. 员工的重要性【中等】","link":"/notes/0690. 员工的重要性【中等】/README"},{"text":"⏰ 0691. 贴纸拼词【困难】","link":"/notes/0691. 贴纸拼词【困难】/README"},{"text":"⏰ 0692. 前K个高频单词【中等】","link":"/notes/0692. 前K个高频单词【中等】/README"},{"text":"⏰ 0693. 交替位二进制数【简单】","link":"/notes/0693. 交替位二进制数【简单】/README"},{"text":"⏰ 0694. 不同岛屿的数量【中等】","link":"/notes/0694. 不同岛屿的数量【中等】/README"},{"text":"⏰ 0695. 岛屿的最大面积【中等】","link":"/notes/0695. 岛屿的最大面积【中等】/README"},{"text":"⏰ 0696. 计数二进制子串【简单】","link":"/notes/0696. 计数二进制子串【简单】/README"},{"text":"⏰ 0697. 数组的度【简单】","link":"/notes/0697. 数组的度【简单】/README"},{"text":"⏰ 0698. 划分为k个相等的子集【中等】","link":"/notes/0698. 划分为k个相等的子集【中等】/README"},{"text":"⏰ 0699. 掉落的方块【困难】","link":"/notes/0699. 掉落的方块【困难】/README"},{"text":"⏰ 0700. 二叉搜索树中的搜索【简单】","link":"/notes/0700. 二叉搜索树中的搜索【简单】/README"}]},{"text":"9. 0701~0800","collapsed":true,"items":[{"text":"⏰ 0701. 二叉搜索树中的插入操作【中等】","link":"/notes/0701. 二叉搜索树中的插入操作【中等】/README"},{"text":"⏰ 0702. 搜索长度未知的有序数组【中等】","link":"/notes/0702. 搜索长度未知的有序数组【中等】/README"},{"text":"⏰ 0703. 数据流中的第 K 大元素【简单】","link":"/notes/0703. 数据流中的第 K 大元素【简单】/README"},{"text":"⏰ 0704. 二分查找【简单】","link":"/notes/0704. 二分查找【简单】/README"},{"text":"⏰ 0705. 设计哈希集合【简单】","link":"/notes/0705. 设计哈希集合【简单】/README"},{"text":"⏰ 0706. 设计哈希映射【简单】","link":"/notes/0706. 设计哈希映射【简单】/README"},{"text":"⏰ 0707. 设计链表【中等】","link":"/notes/0707. 设计链表【中等】/README"},{"text":"⏰ 0708. 循环有序列表的插入【中等】","link":"/notes/0708. 循环有序列表的插入【中等】/README"},{"text":"⏰ 0709. 转换成小写字母【简单】","link":"/notes/0709. 转换成小写字母【简单】/README"},{"text":"⏰ 0710. 黑名单中的随机数【困难】","link":"/notes/0710. 黑名单中的随机数【困难】/README"},{"text":"⏰ 0711. 不同岛屿的数量 II【困难】","link":"/notes/0711. 不同岛屿的数量 II【困难】/README"},{"text":"⏰ 0712. 两个字符串的最小ASCII删除和【中等】","link":"/notes/0712. 两个字符串的最小ASCII删除和【中等】/README"},{"text":"⏰ 0713. 乘积小于 K 的子数组【中等】","link":"/notes/0713. 乘积小于 K 的子数组【中等】/README"},{"text":"⏰ 0714. 买卖股票的最佳时机含手续费【中等】","link":"/notes/0714. 买卖股票的最佳时机含手续费【中等】/README"},{"text":"⏰ 0715. Range 模块【困难】","link":"/notes/0715. Range 模块【困难】/README"},{"text":"⏰ 0716. 最大栈【困难】","link":"/notes/0716. 最大栈【困难】/README"},{"text":"⏰ 0717. 1 比特与 2 比特字符【简单】","link":"/notes/0717. 1 比特与 2 比特字符【简单】/README"},{"text":"⏰ 0718. 最长重复子数组【中等】","link":"/notes/0718. 最长重复子数组【中等】/README"},{"text":"⏰ 0719. 找出第 K 小的数对距离【困难】","link":"/notes/0719. 找出第 K 小的数对距离【困难】/README"},{"text":"⏰ 0720. 词典中最长的单词【中等】","link":"/notes/0720. 词典中最长的单词【中等】/README"},{"text":"⏰ 0721. 账户合并【中等】","link":"/notes/0721. 账户合并【中等】/README"},{"text":"⏰ 0722. 删除注释【中等】","link":"/notes/0722. 删除注释【中等】/README"},{"text":"⏰ 0723. 粉碎糖果【中等】","link":"/notes/0723. 粉碎糖果【中等】/README"},{"text":"⏰ 0724. 寻找数组的中心下标【简单】","link":"/notes/0724. 寻找数组的中心下标【简单】/README"},{"text":"⏰ 0725. 分隔链表【中等】","link":"/notes/0725. 分隔链表【中等】/README"},{"text":"⏰ 0726. 原子的数量【困难】","link":"/notes/0726. 原子的数量【困难】/README"},{"text":"⏰ 0727. 最小窗口子序列【困难】","link":"/notes/0727. 最小窗口子序列【困难】/README"},{"text":"⏰ 0728. 自除数【简单】","link":"/notes/0728. 自除数【简单】/README"},{"text":"⏰ 0729. 我的日程安排表 I【中等】","link":"/notes/0729. 我的日程安排表 I【中等】/README"},{"text":"⏰ 0730. 统计不同回文子序列【困难】","link":"/notes/0730. 统计不同回文子序列【困难】/README"},{"text":"⏰ 0731. 我的日程安排表 II【中等】","link":"/notes/0731. 我的日程安排表 II【中等】/README"},{"text":"⏰ 0732. 我的日程安排表 III【困难】","link":"/notes/0732. 我的日程安排表 III【困难】/README"},{"text":"⏰ 0733. 图像渲染【简单】","link":"/notes/0733. 图像渲染【简单】/README"},{"text":"⏰ 0734. 句子相似性【简单】","link":"/notes/0734. 句子相似性【简单】/README"},{"text":"⏰ 0735. 小行星碰撞【中等】","link":"/notes/0735. 小行星碰撞【中等】/README"},{"text":"⏰ 0736. Lisp 语法解析【困难】","link":"/notes/0736. Lisp 语法解析【困难】/README"},{"text":"⏰ 0737. 句子相似性 II【中等】","link":"/notes/0737. 句子相似性 II【中等】/README"},{"text":"⏰ 0738. 单调递增的数字【中等】","link":"/notes/0738. 单调递增的数字【中等】/README"},{"text":"⏰ 0739. 每日温度【中等】","link":"/notes/0739. 每日温度【中等】/README"},{"text":"⏰ 0740. 删除并获得点数【中等】","link":"/notes/0740. 删除并获得点数【中等】/README"},{"text":"⏰ 0741. 摘樱桃【困难】","link":"/notes/0741. 摘樱桃【困难】/README"},{"text":"⏰ 0742. 二叉树最近的叶节点【中等】","link":"/notes/0742. 二叉树最近的叶节点【中等】/README"},{"text":"⏰ 0743. 网络延迟时间【中等】","link":"/notes/0743. 网络延迟时间【中等】/README"},{"text":"⏰ 0744. 寻找比目标字母大的最小字母【简单】","link":"/notes/0744. 寻找比目标字母大的最小字母【简单】/README"},{"text":"⏰ 0745. 前缀和后缀搜索【困难】","link":"/notes/0745. 前缀和后缀搜索【困难】/README"},{"text":"⏰ 0746. 使用最小花费爬楼梯【简单】","link":"/notes/0746. 使用最小花费爬楼梯【简单】/README"},{"text":"⏰ 0747. 至少是其他数字两倍的最大数【简单】","link":"/notes/0747. 至少是其他数字两倍的最大数【简单】/README"},{"text":"✅ 0748. 最短补全词【简单】","link":"/notes/0748. 最短补全词【简单】/README"},{"text":"⏰ 0749. 隔离病毒【困难】","link":"/notes/0749. 隔离病毒【困难】/README"},{"text":"⏰ 0750. 角矩形的数量【中等】","link":"/notes/0750. 角矩形的数量【中等】/README"},{"text":"⏰ 0751. IP 到 CIDR【中等】","link":"/notes/0751. IP 到 CIDR【中等】/README"},{"text":"⏰ 0752. 打开转盘锁【中等】","link":"/notes/0752. 打开转盘锁【中等】/README"},{"text":"⏰ 0753. 破解保险箱【困难】","link":"/notes/0753. 破解保险箱【困难】/README"},{"text":"⏰ 0754. 到达终点数字【中等】","link":"/notes/0754. 到达终点数字【中等】/README"},{"text":"⏰ 0755. 倒水【中等】","link":"/notes/0755. 倒水【中等】/README"},{"text":"⏰ 0756. 金字塔转换矩阵【中等】","link":"/notes/0756. 金字塔转换矩阵【中等】/README"},{"text":"⏰ 0757. 设置交集大小至少为2【困难】","link":"/notes/0757. 设置交集大小至少为2【困难】/README"},{"text":"⏰ 0758. 字符串中的加粗单词【中等】","link":"/notes/0758. 字符串中的加粗单词【中等】/README"},{"text":"⏰ 0759. 员工空闲时间【困难】","link":"/notes/0759. 员工空闲时间【困难】/README"},{"text":"⏰ 0760. 找出变位映射【简单】","link":"/notes/0760. 找出变位映射【简单】/README"},{"text":"⏰ 0761. 特殊的二进制序列【困难】","link":"/notes/0761. 特殊的二进制序列【困难】/README"},{"text":"⏰ 0762. 二进制表示中质数个计算置位【简单】","link":"/notes/0762. 二进制表示中质数个计算置位【简单】/README"},{"text":"⏰ 0763. 划分字母区间【中等】","link":"/notes/0763. 划分字母区间【中等】/README"},{"text":"⏰ 0764. 最大加号标志【中等】","link":"/notes/0764. 最大加号标志【中等】/README"},{"text":"⏰ 0765. 情侣牵手【困难】","link":"/notes/0765. 情侣牵手【困难】/README"},{"text":"⏰ 0766. 托普利茨矩阵【简单】","link":"/notes/0766. 托普利茨矩阵【简单】/README"},{"text":"⏰ 0767. 重构字符串【中等】","link":"/notes/0767. 重构字符串【中等】/README"},{"text":"⏰ 0768. 最多能完成排序的块 II【困难】","link":"/notes/0768. 最多能完成排序的块 II【困难】/README"},{"text":"⏰ 0769. 最多能完成排序的块【中等】","link":"/notes/0769. 最多能完成排序的块【中等】/README"},{"text":"⏰ 0770. 基本计算器 IV【困难】","link":"/notes/0770. 基本计算器 IV【困难】/README"},{"text":"⏰ 0771. 宝石与石头【简单】","link":"/notes/0771. 宝石与石头【简单】/README"},{"text":"⏰ 0772. 基本计算器 III【困难】","link":"/notes/0772. 基本计算器 III【困难】/README"},{"text":"⏰ 0773. 滑动谜题【困难】","link":"/notes/0773. 滑动谜题【困难】/README"},{"text":"⏰ 0774. 最小化去加油站的最大距离【困难】","link":"/notes/0774. 最小化去加油站的最大距离【困难】/README"},{"text":"⏰ 0775. 全局倒置与局部倒置【中等】","link":"/notes/0775. 全局倒置与局部倒置【中等】/README"},{"text":"⏰ 0776. 拆分二叉搜索树【中等】","link":"/notes/0776. 拆分二叉搜索树【中等】/README"},{"text":"⏰ 0777. 在 LR 字符串中交换相邻字符【中等】","link":"/notes/0777. 在 LR 字符串中交换相邻字符【中等】/README"},{"text":"⏰ 0778. 水位上升的泳池中游泳【困难】","link":"/notes/0778. 水位上升的泳池中游泳【困难】/README"},{"text":"⏰ 0779. 第K个语法符号【中等】","link":"/notes/0779. 第K个语法符号【中等】/README"},{"text":"⏰ 0780. 到达终点【困难】","link":"/notes/0780. 到达终点【困难】/README"},{"text":"⏰ 0781. 森林中的兔子【中等】","link":"/notes/0781. 森林中的兔子【中等】/README"},{"text":"⏰ 0782. 变为棋盘【困难】","link":"/notes/0782. 变为棋盘【困难】/README"},{"text":"⏰ 0783. 二叉搜索树节点最小距离【简单】","link":"/notes/0783. 二叉搜索树节点最小距离【简单】/README"},{"text":"⏰ 0784. 字母大小写全排列【中等】","link":"/notes/0784. 字母大小写全排列【中等】/README"},{"text":"⏰ 0785. 判断二分图【中等】","link":"/notes/0785. 判断二分图【中等】/README"},{"text":"⏰ 0786. 第 K 个最小的质数分数【中等】","link":"/notes/0786. 第 K 个最小的质数分数【中等】/README"},{"text":"⏰ 0787. K 站中转内最便宜的航班【中等】","link":"/notes/0787. K 站中转内最便宜的航班【中等】/README"},{"text":"⏰ 0788. 旋转数字【中等】","link":"/notes/0788. 旋转数字【中等】/README"},{"text":"⏰ 0789. 逃脱阻碍者【中等】","link":"/notes/0789. 逃脱阻碍者【中等】/README"},{"text":"⏰ 0790. 多米诺和托米诺平铺【中等】","link":"/notes/0790. 多米诺和托米诺平铺【中等】/README"},{"text":"⏰ 0791. 自定义字符串排序【中等】","link":"/notes/0791. 自定义字符串排序【中等】/README"},{"text":"⏰ 0792. 匹配子序列的单词数【中等】","link":"/notes/0792. 匹配子序列的单词数【中等】/README"},{"text":"⏰ 0793. 阶乘函数后 K 个零【困难】","link":"/notes/0793. 阶乘函数后 K 个零【困难】/README"},{"text":"⏰ 0794. 有效的井字游戏【中等】","link":"/notes/0794. 有效的井字游戏【中等】/README"},{"text":"⏰ 0795. 区间子数组个数【中等】","link":"/notes/0795. 区间子数组个数【中等】/README"},{"text":"⏰ 0796. 旋转字符串【简单】","link":"/notes/0796. 旋转字符串【简单】/README"},{"text":"⏰ 0797. 所有可能的路径【中等】","link":"/notes/0797. 所有可能的路径【中等】/README"},{"text":"⏰ 0798. 得分最高的最小轮调【困难】","link":"/notes/0798. 得分最高的最小轮调【困难】/README"},{"text":"⏰ 0799. 香槟塔【中等】","link":"/notes/0799. 香槟塔【中等】/README"},{"text":"⏰ 0800. 相似 RGB 颜色【简单】","link":"/notes/0800. 相似 RGB 颜色【简单】/README"}]},{"text":"10. 0801~0900","collapsed":true,"items":[{"text":"⏰ 0801. 使序列递增的最小交换次数【困难】","link":"/notes/0801. 使序列递增的最小交换次数【困难】/README"},{"text":"⏰ 0802. 找到最终的安全状态【中等】","link":"/notes/0802. 找到最终的安全状态【中等】/README"},{"text":"⏰ 0803. 打砖块【困难】","link":"/notes/0803. 打砖块【困难】/README"},{"text":"✅ 0804. 唯一摩尔斯密码词【简单】","link":"/notes/0804. 唯一摩尔斯密码词【简单】/README"},{"text":"⏰ 0805. 数组的均值分割【困难】","link":"/notes/0805. 数组的均值分割【困难】/README"},{"text":"⏰ 0806. 写字符串需要的行数【简单】","link":"/notes/0806. 写字符串需要的行数【简单】/README"},{"text":"⏰ 0807. 保持城市天际线【中等】","link":"/notes/0807. 保持城市天际线【中等】/README"},{"text":"⏰ 0808. 分汤【中等】","link":"/notes/0808. 分汤【中等】/README"},{"text":"⏰ 0809. 情感丰富的文字【中等】","link":"/notes/0809. 情感丰富的文字【中等】/README"},{"text":"⏰ 0810. 黑板异或游戏【困难】","link":"/notes/0810. 黑板异或游戏【困难】/README"},{"text":"⏰ 0811. 子域名访问计数【中等】","link":"/notes/0811. 子域名访问计数【中等】/README"},{"text":"⏰ 0812. 最大三角形面积【简单】","link":"/notes/0812. 最大三角形面积【简单】/README"},{"text":"⏰ 0813. 最大平均值和的分组【中等】","link":"/notes/0813. 最大平均值和的分组【中等】/README"},{"text":"⏰ 0814. 二叉树剪枝【中等】","link":"/notes/0814. 二叉树剪枝【中等】/README"},{"text":"⏰ 0815. 公交路线【困难】","link":"/notes/0815. 公交路线【困难】/README"},{"text":"⏰ 0816. 模糊坐标【中等】","link":"/notes/0816. 模糊坐标【中等】/README"},{"text":"⏰ 0817. 链表组件【中等】","link":"/notes/0817. 链表组件【中等】/README"},{"text":"⏰ 0818. 赛车【困难】","link":"/notes/0818. 赛车【困难】/README"},{"text":"✅ 0819. 最常见的单词【简单】","link":"/notes/0819. 最常见的单词【简单】/README"},{"text":"⏰ 0820. 单词的压缩编码【中等】","link":"/notes/0820. 单词的压缩编码【中等】/README"},{"text":"⏰ 0821. 字符的最短距离【简单】","link":"/notes/0821. 字符的最短距离【简单】/README"},{"text":"⏰ 0822. 翻转卡片游戏【中等】","link":"/notes/0822. 翻转卡片游戏【中等】/README"},{"text":"⏰ 0823. 带因子的二叉树【中等】","link":"/notes/0823. 带因子的二叉树【中等】/README"},{"text":"⏰ 0824. 山羊拉丁文【简单】","link":"/notes/0824. 山羊拉丁文【简单】/README"},{"text":"⏰ 0825. 适龄的朋友【中等】","link":"/notes/0825. 适龄的朋友【中等】/README"},{"text":"⏰ 0826. 安排工作以达到最大收益【中等】","link":"/notes/0826. 安排工作以达到最大收益【中等】/README"},{"text":"⏰ 0827. 最大人工岛【困难】","link":"/notes/0827. 最大人工岛【困难】/README"},{"text":"⏰ 0828. 统计子串中的唯一字符【困难】","link":"/notes/0828. 统计子串中的唯一字符【困难】/README"},{"text":"⏰ 0829. 连续整数求和【困难】","link":"/notes/0829. 连续整数求和【困难】/README"},{"text":"⏰ 0830. 较大分组的位置【简单】","link":"/notes/0830. 较大分组的位置【简单】/README"},{"text":"⏰ 0831. 隐藏个人信息【中等】","link":"/notes/0831. 隐藏个人信息【中等】/README"},{"text":"⏰ 0832. 翻转图像【简单】","link":"/notes/0832. 翻转图像【简单】/README"},{"text":"⏰ 0833. 字符串中的查找与替换【中等】","link":"/notes/0833. 字符串中的查找与替换【中等】/README"},{"text":"⏰ 0834. 树中距离之和【困难】","link":"/notes/0834. 树中距离之和【困难】/README"},{"text":"⏰ 0835. 图像重叠【中等】","link":"/notes/0835. 图像重叠【中等】/README"},{"text":"⏰ 0836. 矩形重叠【简单】","link":"/notes/0836. 矩形重叠【简单】/README"},{"text":"⏰ 0837. 新 21 点【中等】","link":"/notes/0837. 新 21 点【中等】/README"},{"text":"⏰ 0838. 推多米诺【中等】","link":"/notes/0838. 推多米诺【中等】/README"},{"text":"⏰ 0839. 相似字符串组【困难】","link":"/notes/0839. 相似字符串组【困难】/README"},{"text":"⏰ 0840. 矩阵中的幻方【中等】","link":"/notes/0840. 矩阵中的幻方【中等】/README"},{"text":"⏰ 0841. 钥匙和房间【中等】","link":"/notes/0841. 钥匙和房间【中等】/README"},{"text":"⏰ 0842. 将数组拆分成斐波那契序列【中等】","link":"/notes/0842. 将数组拆分成斐波那契序列【中等】/README"},{"text":"⏰ 0843. 猜猜这个单词【困难】","link":"/notes/0843. 猜猜这个单词【困难】/README"},{"text":"⏰ 0844. 比较含退格的字符串【简单】","link":"/notes/0844. 比较含退格的字符串【简单】/README"},{"text":"⏰ 0845. 数组中的最长山脉【中等】","link":"/notes/0845. 数组中的最长山脉【中等】/README"},{"text":"⏰ 0846. 一手顺子【中等】","link":"/notes/0846. 一手顺子【中等】/README"},{"text":"⏰ 0847. 访问所有节点的最短路径【困难】","link":"/notes/0847. 访问所有节点的最短路径【困难】/README"},{"text":"⏰ 0848. 字母移位【中等】","link":"/notes/0848. 字母移位【中等】/README"},{"text":"⏰ 0849. 到最近的人的最大距离【中等】","link":"/notes/0849. 到最近的人的最大距离【中等】/README"},{"text":"⏰ 0850. 矩形面积 II【困难】","link":"/notes/0850. 矩形面积 II【困难】/README"},{"text":"⏰ 0851. 喧闹和富有【中等】","link":"/notes/0851. 喧闹和富有【中等】/README"},{"text":"⏰ 0852. 山脉数组的峰顶索引【中等】","link":"/notes/0852. 山脉数组的峰顶索引【中等】/README"},{"text":"⏰ 0853. 车队【中等】","link":"/notes/0853. 车队【中等】/README"},{"text":"⏰ 0854. 相似度为 K 的字符串【困难】","link":"/notes/0854. 相似度为 K 的字符串【困难】/README"},{"text":"⏰ 0855. 考场就座【中等】","link":"/notes/0855. 考场就座【中等】/README"},{"text":"⏰ 0856. 括号的分数【中等】","link":"/notes/0856. 括号的分数【中等】/README"},{"text":"⏰ 0857. 雇佣 K 名工人的最低成本【困难】","link":"/notes/0857. 雇佣 K 名工人的最低成本【困难】/README"},{"text":"⏰ 0858. 镜面反射【中等】","link":"/notes/0858. 镜面反射【中等】/README"},{"text":"⏰ 0859. 亲密字符串【简单】","link":"/notes/0859. 亲密字符串【简单】/README"},{"text":"⏰ 0860. 柠檬水找零【简单】","link":"/notes/0860. 柠檬水找零【简单】/README"},{"text":"⏰ 0861. 翻转矩阵后的得分【中等】","link":"/notes/0861. 翻转矩阵后的得分【中等】/README"},{"text":"⏰ 0862. 和至少为 K 的最短子数组【困难】","link":"/notes/0862. 和至少为 K 的最短子数组【困难】/README"},{"text":"⏰ 0863. 二叉树中所有距离为 K 的结点【中等】","link":"/notes/0863. 二叉树中所有距离为 K 的结点【中等】/README"},{"text":"⏰ 0864. 获取所有钥匙的最短路径【困难】","link":"/notes/0864. 获取所有钥匙的最短路径【困难】/README"},{"text":"⏰ 0865. 具有所有最深节点的最小子树【中等】","link":"/notes/0865. 具有所有最深节点的最小子树【中等】/README"},{"text":"⏰ 0866. 回文质数【中等】","link":"/notes/0866. 回文质数【中等】/README"},{"text":"⏰ 0867. 转置矩阵【简单】","link":"/notes/0867. 转置矩阵【简单】/README"},{"text":"⏰ 0868. 二进制间距【简单】","link":"/notes/0868. 二进制间距【简单】/README"},{"text":"⏰ 0869. 重新排序得到 2 的幂【中等】","link":"/notes/0869. 重新排序得到 2 的幂【中等】/README"},{"text":"⏰ 0870. 优势洗牌【中等】","link":"/notes/0870. 优势洗牌【中等】/README"},{"text":"⏰ 0871. 最低加油次数【困难】","link":"/notes/0871. 最低加油次数【困难】/README"},{"text":"⏰ 0872. 叶子相似的树【简单】","link":"/notes/0872. 叶子相似的树【简单】/README"},{"text":"✅ 0873. 最长的斐波那契子序列的长度【中等】","link":"/notes/0873. 最长的斐波那契子序列的长度【中等】/README"},{"text":"⏰ 0874. 模拟行走机器人【中等】","link":"/notes/0874. 模拟行走机器人【中等】/README"},{"text":"⏰ 0875. 爱吃香蕉的珂珂【中等】","link":"/notes/0875. 爱吃香蕉的珂珂【中等】/README"},{"text":"⏰ 0876. 链表的中间结点【简单】","link":"/notes/0876. 链表的中间结点【简单】/README"},{"text":"⏰ 0877. 石子游戏【中等】","link":"/notes/0877. 石子游戏【中等】/README"},{"text":"⏰ 0878. 第 N 个神奇数字【困难】","link":"/notes/0878. 第 N 个神奇数字【困难】/README"},{"text":"⏰ 0879. 盈利计划【困难】","link":"/notes/0879. 盈利计划【困难】/README"},{"text":"⏰ 0880. 索引处的解码字符串【中等】","link":"/notes/0880. 索引处的解码字符串【中等】/README"},{"text":"⏰ 0881. 救生艇【中等】","link":"/notes/0881. 救生艇【中等】/README"},{"text":"⏰ 0882. 细分图中的可到达节点【困难】","link":"/notes/0882. 细分图中的可到达节点【困难】/README"},{"text":"⏰ 0883. 三维形体投影面积【简单】","link":"/notes/0883. 三维形体投影面积【简单】/README"},{"text":"⏰ 0884. 两句话中的不常见单词【简单】","link":"/notes/0884. 两句话中的不常见单词【简单】/README"},{"text":"⏰ 0885. 螺旋矩阵 III【中等】","link":"/notes/0885. 螺旋矩阵 III【中等】/README"},{"text":"⏰ 0886. 可能的二分法【中等】","link":"/notes/0886. 可能的二分法【中等】/README"},{"text":"⏰ 0887. 鸡蛋掉落【困难】","link":"/notes/0887. 鸡蛋掉落【困难】/README"},{"text":"⏰ 0888. 公平的糖果交换【简单】","link":"/notes/0888. 公平的糖果交换【简单】/README"},{"text":"⏰ 0889. 根据前序和后序遍历构造二叉树【中等】","link":"/notes/0889. 根据前序和后序遍历构造二叉树【中等】/README"},{"text":"⏰ 0890. 查找和替换模式【中等】","link":"/notes/0890. 查找和替换模式【中等】/README"},{"text":"⏰ 0891. 子序列宽度之和【困难】","link":"/notes/0891. 子序列宽度之和【困难】/README"},{"text":"⏰ 0892. 三维形体的表面积【简单】","link":"/notes/0892. 三维形体的表面积【简单】/README"},{"text":"⏰ 0893. 特殊等价字符串组【中等】","link":"/notes/0893. 特殊等价字符串组【中等】/README"},{"text":"⏰ 0894. 所有可能的真二叉树【中等】","link":"/notes/0894. 所有可能的真二叉树【中等】/README"},{"text":"⏰ 0895. 最大频率栈【困难】","link":"/notes/0895. 最大频率栈【困难】/README"},{"text":"⏰ 0896. 单调数列【简单】","link":"/notes/0896. 单调数列【简单】/README"},{"text":"⏰ 0897. 递增顺序搜索树【简单】","link":"/notes/0897. 递增顺序搜索树【简单】/README"},{"text":"⏰ 0898. 子数组按位或操作【中等】","link":"/notes/0898. 子数组按位或操作【中等】/README"},{"text":"⏰ 0899. 有序队列【困难】","link":"/notes/0899. 有序队列【困难】/README"},{"text":"⏰ 0900. RLE 迭代器【中等】","link":"/notes/0900. RLE 迭代器【中等】/README"}]},{"text":"11. 0901~1000","collapsed":true,"items":[{"text":"⏰ 0901. 股票价格跨度【中等】","link":"/notes/0901. 股票价格跨度【中等】/README"},{"text":"⏰ 0902. 最大为 N 的数字组合【困难】","link":"/notes/0902. 最大为 N 的数字组合【困难】/README"},{"text":"⏰ 0903. DI 序列的有效排列【困难】","link":"/notes/0903. DI 序列的有效排列【困难】/README"},{"text":"⏰ 0904. 水果成篮【中等】","link":"/notes/0904. 水果成篮【中等】/README"},{"text":"⏰ 0905. 按奇偶排序数组【简单】","link":"/notes/0905. 按奇偶排序数组【简单】/README"},{"text":"⏰ 0906. 超级回文数【困难】","link":"/notes/0906. 超级回文数【困难】/README"},{"text":"⏰ 0907. 子数组的最小值之和【中等】","link":"/notes/0907. 子数组的最小值之和【中等】/README"},{"text":"⏰ 0908. 最小差值 I【简单】","link":"/notes/0908. 最小差值 I【简单】/README"},{"text":"⏰ 0909. 蛇梯棋【中等】","link":"/notes/0909. 蛇梯棋【中等】/README"},{"text":"⏰ 0910. 最小差值 II【中等】","link":"/notes/0910. 最小差值 II【中等】/README"},{"text":"⏰ 0911. 在线选举【中等】","link":"/notes/0911. 在线选举【中等】/README"},{"text":"⏰ 0912. 排序数组【中等】","link":"/notes/0912. 排序数组【中等】/README"},{"text":"⏰ 0913. 猫和老鼠【困难】","link":"/notes/0913. 猫和老鼠【困难】/README"},{"text":"⏰ 0914. 卡牌分组【简单】","link":"/notes/0914. 卡牌分组【简单】/README"},{"text":"⏰ 0915. 分割数组【中等】","link":"/notes/0915. 分割数组【中等】/README"},{"text":"⏰ 0916. 单词子集【中等】","link":"/notes/0916. 单词子集【中等】/README"},{"text":"⏰ 0917. 仅仅反转字母【简单】","link":"/notes/0917. 仅仅反转字母【简单】/README"},{"text":"⏰ 0918. 环形子数组的最大和【中等】","link":"/notes/0918. 环形子数组的最大和【中等】/README"},{"text":"⏰ 0919. 完全二叉树插入器【中等】","link":"/notes/0919. 完全二叉树插入器【中等】/README"},{"text":"⏰ 0920. 播放列表的数量【困难】","link":"/notes/0920. 播放列表的数量【困难】/README"},{"text":"⏰ 0921. 使括号有效的最少添加【中等】","link":"/notes/0921. 使括号有效的最少添加【中等】/README"},{"text":"⏰ 0922. 按奇偶排序数组 II【简单】","link":"/notes/0922. 按奇偶排序数组 II【简单】/README"},{"text":"⏰ 0923. 三数之和的多种可能【中等】","link":"/notes/0923. 三数之和的多种可能【中等】/README"},{"text":"⏰ 0924. 尽量减少恶意软件的传播【困难】","link":"/notes/0924. 尽量减少恶意软件的传播【困难】/README"},{"text":"⏰ 0925. 长按键入【简单】","link":"/notes/0925. 长按键入【简单】/README"},{"text":"⏰ 0926. 将字符串翻转到单调递增【中等】","link":"/notes/0926. 将字符串翻转到单调递增【中等】/README"},{"text":"⏰ 0927. 三等分【困难】","link":"/notes/0927. 三等分【困难】/README"},{"text":"⏰ 0928. 尽量减少恶意软件的传播 II【困难】","link":"/notes/0928. 尽量减少恶意软件的传播 II【困难】/README"},{"text":"✅ 0929. 独特的电子邮件地址【简单】","link":"/notes/0929. 独特的电子邮件地址【简单】/README"},{"text":"⏰ 0930. 和相同的二元子数组【中等】","link":"/notes/0930. 和相同的二元子数组【中等】/README"},{"text":"⏰ 0931. 下降路径最小和【中等】","link":"/notes/0931. 下降路径最小和【中等】/README"},{"text":"⏰ 0932. 漂亮数组【中等】","link":"/notes/0932. 漂亮数组【中等】/README"},{"text":"⏰ 0933. 最近的请求次数【简单】","link":"/notes/0933. 最近的请求次数【简单】/README"},{"text":"⏰ 0934. 最短的桥【中等】","link":"/notes/0934. 最短的桥【中等】/README"},{"text":"⏰ 0935. 骑士拨号器【中等】","link":"/notes/0935. 骑士拨号器【中等】/README"},{"text":"⏰ 0936. 戳印序列【困难】","link":"/notes/0936. 戳印序列【困难】/README"},{"text":"⏰ 0937. 重新排列日志文件【中等】","link":"/notes/0937. 重新排列日志文件【中等】/README"},{"text":"⏰ 0938. 二叉搜索树的范围和【简单】","link":"/notes/0938. 二叉搜索树的范围和【简单】/README"},{"text":"⏰ 0939. 最小面积矩形【中等】","link":"/notes/0939. 最小面积矩形【中等】/README"},{"text":"⏰ 0940. 不同的子序列 II【困难】","link":"/notes/0940. 不同的子序列 II【困难】/README"},{"text":"⏰ 0941. 有效的山脉数组【简单】","link":"/notes/0941. 有效的山脉数组【简单】/README"},{"text":"⏰ 0942. 增减字符串匹配【简单】","link":"/notes/0942. 增减字符串匹配【简单】/README"},{"text":"⏰ 0943. 最短超级串【困难】","link":"/notes/0943. 最短超级串【困难】/README"},{"text":"⏰ 0944. 删列造序【简单】","link":"/notes/0944. 删列造序【简单】/README"},{"text":"⏰ 0945. 使数组唯一的最小增量【中等】","link":"/notes/0945. 使数组唯一的最小增量【中等】/README"},{"text":"⏰ 0946. 验证栈序列【中等】","link":"/notes/0946. 验证栈序列【中等】/README"},{"text":"⏰ 0947. 移除最多的同行或同列石头【中等】","link":"/notes/0947. 移除最多的同行或同列石头【中等】/README"},{"text":"⏰ 0948. 令牌放置【中等】","link":"/notes/0948. 令牌放置【中等】/README"},{"text":"⏰ 0949. 给定数字能组成的最大时间【中等】","link":"/notes/0949. 给定数字能组成的最大时间【中等】/README"},{"text":"⏰ 0950. 按递增顺序显示卡牌【中等】","link":"/notes/0950. 按递增顺序显示卡牌【中等】/README"},{"text":"⏰ 0951. 翻转等价二叉树【中等】","link":"/notes/0951. 翻转等价二叉树【中等】/README"},{"text":"⏰ 0952. 按公因数计算最大组件大小【困难】","link":"/notes/0952. 按公因数计算最大组件大小【困难】/README"},{"text":"✅ 0953. 验证外星语词典【简单】","link":"/notes/0953. 验证外星语词典【简单】/README"},{"text":"⏰ 0954. 二倍数对数组【中等】","link":"/notes/0954. 二倍数对数组【中等】/README"},{"text":"⏰ 0955. 删列造序 II【中等】","link":"/notes/0955. 删列造序 II【中等】/README"},{"text":"⏰ 0956. 最高的广告牌【困难】","link":"/notes/0956. 最高的广告牌【困难】/README"},{"text":"⏰ 0957. N 天后的牢房【中等】","link":"/notes/0957. N 天后的牢房【中等】/README"},{"text":"⏰ 0958. 二叉树的完全性检验【中等】","link":"/notes/0958. 二叉树的完全性检验【中等】/README"},{"text":"⏰ 0959. 由斜杠划分区域【中等】","link":"/notes/0959. 由斜杠划分区域【中等】/README"},{"text":"⏰ 0960. 删列造序 III【困难】","link":"/notes/0960. 删列造序 III【困难】/README"},{"text":"⏰ 0961. 在长度 2N 的数组中找出重复 N 次的元素【简单】","link":"/notes/0961. 在长度 2N 的数组中找出重复 N 次的元素【简单】/README"},{"text":"⏰ 0962. 最大宽度坡【中等】","link":"/notes/0962. 最大宽度坡【中等】/README"},{"text":"⏰ 0963. 最小面积矩形 II【中等】","link":"/notes/0963. 最小面积矩形 II【中等】/README"},{"text":"⏰ 0964. 表示数字的最少运算符【困难】","link":"/notes/0964. 表示数字的最少运算符【困难】/README"},{"text":"⏰ 0965. 单值二叉树【简单】","link":"/notes/0965. 单值二叉树【简单】/README"},{"text":"⏰ 0966. 元音拼写检查器【中等】","link":"/notes/0966. 元音拼写检查器【中等】/README"},{"text":"⏰ 0967. 连续差相同的数字【中等】","link":"/notes/0967. 连续差相同的数字【中等】/README"},{"text":"⏰ 0968. 监控二叉树【困难】","link":"/notes/0968. 监控二叉树【困难】/README"},{"text":"⏰ 0969. 煎饼排序【中等】","link":"/notes/0969. 煎饼排序【中等】/README"},{"text":"⏰ 0970. 强整数【中等】","link":"/notes/0970. 强整数【中等】/README"},{"text":"⏰ 0971. 翻转二叉树以匹配先序遍历【中等】","link":"/notes/0971. 翻转二叉树以匹配先序遍历【中等】/README"},{"text":"⏰ 0972. 相等的有理数【困难】","link":"/notes/0972. 相等的有理数【困难】/README"},{"text":"⏰ 0973. 最接近原点的 K 个点【中等】","link":"/notes/0973. 最接近原点的 K 个点【中等】/README"},{"text":"⏰ 0974. 和可被 K 整除的子数组【中等】","link":"/notes/0974. 和可被 K 整除的子数组【中等】/README"},{"text":"⏰ 0975. 奇偶跳【困难】","link":"/notes/0975. 奇偶跳【困难】/README"},{"text":"⏰ 0976. 三角形的最大周长【简单】","link":"/notes/0976. 三角形的最大周长【简单】/README"},{"text":"⏰ 0977. 有序数组的平方【简单】","link":"/notes/0977. 有序数组的平方【简单】/README"},{"text":"⏰ 0978. 最长湍流子数组【中等】","link":"/notes/0978. 最长湍流子数组【中等】/README"},{"text":"⏰ 0979. 在二叉树中分配硬币【中等】","link":"/notes/0979. 在二叉树中分配硬币【中等】/README"},{"text":"⏰ 0980. 不同路径 III【困难】","link":"/notes/0980. 不同路径 III【困难】/README"},{"text":"⏰ 0981. 基于时间的键值存储【中等】","link":"/notes/0981. 基于时间的键值存储【中等】/README"},{"text":"⏰ 0982. 按位与为零的三元组【困难】","link":"/notes/0982. 按位与为零的三元组【困难】/README"},{"text":"⏰ 0983. 最低票价【中等】","link":"/notes/0983. 最低票价【中等】/README"},{"text":"⏰ 0984. 不含 AAA 或 BBB 的字符串【中等】","link":"/notes/0984. 不含 AAA 或 BBB 的字符串【中等】/README"},{"text":"⏰ 0985. 查询后的偶数和【中等】","link":"/notes/0985. 查询后的偶数和【中等】/README"},{"text":"⏰ 0986. 区间列表的交集【中等】","link":"/notes/0986. 区间列表的交集【中等】/README"},{"text":"⏰ 0987. 二叉树的垂序遍历【困难】","link":"/notes/0987. 二叉树的垂序遍历【困难】/README"},{"text":"⏰ 0988. 从叶结点开始的最小字符串【中等】","link":"/notes/0988. 从叶结点开始的最小字符串【中等】/README"},{"text":"⏰ 0989. 数组形式的整数加法【简单】","link":"/notes/0989. 数组形式的整数加法【简单】/README"},{"text":"⏰ 0990. 等式方程的可满足性【中等】","link":"/notes/0990. 等式方程的可满足性【中等】/README"},{"text":"⏰ 0991. 坏了的计算器【中等】","link":"/notes/0991. 坏了的计算器【中等】/README"},{"text":"⏰ 0992. K 个不同整数的子数组【困难】","link":"/notes/0992. K 个不同整数的子数组【困难】/README"},{"text":"⏰ 0993. 二叉树的堂兄弟节点【简单】","link":"/notes/0993. 二叉树的堂兄弟节点【简单】/README"},{"text":"⏰ 0994. 腐烂的橘子【中等】","link":"/notes/0994. 腐烂的橘子【中等】/README"},{"text":"⏰ 0995. K 连续位的最小翻转次数【困难】","link":"/notes/0995. K 连续位的最小翻转次数【困难】/README"},{"text":"⏰ 0996. 平方数组的数目【困难】","link":"/notes/0996. 平方数组的数目【困难】/README"},{"text":"⏰ 0997. 找到小镇的法官【简单】","link":"/notes/0997. 找到小镇的法官【简单】/README"},{"text":"⏰ 0998. 最大二叉树 II【中等】","link":"/notes/0998. 最大二叉树 II【中等】/README"},{"text":"⏰ 0999. 可以被一步捕获的棋子数【简单】","link":"/notes/0999. 可以被一步捕获的棋子数【简单】/README"},{"text":"⏰ 1000. 合并石头的最低成本【困难】","link":"/notes/1000. 合并石头的最低成本【困难】/README"}]},{"text":"12. 1001~1100","collapsed":true,"items":[{"text":"⏰ 1001. 网格照明【困难】","link":"/notes/1001. 网格照明【困难】/README"},{"text":"✅ 1002. 查找共用字符【简单】","link":"/notes/1002. 查找共用字符【简单】/README"},{"text":"⏰ 1003. 检查替换后的词是否有效【中等】","link":"/notes/1003. 检查替换后的词是否有效【中等】/README"},{"text":"⏰ 1004. 最大连续1的个数 III【中等】","link":"/notes/1004. 最大连续1的个数 III【中等】/README"},{"text":"⏰ 1005. K 次取反后最大化的数组和【简单】","link":"/notes/1005. K 次取反后最大化的数组和【简单】/README"},{"text":"⏰ 1006. 笨阶乘【中等】","link":"/notes/1006. 笨阶乘【中等】/README"},{"text":"⏰ 1007. 行相等的最少多米诺旋转【中等】","link":"/notes/1007. 行相等的最少多米诺旋转【中等】/README"},{"text":"⏰ 1008. 前序遍历构造二叉搜索树【中等】","link":"/notes/1008. 前序遍历构造二叉搜索树【中等】/README"},{"text":"⏰ 1009. 十进制整数的反码【简单】","link":"/notes/1009. 十进制整数的反码【简单】/README"},{"text":"⏰ 1010. 总持续时间可被 60 整除的歌曲【中等】","link":"/notes/1010. 总持续时间可被 60 整除的歌曲【中等】/README"},{"text":"⏰ 1011. 在 D 天内送达包裹的能力【中等】","link":"/notes/1011. 在 D 天内送达包裹的能力【中等】/README"},{"text":"⏰ 1012. 至少有 1 位重复的数字【困难】","link":"/notes/1012. 至少有 1 位重复的数字【困难】/README"},{"text":"⏰ 1013. 将数组分成和相等的三个部分【简单】","link":"/notes/1013. 将数组分成和相等的三个部分【简单】/README"},{"text":"⏰ 1014. 最佳观光组合【中等】","link":"/notes/1014. 最佳观光组合【中等】/README"},{"text":"⏰ 1015. 可被 K 整除的最小整数【中等】","link":"/notes/1015. 可被 K 整除的最小整数【中等】/README"},{"text":"⏰ 1016. 子串能表示从 1 到 N 数字的二进制串【中等】","link":"/notes/1016. 子串能表示从 1 到 N 数字的二进制串【中等】/README"},{"text":"⏰ 1017. 负二进制转换【中等】","link":"/notes/1017. 负二进制转换【中等】/README"},{"text":"⏰ 1018. 可被 5 整除的二进制前缀【简单】","link":"/notes/1018. 可被 5 整除的二进制前缀【简单】/README"},{"text":"⏰ 1019. 链表中的下一个更大节点【中等】","link":"/notes/1019. 链表中的下一个更大节点【中等】/README"},{"text":"⏰ 1020. 飞地的数量【中等】","link":"/notes/1020. 飞地的数量【中等】/README"},{"text":"⏰ 1021. 删除最外层的括号【简单】","link":"/notes/1021. 删除最外层的括号【简单】/README"},{"text":"⏰ 1022. 从根到叶的二进制数之和【简单】","link":"/notes/1022. 从根到叶的二进制数之和【简单】/README"},{"text":"⏰ 1023. 驼峰式匹配【中等】","link":"/notes/1023. 驼峰式匹配【中等】/README"},{"text":"⏰ 1024. 视频拼接【中等】","link":"/notes/1024. 视频拼接【中等】/README"},{"text":"⏰ 1025. 除数博弈【简单】","link":"/notes/1025. 除数博弈【简单】/README"},{"text":"⏰ 1026. 节点与其祖先之间的最大差值【中等】","link":"/notes/1026. 节点与其祖先之间的最大差值【中等】/README"},{"text":"⏰ 1027. 最长等差数列【中等】","link":"/notes/1027. 最长等差数列【中等】/README"},{"text":"⏰ 1028. 从先序遍历还原二叉树【困难】","link":"/notes/1028. 从先序遍历还原二叉树【困难】/README"},{"text":"⏰ 1029. 两地调度【中等】","link":"/notes/1029. 两地调度【中等】/README"},{"text":"⏰ 1030. 距离顺序排列矩阵单元格【简单】","link":"/notes/1030. 距离顺序排列矩阵单元格【简单】/README"},{"text":"⏰ 1031. 两个非重叠子数组的最大和【中等】","link":"/notes/1031. 两个非重叠子数组的最大和【中等】/README"},{"text":"⏰ 1032. 字符流【困难】","link":"/notes/1032. 字符流【困难】/README"},{"text":"⏰ 1033. 移动石子直到连续【中等】","link":"/notes/1033. 移动石子直到连续【中等】/README"},{"text":"⏰ 1034. 边界着色【中等】","link":"/notes/1034. 边界着色【中等】/README"},{"text":"⏰ 1035. 不相交的线【中等】","link":"/notes/1035. 不相交的线【中等】/README"},{"text":"⏰ 1036. 逃离大迷宫【困难】","link":"/notes/1036. 逃离大迷宫【困难】/README"},{"text":"⏰ 1037. 有效的回旋镖【简单】","link":"/notes/1037. 有效的回旋镖【简单】/README"},{"text":"⏰ 1038. 从二叉搜索树到更大和树【中等】","link":"/notes/1038. 从二叉搜索树到更大和树【中等】/README"},{"text":"⏰ 1039. 多边形三角剖分的最低得分【中等】","link":"/notes/1039. 多边形三角剖分的最低得分【中等】/README"},{"text":"⏰ 1040. 移动石子直到连续 II【中等】","link":"/notes/1040. 移动石子直到连续 II【中等】/README"},{"text":"⏰ 1041. 困于环中的机器人【中等】","link":"/notes/1041. 困于环中的机器人【中等】/README"},{"text":"⏰ 1042. 不邻接植花【中等】","link":"/notes/1042. 不邻接植花【中等】/README"},{"text":"⏰ 1043. 分隔数组以得到最大和【中等】","link":"/notes/1043. 分隔数组以得到最大和【中等】/README"},{"text":"⏰ 1044. 最长重复子串【困难】","link":"/notes/1044. 最长重复子串【困难】/README"},{"text":"⏰ 1045. 买下所有产品的客户【中等】","link":"/notes/1045. 买下所有产品的客户【中等】/README"},{"text":"⏰ 1046. 最后一块石头的重量【简单】","link":"/notes/1046. 最后一块石头的重量【简单】/README"},{"text":"⏰ 1047. 删除字符串中的所有相邻重复项【简单】","link":"/notes/1047. 删除字符串中的所有相邻重复项【简单】/README"},{"text":"⏰ 1048. 最长字符串链【中等】","link":"/notes/1048. 最长字符串链【中等】/README"},{"text":"⏰ 1049. 最后一块石头的重量 II【中等】","link":"/notes/1049. 最后一块石头的重量 II【中等】/README"},{"text":"⏰ 1050. 合作过至少三次的演员和导演【简单】","link":"/notes/1050. 合作过至少三次的演员和导演【简单】/README"},{"text":"⏰ 1051. 高度检查器【简单】","link":"/notes/1051. 高度检查器【简单】/README"},{"text":"⏰ 1052. 爱生气的书店老板【中等】","link":"/notes/1052. 爱生气的书店老板【中等】/README"},{"text":"⏰ 1053. 交换一次的先前排列【中等】","link":"/notes/1053. 交换一次的先前排列【中等】/README"},{"text":"⏰ 1054. 距离相等的条形码【中等】","link":"/notes/1054. 距离相等的条形码【中等】/README"},{"text":"⏰ 1055. 形成字符串的最短路径【中等】","link":"/notes/1055. 形成字符串的最短路径【中等】/README"},{"text":"⏰ 1056. 易混淆数【简单】","link":"/notes/1056. 易混淆数【简单】/README"},{"text":"⏰ 1057. 校园自行车分配【中等】","link":"/notes/1057. 校园自行车分配【中等】/README"},{"text":"⏰ 1058. 最小化舍入误差以满足目标【中等】","link":"/notes/1058. 最小化舍入误差以满足目标【中等】/README"},{"text":"⏰ 1059. 从始点到终点的所有路径【中等】","link":"/notes/1059. 从始点到终点的所有路径【中等】/README"},{"text":"⏰ 1060. 有序数组中的缺失元素【中等】","link":"/notes/1060. 有序数组中的缺失元素【中等】/README"},{"text":"⏰ 1061. 按字典序排列最小的等效字符串【中等】","link":"/notes/1061. 按字典序排列最小的等效字符串【中等】/README"},{"text":"⏰ 1062. 最长重复子串【中等】","link":"/notes/1062. 最长重复子串【中等】/README"},{"text":"⏰ 1063. 有效子数组的数目【困难】","link":"/notes/1063. 有效子数组的数目【困难】/README"},{"text":"⏰ 1064. 不动点【简单】","link":"/notes/1064. 不动点【简单】/README"},{"text":"⏰ 1065. 字符串的索引对【简单】","link":"/notes/1065. 字符串的索引对【简单】/README"},{"text":"⏰ 1066. 校园自行车分配 II【中等】","link":"/notes/1066. 校园自行车分配 II【中等】/README"},{"text":"⏰ 1067. 范围内的数字计数【困难】","link":"/notes/1067. 范围内的数字计数【困难】/README"},{"text":"⏰ 1068. 产品销售分析 I【简单】","link":"/notes/1068. 产品销售分析 I【简单】/README"},{"text":"⏰ 1069. 产品销售分析 II【简单】","link":"/notes/1069. 产品销售分析 II【简单】/README"},{"text":"⏰ 1070. 产品销售分析 III【中等】","link":"/notes/1070. 产品销售分析 III【中等】/README"},{"text":"⏰ 1071. 字符串的最大公因子【简单】","link":"/notes/1071. 字符串的最大公因子【简单】/README"},{"text":"⏰ 1072. 按列翻转得到最大值等行数【中等】","link":"/notes/1072. 按列翻转得到最大值等行数【中等】/README"},{"text":"⏰ 1073. 负二进制数相加【中等】","link":"/notes/1073. 负二进制数相加【中等】/README"},{"text":"⏰ 1074. 元素和为目标值的子矩阵数量【困难】","link":"/notes/1074. 元素和为目标值的子矩阵数量【困难】/README"},{"text":"⏰ 1075. 项目员工 I【简单】","link":"/notes/1075. 项目员工 I【简单】/README"},{"text":"⏰ 1076. 项目员工II【简单】","link":"/notes/1076. 项目员工II【简单】/README"},{"text":"⏰ 1077. 项目员工 III【中等】","link":"/notes/1077. 项目员工 III【中等】/README"},{"text":"⏰ 1078. Bigram 分词【简单】","link":"/notes/1078. Bigram 分词【简单】/README"},{"text":"⏰ 1079. 活字印刷【中等】","link":"/notes/1079. 活字印刷【中等】/README"},{"text":"⏰ 1080. 根到叶路径上的不足节点【中等】","link":"/notes/1080. 根到叶路径上的不足节点【中等】/README"},{"text":"⏰ 1081. 不同字符的最小子序列【中等】","link":"/notes/1081. 不同字符的最小子序列【中等】/README"},{"text":"⏰ 1082. 销售分析 I【简单】","link":"/notes/1082. 销售分析 I【简单】/README"},{"text":"⏰ 1083. 销售分析 II【简单】","link":"/notes/1083. 销售分析 II【简单】/README"},{"text":"⏰ 1084. 销售分析 III【简单】","link":"/notes/1084. 销售分析 III【简单】/README"},{"text":"⏰ 1085. 最小元素各数位之和【简单】","link":"/notes/1085. 最小元素各数位之和【简单】/README"},{"text":"⏰ 1086. 前五科的均分【简单】","link":"/notes/1086. 前五科的均分【简单】/README"},{"text":"⏰ 1087. 花括号展开【中等】","link":"/notes/1087. 花括号展开【中等】/README"},{"text":"⏰ 1088. 易混淆数 II【困难】","link":"/notes/1088. 易混淆数 II【困难】/README"},{"text":"⏰ 1089. 复写零【简单】","link":"/notes/1089. 复写零【简单】/README"},{"text":"⏰ 1090. 受标签影响的最大值【中等】","link":"/notes/1090. 受标签影响的最大值【中等】/README"},{"text":"⏰ 1091. 二进制矩阵中的最短路径【中等】","link":"/notes/1091. 二进制矩阵中的最短路径【中等】/README"},{"text":"⏰ 1092. 最短公共超序列【困难】","link":"/notes/1092. 最短公共超序列【困难】/README"},{"text":"⏰ 1093. 大样本统计【中等】","link":"/notes/1093. 大样本统计【中等】/README"},{"text":"⏰ 1094. 拼车【中等】","link":"/notes/1094. 拼车【中等】/README"},{"text":"⏰ 1095. 山脉数组中查找目标值【困难】","link":"/notes/1095. 山脉数组中查找目标值【困难】/README"},{"text":"⏰ 1096. 花括号展开 II【困难】","link":"/notes/1096. 花括号展开 II【困难】/README"},{"text":"⏰ 1097. 游戏玩法分析 V【困难】","link":"/notes/1097. 游戏玩法分析 V【困难】/README"},{"text":"⏰ 1098. 小众书籍【中等】","link":"/notes/1098. 小众书籍【中等】/README"},{"text":"⏰ 1099. 小于 K 的两数之和【简单】","link":"/notes/1099. 小于 K 的两数之和【简单】/README"},{"text":"⏰ 1100. 长度为 K 的无重复字符子串【中等】","link":"/notes/1100. 长度为 K 的无重复字符子串【中等】/README"}]},{"text":"13. 1101~1200","collapsed":true,"items":[{"text":"⏰ 1101. 彼此熟识的最早时间【中等】","link":"/notes/1101. 彼此熟识的最早时间【中等】/README"},{"text":"⏰ 1102. 得分最高的路径【中等】","link":"/notes/1102. 得分最高的路径【中等】/README"},{"text":"⏰ 1103. 分糖果 II【简单】","link":"/notes/1103. 分糖果 II【简单】/README"},{"text":"⏰ 1104. 二叉树寻路【中等】","link":"/notes/1104. 二叉树寻路【中等】/README"},{"text":"⏰ 1105. 填充书架【中等】","link":"/notes/1105. 填充书架【中等】/README"},{"text":"⏰ 1106. 解析布尔表达式【困难】","link":"/notes/1106. 解析布尔表达式【困难】/README"},{"text":"⏰ 1107. 每日新用户统计【中等】","link":"/notes/1107. 每日新用户统计【中等】/README"},{"text":"⏰ 1108. IP 地址无效化【简单】","link":"/notes/1108. IP 地址无效化【简单】/README"},{"text":"⏰ 1109. 航班预订统计【中等】","link":"/notes/1109. 航班预订统计【中等】/README"},{"text":"⏰ 1110. 删点成林【中等】","link":"/notes/1110. 删点成林【中等】/README"},{"text":"⏰ 1111. 有效括号的嵌套深度【中等】","link":"/notes/1111. 有效括号的嵌套深度【中等】/README"},{"text":"⏰ 1112. 每位学生的最高成绩【中等】","link":"/notes/1112. 每位学生的最高成绩【中等】/README"},{"text":"⏰ 1113. 报告的记录【简单】","link":"/notes/1113. 报告的记录【简单】/README"},{"text":"⏰ 1114. 按序打印【简单】","link":"/notes/1114. 按序打印【简单】/README"},{"text":"⏰ 1115. 交替打印 FooBar【中等】","link":"/notes/1115. 交替打印 FooBar【中等】/README"},{"text":"⏰ 1116. 打印零与奇偶数【中等】","link":"/notes/1116. 打印零与奇偶数【中等】/README"},{"text":"⏰ 1117. H2O 生成【中等】","link":"/notes/1117. H2O 生成【中等】/README"},{"text":"⏰ 1118. 一月有多少天【简单】","link":"/notes/1118. 一月有多少天【简单】/README"},{"text":"⏰ 1119. 删去字符串中的元音【简单】","link":"/notes/1119. 删去字符串中的元音【简单】/README"},{"text":"⏰ 1120. 子树的最大平均值【中等】","link":"/notes/1120. 子树的最大平均值【中等】/README"},{"text":"⏰ 1121. 将数组分成几个递增序列【困难】","link":"/notes/1121. 将数组分成几个递增序列【困难】/README"},{"text":"⏰ 1122. 数组的相对排序【简单】","link":"/notes/1122. 数组的相对排序【简单】/README"},{"text":"⏰ 1123. 最深叶节点的最近公共祖先【中等】","link":"/notes/1123. 最深叶节点的最近公共祖先【中等】/README"},{"text":"⏰ 1124. 表现良好的最长时间段【中等】","link":"/notes/1124. 表现良好的最长时间段【中等】/README"},{"text":"⏰ 1125. 最小的必要团队【困难】","link":"/notes/1125. 最小的必要团队【困难】/README"},{"text":"⏰ 1126. 查询活跃业务【中等】","link":"/notes/1126. 查询活跃业务【中等】/README"},{"text":"⏰ 1127. 用户购买平台【困难】","link":"/notes/1127. 用户购买平台【困难】/README"},{"text":"⏰ 1128. 等价多米诺骨牌对的数量【简单】","link":"/notes/1128. 等价多米诺骨牌对的数量【简单】/README"},{"text":"⏰ 1129. 颜色交替的最短路径【中等】","link":"/notes/1129. 颜色交替的最短路径【中等】/README"},{"text":"⏰ 1130. 叶值的最小代价生成树【中等】","link":"/notes/1130. 叶值的最小代价生成树【中等】/README"},{"text":"⏰ 1131. 绝对值表达式的最大值【中等】","link":"/notes/1131. 绝对值表达式的最大值【中等】/README"},{"text":"⏰ 1132. 报告的记录 II【中等】","link":"/notes/1132. 报告的记录 II【中等】/README"},{"text":"⏰ 1133. 最大唯一数【简单】","link":"/notes/1133. 最大唯一数【简单】/README"},{"text":"⏰ 1134. 阿姆斯特朗数【简单】","link":"/notes/1134. 阿姆斯特朗数【简单】/README"},{"text":"⏰ 1135. 最低成本连通所有城市【中等】","link":"/notes/1135. 最低成本连通所有城市【中等】/README"},{"text":"⏰ 1136. 并行课程【中等】","link":"/notes/1136. 并行课程【中等】/README"},{"text":"⏰ 1137. 第 N 个泰波那契数【简单】","link":"/notes/1137. 第 N 个泰波那契数【简单】/README"},{"text":"⏰ 1138. 字母板上的路径【中等】","link":"/notes/1138. 字母板上的路径【中等】/README"},{"text":"⏰ 1139. 最大的以 1 为边界的正方形【中等】","link":"/notes/1139. 最大的以 1 为边界的正方形【中等】/README"},{"text":"⏰ 1140. 石子游戏 II【中等】","link":"/notes/1140. 石子游戏 II【中等】/README"},{"text":"⏰ 1141. 查询近30天活跃用户数【简单】","link":"/notes/1141. 查询近30天活跃用户数【简单】/README"},{"text":"⏰ 1142. 过去30天的用户活动 II【简单】","link":"/notes/1142. 过去30天的用户活动 II【简单】/README"},{"text":"⏰ 1143. 最长公共子序列【中等】","link":"/notes/1143. 最长公共子序列【中等】/README"},{"text":"⏰ 1144. 递减元素使数组呈锯齿状【中等】","link":"/notes/1144. 递减元素使数组呈锯齿状【中等】/README"},{"text":"⏰ 1145. 二叉树着色游戏【中等】","link":"/notes/1145. 二叉树着色游戏【中等】/README"},{"text":"⏰ 1146. 快照数组【中等】","link":"/notes/1146. 快照数组【中等】/README"},{"text":"⏰ 1147. 段式回文【困难】","link":"/notes/1147. 段式回文【困难】/README"},{"text":"⏰ 1148. 文章浏览 I【简单】","link":"/notes/1148. 文章浏览 I【简单】/README"},{"text":"⏰ 1149. 文章浏览 II【中等】","link":"/notes/1149. 文章浏览 II【中等】/README"},{"text":"⏰ 1150. 检查一个数是否在数组中占绝大多数【简单】","link":"/notes/1150. 检查一个数是否在数组中占绝大多数【简单】/README"},{"text":"⏰ 1151. 最少交换次数来组合所有的 1【中等】","link":"/notes/1151. 最少交换次数来组合所有的 1【中等】/README"},{"text":"⏰ 1152. 用户网站访问行为分析【中等】","link":"/notes/1152. 用户网站访问行为分析【中等】/README"},{"text":"⏰ 1153. 字符串转化【困难】","link":"/notes/1153. 字符串转化【困难】/README"},{"text":"⏰ 1154. 一年中的第几天【简单】","link":"/notes/1154. 一年中的第几天【简单】/README"},{"text":"⏰ 1155. 掷骰子等于目标和的方法数【中等】","link":"/notes/1155. 掷骰子等于目标和的方法数【中等】/README"},{"text":"⏰ 1156. 单字符重复子串的最大长度【中等】","link":"/notes/1156. 单字符重复子串的最大长度【中等】/README"},{"text":"⏰ 1157. 子数组中占绝大多数的元素【困难】","link":"/notes/1157. 子数组中占绝大多数的元素【困难】/README"},{"text":"⏰ 1158. 市场分析 I【中等】","link":"/notes/1158. 市场分析 I【中等】/README"},{"text":"⏰ 1159. 市场分析 II【困难】","link":"/notes/1159. 市场分析 II【困难】/README"},{"text":"⏰ 1160. 拼写单词【简单】","link":"/notes/1160. 拼写单词【简单】/README"},{"text":"⏰ 1161. 最大层内元素和【中等】","link":"/notes/1161. 最大层内元素和【中等】/README"},{"text":"⏰ 1162. 地图分析【中等】","link":"/notes/1162. 地图分析【中等】/README"},{"text":"⏰ 1163. 按字典序排在最后的子串【困难】","link":"/notes/1163. 按字典序排在最后的子串【困难】/README"},{"text":"⏰ 1164. 指定日期的产品价格【中等】","link":"/notes/1164. 指定日期的产品价格【中等】/README"},{"text":"⏰ 1165. 单行键盘【简单】","link":"/notes/1165. 单行键盘【简单】/README"},{"text":"⏰ 1166. 设计文件系统【中等】","link":"/notes/1166. 设计文件系统【中等】/README"},{"text":"⏰ 1167. 连接木棍的最低费用【中等】","link":"/notes/1167. 连接木棍的最低费用【中等】/README"},{"text":"⏰ 1168. 水资源分配优化【困难】","link":"/notes/1168. 水资源分配优化【困难】/README"},{"text":"⏰ 1169. 查询无效交易【中等】","link":"/notes/1169. 查询无效交易【中等】/README"},{"text":"⏰ 1170. 比较字符串最小字母出现频次【中等】","link":"/notes/1170. 比较字符串最小字母出现频次【中等】/README"},{"text":"⏰ 1171. 从链表中删去总和值为零的连续节点【中等】","link":"/notes/1171. 从链表中删去总和值为零的连续节点【中等】/README"},{"text":"⏰ 1172. 餐盘栈【困难】","link":"/notes/1172. 餐盘栈【困难】/README"},{"text":"⏰ 1173. 即时食物配送 I【简单】","link":"/notes/1173. 即时食物配送 I【简单】/README"},{"text":"⏰ 1174. 即时食物配送 II【中等】","link":"/notes/1174. 即时食物配送 II【中等】/README"},{"text":"⏰ 1175. 质数排列【简单】","link":"/notes/1175. 质数排列【简单】/README"},{"text":"⏰ 1176. 健身计划评估【简单】","link":"/notes/1176. 健身计划评估【简单】/README"},{"text":"⏰ 1177. 构建回文串检测【中等】","link":"/notes/1177. 构建回文串检测【中等】/README"},{"text":"⏰ 1178. 猜字谜【困难】","link":"/notes/1178. 猜字谜【困难】/README"},{"text":"⏰ 1179. 重新格式化部门表【简单】","link":"/notes/1179. 重新格式化部门表【简单】/README"},{"text":"⏰ 1180. 统计只含单一字母的子串【简单】","link":"/notes/1180. 统计只含单一字母的子串【简单】/README"},{"text":"⏰ 1181. 前后拼接【中等】","link":"/notes/1181. 前后拼接【中等】/README"},{"text":"⏰ 1182. 与目标颜色间的最短距离【中等】","link":"/notes/1182. 与目标颜色间的最短距离【中等】/README"},{"text":"⏰ 1183. 矩阵中 1 的最大数量【困难】","link":"/notes/1183. 矩阵中 1 的最大数量【困难】/README"},{"text":"⏰ 1184. 公交站间的距离【简单】","link":"/notes/1184. 公交站间的距离【简单】/README"},{"text":"⏰ 1185. 一周中的第几天【简单】","link":"/notes/1185. 一周中的第几天【简单】/README"},{"text":"⏰ 1186. 删除一次得到子数组最大和【中等】","link":"/notes/1186. 删除一次得到子数组最大和【中等】/README"},{"text":"⏰ 1187. 使数组严格递增【困难】","link":"/notes/1187. 使数组严格递增【困难】/README"},{"text":"⏰ 1188. 设计有限阻塞队列【中等】","link":"/notes/1188. 设计有限阻塞队列【中等】/README"},{"text":"⏰ 1189. “气球” 的最大数量【简单】","link":"/notes/1189. “气球” 的最大数量【简单】/README"},{"text":"⏰ 1190. 反转每对括号间的子串【中等】","link":"/notes/1190. 反转每对括号间的子串【中等】/README"},{"text":"⏰ 1191. K 次串联后最大子数组之和【中等】","link":"/notes/1191. K 次串联后最大子数组之和【中等】/README"},{"text":"⏰ 1192. 查找集群内的关键连接【困难】","link":"/notes/1192. 查找集群内的关键连接【困难】/README"},{"text":"⏰ 1193. 每月交易 I【中等】","link":"/notes/1193. 每月交易 I【中等】/README"},{"text":"⏰ 1194. 锦标赛优胜者【困难】","link":"/notes/1194. 锦标赛优胜者【困难】/README"},{"text":"⏰ 1195. 交替打印字符串【中等】","link":"/notes/1195. 交替打印字符串【中等】/README"},{"text":"⏰ 1196. 最多可以买到的苹果数量【简单】","link":"/notes/1196. 最多可以买到的苹果数量【简单】/README"},{"text":"⏰ 1197. 进击的骑士【中等】","link":"/notes/1197. 进击的骑士【中等】/README"},{"text":"⏰ 1198. 找出所有行中最小公共元素【中等】","link":"/notes/1198. 找出所有行中最小公共元素【中等】/README"},{"text":"⏰ 1199. 建造街区的最短时间【困难】","link":"/notes/1199. 建造街区的最短时间【困难】/README"},{"text":"⏰ 1200. 最小绝对差【简单】","link":"/notes/1200. 最小绝对差【简单】/README"}]},{"text":"14. 1201~1300","collapsed":true,"items":[{"text":"⏰ 1201. 丑数 III【中等】","link":"/notes/1201. 丑数 III【中等】/README"},{"text":"⏰ 1202. 交换字符串中的元素【中等】","link":"/notes/1202. 交换字符串中的元素【中等】/README"},{"text":"⏰ 1203. 项目管理【困难】","link":"/notes/1203. 项目管理【困难】/README"},{"text":"⏰ 1204. 最后一个能进入巴士的人【中等】","link":"/notes/1204. 最后一个能进入巴士的人【中等】/README"},{"text":"⏰ 1205. 每月交易 II【中等】","link":"/notes/1205. 每月交易 II【中等】/README"},{"text":"⏰ 1206. 设计跳表【困难】","link":"/notes/1206. 设计跳表【困难】/README"},{"text":"⏰ 1207. 独一无二的出现次数【简单】","link":"/notes/1207. 独一无二的出现次数【简单】/README"},{"text":"⏰ 1208. 尽可能使字符串相等【中等】","link":"/notes/1208. 尽可能使字符串相等【中等】/README"},{"text":"⏰ 1209. 删除字符串中的所有相邻重复项 II【中等】","link":"/notes/1209. 删除字符串中的所有相邻重复项 II【中等】/README"},{"text":"⏰ 1210. 穿过迷宫的最少移动次数【困难】","link":"/notes/1210. 穿过迷宫的最少移动次数【困难】/README"},{"text":"⏰ 1211. 查询结果的质量和占比【简单】","link":"/notes/1211. 查询结果的质量和占比【简单】/README"},{"text":"⏰ 1212. 查询球队积分【中等】","link":"/notes/1212. 查询球队积分【中等】/README"},{"text":"⏰ 1213. 三个有序数组的交集【简单】","link":"/notes/1213. 三个有序数组的交集【简单】/README"},{"text":"⏰ 1214. 查找两棵二叉搜索树之和【中等】","link":"/notes/1214. 查找两棵二叉搜索树之和【中等】/README"},{"text":"⏰ 1215. 步进数【中等】","link":"/notes/1215. 步进数【中等】/README"},{"text":"⏰ 1216. 验证回文串 III【困难】","link":"/notes/1216. 验证回文串 III【困难】/README"},{"text":"⏰ 1217. 玩筹码【简单】","link":"/notes/1217. 玩筹码【简单】/README"},{"text":"⏰ 1218. 最长定差子序列【中等】","link":"/notes/1218. 最长定差子序列【中等】/README"},{"text":"⏰ 1219. 黄金矿工【中等】","link":"/notes/1219. 黄金矿工【中等】/README"},{"text":"⏰ 1220. 统计元音字母序列的数目【困难】","link":"/notes/1220. 统计元音字母序列的数目【困难】/README"},{"text":"⏰ 1221. 分割平衡字符串【简单】","link":"/notes/1221. 分割平衡字符串【简单】/README"},{"text":"⏰ 1222. 可以攻击国王的皇后【中等】","link":"/notes/1222. 可以攻击国王的皇后【中等】/README"},{"text":"⏰ 1223. 掷骰子模拟【困难】","link":"/notes/1223. 掷骰子模拟【困难】/README"},{"text":"⏰ 1224. 最大相等频率【困难】","link":"/notes/1224. 最大相等频率【困难】/README"},{"text":"⏰ 1225. 报告系统状态的连续日期【困难】","link":"/notes/1225. 报告系统状态的连续日期【困难】/README"},{"text":"⏰ 1226. 哲学家进餐【中等】","link":"/notes/1226. 哲学家进餐【中等】/README"},{"text":"⏰ 1227. 飞机座位分配概率【中等】","link":"/notes/1227. 飞机座位分配概率【中等】/README"},{"text":"⏰ 1228. 等差数列中缺失的数字【简单】","link":"/notes/1228. 等差数列中缺失的数字【简单】/README"},{"text":"⏰ 1229. 安排会议日程【中等】","link":"/notes/1229. 安排会议日程【中等】/README"},{"text":"⏰ 1230. 抛掷硬币【中等】","link":"/notes/1230. 抛掷硬币【中等】/README"},{"text":"⏰ 1231. 分享巧克力【困难】","link":"/notes/1231. 分享巧克力【困难】/README"},{"text":"⏰ 1232. 缀点成线【简单】","link":"/notes/1232. 缀点成线【简单】/README"},{"text":"⏰ 1233. 删除子文件夹【中等】","link":"/notes/1233. 删除子文件夹【中等】/README"},{"text":"⏰ 1234. 替换子串得到平衡字符串【中等】","link":"/notes/1234. 替换子串得到平衡字符串【中等】/README"},{"text":"⏰ 1235. 规划兼职工作【困难】","link":"/notes/1235. 规划兼职工作【困难】/README"},{"text":"⏰ 1236. 网络爬虫【中等】","link":"/notes/1236. 网络爬虫【中等】/README"},{"text":"⏰ 1237. 找出给定方程的正整数解【中等】","link":"/notes/1237. 找出给定方程的正整数解【中等】/README"},{"text":"⏰ 1238. 循环码排列【中等】","link":"/notes/1238. 循环码排列【中等】/README"},{"text":"⏰ 1239. 串联字符串的最大长度【中等】","link":"/notes/1239. 串联字符串的最大长度【中等】/README"},{"text":"⏰ 1240. 铺瓷砖【困难】","link":"/notes/1240. 铺瓷砖【困难】/README"},{"text":"⏰ 1241. 每个帖子的评论数【简单】","link":"/notes/1241. 每个帖子的评论数【简单】/README"},{"text":"⏰ 1242. 多线程网页爬虫【中等】","link":"/notes/1242. 多线程网页爬虫【中等】/README"},{"text":"⏰ 1243. 数组变换【简单】","link":"/notes/1243. 数组变换【简单】/README"},{"text":"⏰ 1244. 力扣排行榜【中等】","link":"/notes/1244. 力扣排行榜【中等】/README"},{"text":"⏰ 1245. 树的直径【中等】","link":"/notes/1245. 树的直径【中等】/README"},{"text":"⏰ 1246. 删除回文子数组【困难】","link":"/notes/1246. 删除回文子数组【困难】/README"},{"text":"⏰ 1247. 交换字符使得字符串相同【中等】","link":"/notes/1247. 交换字符使得字符串相同【中等】/README"},{"text":"⏰ 1248. 统计「优美子数组」【中等】","link":"/notes/1248. 统计「优美子数组」【中等】/README"},{"text":"⏰ 1249. 移除无效的括号【中等】","link":"/notes/1249. 移除无效的括号【中等】/README"},{"text":"⏰ 1250. 检查「好数组」【困难】","link":"/notes/1250. 检查「好数组」【困难】/README"},{"text":"⏰ 1251. 平均售价【简单】","link":"/notes/1251. 平均售价【简单】/README"},{"text":"⏰ 1252. 奇数值单元格的数目【简单】","link":"/notes/1252. 奇数值单元格的数目【简单】/README"},{"text":"⏰ 1253. 重构 2 行二进制矩阵【中等】","link":"/notes/1253. 重构 2 行二进制矩阵【中等】/README"},{"text":"⏰ 1254. 统计封闭岛屿的数目【中等】","link":"/notes/1254. 统计封闭岛屿的数目【中等】/README"},{"text":"⏰ 1255. 得分最高的单词集合【困难】","link":"/notes/1255. 得分最高的单词集合【困难】/README"},{"text":"⏰ 1256. 加密数字【中等】","link":"/notes/1256. 加密数字【中等】/README"},{"text":"⏰ 1257. 最小公共区域【中等】","link":"/notes/1257. 最小公共区域【中等】/README"},{"text":"⏰ 1258. 近义词句子【中等】","link":"/notes/1258. 近义词句子【中等】/README"},{"text":"⏰ 1259. 不相交的握手【困难】","link":"/notes/1259. 不相交的握手【困难】/README"},{"text":"⏰ 1260. 二维网格迁移【简单】","link":"/notes/1260. 二维网格迁移【简单】/README"},{"text":"⏰ 1261. 在受污染的二叉树中查找元素【中等】","link":"/notes/1261. 在受污染的二叉树中查找元素【中等】/README"},{"text":"⏰ 1262. 可被三整除的最大和【中等】","link":"/notes/1262. 可被三整除的最大和【中等】/README"},{"text":"⏰ 1263. 推箱子【困难】","link":"/notes/1263. 推箱子【困难】/README"},{"text":"⏰ 1264. 页面推荐【中等】","link":"/notes/1264. 页面推荐【中等】/README"},{"text":"⏰ 1265. 逆序打印不可变链表【中等】","link":"/notes/1265. 逆序打印不可变链表【中等】/README"},{"text":"⏰ 1266. 访问所有点的最小时间【简单】","link":"/notes/1266. 访问所有点的最小时间【简单】/README"},{"text":"⏰ 1267. 统计参与通信的服务器【中等】","link":"/notes/1267. 统计参与通信的服务器【中等】/README"},{"text":"⏰ 1268. 搜索推荐系统【中等】","link":"/notes/1268. 搜索推荐系统【中等】/README"},{"text":"⏰ 1269. 停在原地的方案数【困难】","link":"/notes/1269. 停在原地的方案数【困难】/README"},{"text":"⏰ 1270. 向公司 CEO 汇报工作的所有人【中等】","link":"/notes/1270. 向公司 CEO 汇报工作的所有人【中等】/README"},{"text":"⏰ 1271. 十六进制魔术数字【简单】","link":"/notes/1271. 十六进制魔术数字【简单】/README"},{"text":"⏰ 1272. 删除区间【中等】","link":"/notes/1272. 删除区间【中等】/README"},{"text":"⏰ 1273. 删除树节点【中等】","link":"/notes/1273. 删除树节点【中等】/README"},{"text":"⏰ 1274. 矩形内船只的数目【困难】","link":"/notes/1274. 矩形内船只的数目【困难】/README"},{"text":"⏰ 1275. 找出井字棋的获胜者【简单】","link":"/notes/1275. 找出井字棋的获胜者【简单】/README"},{"text":"⏰ 1276. 不浪费原料的汉堡制作方案【中等】","link":"/notes/1276. 不浪费原料的汉堡制作方案【中等】/README"},{"text":"⏰ 1277. 统计全为 1 的正方形子矩阵【中等】","link":"/notes/1277. 统计全为 1 的正方形子矩阵【中等】/README"},{"text":"⏰ 1278. 分割回文串 III【困难】","link":"/notes/1278. 分割回文串 III【困难】/README"},{"text":"⏰ 1279. 红绿灯路口【简单】","link":"/notes/1279. 红绿灯路口【简单】/README"},{"text":"⏰ 1280. 学生们参加各科测试的次数【简单】","link":"/notes/1280. 学生们参加各科测试的次数【简单】/README"},{"text":"⏰ 1281. 整数的各位积和之差【简单】","link":"/notes/1281. 整数的各位积和之差【简单】/README"},{"text":"⏰ 1282. 用户分组【中等】","link":"/notes/1282. 用户分组【中等】/README"},{"text":"⏰ 1283. 使结果不超过阈值的最小除数【中等】","link":"/notes/1283. 使结果不超过阈值的最小除数【中等】/README"},{"text":"⏰ 1284. 转化为全零矩阵的最少反转次数【困难】","link":"/notes/1284. 转化为全零矩阵的最少反转次数【困难】/README"},{"text":"⏰ 1285. 找到连续区间的开始和结束数字【中等】","link":"/notes/1285. 找到连续区间的开始和结束数字【中等】/README"},{"text":"⏰ 1286. 字母组合迭代器【中等】","link":"/notes/1286. 字母组合迭代器【中等】/README"},{"text":"⏰ 1287. 有序数组中出现次数超过百分之25的元素【简单】","link":"/notes/1287. 有序数组中出现次数超过百分之25的元素【简单】/README"},{"text":"⏰ 1288. 删除被覆盖区间【中等】","link":"/notes/1288. 删除被覆盖区间【中等】/README"},{"text":"⏰ 1289. 下降路径最小和 II【困难】","link":"/notes/1289. 下降路径最小和 II【困难】/README"},{"text":"⏰ 1290. 二进制链表转整数【简单】","link":"/notes/1290. 二进制链表转整数【简单】/README"},{"text":"⏰ 1291. 顺次数【中等】","link":"/notes/1291. 顺次数【中等】/README"},{"text":"⏰ 1292. 元素和小于等于阈值的正方形的最大边长【中等】","link":"/notes/1292. 元素和小于等于阈值的正方形的最大边长【中等】/README"},{"text":"⏰ 1293. 网格中的最短路径【困难】","link":"/notes/1293. 网格中的最短路径【困难】/README"},{"text":"⏰ 1294. 不同国家的天气类型【简单】","link":"/notes/1294. 不同国家的天气类型【简单】/README"},{"text":"⏰ 1295. 统计位数为偶数的数字【简单】","link":"/notes/1295. 统计位数为偶数的数字【简单】/README"},{"text":"⏰ 1296. 划分数组为连续数字的集合【中等】","link":"/notes/1296. 划分数组为连续数字的集合【中等】/README"},{"text":"⏰ 1297. 子串的最大出现次数【中等】","link":"/notes/1297. 子串的最大出现次数【中等】/README"},{"text":"⏰ 1298. 你能从盒子里获得的最大糖果数【困难】","link":"/notes/1298. 你能从盒子里获得的最大糖果数【困难】/README"},{"text":"⏰ 1299. 将每个元素替换为右侧最大元素【简单】","link":"/notes/1299. 将每个元素替换为右侧最大元素【简单】/README"},{"text":"⏰ 1300. 转变数组后最接近目标值的数组和【中等】","link":"/notes/1300. 转变数组后最接近目标值的数组和【中等】/README"}]},{"text":"15. 1301~1400","collapsed":true,"items":[{"text":"⏰ 1301. 最大得分的路径数目【困难】","link":"/notes/1301. 最大得分的路径数目【困难】/README"},{"text":"⏰ 1302. 层数最深叶子节点的和【中等】","link":"/notes/1302. 层数最深叶子节点的和【中等】/README"},{"text":"⏰ 1303. 求团队人数【简单】","link":"/notes/1303. 求团队人数【简单】/README"},{"text":"⏰ 1304. 和为零的 N 个不同整数【简单】","link":"/notes/1304. 和为零的 N 个不同整数【简单】/README"},{"text":"⏰ 1305. 两棵二叉搜索树中的所有元素【中等】","link":"/notes/1305. 两棵二叉搜索树中的所有元素【中等】/README"},{"text":"⏰ 1306. 跳跃游戏 III【中等】","link":"/notes/1306. 跳跃游戏 III【中等】/README"},{"text":"⏰ 1307. 口算难题【困难】","link":"/notes/1307. 口算难题【困难】/README"},{"text":"⏰ 1308. 不同性别每日分数总计【中等】","link":"/notes/1308. 不同性别每日分数总计【中等】/README"},{"text":"⏰ 1309. 解码字母到整数映射【简单】","link":"/notes/1309. 解码字母到整数映射【简单】/README"},{"text":"⏰ 1310. 子数组异或查询【中等】","link":"/notes/1310. 子数组异或查询【中等】/README"},{"text":"⏰ 1311. 获取你好友已观看的视频【中等】","link":"/notes/1311. 获取你好友已观看的视频【中等】/README"},{"text":"⏰ 1312. 让字符串成为回文串的最少插入次数【困难】","link":"/notes/1312. 让字符串成为回文串的最少插入次数【困难】/README"},{"text":"⏰ 1313. 解压缩编码列表【简单】","link":"/notes/1313. 解压缩编码列表【简单】/README"},{"text":"⏰ 1314. 矩阵区域和【中等】","link":"/notes/1314. 矩阵区域和【中等】/README"},{"text":"⏰ 1315. 祖父节点值为偶数的节点和【中等】","link":"/notes/1315. 祖父节点值为偶数的节点和【中等】/README"},{"text":"⏰ 1316. 不同的循环子字符串【困难】","link":"/notes/1316. 不同的循环子字符串【困难】/README"},{"text":"⏰ 1317. 将整数转换为两个无零整数的和【简单】","link":"/notes/1317. 将整数转换为两个无零整数的和【简单】/README"},{"text":"⏰ 1318. 或运算的最小翻转次数【中等】","link":"/notes/1318. 或运算的最小翻转次数【中等】/README"},{"text":"⏰ 1319. 连通网络的操作次数【中等】","link":"/notes/1319. 连通网络的操作次数【中等】/README"},{"text":"⏰ 1320. 二指输入的的最小距离【困难】","link":"/notes/1320. 二指输入的的最小距离【困难】/README"},{"text":"⏰ 1321. 餐馆营业额变化增长【中等】","link":"/notes/1321. 餐馆营业额变化增长【中等】/README"},{"text":"⏰ 1322. 广告效果【简单】","link":"/notes/1322. 广告效果【简单】/README"},{"text":"⏰ 1323. 6 和 9 组成的最大数字【简单】","link":"/notes/1323. 6 和 9 组成的最大数字【简单】/README"},{"text":"⏰ 1324. 竖直打印单词【中等】","link":"/notes/1324. 竖直打印单词【中等】/README"},{"text":"⏰ 1325. 删除给定值的叶子节点【中等】","link":"/notes/1325. 删除给定值的叶子节点【中等】/README"},{"text":"⏰ 1326. 灌溉花园的最少水龙头数目【困难】","link":"/notes/1326. 灌溉花园的最少水龙头数目【困难】/README"},{"text":"⏰ 1327. 列出指定时间段内所有的下单产品【简单】","link":"/notes/1327. 列出指定时间段内所有的下单产品【简单】/README"},{"text":"⏰ 1328. 破坏回文串【中等】","link":"/notes/1328. 破坏回文串【中等】/README"},{"text":"⏰ 1329. 将矩阵按对角线排序【中等】","link":"/notes/1329. 将矩阵按对角线排序【中等】/README"},{"text":"⏰ 1330. 翻转子数组得到最大的数组值【困难】","link":"/notes/1330. 翻转子数组得到最大的数组值【困难】/README"},{"text":"⏰ 1331. 数组序号转换【简单】","link":"/notes/1331. 数组序号转换【简单】/README"},{"text":"⏰ 1332. 删除回文子序列【简单】","link":"/notes/1332. 删除回文子序列【简单】/README"},{"text":"⏰ 1333. 餐厅过滤器【中等】","link":"/notes/1333. 餐厅过滤器【中等】/README"},{"text":"⏰ 1334. 阈值距离内邻居最少的城市【中等】","link":"/notes/1334. 阈值距离内邻居最少的城市【中等】/README"},{"text":"⏰ 1335. 工作计划的最低难度【困难】","link":"/notes/1335. 工作计划的最低难度【困难】/README"},{"text":"⏰ 1336. 每次访问的交易次数【困难】","link":"/notes/1336. 每次访问的交易次数【困难】/README"},{"text":"⏰ 1337. 矩阵中战斗力最弱的 K 行【简单】","link":"/notes/1337. 矩阵中战斗力最弱的 K 行【简单】/README"},{"text":"⏰ 1338. 数组大小减半【中等】","link":"/notes/1338. 数组大小减半【中等】/README"},{"text":"⏰ 1339. 分裂二叉树的最大乘积【中等】","link":"/notes/1339. 分裂二叉树的最大乘积【中等】/README"},{"text":"⏰ 1340. 跳跃游戏 V【困难】","link":"/notes/1340. 跳跃游戏 V【困难】/README"},{"text":"⏰ 1341. 电影评分【中等】","link":"/notes/1341. 电影评分【中等】/README"},{"text":"⏰ 1342. 将数字变成 0 的操作次数【简单】","link":"/notes/1342. 将数字变成 0 的操作次数【简单】/README"},{"text":"⏰ 1343. 大小为 K 且平均值大于等于阈值的子数组数目【中等】","link":"/notes/1343. 大小为 K 且平均值大于等于阈值的子数组数目【中等】/README"},{"text":"⏰ 1344. 时钟指针的夹角【中等】","link":"/notes/1344. 时钟指针的夹角【中等】/README"},{"text":"⏰ 1345. 跳跃游戏 IV【困难】","link":"/notes/1345. 跳跃游戏 IV【困难】/README"},{"text":"⏰ 1346. 检查整数及其两倍数是否存在【简单】","link":"/notes/1346. 检查整数及其两倍数是否存在【简单】/README"},{"text":"⏰ 1347. 制造字母异位词的最小步骤数【中等】","link":"/notes/1347. 制造字母异位词的最小步骤数【中等】/README"},{"text":"⏰ 1348. 推文计数【中等】","link":"/notes/1348. 推文计数【中等】/README"},{"text":"⏰ 1349. 参加考试的最大学生数【困难】","link":"/notes/1349. 参加考试的最大学生数【困难】/README"},{"text":"⏰ 1350. 院系无效的学生【简单】","link":"/notes/1350. 院系无效的学生【简单】/README"},{"text":"⏰ 1351. 统计有序矩阵中的负数【简单】","link":"/notes/1351. 统计有序矩阵中的负数【简单】/README"},{"text":"⏰ 1352. 最后 K 个数的乘积【中等】","link":"/notes/1352. 最后 K 个数的乘积【中等】/README"},{"text":"⏰ 1353. 最多可以参加的会议数目【中等】","link":"/notes/1353. 最多可以参加的会议数目【中等】/README"},{"text":"⏰ 1354. 多次求和构造目标数组【困难】","link":"/notes/1354. 多次求和构造目标数组【困难】/README"},{"text":"⏰ 1355. 活动参与者【中等】","link":"/notes/1355. 活动参与者【中等】/README"},{"text":"⏰ 1356. 根据数字二进制下 1 的数目排序【简单】","link":"/notes/1356. 根据数字二进制下 1 的数目排序【简单】/README"},{"text":"⏰ 1357. 每隔 n 个顾客打折【中等】","link":"/notes/1357. 每隔 n 个顾客打折【中等】/README"},{"text":"⏰ 1358. 包含所有三种字符的子字符串数目【中等】","link":"/notes/1358. 包含所有三种字符的子字符串数目【中等】/README"},{"text":"⏰ 1359. 有效的快递序列数目【困难】","link":"/notes/1359. 有效的快递序列数目【困难】/README"},{"text":"⏰ 1360. 日期之间隔几天【简单】","link":"/notes/1360. 日期之间隔几天【简单】/README"},{"text":"⏰ 1361. 验证二叉树【中等】","link":"/notes/1361. 验证二叉树【中等】/README"},{"text":"⏰ 1362. 最接近的因数【中等】","link":"/notes/1362. 最接近的因数【中等】/README"},{"text":"⏰ 1363. 形成三的最大倍数【困难】","link":"/notes/1363. 形成三的最大倍数【困难】/README"},{"text":"⏰ 1364. 顾客的可信联系人数量【中等】","link":"/notes/1364. 顾客的可信联系人数量【中等】/README"},{"text":"⏰ 1365. 有多少小于当前数字的数字【简单】","link":"/notes/1365. 有多少小于当前数字的数字【简单】/README"},{"text":"⏰ 1366. 通过投票对团队排名【中等】","link":"/notes/1366. 通过投票对团队排名【中等】/README"},{"text":"⏰ 1367. 二叉树中的链表【中等】","link":"/notes/1367. 二叉树中的链表【中等】/README"},{"text":"⏰ 1368. 使网格图至少有一条有效路径的最小代价【困难】","link":"/notes/1368. 使网格图至少有一条有效路径的最小代价【困难】/README"},{"text":"⏰ 1369. 获取最近第二次的活动【困难】","link":"/notes/1369. 获取最近第二次的活动【困难】/README"},{"text":"⏰ 1370. 上升下降字符串【简单】","link":"/notes/1370. 上升下降字符串【简单】/README"},{"text":"⏰ 1371. 每个元音包含偶数次的最长子字符串【中等】","link":"/notes/1371. 每个元音包含偶数次的最长子字符串【中等】/README"},{"text":"⏰ 1372. 二叉树中的最长交错路径【中等】","link":"/notes/1372. 二叉树中的最长交错路径【中等】/README"},{"text":"⏰ 1373. 二叉搜索子树的最大键值和【困难】","link":"/notes/1373. 二叉搜索子树的最大键值和【困难】/README"},{"text":"⏰ 1374. 生成每种字符都是奇数个的字符串【简单】","link":"/notes/1374. 生成每种字符都是奇数个的字符串【简单】/README"},{"text":"⏰ 1375. 二进制字符串前缀一致的次数【中等】","link":"/notes/1375. 二进制字符串前缀一致的次数【中等】/README"},{"text":"⏰ 1376. 通知所有员工所需的时间【中等】","link":"/notes/1376. 通知所有员工所需的时间【中等】/README"},{"text":"⏰ 1377. T 秒后青蛙的位置【困难】","link":"/notes/1377. T 秒后青蛙的位置【困难】/README"},{"text":"⏰ 1378. 使用唯一标识码替换员工ID【简单】","link":"/notes/1378. 使用唯一标识码替换员工ID【简单】/README"},{"text":"⏰ 1379. 找出克隆二叉树中的相同节点【简单】","link":"/notes/1379. 找出克隆二叉树中的相同节点【简单】/README"},{"text":"⏰ 1380. 矩阵中的幸运数【简单】","link":"/notes/1380. 矩阵中的幸运数【简单】/README"},{"text":"⏰ 1381. 设计一个支持增量操作的栈【中等】","link":"/notes/1381. 设计一个支持增量操作的栈【中等】/README"},{"text":"⏰ 1382. 将二叉搜索树变平衡【中等】","link":"/notes/1382. 将二叉搜索树变平衡【中等】/README"},{"text":"⏰ 1383. 最大的团队表现值【困难】","link":"/notes/1383. 最大的团队表现值【困难】/README"},{"text":"⏰ 1384. 按年度列出销售总额【困难】","link":"/notes/1384. 按年度列出销售总额【困难】/README"},{"text":"⏰ 1385. 两个数组间的距离值【简单】","link":"/notes/1385. 两个数组间的距离值【简单】/README"},{"text":"⏰ 1386. 安排电影院座位【中等】","link":"/notes/1386. 安排电影院座位【中等】/README"},{"text":"⏰ 1387. 将整数按权重排序【中等】","link":"/notes/1387. 将整数按权重排序【中等】/README"},{"text":"⏰ 1388. 3n 块披萨【困难】","link":"/notes/1388. 3n 块披萨【困难】/README"},{"text":"⏰ 1389. 按既定顺序创建目标数组【简单】","link":"/notes/1389. 按既定顺序创建目标数组【简单】/README"},{"text":"⏰ 1390. 四因数【中等】","link":"/notes/1390. 四因数【中等】/README"},{"text":"⏰ 1391. 检查网格中是否存在有效路径【中等】","link":"/notes/1391. 检查网格中是否存在有效路径【中等】/README"},{"text":"⏰ 1392. 最长快乐前缀【困难】","link":"/notes/1392. 最长快乐前缀【困难】/README"},{"text":"⏰ 1393. 股票的资本损益【中等】","link":"/notes/1393. 股票的资本损益【中等】/README"},{"text":"⏰ 1394. 找出数组中的幸运数【简单】","link":"/notes/1394. 找出数组中的幸运数【简单】/README"},{"text":"⏰ 1395. 统计作战单位数【中等】","link":"/notes/1395. 统计作战单位数【中等】/README"},{"text":"⏰ 1396. 设计地铁系统【中等】","link":"/notes/1396. 设计地铁系统【中等】/README"},{"text":"⏰ 1397. 找到所有好字符串【困难】","link":"/notes/1397. 找到所有好字符串【困难】/README"},{"text":"⏰ 1398. 购买了产品 A 和产品 B 却没有购买产品 C 的顾客【中等】","link":"/notes/1398. 购买了产品 A 和产品 B 却没有购买产品 C 的顾客【中等】/README"},{"text":"⏰ 1399. 统计最大组的数目【简单】","link":"/notes/1399. 统计最大组的数目【简单】/README"},{"text":"⏰ 1400. 构造 K 个回文字符串【中等】","link":"/notes/1400. 构造 K 个回文字符串【中等】/README"}]},{"text":"16. 1401~1500","collapsed":true,"items":[{"text":"⏰ 1401. 圆和矩形是否有重叠【中等】","link":"/notes/1401. 圆和矩形是否有重叠【中等】/README"},{"text":"⏰ 1402. 做菜顺序【困难】","link":"/notes/1402. 做菜顺序【困难】/README"},{"text":"⏰ 1403. 非递增顺序的最小子序列【简单】","link":"/notes/1403. 非递增顺序的最小子序列【简单】/README"},{"text":"⏰ 1404. 将二进制表示减到 1 的步骤数【中等】","link":"/notes/1404. 将二进制表示减到 1 的步骤数【中等】/README"},{"text":"⏰ 1405. 最长快乐字符串【中等】","link":"/notes/1405. 最长快乐字符串【中等】/README"},{"text":"⏰ 1406. 石子游戏 III【困难】","link":"/notes/1406. 石子游戏 III【困难】/README"},{"text":"⏰ 1407. 排名靠前的旅行者【简单】","link":"/notes/1407. 排名靠前的旅行者【简单】/README"},{"text":"⏰ 1408. 数组中的字符串匹配【简单】","link":"/notes/1408. 数组中的字符串匹配【简单】/README"},{"text":"⏰ 1409. 查询带键的排列【中等】","link":"/notes/1409. 查询带键的排列【中等】/README"},{"text":"⏰ 1410. HTML 实体解析器【中等】","link":"/notes/1410. HTML 实体解析器【中等】/README"},{"text":"⏰ 1411. 给 N x 3 网格图涂色的方案数【困难】","link":"/notes/1411. 给 N x 3 网格图涂色的方案数【困难】/README"},{"text":"⏰ 1412. 查找成绩处于中游的学生【困难】","link":"/notes/1412. 查找成绩处于中游的学生【困难】/README"},{"text":"⏰ 1413. 逐步求和得到正数的最小值【简单】","link":"/notes/1413. 逐步求和得到正数的最小值【简单】/README"},{"text":"⏰ 1414. 和为 K 的最少斐波那契数字数目【中等】","link":"/notes/1414. 和为 K 的最少斐波那契数字数目【中等】/README"},{"text":"⏰ 1415. 长度为 n 的开心字符串中字典序第 k 小的字符串【中等】","link":"/notes/1415. 长度为 n 的开心字符串中字典序第 k 小的字符串【中等】/README"},{"text":"⏰ 1416. 恢复数组【困难】","link":"/notes/1416. 恢复数组【困难】/README"},{"text":"⏰ 1417. 重新格式化字符串【简单】","link":"/notes/1417. 重新格式化字符串【简单】/README"},{"text":"⏰ 1418. 点菜展示表【中等】","link":"/notes/1418. 点菜展示表【中等】/README"},{"text":"⏰ 1419. 数青蛙【中等】","link":"/notes/1419. 数青蛙【中等】/README"},{"text":"⏰ 1420. 生成数组【困难】","link":"/notes/1420. 生成数组【困难】/README"},{"text":"⏰ 1421. 净现值查询【简单】","link":"/notes/1421. 净现值查询【简单】/README"},{"text":"⏰ 1422. 分割字符串的最大得分【简单】","link":"/notes/1422. 分割字符串的最大得分【简单】/README"},{"text":"⏰ 1423. 可获得的最大点数【中等】","link":"/notes/1423. 可获得的最大点数【中等】/README"},{"text":"⏰ 1424. 对角线遍历 II【中等】","link":"/notes/1424. 对角线遍历 II【中等】/README"},{"text":"⏰ 1425. 带限制的子序列和【困难】","link":"/notes/1425. 带限制的子序列和【困难】/README"},{"text":"⏰ 1426. 数元素【简单】","link":"/notes/1426. 数元素【简单】/README"},{"text":"⏰ 1427. 字符串的左右移【简单】","link":"/notes/1427. 字符串的左右移【简单】/README"},{"text":"⏰ 1428. 至少有一个 1 的最左端列【中等】","link":"/notes/1428. 至少有一个 1 的最左端列【中等】/README"},{"text":"⏰ 1429. 第一个唯一数字【中等】","link":"/notes/1429. 第一个唯一数字【中等】/README"},{"text":"⏰ 1430. 判断给定的序列是否是二叉树从根到叶的路径【中等】","link":"/notes/1430. 判断给定的序列是否是二叉树从根到叶的路径【中等】/README"},{"text":"⏰ 1431. 拥有最多糖果的孩子【简单】","link":"/notes/1431. 拥有最多糖果的孩子【简单】/README"},{"text":"⏰ 1432. 改变一个整数能得到的最大差值【中等】","link":"/notes/1432. 改变一个整数能得到的最大差值【中等】/README"},{"text":"⏰ 1433. 检查一个字符串是否可以打破另一个字符串【中等】","link":"/notes/1433. 检查一个字符串是否可以打破另一个字符串【中等】/README"},{"text":"⏰ 1434. 每个人戴不同帽子的方案数【困难】","link":"/notes/1434. 每个人戴不同帽子的方案数【困难】/README"},{"text":"⏰ 1435. 制作会话柱状图【简单】","link":"/notes/1435. 制作会话柱状图【简单】/README"},{"text":"✅ 1436. 旅行终点站【简单】","link":"/notes/1436. 旅行终点站【简单】/README"},{"text":"⏰ 1437. 是否所有 1 都至少相隔 k 个元素【简单】","link":"/notes/1437. 是否所有 1 都至少相隔 k 个元素【简单】/README"},{"text":"⏰ 1438. 绝对差不超过限制的最长连续子数组【中等】","link":"/notes/1438. 绝对差不超过限制的最长连续子数组【中等】/README"},{"text":"⏰ 1439. 有序矩阵中的第 k 个最小数组和【困难】","link":"/notes/1439. 有序矩阵中的第 k 个最小数组和【困难】/README"},{"text":"⏰ 1440. 计算布尔表达式的值【中等】","link":"/notes/1440. 计算布尔表达式的值【中等】/README"},{"text":"⏰ 1441. 用栈操作构建数组【中等】","link":"/notes/1441. 用栈操作构建数组【中等】/README"},{"text":"⏰ 1442. 形成两个异或相等数组的三元组数目【中等】","link":"/notes/1442. 形成两个异或相等数组的三元组数目【中等】/README"},{"text":"⏰ 1443. 收集树上所有苹果的最少时间【中等】","link":"/notes/1443. 收集树上所有苹果的最少时间【中等】/README"},{"text":"⏰ 1444. 切披萨的方案数【困难】","link":"/notes/1444. 切披萨的方案数【困难】/README"},{"text":"⏰ 1445. 苹果和桔子【中等】","link":"/notes/1445. 苹果和桔子【中等】/README"},{"text":"⏰ 1446. 连续字符【简单】","link":"/notes/1446. 连续字符【简单】/README"},{"text":"⏰ 1447. 最简分数【中等】","link":"/notes/1447. 最简分数【中等】/README"},{"text":"⏰ 1448. 统计二叉树中好节点的数目【中等】","link":"/notes/1448. 统计二叉树中好节点的数目【中等】/README"},{"text":"⏰ 1449. 数位成本和为目标值的最大数字【困难】","link":"/notes/1449. 数位成本和为目标值的最大数字【困难】/README"},{"text":"⏰ 1450. 在既定时间做作业的学生人数【简单】","link":"/notes/1450. 在既定时间做作业的学生人数【简单】/README"},{"text":"⏰ 1451. 重新排列句子中的单词【中等】","link":"/notes/1451. 重新排列句子中的单词【中等】/README"},{"text":"⏰ 1452. 收藏清单【中等】","link":"/notes/1452. 收藏清单【中等】/README"},{"text":"⏰ 1453. 圆形靶内的最大飞镖数量【困难】","link":"/notes/1453. 圆形靶内的最大飞镖数量【困难】/README"},{"text":"⏰ 1454. 活跃用户【中等】","link":"/notes/1454. 活跃用户【中等】/README"},{"text":"⏰ 1455. 检查单词是否为句中其他单词的前缀【简单】","link":"/notes/1455. 检查单词是否为句中其他单词的前缀【简单】/README"},{"text":"⏰ 1456. 定长子串中元音的最大数目【中等】","link":"/notes/1456. 定长子串中元音的最大数目【中等】/README"},{"text":"⏰ 1457. 二叉树中的伪回文路径【中等】","link":"/notes/1457. 二叉树中的伪回文路径【中等】/README"},{"text":"⏰ 1458. 两个子序列的最大点积【困难】","link":"/notes/1458. 两个子序列的最大点积【困难】/README"},{"text":"⏰ 1459. 矩形面积【中等】","link":"/notes/1459. 矩形面积【中等】/README"},{"text":"⏰ 1460. 通过翻转子数组使两个数组相等【简单】","link":"/notes/1460. 通过翻转子数组使两个数组相等【简单】/README"},{"text":"⏰ 1461. 检查一个字符串是否包含所有长度为 K 的二进制子串【中等】","link":"/notes/1461. 检查一个字符串是否包含所有长度为 K 的二进制子串【中等】/README"},{"text":"⏰ 1462. 课程表 IV【中等】","link":"/notes/1462. 课程表 IV【中等】/README"},{"text":"⏰ 1463. 摘樱桃 II【困难】","link":"/notes/1463. 摘樱桃 II【困难】/README"},{"text":"⏰ 1464. 数组中两元素的最大乘积【简单】","link":"/notes/1464. 数组中两元素的最大乘积【简单】/README"},{"text":"⏰ 1465. 切割后面积最大的蛋糕【中等】","link":"/notes/1465. 切割后面积最大的蛋糕【中等】/README"},{"text":"⏰ 1466. 重新规划路线【中等】","link":"/notes/1466. 重新规划路线【中等】/README"},{"text":"⏰ 1467. 两个盒子中球的颜色数相同的概率【困难】","link":"/notes/1467. 两个盒子中球的颜色数相同的概率【困难】/README"},{"text":"⏰ 1468. 计算税后工资【中等】","link":"/notes/1468. 计算税后工资【中等】/README"},{"text":"⏰ 1469. 寻找所有的独生节点【简单】","link":"/notes/1469. 寻找所有的独生节点【简单】/README"},{"text":"⏰ 1470. 重新排列数组【简单】","link":"/notes/1470. 重新排列数组【简单】/README"},{"text":"⏰ 1471. 数组中的 k 个最强值【中等】","link":"/notes/1471. 数组中的 k 个最强值【中等】/README"},{"text":"⏰ 1472. 设计浏览器历史记录【中等】","link":"/notes/1472. 设计浏览器历史记录【中等】/README"},{"text":"⏰ 1473. 粉刷房子 III【困难】","link":"/notes/1473. 粉刷房子 III【困难】/README"},{"text":"⏰ 1474. 删除链表 M 个节点之后的 N 个节点【简单】","link":"/notes/1474. 删除链表 M 个节点之后的 N 个节点【简单】/README"},{"text":"⏰ 1475. 商品折扣后的最终价格【简单】","link":"/notes/1475. 商品折扣后的最终价格【简单】/README"},{"text":"⏰ 1476. 子矩形查询【中等】","link":"/notes/1476. 子矩形查询【中等】/README"},{"text":"⏰ 1477. 找两个和为目标值且不重叠的子数组【中等】","link":"/notes/1477. 找两个和为目标值且不重叠的子数组【中等】/README"},{"text":"⏰ 1478. 安排邮筒【困难】","link":"/notes/1478. 安排邮筒【困难】/README"},{"text":"⏰ 1479. 周内每天的销售情况【困难】","link":"/notes/1479. 周内每天的销售情况【困难】/README"},{"text":"⏰ 1480. 一维数组的动态和【简单】","link":"/notes/1480. 一维数组的动态和【简单】/README"},{"text":"⏰ 1481. 不同整数的最少数目【中等】","link":"/notes/1481. 不同整数的最少数目【中等】/README"},{"text":"⏰ 1482. 制作 m 束花所需的最少天数【中等】","link":"/notes/1482. 制作 m 束花所需的最少天数【中等】/README"},{"text":"⏰ 1483. 树节点的第 K 个祖先【困难】","link":"/notes/1483. 树节点的第 K 个祖先【困难】/README"},{"text":"⏰ 1484. 按日期分组销售产品【简单】","link":"/notes/1484. 按日期分组销售产品【简单】/README"},{"text":"⏰ 1485. 克隆含随机指针的二叉树【中等】","link":"/notes/1485. 克隆含随机指针的二叉树【中等】/README"},{"text":"⏰ 1486. 数组异或操作【简单】","link":"/notes/1486. 数组异或操作【简单】/README"},{"text":"⏰ 1487. 保证文件名唯一【中等】","link":"/notes/1487. 保证文件名唯一【中等】/README"},{"text":"⏰ 1488. 避免洪水泛滥【中等】","link":"/notes/1488. 避免洪水泛滥【中等】/README"},{"text":"⏰ 1489. 找到最小生成树里的关键边和伪关键边【困难】","link":"/notes/1489. 找到最小生成树里的关键边和伪关键边【困难】/README"},{"text":"⏰ 1490. 克隆 N 叉树【中等】","link":"/notes/1490. 克隆 N 叉树【中等】/README"},{"text":"⏰ 1491. 去掉最低工资和最高工资后的工资平均值【简单】","link":"/notes/1491. 去掉最低工资和最高工资后的工资平均值【简单】/README"},{"text":"⏰ 1492. n 的第 k 个因子【中等】","link":"/notes/1492. n 的第 k 个因子【中等】/README"},{"text":"⏰ 1493. 删掉一个元素以后全为 1 的最长子数组【中等】","link":"/notes/1493. 删掉一个元素以后全为 1 的最长子数组【中等】/README"},{"text":"⏰ 1494. 并行课程 II【困难】","link":"/notes/1494. 并行课程 II【困难】/README"},{"text":"⏰ 1495. 上月播放的儿童适宜电影【简单】","link":"/notes/1495. 上月播放的儿童适宜电影【简单】/README"},{"text":"⏰ 1496. 判断路径是否相交【简单】","link":"/notes/1496. 判断路径是否相交【简单】/README"},{"text":"⏰ 1497. 检查数组对是否可以被 k 整除【中等】","link":"/notes/1497. 检查数组对是否可以被 k 整除【中等】/README"},{"text":"⏰ 1498. 满足条件的子序列数目【中等】","link":"/notes/1498. 满足条件的子序列数目【中等】/README"},{"text":"⏰ 1499. 满足不等式的最大值【困难】","link":"/notes/1499. 满足不等式的最大值【困难】/README"},{"text":"⏰ 1500. 设计文件分享系统【中等】","link":"/notes/1500. 设计文件分享系统【中等】/README"}]},{"text":"17. 1501~1600","collapsed":true,"items":[{"text":"⏰ 1501. 可以放心投资的国家【中等】","link":"/notes/1501. 可以放心投资的国家【中等】/README"},{"text":"⏰ 1502. 判断能否形成等差数列【简单】","link":"/notes/1502. 判断能否形成等差数列【简单】/README"},{"text":"⏰ 1503. 所有蚂蚁掉下来前的最后一刻【中等】","link":"/notes/1503. 所有蚂蚁掉下来前的最后一刻【中等】/README"},{"text":"⏰ 1504. 统计全 1 子矩形【中等】","link":"/notes/1504. 统计全 1 子矩形【中等】/README"},{"text":"⏰ 1505. 最多 K 次交换相邻数位后得到的最小整数【困难】","link":"/notes/1505. 最多 K 次交换相邻数位后得到的最小整数【困难】/README"},{"text":"⏰ 1506. 找到 N 叉树的根节点【中等】","link":"/notes/1506. 找到 N 叉树的根节点【中等】/README"},{"text":"⏰ 1507. 转变日期格式【简单】","link":"/notes/1507. 转变日期格式【简单】/README"},{"text":"⏰ 1508. 子数组和排序后的区间和【中等】","link":"/notes/1508. 子数组和排序后的区间和【中等】/README"},{"text":"⏰ 1509. 三次操作后最大值与最小值的最小差【中等】","link":"/notes/1509. 三次操作后最大值与最小值的最小差【中等】/README"},{"text":"⏰ 1510. 石子游戏 IV【困难】","link":"/notes/1510. 石子游戏 IV【困难】/README"},{"text":"⏰ 1511. 消费者下单频率【简单】","link":"/notes/1511. 消费者下单频率【简单】/README"},{"text":"⏰ 1512. 好数对的数目【简单】","link":"/notes/1512. 好数对的数目【简单】/README"},{"text":"⏰ 1513. 仅含 1 的子串数【中等】","link":"/notes/1513. 仅含 1 的子串数【中等】/README"},{"text":"⏰ 1514. 概率最大的路径【中等】","link":"/notes/1514. 概率最大的路径【中等】/README"},{"text":"⏰ 1515. 服务中心的最佳位置【困难】","link":"/notes/1515. 服务中心的最佳位置【困难】/README"},{"text":"⏰ 1516. 移动 N 叉树的子树【困难】","link":"/notes/1516. 移动 N 叉树的子树【困难】/README"},{"text":"⏰ 1517. 查找拥有有效邮箱的用户【简单】","link":"/notes/1517. 查找拥有有效邮箱的用户【简单】/README"},{"text":"⏰ 1518. 换水问题【简单】","link":"/notes/1518. 换水问题【简单】/README"},{"text":"⏰ 1519. 子树中标签相同的节点数【中等】","link":"/notes/1519. 子树中标签相同的节点数【中等】/README"},{"text":"⏰ 1520. 最多的不重叠子字符串【困难】","link":"/notes/1520. 最多的不重叠子字符串【困难】/README"},{"text":"⏰ 1521. 找到最接近目标值的函数值【困难】","link":"/notes/1521. 找到最接近目标值的函数值【困难】/README"},{"text":"⏰ 1522. N 叉树的直径【中等】","link":"/notes/1522. N 叉树的直径【中等】/README"},{"text":"⏰ 1523. 在区间范围内统计奇数数目【简单】","link":"/notes/1523. 在区间范围内统计奇数数目【简单】/README"},{"text":"⏰ 1524. 和为奇数的子数组数目【中等】","link":"/notes/1524. 和为奇数的子数组数目【中等】/README"},{"text":"⏰ 1525. 字符串的好分割数目【中等】","link":"/notes/1525. 字符串的好分割数目【中等】/README"},{"text":"⏰ 1526. 形成目标数组的子数组最少增加次数【困难】","link":"/notes/1526. 形成目标数组的子数组最少增加次数【困难】/README"},{"text":"⏰ 1527. 患某种疾病的患者【简单】","link":"/notes/1527. 患某种疾病的患者【简单】/README"},{"text":"⏰ 1528. 重新排列字符串【简单】","link":"/notes/1528. 重新排列字符串【简单】/README"},{"text":"⏰ 1529. 最少的后缀翻转次数【中等】","link":"/notes/1529. 最少的后缀翻转次数【中等】/README"},{"text":"⏰ 1530. 好叶子节点对的数量【中等】","link":"/notes/1530. 好叶子节点对的数量【中等】/README"},{"text":"⏰ 1531. 压缩字符串 II【困难】","link":"/notes/1531. 压缩字符串 II【困难】/README"},{"text":"⏰ 1532. 最近的三笔订单【中等】","link":"/notes/1532. 最近的三笔订单【中等】/README"},{"text":"⏰ 1533. 找到最大整数的索引【中等】","link":"/notes/1533. 找到最大整数的索引【中等】/README"},{"text":"⏰ 1534. 统计好三元组【简单】","link":"/notes/1534. 统计好三元组【简单】/README"},{"text":"⏰ 1535. 找出数组游戏的赢家【中等】","link":"/notes/1535. 找出数组游戏的赢家【中等】/README"},{"text":"⏰ 1536. 排布二进制网格的最少交换次数【中等】","link":"/notes/1536. 排布二进制网格的最少交换次数【中等】/README"},{"text":"⏰ 1537. 最大得分【困难】","link":"/notes/1537. 最大得分【困难】/README"},{"text":"⏰ 1538. 找出隐藏数组中出现次数最多的元素【中等】","link":"/notes/1538. 找出隐藏数组中出现次数最多的元素【中等】/README"},{"text":"⏰ 1539. 第 k 个缺失的正整数【简单】","link":"/notes/1539. 第 k 个缺失的正整数【简单】/README"},{"text":"⏰ 1540. K 次操作转变字符串【中等】","link":"/notes/1540. K 次操作转变字符串【中等】/README"},{"text":"⏰ 1541. 平衡括号字符串的最少插入次数【中等】","link":"/notes/1541. 平衡括号字符串的最少插入次数【中等】/README"},{"text":"⏰ 1542. 找出最长的超赞子字符串【困难】","link":"/notes/1542. 找出最长的超赞子字符串【困难】/README"},{"text":"⏰ 1543. 产品名称格式修复【简单】","link":"/notes/1543. 产品名称格式修复【简单】/README"},{"text":"⏰ 1544. 整理字符串【简单】","link":"/notes/1544. 整理字符串【简单】/README"},{"text":"⏰ 1545. 找出第 N 个二进制字符串中的第 K 位【中等】","link":"/notes/1545. 找出第 N 个二进制字符串中的第 K 位【中等】/README"},{"text":"⏰ 1546. 和为目标值且不重叠的非空子数组的最大数目【中等】","link":"/notes/1546. 和为目标值且不重叠的非空子数组的最大数目【中等】/README"},{"text":"⏰ 1547. 切棍子的最小成本【困难】","link":"/notes/1547. 切棍子的最小成本【困难】/README"},{"text":"⏰ 1548. 图中最相似的路径【困难】","link":"/notes/1548. 图中最相似的路径【困难】/README"},{"text":"⏰ 1549. 每件商品的最新订单【中等】","link":"/notes/1549. 每件商品的最新订单【中等】/README"},{"text":"⏰ 1550. 存在连续三个奇数的数组【简单】","link":"/notes/1550. 存在连续三个奇数的数组【简单】/README"},{"text":"⏰ 1551. 使数组中所有元素相等的最小操作数【中等】","link":"/notes/1551. 使数组中所有元素相等的最小操作数【中等】/README"},{"text":"⏰ 1552. 两球之间的磁力【中等】","link":"/notes/1552. 两球之间的磁力【中等】/README"},{"text":"⏰ 1553. 吃掉 N 个橘子的最少天数【困难】","link":"/notes/1553. 吃掉 N 个橘子的最少天数【困难】/README"},{"text":"⏰ 1554. 只有一个不同字符的字符串【中等】","link":"/notes/1554. 只有一个不同字符的字符串【中等】/README"},{"text":"⏰ 1555. 银行账户概要【中等】","link":"/notes/1555. 银行账户概要【中等】/README"},{"text":"⏰ 1556. 千位分隔数【简单】","link":"/notes/1556. 千位分隔数【简单】/README"},{"text":"⏰ 1557. 可以到达所有点的最少点数目【中等】","link":"/notes/1557. 可以到达所有点的最少点数目【中等】/README"},{"text":"⏰ 1558. 得到目标数组的最少函数调用次数【中等】","link":"/notes/1558. 得到目标数组的最少函数调用次数【中等】/README"},{"text":"⏰ 1559. 二维网格图中探测环【中等】","link":"/notes/1559. 二维网格图中探测环【中等】/README"},{"text":"⏰ 1560. 圆形赛道上经过次数最多的扇区【简单】","link":"/notes/1560. 圆形赛道上经过次数最多的扇区【简单】/README"},{"text":"⏰ 1561. 你可以获得的最大硬币数目【中等】","link":"/notes/1561. 你可以获得的最大硬币数目【中等】/README"},{"text":"⏰ 1562. 查找大小为 M 的最新分组【中等】","link":"/notes/1562. 查找大小为 M 的最新分组【中等】/README"},{"text":"⏰ 1563. 石子游戏 V【困难】","link":"/notes/1563. 石子游戏 V【困难】/README"},{"text":"⏰ 1564. 把箱子放进仓库里 I【中等】","link":"/notes/1564. 把箱子放进仓库里 I【中等】/README"},{"text":"⏰ 1565. 按月统计订单数与顾客数【简单】","link":"/notes/1565. 按月统计订单数与顾客数【简单】/README"},{"text":"⏰ 1566. 重复至少 K 次且长度为 M 的模式【简单】","link":"/notes/1566. 重复至少 K 次且长度为 M 的模式【简单】/README"},{"text":"⏰ 1567. 乘积为正数的最长子数组长度【中等】","link":"/notes/1567. 乘积为正数的最长子数组长度【中等】/README"},{"text":"⏰ 1568. 使陆地分离的最少天数【困难】","link":"/notes/1568. 使陆地分离的最少天数【困难】/README"},{"text":"⏰ 1569. 将子数组重新排序得到同一个二叉搜索树的方案数【困难】","link":"/notes/1569. 将子数组重新排序得到同一个二叉搜索树的方案数【困难】/README"},{"text":"⏰ 1570. 两个稀疏向量的点积【中等】","link":"/notes/1570. 两个稀疏向量的点积【中等】/README"},{"text":"⏰ 1571. 仓库经理【简单】","link":"/notes/1571. 仓库经理【简单】/README"},{"text":"⏰ 1572. 矩阵对角线元素的和【简单】","link":"/notes/1572. 矩阵对角线元素的和【简单】/README"},{"text":"⏰ 1573. 分割字符串的方案数【中等】","link":"/notes/1573. 分割字符串的方案数【中等】/README"},{"text":"⏰ 1574. 删除最短的子数组使剩余数组有序【中等】","link":"/notes/1574. 删除最短的子数组使剩余数组有序【中等】/README"},{"text":"⏰ 1575. 统计所有可行路径【困难】","link":"/notes/1575. 统计所有可行路径【困难】/README"},{"text":"⏰ 1576. 替换所有的问号【简单】","link":"/notes/1576. 替换所有的问号【简单】/README"},{"text":"⏰ 1577. 数的平方等于两数乘积的方法数【中等】","link":"/notes/1577. 数的平方等于两数乘积的方法数【中等】/README"},{"text":"⏰ 1578. 使绳子变成彩色的最短时间【中等】","link":"/notes/1578. 使绳子变成彩色的最短时间【中等】/README"},{"text":"⏰ 1579. 保证图可完全遍历【困难】","link":"/notes/1579. 保证图可完全遍历【困难】/README"},{"text":"⏰ 1580. 把箱子放进仓库里 II【中等】","link":"/notes/1580. 把箱子放进仓库里 II【中等】/README"},{"text":"⏰ 1581. 进店却未进行过交易的顾客【简单】","link":"/notes/1581. 进店却未进行过交易的顾客【简单】/README"},{"text":"⏰ 1582. 二进制矩阵中的特殊位置【简单】","link":"/notes/1582. 二进制矩阵中的特殊位置【简单】/README"},{"text":"⏰ 1583. 统计不开心的朋友【中等】","link":"/notes/1583. 统计不开心的朋友【中等】/README"},{"text":"⏰ 1584. 连接所有点的最小费用【中等】","link":"/notes/1584. 连接所有点的最小费用【中等】/README"},{"text":"⏰ 1585. 检查字符串是否可以通过排序子字符串得到另一个字符串【困难】","link":"/notes/1585. 检查字符串是否可以通过排序子字符串得到另一个字符串【困难】/README"},{"text":"⏰ 1586. 二叉搜索树迭代器 II【中等】","link":"/notes/1586. 二叉搜索树迭代器 II【中等】/README"},{"text":"⏰ 1587. 银行账户概要 II【简单】","link":"/notes/1587. 银行账户概要 II【简单】/README"},{"text":"⏰ 1588. 所有奇数长度子数组的和【简单】","link":"/notes/1588. 所有奇数长度子数组的和【简单】/README"},{"text":"⏰ 1589. 所有排列中的最大和【中等】","link":"/notes/1589. 所有排列中的最大和【中等】/README"},{"text":"⏰ 1590. 使数组和能被 P 整除【中等】","link":"/notes/1590. 使数组和能被 P 整除【中等】/README"},{"text":"⏰ 1591. 奇怪的打印机 II【困难】","link":"/notes/1591. 奇怪的打印机 II【困难】/README"},{"text":"⏰ 1592. 重新排列单词间的空格【简单】","link":"/notes/1592. 重新排列单词间的空格【简单】/README"},{"text":"⏰ 1593. 拆分字符串使唯一子字符串的数目最大【中等】","link":"/notes/1593. 拆分字符串使唯一子字符串的数目最大【中等】/README"},{"text":"⏰ 1594. 矩阵的最大非负积【中等】","link":"/notes/1594. 矩阵的最大非负积【中等】/README"},{"text":"⏰ 1595. 连通两组点的最小成本【困难】","link":"/notes/1595. 连通两组点的最小成本【困难】/README"},{"text":"⏰ 1596. 每位顾客最经常订购的商品【中等】","link":"/notes/1596. 每位顾客最经常订购的商品【中等】/README"},{"text":"⏰ 1597. 根据中缀表达式构造二叉表达式树【困难】","link":"/notes/1597. 根据中缀表达式构造二叉表达式树【困难】/README"},{"text":"⏰ 1598. 文件夹操作日志搜集器【简单】","link":"/notes/1598. 文件夹操作日志搜集器【简单】/README"},{"text":"⏰ 1599. 经营摩天轮的最大利润【中等】","link":"/notes/1599. 经营摩天轮的最大利润【中等】/README"},{"text":"⏰ 1600. 王位继承顺序【中等】","link":"/notes/1600. 王位继承顺序【中等】/README"}]},{"text":"18. 1601~1700","collapsed":true,"items":[{"text":"⏰ 1601. 最多可达成的换楼请求数目【困难】","link":"/notes/1601. 最多可达成的换楼请求数目【困难】/README"},{"text":"⏰ 1602. 找到二叉树中最近的右侧节点【中等】","link":"/notes/1602. 找到二叉树中最近的右侧节点【中等】/README"},{"text":"⏰ 1603. 设计停车系统【简单】","link":"/notes/1603. 设计停车系统【简单】/README"},{"text":"⏰ 1604. 警告一小时内使用相同员工卡大于等于三次的人【中等】","link":"/notes/1604. 警告一小时内使用相同员工卡大于等于三次的人【中等】/README"},{"text":"⏰ 1605. 给定行和列的和求可行矩阵【中等】","link":"/notes/1605. 给定行和列的和求可行矩阵【中等】/README"},{"text":"⏰ 1606. 找到处理最多请求的服务器【困难】","link":"/notes/1606. 找到处理最多请求的服务器【困难】/README"},{"text":"⏰ 1607. 没有卖出的卖家【简单】","link":"/notes/1607. 没有卖出的卖家【简单】/README"},{"text":"⏰ 1608. 特殊数组的特征值【简单】","link":"/notes/1608. 特殊数组的特征值【简单】/README"},{"text":"⏰ 1609. 奇偶树【中等】","link":"/notes/1609. 奇偶树【中等】/README"},{"text":"⏰ 1610. 可见点的最大数目【困难】","link":"/notes/1610. 可见点的最大数目【困难】/README"},{"text":"⏰ 1611. 使整数变为 0 的最少操作次数【困难】","link":"/notes/1611. 使整数变为 0 的最少操作次数【困难】/README"},{"text":"⏰ 1612. 检查两棵二叉表达式树是否等价【中等】","link":"/notes/1612. 检查两棵二叉表达式树是否等价【中等】/README"},{"text":"⏰ 1613. 找到遗失的ID【中等】","link":"/notes/1613. 找到遗失的ID【中等】/README"},{"text":"⏰ 1614. 括号的最大嵌套深度【简单】","link":"/notes/1614. 括号的最大嵌套深度【简单】/README"},{"text":"⏰ 1615. 最大网络秩【中等】","link":"/notes/1615. 最大网络秩【中等】/README"},{"text":"⏰ 1616. 分割两个字符串得到回文串【中等】","link":"/notes/1616. 分割两个字符串得到回文串【中等】/README"},{"text":"⏰ 1617. 统计子树中城市之间最大距离【困难】","link":"/notes/1617. 统计子树中城市之间最大距离【困难】/README"},{"text":"⏰ 1618. 找出适应屏幕的最大字号【中等】","link":"/notes/1618. 找出适应屏幕的最大字号【中等】/README"},{"text":"⏰ 1619. 删除某些元素后的数组均值【简单】","link":"/notes/1619. 删除某些元素后的数组均值【简单】/README"},{"text":"⏰ 1620. 网络信号最好的坐标【中等】","link":"/notes/1620. 网络信号最好的坐标【中等】/README"},{"text":"⏰ 1621. 大小为 K 的不重叠线段的数目【中等】","link":"/notes/1621. 大小为 K 的不重叠线段的数目【中等】/README"},{"text":"⏰ 1622. 奇妙序列【困难】","link":"/notes/1622. 奇妙序列【困难】/README"},{"text":"⏰ 1623. 三人国家代表队【简单】","link":"/notes/1623. 三人国家代表队【简单】/README"},{"text":"⏰ 1624. 两个相同字符之间的最长子字符串【简单】","link":"/notes/1624. 两个相同字符之间的最长子字符串【简单】/README"},{"text":"⏰ 1625. 执行操作后字典序最小的字符串【中等】","link":"/notes/1625. 执行操作后字典序最小的字符串【中等】/README"},{"text":"⏰ 1626. 无矛盾的最佳球队【中等】","link":"/notes/1626. 无矛盾的最佳球队【中等】/README"},{"text":"⏰ 1627. 带阈值的图连通性【困难】","link":"/notes/1627. 带阈值的图连通性【困难】/README"},{"text":"⏰ 1628. 设计带解析函数的表达式树【中等】","link":"/notes/1628. 设计带解析函数的表达式树【中等】/README"},{"text":"⏰ 1629. 按键持续时间最长的键【简单】","link":"/notes/1629. 按键持续时间最长的键【简单】/README"},{"text":"⏰ 1630. 等差子数组【中等】","link":"/notes/1630. 等差子数组【中等】/README"},{"text":"⏰ 1631. 最小体力消耗路径【中等】","link":"/notes/1631. 最小体力消耗路径【中等】/README"},{"text":"⏰ 1632. 矩阵转换后的秩【困难】","link":"/notes/1632. 矩阵转换后的秩【困难】/README"},{"text":"⏰ 1633. 各赛事的用户注册率【简单】","link":"/notes/1633. 各赛事的用户注册率【简单】/README"},{"text":"⏰ 1634. 求两个多项式链表的和【中等】","link":"/notes/1634. 求两个多项式链表的和【中等】/README"},{"text":"⏰ 1635. Hopper 公司查询 I【困难】","link":"/notes/1635. Hopper 公司查询 I【困难】/README"},{"text":"⏰ 1636. 按照频率将数组升序排序【简单】","link":"/notes/1636. 按照频率将数组升序排序【简单】/README"},{"text":"⏰ 1637. 两点之间不包含任何点的最宽垂直区域【简单】","link":"/notes/1637. 两点之间不包含任何点的最宽垂直区域【简单】/README"},{"text":"⏰ 1638. 统计只差一个字符的子串数目【中等】","link":"/notes/1638. 统计只差一个字符的子串数目【中等】/README"},{"text":"⏰ 1639. 通过给定词典构造目标字符串的方案数【困难】","link":"/notes/1639. 通过给定词典构造目标字符串的方案数【困难】/README"},{"text":"⏰ 1640. 能否连接形成数组【简单】","link":"/notes/1640. 能否连接形成数组【简单】/README"},{"text":"⏰ 1641. 统计字典序元音字符串的数目【中等】","link":"/notes/1641. 统计字典序元音字符串的数目【中等】/README"},{"text":"⏰ 1642. 可以到达的最远建筑【中等】","link":"/notes/1642. 可以到达的最远建筑【中等】/README"},{"text":"⏰ 1643. 第 K 条最小指令【困难】","link":"/notes/1643. 第 K 条最小指令【困难】/README"},{"text":"⏰ 1644. 二叉树的最近公共祖先 II【中等】","link":"/notes/1644. 二叉树的最近公共祖先 II【中等】/README"},{"text":"⏰ 1645. Hopper 公司查询 II【困难】","link":"/notes/1645. Hopper 公司查询 II【困难】/README"},{"text":"⏰ 1646. 获取生成数组中的最大值【简单】","link":"/notes/1646. 获取生成数组中的最大值【简单】/README"},{"text":"⏰ 1647. 字符频次唯一的最小删除次数【中等】","link":"/notes/1647. 字符频次唯一的最小删除次数【中等】/README"},{"text":"⏰ 1648. 销售价值减少的颜色球【中等】","link":"/notes/1648. 销售价值减少的颜色球【中等】/README"},{"text":"⏰ 1649. 通过指令创建有序数组【困难】","link":"/notes/1649. 通过指令创建有序数组【困难】/README"},{"text":"⏰ 1650. 二叉树的最近公共祖先 III【中等】","link":"/notes/1650. 二叉树的最近公共祖先 III【中等】/README"},{"text":"⏰ 1651. Hopper 公司查询 III【困难】","link":"/notes/1651. Hopper 公司查询 III【困难】/README"},{"text":"⏰ 1652. 拆炸弹【简单】","link":"/notes/1652. 拆炸弹【简单】/README"},{"text":"⏰ 1653. 使字符串平衡的最少删除次数【中等】","link":"/notes/1653. 使字符串平衡的最少删除次数【中等】/README"},{"text":"⏰ 1654. 到家的最少跳跃次数【中等】","link":"/notes/1654. 到家的最少跳跃次数【中等】/README"},{"text":"⏰ 1655. 分配重复整数【困难】","link":"/notes/1655. 分配重复整数【困难】/README"},{"text":"⏰ 1656. 设计有序流【简单】","link":"/notes/1656. 设计有序流【简单】/README"},{"text":"⏰ 1657. 确定两个字符串是否接近【中等】","link":"/notes/1657. 确定两个字符串是否接近【中等】/README"},{"text":"⏰ 1658. 将 x 减到 0 的最小操作数【中等】","link":"/notes/1658. 将 x 减到 0 的最小操作数【中等】/README"},{"text":"⏰ 1659. 最大化网格幸福感【困难】","link":"/notes/1659. 最大化网格幸福感【困难】/README"},{"text":"⏰ 1660. 纠正二叉树【中等】","link":"/notes/1660. 纠正二叉树【中等】/README"},{"text":"⏰ 1661. 每台机器的进程平均运行时间【简单】","link":"/notes/1661. 每台机器的进程平均运行时间【简单】/README"},{"text":"⏰ 1662. 检查两个字符串数组是否相等【简单】","link":"/notes/1662. 检查两个字符串数组是否相等【简单】/README"},{"text":"⏰ 1663. 具有给定数值的最小字符串【中等】","link":"/notes/1663. 具有给定数值的最小字符串【中等】/README"},{"text":"⏰ 1664. 生成平衡数组的方案数【中等】","link":"/notes/1664. 生成平衡数组的方案数【中等】/README"},{"text":"⏰ 1665. 完成所有任务的最少初始能量【困难】","link":"/notes/1665. 完成所有任务的最少初始能量【困难】/README"},{"text":"⏰ 1666. 改变二叉树的根节点【中等】","link":"/notes/1666. 改变二叉树的根节点【中等】/README"},{"text":"⏰ 1667. 修复表中的名字【简单】","link":"/notes/1667. 修复表中的名字【简单】/README"},{"text":"⏰ 1668. 最大重复子字符串【简单】","link":"/notes/1668. 最大重复子字符串【简单】/README"},{"text":"⏰ 1669. 合并两个链表【中等】","link":"/notes/1669. 合并两个链表【中等】/README"},{"text":"⏰ 1670. 设计前中后队列【中等】","link":"/notes/1670. 设计前中后队列【中等】/README"},{"text":"⏰ 1671. 得到山形数组的最少删除次数【困难】","link":"/notes/1671. 得到山形数组的最少删除次数【困难】/README"},{"text":"⏰ 1672. 最富有客户的资产总量【简单】","link":"/notes/1672. 最富有客户的资产总量【简单】/README"},{"text":"⏰ 1673. 找出最具竞争力的子序列【中等】","link":"/notes/1673. 找出最具竞争力的子序列【中等】/README"},{"text":"⏰ 1674. 使数组互补的最少操作次数【中等】","link":"/notes/1674. 使数组互补的最少操作次数【中等】/README"},{"text":"⏰ 1675. 数组的最小偏移量【困难】","link":"/notes/1675. 数组的最小偏移量【困难】/README"},{"text":"⏰ 1676. 二叉树的最近公共祖先 IV【中等】","link":"/notes/1676. 二叉树的最近公共祖先 IV【中等】/README"},{"text":"⏰ 1677. 发票中的产品金额【简单】","link":"/notes/1677. 发票中的产品金额【简单】/README"},{"text":"⏰ 1678. 设计 Goal 解析器【简单】","link":"/notes/1678. 设计 Goal 解析器【简单】/README"},{"text":"⏰ 1679. K 和数对的最大数目【中等】","link":"/notes/1679. K 和数对的最大数目【中等】/README"},{"text":"⏰ 1680. 连接连续二进制数字【中等】","link":"/notes/1680. 连接连续二进制数字【中等】/README"},{"text":"⏰ 1681. 最小不兼容性【困难】","link":"/notes/1681. 最小不兼容性【困难】/README"},{"text":"⏰ 1682. 最长回文子序列 II【中等】","link":"/notes/1682. 最长回文子序列 II【中等】/README"},{"text":"⏰ 1683. 无效的推文【简单】","link":"/notes/1683. 无效的推文【简单】/README"},{"text":"✅ 1684. 统计一致字符串的数目【简单】","link":"/notes/1684. 统计一致字符串的数目【简单】/README"},{"text":"⏰ 1685. 有序数组中差绝对值之和【中等】","link":"/notes/1685. 有序数组中差绝对值之和【中等】/README"},{"text":"⏰ 1686. 石子游戏 VI【中等】","link":"/notes/1686. 石子游戏 VI【中等】/README"},{"text":"⏰ 1687. 从仓库到码头运输箱子【困难】","link":"/notes/1687. 从仓库到码头运输箱子【困难】/README"},{"text":"⏰ 1688. 比赛中的配对次数【简单】","link":"/notes/1688. 比赛中的配对次数【简单】/README"},{"text":"⏰ 1689. 十-二进制数的最少数目【中等】","link":"/notes/1689. 十-二进制数的最少数目【中等】/README"},{"text":"⏰ 1690. 石子游戏 VII【中等】","link":"/notes/1690. 石子游戏 VII【中等】/README"},{"text":"⏰ 1691. 堆叠长方体的最大高度【困难】","link":"/notes/1691. 堆叠长方体的最大高度【困难】/README"},{"text":"⏰ 1692. 计算分配糖果的不同方式【困难】","link":"/notes/1692. 计算分配糖果的不同方式【困难】/README"},{"text":"⏰ 1693. 每天的领导和合伙人【简单】","link":"/notes/1693. 每天的领导和合伙人【简单】/README"},{"text":"⏰ 1694. 重新格式化电话号码【简单】","link":"/notes/1694. 重新格式化电话号码【简单】/README"},{"text":"⏰ 1695. 删除子数组的最大得分【中等】","link":"/notes/1695. 删除子数组的最大得分【中等】/README"},{"text":"⏰ 1696. 跳跃游戏 VI【中等】","link":"/notes/1696. 跳跃游戏 VI【中等】/README"},{"text":"⏰ 1697. 检查边长度限制的路径是否存在【困难】","link":"/notes/1697. 检查边长度限制的路径是否存在【困难】/README"},{"text":"⏰ 1698. 字符串的不同子字符串个数【中等】","link":"/notes/1698. 字符串的不同子字符串个数【中等】/README"},{"text":"⏰ 1699. 两人之间的通话次数【中等】","link":"/notes/1699. 两人之间的通话次数【中等】/README"},{"text":"⏰ 1700. 无法吃午餐的学生数量【简单】","link":"/notes/1700. 无法吃午餐的学生数量【简单】/README"}]},{"text":"19. 1701~1800","collapsed":true,"items":[{"text":"⏰ 1701. 平均等待时间【中等】","link":"/notes/1701. 平均等待时间【中等】/README"},{"text":"⏰ 1702. 修改后的最大二进制字符串【中等】","link":"/notes/1702. 修改后的最大二进制字符串【中等】/README"},{"text":"⏰ 1703. 得到连续 K 个 1 的最少相邻交换次数【困难】","link":"/notes/1703. 得到连续 K 个 1 的最少相邻交换次数【困难】/README"},{"text":"⏰ 1704. 判断字符串的两半是否相似【简单】","link":"/notes/1704. 判断字符串的两半是否相似【简单】/README"},{"text":"⏰ 1705. 吃苹果的最大数目【中等】","link":"/notes/1705. 吃苹果的最大数目【中等】/README"},{"text":"⏰ 1706. 球会落何处【中等】","link":"/notes/1706. 球会落何处【中等】/README"},{"text":"⏰ 1707. 与数组中元素的最大异或值【困难】","link":"/notes/1707. 与数组中元素的最大异或值【困难】/README"},{"text":"⏰ 1708. 长度为 K 的最大子数组【简单】","link":"/notes/1708. 长度为 K 的最大子数组【简单】/README"},{"text":"⏰ 1709. 访问日期之间最大的空档期【中等】","link":"/notes/1709. 访问日期之间最大的空档期【中等】/README"},{"text":"⏰ 1710. 卡车上的最大单元数【简单】","link":"/notes/1710. 卡车上的最大单元数【简单】/README"},{"text":"⏰ 1711. 大餐计数【中等】","link":"/notes/1711. 大餐计数【中等】/README"},{"text":"⏰ 1712. 将数组分成三个子数组的方案数【中等】","link":"/notes/1712. 将数组分成三个子数组的方案数【中等】/README"},{"text":"⏰ 1713. 得到子序列的最少操作次数【困难】","link":"/notes/1713. 得到子序列的最少操作次数【困难】/README"},{"text":"⏰ 1714. 数组中特殊等间距元素的和【困难】","link":"/notes/1714. 数组中特殊等间距元素的和【困难】/README"},{"text":"⏰ 1715. 苹果和橘子的个数【中等】","link":"/notes/1715. 苹果和橘子的个数【中等】/README"},{"text":"⏰ 1716. 计算力扣银行的钱【简单】","link":"/notes/1716. 计算力扣银行的钱【简单】/README"},{"text":"⏰ 1717. 删除子字符串的最大得分【中等】","link":"/notes/1717. 删除子字符串的最大得分【中等】/README"},{"text":"⏰ 1718. 构建字典序最大的可行序列【中等】","link":"/notes/1718. 构建字典序最大的可行序列【中等】/README"},{"text":"⏰ 1719. 重构一棵树的方案数【困难】","link":"/notes/1719. 重构一棵树的方案数【困难】/README"},{"text":"⏰ 1720. 解码异或后的数组【简单】","link":"/notes/1720. 解码异或后的数组【简单】/README"},{"text":"⏰ 1721. 交换链表中的节点【中等】","link":"/notes/1721. 交换链表中的节点【中等】/README"},{"text":"⏰ 1722. 执行交换操作后的最小汉明距离【中等】","link":"/notes/1722. 执行交换操作后的最小汉明距离【中等】/README"},{"text":"⏰ 1723. 完成所有工作的最短时间【困难】","link":"/notes/1723. 完成所有工作的最短时间【困难】/README"},{"text":"⏰ 1724. 检查边长度限制的路径是否存在 II【困难】","link":"/notes/1724. 检查边长度限制的路径是否存在 II【困难】/README"},{"text":"⏰ 1725. 可以形成最大正方形的矩形数目【简单】","link":"/notes/1725. 可以形成最大正方形的矩形数目【简单】/README"},{"text":"⏰ 1726. 同积元组【中等】","link":"/notes/1726. 同积元组【中等】/README"},{"text":"⏰ 1727. 重新排列后的最大子矩阵【中等】","link":"/notes/1727. 重新排列后的最大子矩阵【中等】/README"},{"text":"⏰ 1728. 猫和老鼠 II【困难】","link":"/notes/1728. 猫和老鼠 II【困难】/README"},{"text":"⏰ 1729. 求关注者的数量【简单】","link":"/notes/1729. 求关注者的数量【简单】/README"},{"text":"⏰ 1730. 获取食物的最短路径【中等】","link":"/notes/1730. 获取食物的最短路径【中等】/README"},{"text":"⏰ 1731. 每位经理的下属员工数量【简单】","link":"/notes/1731. 每位经理的下属员工数量【简单】/README"},{"text":"⏰ 1732. 找到最高海拔【简单】","link":"/notes/1732. 找到最高海拔【简单】/README"},{"text":"⏰ 1733. 需要教语言的最少人数【中等】","link":"/notes/1733. 需要教语言的最少人数【中等】/README"},{"text":"⏰ 1734. 解码异或后的排列【中等】","link":"/notes/1734. 解码异或后的排列【中等】/README"},{"text":"⏰ 1735. 生成乘积数组的方案数【困难】","link":"/notes/1735. 生成乘积数组的方案数【困难】/README"},{"text":"⏰ 1736. 替换隐藏数字得到的最晚时间【简单】","link":"/notes/1736. 替换隐藏数字得到的最晚时间【简单】/README"},{"text":"⏰ 1737. 满足三条件之一需改变的最少字符数【中等】","link":"/notes/1737. 满足三条件之一需改变的最少字符数【中等】/README"},{"text":"⏰ 1738. 找出第 K 大的异或坐标值【中等】","link":"/notes/1738. 找出第 K 大的异或坐标值【中等】/README"},{"text":"⏰ 1739. 放置盒子【困难】","link":"/notes/1739. 放置盒子【困难】/README"},{"text":"⏰ 1740. 找到二叉树中的距离【中等】","link":"/notes/1740. 找到二叉树中的距离【中等】/README"},{"text":"⏰ 1741. 查找每个员工花费的总时间【简单】","link":"/notes/1741. 查找每个员工花费的总时间【简单】/README"},{"text":"⏰ 1742. 盒子中小球的最大数量【简单】","link":"/notes/1742. 盒子中小球的最大数量【简单】/README"},{"text":"⏰ 1743. 从相邻元素对还原数组【中等】","link":"/notes/1743. 从相邻元素对还原数组【中等】/README"},{"text":"⏰ 1744. 你能在你最喜欢的那天吃到你最喜欢的糖果吗？【中等】","link":"/notes/1744. 你能在你最喜欢的那天吃到你最喜欢的糖果吗？【中等】/README"},{"text":"⏰ 1745. 分割回文串 IV【困难】","link":"/notes/1745. 分割回文串 IV【困难】/README"},{"text":"⏰ 1746. 经过一次操作后的最大子数组和【中等】","link":"/notes/1746. 经过一次操作后的最大子数组和【中等】/README"},{"text":"⏰ 1747. 应该被禁止的 Leetflex 账户【中等】","link":"/notes/1747. 应该被禁止的 Leetflex 账户【中等】/README"},{"text":"⏰ 1748. 唯一元素的和【简单】","link":"/notes/1748. 唯一元素的和【简单】/README"},{"text":"⏰ 1749. 任意子数组和的绝对值的最大值【中等】","link":"/notes/1749. 任意子数组和的绝对值的最大值【中等】/README"},{"text":"⏰ 1750. 删除字符串两端相同字符后的最短长度【中等】","link":"/notes/1750. 删除字符串两端相同字符后的最短长度【中等】/README"},{"text":"⏰ 1751. 最多可以参加的会议数目 II【困难】","link":"/notes/1751. 最多可以参加的会议数目 II【困难】/README"},{"text":"⏰ 1752. 检查数组是否经排序和轮转得到【简单】","link":"/notes/1752. 检查数组是否经排序和轮转得到【简单】/README"},{"text":"⏰ 1753. 移除石子的最大得分【中等】","link":"/notes/1753. 移除石子的最大得分【中等】/README"},{"text":"⏰ 1754. 构造字典序最大的合并字符串【中等】","link":"/notes/1754. 构造字典序最大的合并字符串【中等】/README"},{"text":"⏰ 1755. 最接近目标值的子序列和【困难】","link":"/notes/1755. 最接近目标值的子序列和【困难】/README"},{"text":"⏰ 1756. 设计最近使用（MRU）队列【中等】","link":"/notes/1756. 设计最近使用（MRU）队列【中等】/README"},{"text":"⏰ 1757. 可回收且低脂的产品【简单】","link":"/notes/1757. 可回收且低脂的产品【简单】/README"},{"text":"⏰ 1758. 生成交替二进制字符串的最少操作数【简单】","link":"/notes/1758. 生成交替二进制字符串的最少操作数【简单】/README"},{"text":"⏰ 1759. 统计同质子字符串的数目【中等】","link":"/notes/1759. 统计同质子字符串的数目【中等】/README"},{"text":"⏰ 1760. 袋子里最少数目的球【中等】","link":"/notes/1760. 袋子里最少数目的球【中等】/README"},{"text":"⏰ 1761. 一个图中连通三元组的最小度数【困难】","link":"/notes/1761. 一个图中连通三元组的最小度数【困难】/README"},{"text":"⏰ 1762. 能看到海景的建筑物【中等】","link":"/notes/1762. 能看到海景的建筑物【中等】/README"},{"text":"⏰ 1763. 最长的美好子字符串【简单】","link":"/notes/1763. 最长的美好子字符串【简单】/README"},{"text":"⏰ 1764. 通过连接另一个数组的子数组得到一个数组【中等】","link":"/notes/1764. 通过连接另一个数组的子数组得到一个数组【中等】/README"},{"text":"⏰ 1765. 地图中的最高点【中等】","link":"/notes/1765. 地图中的最高点【中等】/README"},{"text":"⏰ 1766. 互质树【困难】","link":"/notes/1766. 互质树【困难】/README"},{"text":"⏰ 1767. 寻找没有被执行的任务对【困难】","link":"/notes/1767. 寻找没有被执行的任务对【困难】/README"},{"text":"⏰ 1768. 交替合并字符串【简单】","link":"/notes/1768. 交替合并字符串【简单】/README"},{"text":"⏰ 1769. 移动所有球到每个盒子所需的最小操作数【中等】","link":"/notes/1769. 移动所有球到每个盒子所需的最小操作数【中等】/README"},{"text":"⏰ 1770. 执行乘法运算的最大分数【困难】","link":"/notes/1770. 执行乘法运算的最大分数【困难】/README"},{"text":"⏰ 1771. 由子序列构造的最长回文串的长度【困难】","link":"/notes/1771. 由子序列构造的最长回文串的长度【困难】/README"},{"text":"⏰ 1772. 按受欢迎程度排列功能【中等】","link":"/notes/1772. 按受欢迎程度排列功能【中等】/README"},{"text":"⏰ 1773. 统计匹配检索规则的物品数量【简单】","link":"/notes/1773. 统计匹配检索规则的物品数量【简单】/README"},{"text":"⏰ 1774. 最接近目标价格的甜点成本【中等】","link":"/notes/1774. 最接近目标价格的甜点成本【中等】/README"},{"text":"⏰ 1775. 通过最少操作次数使数组的和相等【中等】","link":"/notes/1775. 通过最少操作次数使数组的和相等【中等】/README"},{"text":"⏰ 1776. 车队 II【困难】","link":"/notes/1776. 车队 II【困难】/README"},{"text":"⏰ 1777. 每家商店的产品价格【简单】","link":"/notes/1777. 每家商店的产品价格【简单】/README"},{"text":"⏰ 1778. 未知网格中的最短路径【中等】","link":"/notes/1778. 未知网格中的最短路径【中等】/README"},{"text":"⏰ 1779. 找到最近的有相同 X 或 Y 坐标的点【简单】","link":"/notes/1779. 找到最近的有相同 X 或 Y 坐标的点【简单】/README"},{"text":"⏰ 1780. 判断一个数字是否可以表示成三的幂的和【中等】","link":"/notes/1780. 判断一个数字是否可以表示成三的幂的和【中等】/README"},{"text":"⏰ 1781. 所有子字符串美丽值之和【中等】","link":"/notes/1781. 所有子字符串美丽值之和【中等】/README"},{"text":"⏰ 1782. 统计点对的数目【困难】","link":"/notes/1782. 统计点对的数目【困难】/README"},{"text":"⏰ 1783. 大满贯数量【中等】","link":"/notes/1783. 大满贯数量【中等】/README"},{"text":"⏰ 1784. 检查二进制字符串字段【简单】","link":"/notes/1784. 检查二进制字符串字段【简单】/README"},{"text":"⏰ 1785. 构成特定和需要添加的最少元素【中等】","link":"/notes/1785. 构成特定和需要添加的最少元素【中等】/README"},{"text":"⏰ 1786. 从第一个节点出发到最后一个节点的受限路径数【中等】","link":"/notes/1786. 从第一个节点出发到最后一个节点的受限路径数【中等】/README"},{"text":"⏰ 1787. 使所有区间的异或结果为零【困难】","link":"/notes/1787. 使所有区间的异或结果为零【困难】/README"},{"text":"⏰ 1788. 最大化花园的美观度【困难】","link":"/notes/1788. 最大化花园的美观度【困难】/README"},{"text":"⏰ 1789. 员工的直属部门【简单】","link":"/notes/1789. 员工的直属部门【简单】/README"},{"text":"⏰ 1790. 仅执行一次字符串交换能否使两个字符串相等【简单】","link":"/notes/1790. 仅执行一次字符串交换能否使两个字符串相等【简单】/README"},{"text":"⏰ 1791. 找出星型图的中心节点【简单】","link":"/notes/1791. 找出星型图的中心节点【简单】/README"},{"text":"⏰ 1792. 最大平均通过率【中等】","link":"/notes/1792. 最大平均通过率【中等】/README"},{"text":"⏰ 1793. 好子数组的最大分数【困难】","link":"/notes/1793. 好子数组的最大分数【困难】/README"},{"text":"⏰ 1794. 统计距离最小的子串对个数【中等】","link":"/notes/1794. 统计距离最小的子串对个数【中等】/README"},{"text":"⏰ 1795. 每个产品在不同商店的价格【简单】","link":"/notes/1795. 每个产品在不同商店的价格【简单】/README"},{"text":"⏰ 1796. 字符串中第二大的数字【简单】","link":"/notes/1796. 字符串中第二大的数字【简单】/README"},{"text":"⏰ 1797. 设计一个验证系统【中等】","link":"/notes/1797. 设计一个验证系统【中等】/README"},{"text":"⏰ 1798. 你能构造出连续值的最大数目【中等】","link":"/notes/1798. 你能构造出连续值的最大数目【中等】/README"},{"text":"⏰ 1799. N 次操作后的最大分数和【困难】","link":"/notes/1799. N 次操作后的最大分数和【困难】/README"},{"text":"⏰ 1800. 最大升序子数组和【简单】","link":"/notes/1800. 最大升序子数组和【简单】/README"}]},{"text":"20. 1801~1900","collapsed":true,"items":[{"text":"⏰ 1801. 积压订单中的订单总数【中等】","link":"/notes/1801. 积压订单中的订单总数【中等】/README"},{"text":"⏰ 1802. 有界数组中指定下标处的最大值【中等】","link":"/notes/1802. 有界数组中指定下标处的最大值【中等】/README"},{"text":"⏰ 1803. 统计异或值在范围内的数对有多少【困难】","link":"/notes/1803. 统计异或值在范围内的数对有多少【困难】/README"},{"text":"⏰ 1804. 实现 Trie （前缀树） II【中等】","link":"/notes/1804. 实现 Trie （前缀树） II【中等】/README"},{"text":"⏰ 1805. 字符串中不同整数的数目【简单】","link":"/notes/1805. 字符串中不同整数的数目【简单】/README"},{"text":"⏰ 1806. 还原排列的最少操作步数【中等】","link":"/notes/1806. 还原排列的最少操作步数【中等】/README"},{"text":"⏰ 1807. 替换字符串中的括号内容【中等】","link":"/notes/1807. 替换字符串中的括号内容【中等】/README"},{"text":"⏰ 1808. 好因子的最大数目【困难】","link":"/notes/1808. 好因子的最大数目【困难】/README"},{"text":"⏰ 1809. 没有广告的剧集【简单】","link":"/notes/1809. 没有广告的剧集【简单】/README"},{"text":"⏰ 1810. 隐藏网格下的最小消耗路径【中等】","link":"/notes/1810. 隐藏网格下的最小消耗路径【中等】/README"},{"text":"⏰ 1811. 寻找面试候选人【中等】","link":"/notes/1811. 寻找面试候选人【中等】/README"},{"text":"⏰ 1812. 判断国际象棋棋盘中一个格子的颜色【简单】","link":"/notes/1812. 判断国际象棋棋盘中一个格子的颜色【简单】/README"},{"text":"⏰ 1813. 句子相似性 III【中等】","link":"/notes/1813. 句子相似性 III【中等】/README"},{"text":"⏰ 1814. 统计一个数组中好对子的数目【中等】","link":"/notes/1814. 统计一个数组中好对子的数目【中等】/README"},{"text":"⏰ 1815. 得到新鲜甜甜圈的最多组数【困难】","link":"/notes/1815. 得到新鲜甜甜圈的最多组数【困难】/README"},{"text":"⏰ 1816. 截断句子【简单】","link":"/notes/1816. 截断句子【简单】/README"},{"text":"⏰ 1817. 查找用户活跃分钟数【中等】","link":"/notes/1817. 查找用户活跃分钟数【中等】/README"},{"text":"⏰ 1818. 绝对差值和【中等】","link":"/notes/1818. 绝对差值和【中等】/README"},{"text":"⏰ 1819. 序列中不同最大公约数的数目【困难】","link":"/notes/1819. 序列中不同最大公约数的数目【困难】/README"},{"text":"⏰ 1820. 最多邀请的个数【中等】","link":"/notes/1820. 最多邀请的个数【中等】/README"},{"text":"⏰ 1821. 寻找今年具有正收入的客户【简单】","link":"/notes/1821. 寻找今年具有正收入的客户【简单】/README"},{"text":"⏰ 1822. 数组元素积的符号【简单】","link":"/notes/1822. 数组元素积的符号【简单】/README"},{"text":"⏰ 1823. 找出游戏的获胜者【中等】","link":"/notes/1823. 找出游戏的获胜者【中等】/README"},{"text":"⏰ 1824. 最少侧跳次数【中等】","link":"/notes/1824. 最少侧跳次数【中等】/README"},{"text":"⏰ 1825. 求出 MK 平均值【困难】","link":"/notes/1825. 求出 MK 平均值【困难】/README"},{"text":"⏰ 1826. 有缺陷的传感器【简单】","link":"/notes/1826. 有缺陷的传感器【简单】/README"},{"text":"⏰ 1827. 最少操作使数组递增【简单】","link":"/notes/1827. 最少操作使数组递增【简单】/README"},{"text":"⏰ 1828. 统计一个圆中点的数目【中等】","link":"/notes/1828. 统计一个圆中点的数目【中等】/README"},{"text":"⏰ 1829. 每个查询的最大异或值【中等】","link":"/notes/1829. 每个查询的最大异或值【中等】/README"},{"text":"⏰ 1830. 使字符串有序的最少操作次数【困难】","link":"/notes/1830. 使字符串有序的最少操作次数【困难】/README"},{"text":"⏰ 1831. 每天的最大交易【中等】","link":"/notes/1831. 每天的最大交易【中等】/README"},{"text":"⏰ 1832. 判断句子是否为全字母句【简单】","link":"/notes/1832. 判断句子是否为全字母句【简单】/README"},{"text":"⏰ 1833. 雪糕的最大数量【中等】","link":"/notes/1833. 雪糕的最大数量【中等】/README"},{"text":"⏰ 1834. 单线程 CPU【中等】","link":"/notes/1834. 单线程 CPU【中等】/README"},{"text":"⏰ 1835. 所有数对按位与结果的异或和【困难】","link":"/notes/1835. 所有数对按位与结果的异或和【困难】/README"},{"text":"⏰ 1836. 从未排序的链表中移除重复元素【中等】","link":"/notes/1836. 从未排序的链表中移除重复元素【中等】/README"},{"text":"⏰ 1837. K 进制表示下的各位数字总和【简单】","link":"/notes/1837. K 进制表示下的各位数字总和【简单】/README"},{"text":"⏰ 1838. 最高频元素的频数【中等】","link":"/notes/1838. 最高频元素的频数【中等】/README"},{"text":"⏰ 1839. 所有元音按顺序排布的最长子字符串【中等】","link":"/notes/1839. 所有元音按顺序排布的最长子字符串【中等】/README"},{"text":"⏰ 1840. 最高建筑高度【困难】","link":"/notes/1840. 最高建筑高度【困难】/README"},{"text":"⏰ 1841. 联赛信息统计【中等】","link":"/notes/1841. 联赛信息统计【中等】/README"},{"text":"⏰ 1842. 下个由相同数字构成的回文串【困难】","link":"/notes/1842. 下个由相同数字构成的回文串【困难】/README"},{"text":"⏰ 1843. 可疑银行账户【中等】","link":"/notes/1843. 可疑银行账户【中等】/README"},{"text":"⏰ 1844. 将所有数字用字符替换【简单】","link":"/notes/1844. 将所有数字用字符替换【简单】/README"},{"text":"⏰ 1845. 座位预约管理系统【中等】","link":"/notes/1845. 座位预约管理系统【中等】/README"},{"text":"⏰ 1846. 减小和重新排列数组后的最大元素【中等】","link":"/notes/1846. 减小和重新排列数组后的最大元素【中等】/README"},{"text":"⏰ 1847. 最近的房间【困难】","link":"/notes/1847. 最近的房间【困难】/README"},{"text":"⏰ 1848. 到目标元素的最小距离【简单】","link":"/notes/1848. 到目标元素的最小距离【简单】/README"},{"text":"⏰ 1849. 将字符串拆分为递减的连续值【中等】","link":"/notes/1849. 将字符串拆分为递减的连续值【中等】/README"},{"text":"⏰ 1850. 邻位交换的最小次数【中等】","link":"/notes/1850. 邻位交换的最小次数【中等】/README"},{"text":"⏰ 1851. 包含每个查询的最小区间【困难】","link":"/notes/1851. 包含每个查询的最小区间【困难】/README"},{"text":"⏰ 1852. 每个子数组的数字种类数【中等】","link":"/notes/1852. 每个子数组的数字种类数【中等】/README"},{"text":"⏰ 1853. 转换日期格式【简单】","link":"/notes/1853. 转换日期格式【简单】/README"},{"text":"⏰ 1854. 人口最多的年份【简单】","link":"/notes/1854. 人口最多的年份【简单】/README"},{"text":"⏰ 1855. 下标对中的最大距离【中等】","link":"/notes/1855. 下标对中的最大距离【中等】/README"},{"text":"⏰ 1856. 子数组最小乘积的最大值【中等】","link":"/notes/1856. 子数组最小乘积的最大值【中等】/README"},{"text":"⏰ 1857. 有向图中最大颜色值【困难】","link":"/notes/1857. 有向图中最大颜色值【困难】/README"},{"text":"⏰ 1858. 包含所有前缀的最长单词【中等】","link":"/notes/1858. 包含所有前缀的最长单词【中等】/README"},{"text":"⏰ 1859. 将句子排序【简单】","link":"/notes/1859. 将句子排序【简单】/README"},{"text":"⏰ 1860. 增长的内存泄露【中等】","link":"/notes/1860. 增长的内存泄露【中等】/README"},{"text":"⏰ 1861. 旋转盒子【中等】","link":"/notes/1861. 旋转盒子【中等】/README"},{"text":"⏰ 1862. 向下取整数对和【困难】","link":"/notes/1862. 向下取整数对和【困难】/README"},{"text":"⏰ 1863. 找出所有子集的异或总和再求和【简单】","link":"/notes/1863. 找出所有子集的异或总和再求和【简单】/README"},{"text":"⏰ 1864. 构成交替字符串需要的最小交换次数【中等】","link":"/notes/1864. 构成交替字符串需要的最小交换次数【中等】/README"},{"text":"⏰ 1865. 找出和为指定值的下标对【中等】","link":"/notes/1865. 找出和为指定值的下标对【中等】/README"},{"text":"⏰ 1866. 恰有 K 根木棍可以看到的排列数目【困难】","link":"/notes/1866. 恰有 K 根木棍可以看到的排列数目【困难】/README"},{"text":"⏰ 1867. 最大数量高于平均水平的订单【中等】","link":"/notes/1867. 最大数量高于平均水平的订单【中等】/README"},{"text":"⏰ 1868. 两个行程编码数组的积【中等】","link":"/notes/1868. 两个行程编码数组的积【中等】/README"},{"text":"⏰ 1869. 哪种连续子字符串更长【简单】","link":"/notes/1869. 哪种连续子字符串更长【简单】/README"},{"text":"⏰ 1870. 准时到达的列车最小时速【中等】","link":"/notes/1870. 准时到达的列车最小时速【中等】/README"},{"text":"⏰ 1871. 跳跃游戏 VII【中等】","link":"/notes/1871. 跳跃游戏 VII【中等】/README"},{"text":"⏰ 1872. 石子游戏 VIII【困难】","link":"/notes/1872. 石子游戏 VIII【困难】/README"},{"text":"⏰ 1873. 计算特殊奖金【简单】","link":"/notes/1873. 计算特殊奖金【简单】/README"},{"text":"⏰ 1874. 两个数组的最小乘积和【中等】","link":"/notes/1874. 两个数组的最小乘积和【中等】/README"},{"text":"⏰ 1875. 将工资相同的雇员分组【中等】","link":"/notes/1875. 将工资相同的雇员分组【中等】/README"},{"text":"⏰ 1876. 长度为三且各字符不同的子字符串【简单】","link":"/notes/1876. 长度为三且各字符不同的子字符串【简单】/README"},{"text":"⏰ 1877. 数组中最大数对和的最小值【中等】","link":"/notes/1877. 数组中最大数对和的最小值【中等】/README"},{"text":"⏰ 1878. 矩阵中最大的三个菱形和【中等】","link":"/notes/1878. 矩阵中最大的三个菱形和【中等】/README"},{"text":"⏰ 1879. 两个数组最小的异或值之和【困难】","link":"/notes/1879. 两个数组最小的异或值之和【困难】/README"},{"text":"⏰ 1880. 检查某单词是否等于两单词之和【简单】","link":"/notes/1880. 检查某单词是否等于两单词之和【简单】/README"},{"text":"⏰ 1881. 插入后的最大值【中等】","link":"/notes/1881. 插入后的最大值【中等】/README"},{"text":"⏰ 1882. 使用服务器处理任务【中等】","link":"/notes/1882. 使用服务器处理任务【中等】/README"},{"text":"⏰ 1883. 准时抵达会议现场的最小跳过休息次数【困难】","link":"/notes/1883. 准时抵达会议现场的最小跳过休息次数【困难】/README"},{"text":"⏰ 1884. 鸡蛋掉落-两枚鸡蛋【中等】","link":"/notes/1884. 鸡蛋掉落-两枚鸡蛋【中等】/README"},{"text":"⏰ 1885. 统计数对【中等】","link":"/notes/1885. 统计数对【中等】/README"},{"text":"⏰ 1886. 判断矩阵经轮转后是否一致【简单】","link":"/notes/1886. 判断矩阵经轮转后是否一致【简单】/README"},{"text":"⏰ 1887. 使数组元素相等的减少操作次数【中等】","link":"/notes/1887. 使数组元素相等的减少操作次数【中等】/README"},{"text":"⏰ 1888. 使二进制字符串字符交替的最少反转次数【中等】","link":"/notes/1888. 使二进制字符串字符交替的最少反转次数【中等】/README"},{"text":"⏰ 1889. 装包裹的最小浪费空间【困难】","link":"/notes/1889. 装包裹的最小浪费空间【困难】/README"},{"text":"⏰ 1890. 2020年最后一次登录【简单】","link":"/notes/1890. 2020年最后一次登录【简单】/README"},{"text":"⏰ 1891. 割绳子【中等】","link":"/notes/1891. 割绳子【中等】/README"},{"text":"⏰ 1892. 页面推荐Ⅱ【困难】","link":"/notes/1892. 页面推荐Ⅱ【困难】/README"},{"text":"⏰ 1893. 检查是否区域内所有整数都被覆盖【简单】","link":"/notes/1893. 检查是否区域内所有整数都被覆盖【简单】/README"},{"text":"⏰ 1894. 找到需要补充粉笔的学生编号【中等】","link":"/notes/1894. 找到需要补充粉笔的学生编号【中等】/README"},{"text":"⏰ 1895. 最大的幻方【中等】","link":"/notes/1895. 最大的幻方【中等】/README"},{"text":"⏰ 1896. 反转表达式值的最少操作次数【困难】","link":"/notes/1896. 反转表达式值的最少操作次数【困难】/README"},{"text":"⏰ 1897. 重新分配字符使所有字符串都相等【简单】","link":"/notes/1897. 重新分配字符使所有字符串都相等【简单】/README"},{"text":"⏰ 1898. 可移除字符的最大数目【中等】","link":"/notes/1898. 可移除字符的最大数目【中等】/README"},{"text":"⏰ 1899. 合并若干三元组以形成目标三元组【中等】","link":"/notes/1899. 合并若干三元组以形成目标三元组【中等】/README"},{"text":"⏰ 1900. 最佳运动员的比拼回合【困难】","link":"/notes/1900. 最佳运动员的比拼回合【困难】/README"}]},{"text":"21. 1901~2000","collapsed":true,"items":[{"text":"⏰ 1901. 寻找峰值 II【中等】","link":"/notes/1901. 寻找峰值 II【中等】/README"},{"text":"⏰ 1902. 给定二叉搜索树的插入顺序求深度【中等】","link":"/notes/1902. 给定二叉搜索树的插入顺序求深度【中等】/README"},{"text":"⏰ 1903. 字符串中的最大奇数【简单】","link":"/notes/1903. 字符串中的最大奇数【简单】/README"},{"text":"⏰ 1904. 你完成的完整对局数【中等】","link":"/notes/1904. 你完成的完整对局数【中等】/README"},{"text":"⏰ 1905. 统计子岛屿【中等】","link":"/notes/1905. 统计子岛屿【中等】/README"},{"text":"⏰ 1906. 查询差绝对值的最小值【中等】","link":"/notes/1906. 查询差绝对值的最小值【中等】/README"},{"text":"⏰ 1907. 按分类统计薪水【中等】","link":"/notes/1907. 按分类统计薪水【中等】/README"},{"text":"⏰ 1908. Nim 游戏 II【中等】","link":"/notes/1908. Nim 游戏 II【中等】/README"},{"text":"⏰ 1909. 删除一个元素使数组严格递增【简单】","link":"/notes/1909. 删除一个元素使数组严格递增【简单】/README"},{"text":"⏰ 1910. 删除一个字符串中所有出现的给定子字符串【中等】","link":"/notes/1910. 删除一个字符串中所有出现的给定子字符串【中等】/README"},{"text":"⏰ 1911. 最大交替子序列和【中等】","link":"/notes/1911. 最大交替子序列和【中等】/README"},{"text":"⏰ 1912. 设计电影租借系统【困难】","link":"/notes/1912. 设计电影租借系统【困难】/README"},{"text":"⏰ 1913. 两个数对之间的最大乘积差【简单】","link":"/notes/1913. 两个数对之间的最大乘积差【简单】/README"},{"text":"⏰ 1914. 循环轮转矩阵【中等】","link":"/notes/1914. 循环轮转矩阵【中等】/README"},{"text":"⏰ 1915. 最美子字符串的数目【中等】","link":"/notes/1915. 最美子字符串的数目【中等】/README"},{"text":"⏰ 1916. 统计为蚁群构筑房间的不同顺序【困难】","link":"/notes/1916. 统计为蚁群构筑房间的不同顺序【困难】/README"},{"text":"⏰ 1917. Leetcodify 好友推荐【困难】","link":"/notes/1917. Leetcodify 好友推荐【困难】/README"},{"text":"⏰ 1918. 第 K 小的子数组和【中等】","link":"/notes/1918. 第 K 小的子数组和【中等】/README"},{"text":"⏰ 1919. 兴趣相同的朋友【困难】","link":"/notes/1919. 兴趣相同的朋友【困难】/README"},{"text":"⏰ 1920. 基于排列构建数组【简单】","link":"/notes/1920. 基于排列构建数组【简单】/README"},{"text":"⏰ 1921. 消灭怪物的最大数量【中等】","link":"/notes/1921. 消灭怪物的最大数量【中等】/README"},{"text":"⏰ 1922. 统计好数字的数目【中等】","link":"/notes/1922. 统计好数字的数目【中等】/README"},{"text":"⏰ 1923. 最长公共子路径【困难】","link":"/notes/1923. 最长公共子路径【困难】/README"},{"text":"⏰ 1924. 安装栅栏 II【困难】","link":"/notes/1924. 安装栅栏 II【困难】/README"},{"text":"⏰ 1925. 统计平方和三元组的数目【简单】","link":"/notes/1925. 统计平方和三元组的数目【简单】/README"},{"text":"⏰ 1926. 迷宫中离入口最近的出口【中等】","link":"/notes/1926. 迷宫中离入口最近的出口【中等】/README"},{"text":"⏰ 1927. 求和游戏【中等】","link":"/notes/1927. 求和游戏【中等】/README"},{"text":"⏰ 1928. 规定时间内到达终点的最小花费【困难】","link":"/notes/1928. 规定时间内到达终点的最小花费【困难】/README"},{"text":"⏰ 1929. 数组串联【简单】","link":"/notes/1929. 数组串联【简单】/README"},{"text":"⏰ 1930. 长度为 3 的不同回文子序列【中等】","link":"/notes/1930. 长度为 3 的不同回文子序列【中等】/README"},{"text":"⏰ 1931. 用三种不同颜色为网格涂色【困难】","link":"/notes/1931. 用三种不同颜色为网格涂色【困难】/README"},{"text":"⏰ 1932. 合并多棵二叉搜索树【困难】","link":"/notes/1932. 合并多棵二叉搜索树【困难】/README"},{"text":"⏰ 1933. 判断字符串是否可分解为值均等的子串【简单】","link":"/notes/1933. 判断字符串是否可分解为值均等的子串【简单】/README"},{"text":"⏰ 1934. 确认率【中等】","link":"/notes/1934. 确认率【中等】/README"},{"text":"⏰ 1935. 可以输入的最大单词数【简单】","link":"/notes/1935. 可以输入的最大单词数【简单】/README"},{"text":"⏰ 1936. 新增的最少台阶数【中等】","link":"/notes/1936. 新增的最少台阶数【中等】/README"},{"text":"⏰ 1937. 扣分后的最大得分【中等】","link":"/notes/1937. 扣分后的最大得分【中等】/README"},{"text":"⏰ 1938. 查询最大基因差【困难】","link":"/notes/1938. 查询最大基因差【困难】/README"},{"text":"⏰ 1939. 主动请求确认消息的用户【简单】","link":"/notes/1939. 主动请求确认消息的用户【简单】/README"},{"text":"⏰ 1940. 排序数组之间的最长公共子序列【中等】","link":"/notes/1940. 排序数组之间的最长公共子序列【中等】/README"},{"text":"⏰ 1941. 检查是否所有字符出现次数相同【简单】","link":"/notes/1941. 检查是否所有字符出现次数相同【简单】/README"},{"text":"⏰ 1942. 最小未被占据椅子的编号【中等】","link":"/notes/1942. 最小未被占据椅子的编号【中等】/README"},{"text":"⏰ 1943. 描述绘画结果【中等】","link":"/notes/1943. 描述绘画结果【中等】/README"},{"text":"⏰ 1944. 队列中可以看到的人数【困难】","link":"/notes/1944. 队列中可以看到的人数【困难】/README"},{"text":"⏰ 1945. 字符串转化后的各位数字之和【简单】","link":"/notes/1945. 字符串转化后的各位数字之和【简单】/README"},{"text":"⏰ 1946. 子字符串突变后可能得到的最大整数【中等】","link":"/notes/1946. 子字符串突变后可能得到的最大整数【中等】/README"},{"text":"⏰ 1947. 最大兼容性评分和【中等】","link":"/notes/1947. 最大兼容性评分和【中等】/README"},{"text":"⏰ 1948. 删除系统中的重复文件夹【困难】","link":"/notes/1948. 删除系统中的重复文件夹【困难】/README"},{"text":"⏰ 1949. 坚定的友谊【中等】","link":"/notes/1949. 坚定的友谊【中等】/README"},{"text":"⏰ 1950. 所有子数组最小值中的最大值【中等】","link":"/notes/1950. 所有子数组最小值中的最大值【中等】/README"},{"text":"⏰ 1951. 查询具有最多共同关注者的所有两两结对组【中等】","link":"/notes/1951. 查询具有最多共同关注者的所有两两结对组【中等】/README"},{"text":"⏰ 1952. 三除数【简单】","link":"/notes/1952. 三除数【简单】/README"},{"text":"⏰ 1953. 你可以工作的最大周数【中等】","link":"/notes/1953. 你可以工作的最大周数【中等】/README"},{"text":"⏰ 1954. 收集足够苹果的最小花园周长【中等】","link":"/notes/1954. 收集足够苹果的最小花园周长【中等】/README"},{"text":"⏰ 1955. 统计特殊子序列的数目【困难】","link":"/notes/1955. 统计特殊子序列的数目【困难】/README"},{"text":"⏰ 1956. 感染 K 种病毒所需的最短时间【困难】","link":"/notes/1956. 感染 K 种病毒所需的最短时间【困难】/README"},{"text":"⏰ 1957. 删除字符使字符串变好【简单】","link":"/notes/1957. 删除字符使字符串变好【简单】/README"},{"text":"⏰ 1958. 检查操作是否合法【中等】","link":"/notes/1958. 检查操作是否合法【中等】/README"},{"text":"⏰ 1959. K 次调整数组大小浪费的最小总空间【中等】","link":"/notes/1959. K 次调整数组大小浪费的最小总空间【中等】/README"},{"text":"⏰ 1960. 两个回文子字符串长度的最大乘积【困难】","link":"/notes/1960. 两个回文子字符串长度的最大乘积【困难】/README"},{"text":"⏰ 1961. 检查字符串是否为数组前缀【简单】","link":"/notes/1961. 检查字符串是否为数组前缀【简单】/README"},{"text":"⏰ 1962. 移除石子使总数最小【中等】","link":"/notes/1962. 移除石子使总数最小【中等】/README"},{"text":"⏰ 1963. 使字符串平衡的最小交换次数【中等】","link":"/notes/1963. 使字符串平衡的最小交换次数【中等】/README"},{"text":"⏰ 1964. 找出到每个位置为止最长的有效障碍赛跑路线【困难】","link":"/notes/1964. 找出到每个位置为止最长的有效障碍赛跑路线【困难】/README"},{"text":"⏰ 1965. 丢失信息的雇员【简单】","link":"/notes/1965. 丢失信息的雇员【简单】/README"},{"text":"⏰ 1966. 未排序数组中的可被二分搜索的数【中等】","link":"/notes/1966. 未排序数组中的可被二分搜索的数【中等】/README"},{"text":"⏰ 1967. 作为子字符串出现在单词中的字符串数目【简单】","link":"/notes/1967. 作为子字符串出现在单词中的字符串数目【简单】/README"},{"text":"⏰ 1968. 构造元素不等于两相邻元素平均值的数组【中等】","link":"/notes/1968. 构造元素不等于两相邻元素平均值的数组【中等】/README"},{"text":"⏰ 1969. 数组元素的最小非零乘积【中等】","link":"/notes/1969. 数组元素的最小非零乘积【中等】/README"},{"text":"⏰ 1970. 你能穿过矩阵的最后一天【困难】","link":"/notes/1970. 你能穿过矩阵的最后一天【困难】/README"},{"text":"⏰ 1971. 寻找图中是否存在路径【简单】","link":"/notes/1971. 寻找图中是否存在路径【简单】/README"},{"text":"⏰ 1972. 同一天的第一个电话和最后一个电话【困难】","link":"/notes/1972. 同一天的第一个电话和最后一个电话【困难】/README"},{"text":"⏰ 1973. 值等于子节点值之和的节点数量【中等】","link":"/notes/1973. 值等于子节点值之和的节点数量【中等】/README"},{"text":"⏰ 1974. 使用特殊打字机键入单词的最少时间【简单】","link":"/notes/1974. 使用特殊打字机键入单词的最少时间【简单】/README"},{"text":"⏰ 1975. 最大方阵和【中等】","link":"/notes/1975. 最大方阵和【中等】/README"},{"text":"⏰ 1976. 到达目的地的方案数【中等】","link":"/notes/1976. 到达目的地的方案数【中等】/README"},{"text":"⏰ 1977. 划分数字的方案数【困难】","link":"/notes/1977. 划分数字的方案数【困难】/README"},{"text":"⏰ 1978. 上级经理已离职的公司员工【简单】","link":"/notes/1978. 上级经理已离职的公司员工【简单】/README"},{"text":"⏰ 1979. 找出数组的最大公约数【简单】","link":"/notes/1979. 找出数组的最大公约数【简单】/README"},{"text":"⏰ 1980. 找出不同的二进制字符串【中等】","link":"/notes/1980. 找出不同的二进制字符串【中等】/README"},{"text":"⏰ 1981. 最小化目标值与所选元素的差【中等】","link":"/notes/1981. 最小化目标值与所选元素的差【中等】/README"},{"text":"⏰ 1982. 从子集的和还原数组【困难】","link":"/notes/1982. 从子集的和还原数组【困难】/README"},{"text":"⏰ 1983. 范围和相等的最宽索引对【中等】","link":"/notes/1983. 范围和相等的最宽索引对【中等】/README"},{"text":"⏰ 1984. 学生分数的最小差值【简单】","link":"/notes/1984. 学生分数的最小差值【简单】/README"},{"text":"⏰ 1985. 找出数组中的第 K 大整数【中等】","link":"/notes/1985. 找出数组中的第 K 大整数【中等】/README"},{"text":"⏰ 1986. 完成任务的最少工作时间段【中等】","link":"/notes/1986. 完成任务的最少工作时间段【中等】/README"},{"text":"⏰ 1987. 不同的好子序列数目【困难】","link":"/notes/1987. 不同的好子序列数目【困难】/README"},{"text":"⏰ 1988. 找出每所学校的最低分数要求【中等】","link":"/notes/1988. 找出每所学校的最低分数要求【中等】/README"},{"text":"⏰ 1989. 捉迷藏中可捕获的最大人数【中等】","link":"/notes/1989. 捉迷藏中可捕获的最大人数【中等】/README"},{"text":"⏰ 1990. 统计实验的数量【中等】","link":"/notes/1990. 统计实验的数量【中等】/README"},{"text":"⏰ 1991. 找到数组的中间位置【简单】","link":"/notes/1991. 找到数组的中间位置【简单】/README"},{"text":"⏰ 1992. 找到所有的农场组【中等】","link":"/notes/1992. 找到所有的农场组【中等】/README"},{"text":"⏰ 1993. 树上的操作【中等】","link":"/notes/1993. 树上的操作【中等】/README"},{"text":"⏰ 1994. 好子集的数目【困难】","link":"/notes/1994. 好子集的数目【困难】/README"},{"text":"⏰ 1995. 统计特殊四元组【简单】","link":"/notes/1995. 统计特殊四元组【简单】/README"},{"text":"⏰ 1996. 游戏中弱角色的数量【中等】","link":"/notes/1996. 游戏中弱角色的数量【中等】/README"},{"text":"⏰ 1997. 访问完所有房间的第一天【中等】","link":"/notes/1997. 访问完所有房间的第一天【中等】/README"},{"text":"⏰ 1998. 数组的最大公因数排序【困难】","link":"/notes/1998. 数组的最大公因数排序【困难】/README"},{"text":"⏰ 1999. 最小的仅由两个数组成的倍数【中等】","link":"/notes/1999. 最小的仅由两个数组成的倍数【中等】/README"},{"text":"⏰ 2000. 反转单词前缀【简单】","link":"/notes/2000. 反转单词前缀【简单】/README"}]},{"text":"22. 2001~2100","collapsed":true,"items":[{"text":"⏰ 2001. 可互换矩形的组数【中等】","link":"/notes/2001. 可互换矩形的组数【中等】/README"},{"text":"⏰ 2002. 两个回文子序列长度的最大乘积【中等】","link":"/notes/2002. 两个回文子序列长度的最大乘积【中等】/README"},{"text":"⏰ 2003. 每棵子树内缺失的最小基因值【困难】","link":"/notes/2003. 每棵子树内缺失的最小基因值【困难】/README"},{"text":"⏰ 2004. 职员招聘人数【困难】","link":"/notes/2004. 职员招聘人数【困难】/README"},{"text":"⏰ 2005. 斐波那契树的移除子树游戏【困难】","link":"/notes/2005. 斐波那契树的移除子树游戏【困难】/README"},{"text":"⏰ 2006. 差的绝对值为 K 的数对数目【简单】","link":"/notes/2006. 差的绝对值为 K 的数对数目【简单】/README"},{"text":"⏰ 2007. 从双倍数组中还原原数组【中等】","link":"/notes/2007. 从双倍数组中还原原数组【中等】/README"},{"text":"⏰ 2008. 出租车的最大盈利【中等】","link":"/notes/2008. 出租车的最大盈利【中等】/README"},{"text":"⏰ 2009. 使数组连续的最少操作数【困难】","link":"/notes/2009. 使数组连续的最少操作数【困难】/README"},{"text":"⏰ 2010. 职员招聘人数 II【困难】","link":"/notes/2010. 职员招聘人数 II【困难】/README"},{"text":"⏰ 2011. 执行操作后的变量值【简单】","link":"/notes/2011. 执行操作后的变量值【简单】/README"},{"text":"⏰ 2012. 数组美丽值求和【中等】","link":"/notes/2012. 数组美丽值求和【中等】/README"},{"text":"⏰ 2013. 检测正方形【中等】","link":"/notes/2013. 检测正方形【中等】/README"},{"text":"⏰ 2014. 重复 K 次的最长子序列【困难】","link":"/notes/2014. 重复 K 次的最长子序列【困难】/README"},{"text":"⏰ 2015. 每段建筑物的平均高度【中等】","link":"/notes/2015. 每段建筑物的平均高度【中等】/README"},{"text":"⏰ 2016. 增量元素之间的最大差值【简单】","link":"/notes/2016. 增量元素之间的最大差值【简单】/README"},{"text":"⏰ 2017. 网格游戏【中等】","link":"/notes/2017. 网格游戏【中等】/README"},{"text":"⏰ 2018. 判断单词是否能放入填字游戏内【中等】","link":"/notes/2018. 判断单词是否能放入填字游戏内【中等】/README"},{"text":"⏰ 2019. 解出数学表达式的学生分数【困难】","link":"/notes/2019. 解出数学表达式的学生分数【困难】/README"},{"text":"⏰ 2020. 无流量的帐户数【中等】","link":"/notes/2020. 无流量的帐户数【中等】/README"},{"text":"⏰ 2021. 街上最亮的位置【中等】","link":"/notes/2021. 街上最亮的位置【中等】/README"},{"text":"⏰ 2022. 将一维数组转变成二维数组【简单】","link":"/notes/2022. 将一维数组转变成二维数组【简单】/README"},{"text":"⏰ 2023. 连接后等于目标字符串的字符串对【中等】","link":"/notes/2023. 连接后等于目标字符串的字符串对【中等】/README"},{"text":"⏰ 2024. 考试的最大困扰度【中等】","link":"/notes/2024. 考试的最大困扰度【中等】/README"},{"text":"⏰ 2025. 分割数组的最多方案数【困难】","link":"/notes/2025. 分割数组的最多方案数【困难】/README"},{"text":"⏰ 2026. 低质量的问题【简单】","link":"/notes/2026. 低质量的问题【简单】/README"},{"text":"⏰ 2027. 转换字符串的最少操作次数【简单】","link":"/notes/2027. 转换字符串的最少操作次数【简单】/README"},{"text":"⏰ 2028. 找出缺失的观测数据【中等】","link":"/notes/2028. 找出缺失的观测数据【中等】/README"},{"text":"⏰ 2029. 石子游戏 IX【中等】","link":"/notes/2029. 石子游戏 IX【中等】/README"},{"text":"⏰ 2030. 含特定字母的最小子序列【困难】","link":"/notes/2030. 含特定字母的最小子序列【困难】/README"},{"text":"⏰ 2031. 1 比 0 多的子数组个数【中等】","link":"/notes/2031. 1 比 0 多的子数组个数【中等】/README"},{"text":"⏰ 2032. 至少在两个数组中出现的值【简单】","link":"/notes/2032. 至少在两个数组中出现的值【简单】/README"},{"text":"⏰ 2033. 获取单值网格的最小操作数【中等】","link":"/notes/2033. 获取单值网格的最小操作数【中等】/README"},{"text":"⏰ 2034. 股票价格波动【中等】","link":"/notes/2034. 股票价格波动【中等】/README"},{"text":"⏰ 2035. 将数组分成两个数组并最小化数组和的差【困难】","link":"/notes/2035. 将数组分成两个数组并最小化数组和的差【困难】/README"},{"text":"⏰ 2036. 最大交替子数组和【中等】","link":"/notes/2036. 最大交替子数组和【中等】/README"},{"text":"⏰ 2037. 使每位学生都有座位的最少移动次数【简单】","link":"/notes/2037. 使每位学生都有座位的最少移动次数【简单】/README"},{"text":"⏰ 2038. 如果相邻两个颜色均相同则删除当前颜色【中等】","link":"/notes/2038. 如果相邻两个颜色均相同则删除当前颜色【中等】/README"},{"text":"⏰ 2039. 网络空闲的时刻【中等】","link":"/notes/2039. 网络空闲的时刻【中等】/README"},{"text":"⏰ 2040. 两个有序数组的第 K 小乘积【困难】","link":"/notes/2040. 两个有序数组的第 K 小乘积【困难】/README"},{"text":"⏰ 2041. 面试中被录取的候选人【中等】","link":"/notes/2041. 面试中被录取的候选人【中等】/README"},{"text":"⏰ 2042. 检查句子中的数字是否递增【简单】","link":"/notes/2042. 检查句子中的数字是否递增【简单】/README"},{"text":"⏰ 2043. 简易银行系统【中等】","link":"/notes/2043. 简易银行系统【中等】/README"},{"text":"⏰ 2044. 统计按位或能得到最大值的子集数目【中等】","link":"/notes/2044. 统计按位或能得到最大值的子集数目【中等】/README"},{"text":"⏰ 2045. 到达目的地的第二短时间【困难】","link":"/notes/2045. 到达目的地的第二短时间【困难】/README"},{"text":"⏰ 2046. 给按照绝对值排序的链表排序【中等】","link":"/notes/2046. 给按照绝对值排序的链表排序【中等】/README"},{"text":"⏰ 2047. 句子中的有效单词数【简单】","link":"/notes/2047. 句子中的有效单词数【简单】/README"},{"text":"⏰ 2048. 下一个更大的数值平衡数【中等】","link":"/notes/2048. 下一个更大的数值平衡数【中等】/README"},{"text":"⏰ 2049. 统计最高分的节点数目【中等】","link":"/notes/2049. 统计最高分的节点数目【中等】/README"},{"text":"⏰ 2050. 并行课程 III【困难】","link":"/notes/2050. 并行课程 III【困难】/README"},{"text":"⏰ 2051. 商店中每个成员的级别【中等】","link":"/notes/2051. 商店中每个成员的级别【中等】/README"},{"text":"⏰ 2052. 将句子分隔成行的最低成本【中等】","link":"/notes/2052. 将句子分隔成行的最低成本【中等】/README"},{"text":"⏰ 2053. 数组中第 K 个独一无二的字符串【简单】","link":"/notes/2053. 数组中第 K 个独一无二的字符串【简单】/README"},{"text":"⏰ 2054. 两个最好的不重叠活动【中等】","link":"/notes/2054. 两个最好的不重叠活动【中等】/README"},{"text":"⏰ 2055. 蜡烛之间的盘子【中等】","link":"/notes/2055. 蜡烛之间的盘子【中等】/README"},{"text":"⏰ 2056. 棋盘上有效移动组合的数目【困难】","link":"/notes/2056. 棋盘上有效移动组合的数目【困难】/README"},{"text":"⏰ 2057. 值相等的最小索引【简单】","link":"/notes/2057. 值相等的最小索引【简单】/README"},{"text":"⏰ 2058. 找出临界点之间的最小和最大距离【中等】","link":"/notes/2058. 找出临界点之间的最小和最大距离【中等】/README"},{"text":"⏰ 2059. 转化数字的最小运算数【中等】","link":"/notes/2059. 转化数字的最小运算数【中等】/README"},{"text":"⏰ 2060. 同源字符串检测【困难】","link":"/notes/2060. 同源字符串检测【困难】/README"},{"text":"⏰ 2061. 扫地机器人清扫过的空间个数【中等】","link":"/notes/2061. 扫地机器人清扫过的空间个数【中等】/README"},{"text":"⏰ 2062. 统计字符串中的元音子字符串【简单】","link":"/notes/2062. 统计字符串中的元音子字符串【简单】/README"},{"text":"⏰ 2063. 所有子字符串中的元音【中等】","link":"/notes/2063. 所有子字符串中的元音【中等】/README"},{"text":"⏰ 2064. 分配给商店的最多商品的最小值【中等】","link":"/notes/2064. 分配给商店的最多商品的最小值【中等】/README"},{"text":"⏰ 2065. 最大化一张图中的路径价值【困难】","link":"/notes/2065. 最大化一张图中的路径价值【困难】/README"},{"text":"⏰ 2066. 账户余额【中等】","link":"/notes/2066. 账户余额【中等】/README"},{"text":"⏰ 2067. 等计数子串的数量【中等】","link":"/notes/2067. 等计数子串的数量【中等】/README"},{"text":"⏰ 2068. 检查两个字符串是否几乎相等【简单】","link":"/notes/2068. 检查两个字符串是否几乎相等【简单】/README"},{"text":"⏰ 2069. 模拟行走机器人 II【中等】","link":"/notes/2069. 模拟行走机器人 II【中等】/README"},{"text":"⏰ 2070. 每一个查询的最大美丽值【中等】","link":"/notes/2070. 每一个查询的最大美丽值【中等】/README"},{"text":"⏰ 2071. 你可以安排的最多任务数目【困难】","link":"/notes/2071. 你可以安排的最多任务数目【困难】/README"},{"text":"⏰ 2072. 赢得比赛的大学【简单】","link":"/notes/2072. 赢得比赛的大学【简单】/README"},{"text":"⏰ 2073. 买票需要的时间【简单】","link":"/notes/2073. 买票需要的时间【简单】/README"},{"text":"⏰ 2074. 反转偶数长度组的节点【中等】","link":"/notes/2074. 反转偶数长度组的节点【中等】/README"},{"text":"⏰ 2075. 解码斜向换位密码【中等】","link":"/notes/2075. 解码斜向换位密码【中等】/README"},{"text":"⏰ 2076. 处理含限制条件的好友请求【困难】","link":"/notes/2076. 处理含限制条件的好友请求【困难】/README"},{"text":"⏰ 2077. 殊途同归【中等】","link":"/notes/2077. 殊途同归【中等】/README"},{"text":"⏰ 2078. 两栋颜色不同且距离最远的房子【简单】","link":"/notes/2078. 两栋颜色不同且距离最远的房子【简单】/README"},{"text":"⏰ 2079. 给植物浇水【中等】","link":"/notes/2079. 给植物浇水【中等】/README"},{"text":"⏰ 2080. 区间内查询数字的频率【中等】","link":"/notes/2080. 区间内查询数字的频率【中等】/README"},{"text":"⏰ 2081. k 镜像数字的和【困难】","link":"/notes/2081. k 镜像数字的和【困难】/README"},{"text":"⏰ 2082. 富有客户的数量【简单】","link":"/notes/2082. 富有客户的数量【简单】/README"},{"text":"⏰ 2083. 求以相同字母开头和结尾的子串总数【中等】","link":"/notes/2083. 求以相同字母开头和结尾的子串总数【中等】/README"},{"text":"⏰ 2084. 为订单类型为 0 的客户删除类型为 1 的订单【中等】","link":"/notes/2084. 为订单类型为 0 的客户删除类型为 1 的订单【中等】/README"},{"text":"✅ 2085. 统计出现过一次的公共字符串【简单】","link":"/notes/2085. 统计出现过一次的公共字符串【简单】/README"},{"text":"⏰ 2086. 喂食仓鼠的最小食物桶数【中等】","link":"/notes/2086. 喂食仓鼠的最小食物桶数【中等】/README"},{"text":"⏰ 2087. 网格图中机器人回家的最小代价【中等】","link":"/notes/2087. 网格图中机器人回家的最小代价【中等】/README"},{"text":"⏰ 2088. 统计农场中肥沃金字塔的数目【困难】","link":"/notes/2088. 统计农场中肥沃金字塔的数目【困难】/README"},{"text":"⏰ 2089. 找出数组排序后的目标下标【简单】","link":"/notes/2089. 找出数组排序后的目标下标【简单】/README"},{"text":"⏰ 2090. 半径为 k 的子数组平均值【中等】","link":"/notes/2090. 半径为 k 的子数组平均值【中等】/README"},{"text":"⏰ 2091. 从数组中移除最大值和最小值【中等】","link":"/notes/2091. 从数组中移除最大值和最小值【中等】/README"},{"text":"⏰ 2092. 找出知晓秘密的所有专家【困难】","link":"/notes/2092. 找出知晓秘密的所有专家【困难】/README"},{"text":"⏰ 2093. 前往目标城市的最小费用【中等】","link":"/notes/2093. 前往目标城市的最小费用【中等】/README"},{"text":"⏰ 2094. 找出 3 位偶数【简单】","link":"/notes/2094. 找出 3 位偶数【简单】/README"},{"text":"⏰ 2095. 删除链表的中间节点【中等】","link":"/notes/2095. 删除链表的中间节点【中等】/README"},{"text":"⏰ 2096. 从二叉树一个节点到另一个节点每一步的方向【中等】","link":"/notes/2096. 从二叉树一个节点到另一个节点每一步的方向【中等】/README"},{"text":"⏰ 2097. 合法重新排列数对【困难】","link":"/notes/2097. 合法重新排列数对【困难】/README"},{"text":"⏰ 2098. 长度为 K 的最大偶数和子序列【中等】","link":"/notes/2098. 长度为 K 的最大偶数和子序列【中等】/README"},{"text":"✅ 2099. 找到和最大的长度为 K 的子序列【简单】","link":"/notes/2099. 找到和最大的长度为 K 的子序列【简单】/README"},{"text":"⏰ 2100. 适合野炊的日子【中等】","link":"/notes/2100. 适合野炊的日子【中等】/README"}]},{"text":"23. 2101~2200","collapsed":true,"items":[{"text":"⏰ 2101. 引爆最多的炸弹【中等】","link":"/notes/2101. 引爆最多的炸弹【中等】/README"},{"text":"⏰ 2102. 序列顺序查询【困难】","link":"/notes/2102. 序列顺序查询【困难】/README"},{"text":"⏰ 2103. 环和杆【简单】","link":"/notes/2103. 环和杆【简单】/README"},{"text":"⏰ 2104. 子数组范围和【中等】","link":"/notes/2104. 子数组范围和【中等】/README"},{"text":"⏰ 2105. 给植物浇水 II【中等】","link":"/notes/2105. 给植物浇水 II【中等】/README"},{"text":"⏰ 2106. 摘水果【困难】","link":"/notes/2106. 摘水果【困难】/README"},{"text":"⏰ 2107. 分享 K 个糖果后独特口味的数量【中等】","link":"/notes/2107. 分享 K 个糖果后独特口味的数量【中等】/README"},{"text":"✅ 2108. 找出数组中的第一个回文字符串【简单】","link":"/notes/2108. 找出数组中的第一个回文字符串【简单】/README"},{"text":"⏰ 2109. 向字符串添加空格【中等】","link":"/notes/2109. 向字符串添加空格【中等】/README"},{"text":"⏰ 2110. 股票平滑下跌阶段的数目【中等】","link":"/notes/2110. 股票平滑下跌阶段的数目【中等】/README"},{"text":"⏰ 2111. 使数组 K 递增的最少操作次数【困难】","link":"/notes/2111. 使数组 K 递增的最少操作次数【困难】/README"},{"text":"⏰ 2112. 最繁忙的机场【中等】","link":"/notes/2112. 最繁忙的机场【中等】/README"},{"text":"⏰ 2113. 查询删除和添加元素后的数组【中等】","link":"/notes/2113. 查询删除和添加元素后的数组【中等】/README"},{"text":"✅ 2114. 句子中的最多单词数【简单】","link":"/notes/2114. 句子中的最多单词数【简单】/README"},{"text":"⏰ 2115. 从给定原材料中找到所有可以做出的菜【中等】","link":"/notes/2115. 从给定原材料中找到所有可以做出的菜【中等】/README"},{"text":"⏰ 2116. 判断一个括号字符串是否有效【中等】","link":"/notes/2116. 判断一个括号字符串是否有效【中等】/README"},{"text":"⏰ 2117. 一个区间内所有数乘积的缩写【困难】","link":"/notes/2117. 一个区间内所有数乘积的缩写【困难】/README"},{"text":"⏰ 2118. 建立方程【困难】","link":"/notes/2118. 建立方程【困难】/README"},{"text":"⏰ 2119. 反转两次的数字【简单】","link":"/notes/2119. 反转两次的数字【简单】/README"},{"text":"⏰ 2120. 执行所有后缀指令【中等】","link":"/notes/2120. 执行所有后缀指令【中等】/README"},{"text":"⏰ 2121. 相同元素的间隔之和【中等】","link":"/notes/2121. 相同元素的间隔之和【中等】/README"},{"text":"⏰ 2122. 还原原数组【困难】","link":"/notes/2122. 还原原数组【困难】/README"},{"text":"⏰ 2123. 使矩阵中的 1 互不相邻的最小操作数【困难】","link":"/notes/2123. 使矩阵中的 1 互不相邻的最小操作数【困难】/README"},{"text":"⏰ 2124. 检查是否所有 A 都在 B 之前【简单】","link":"/notes/2124. 检查是否所有 A 都在 B 之前【简单】/README"},{"text":"⏰ 2125. 银行中的激光束数量【中等】","link":"/notes/2125. 银行中的激光束数量【中等】/README"},{"text":"⏰ 2126. 摧毁小行星【中等】","link":"/notes/2126. 摧毁小行星【中等】/README"},{"text":"⏰ 2127. 参加会议的最多员工数【困难】","link":"/notes/2127. 参加会议的最多员工数【困难】/README"},{"text":"⏰ 2128. 通过翻转行或列来去除所有的 1【中等】","link":"/notes/2128. 通过翻转行或列来去除所有的 1【中等】/README"},{"text":"⏰ 2129. 将标题首字母大写【简单】","link":"/notes/2129. 将标题首字母大写【简单】/README"},{"text":"⏰ 2130. 链表最大孪生和【中等】","link":"/notes/2130. 链表最大孪生和【中等】/README"},{"text":"⏰ 2131. 连接两字母单词得到的最长回文串【中等】","link":"/notes/2131. 连接两字母单词得到的最长回文串【中等】/README"},{"text":"⏰ 2132. 用邮票贴满网格图【困难】","link":"/notes/2132. 用邮票贴满网格图【困难】/README"},{"text":"✅ 2133. 检查是否每一行每一列都包含全部整数【简单】","link":"/notes/2133. 检查是否每一行每一列都包含全部整数【简单】/README"},{"text":"⏰ 2134. 最少交换次数来组合所有的 1 II【中等】","link":"/notes/2134. 最少交换次数来组合所有的 1 II【中等】/README"},{"text":"⏰ 2135. 统计追加字母可以获得的单词数【中等】","link":"/notes/2135. 统计追加字母可以获得的单词数【中等】/README"},{"text":"⏰ 2136. 全部开花的最早一天【困难】","link":"/notes/2136. 全部开花的最早一天【困难】/README"},{"text":"⏰ 2137. 通过倒水操作让所有的水桶所含水量相等【中等】","link":"/notes/2137. 通过倒水操作让所有的水桶所含水量相等【中等】/README"},{"text":"⏰ 2138. 将字符串拆分为若干长度为 k 的组【简单】","link":"/notes/2138. 将字符串拆分为若干长度为 k 的组【简单】/README"},{"text":"⏰ 2139. 得到目标值的最少行动次数【中等】","link":"/notes/2139. 得到目标值的最少行动次数【中等】/README"},{"text":"⏰ 2140. 解决智力问题【中等】","link":"/notes/2140. 解决智力问题【中等】/README"},{"text":"⏰ 2141. 同时运行 N 台电脑的最长时间【困难】","link":"/notes/2141. 同时运行 N 台电脑的最长时间【困难】/README"},{"text":"⏰ 2142. 每辆车的乘客人数 I【中等】","link":"/notes/2142. 每辆车的乘客人数 I【中等】/README"},{"text":"⏰ 2143. 在两个数组的区间中选取数字【困难】","link":"/notes/2143. 在两个数组的区间中选取数字【困难】/README"},{"text":"✅ 2144. 打折购买糖果的最小开销【简单】","link":"/notes/2144. 打折购买糖果的最小开销【简单】/README"},{"text":"⏰ 2145. 统计隐藏数组数目【中等】","link":"/notes/2145. 统计隐藏数组数目【中等】/README"},{"text":"⏰ 2146. 价格范围内最高排名的 K 样物品【中等】","link":"/notes/2146. 价格范围内最高排名的 K 样物品【中等】/README"},{"text":"⏰ 2147. 分隔长廊的方案数【困难】","link":"/notes/2147. 分隔长廊的方案数【困难】/README"},{"text":"⏰ 2148. 元素计数【简单】","link":"/notes/2148. 元素计数【简单】/README"},{"text":"⏰ 2149. 按符号重排数组【中等】","link":"/notes/2149. 按符号重排数组【中等】/README"},{"text":"⏰ 2150. 找出数组中的所有孤独数字【中等】","link":"/notes/2150. 找出数组中的所有孤独数字【中等】/README"},{"text":"⏰ 2151. 基于陈述统计最多好人数【困难】","link":"/notes/2151. 基于陈述统计最多好人数【困难】/README"},{"text":"⏰ 2152. 穿过所有点的所需最少直线数量【中等】","link":"/notes/2152. 穿过所有点的所需最少直线数量【中等】/README"},{"text":"⏰ 2153. 每辆车的乘客人数 II【困难】","link":"/notes/2153. 每辆车的乘客人数 II【困难】/README"},{"text":"⏰ 2154. 将找到的值乘以 2【简单】","link":"/notes/2154. 将找到的值乘以 2【简单】/README"},{"text":"⏰ 2155. 分组得分最高的所有下标【中等】","link":"/notes/2155. 分组得分最高的所有下标【中等】/README"},{"text":"⏰ 2156. 查找给定哈希值的子串【困难】","link":"/notes/2156. 查找给定哈希值的子串【困难】/README"},{"text":"⏰ 2157. 字符串分组【困难】","link":"/notes/2157. 字符串分组【困难】/README"},{"text":"⏰ 2158. 每天绘制新区域的数量【困难】","link":"/notes/2158. 每天绘制新区域的数量【困难】/README"},{"text":"⏰ 2159. 分别排序两列【中等】","link":"/notes/2159. 分别排序两列【中等】/README"},{"text":"⏰ 2160. 拆分数位后四位数字的最小和【简单】","link":"/notes/2160. 拆分数位后四位数字的最小和【简单】/README"},{"text":"⏰ 2161. 根据给定数字划分数组【中等】","link":"/notes/2161. 根据给定数字划分数组【中等】/README"},{"text":"⏰ 2162. 设置时间的最少代价【中等】","link":"/notes/2162. 设置时间的最少代价【中等】/README"},{"text":"⏰ 2163. 删除元素后和的最小差值【困难】","link":"/notes/2163. 删除元素后和的最小差值【困难】/README"},{"text":"⏰ 2164. 对奇偶下标分别排序【简单】","link":"/notes/2164. 对奇偶下标分别排序【简单】/README"},{"text":"⏰ 2165. 重排数字的最小值【中等】","link":"/notes/2165. 重排数字的最小值【中等】/README"},{"text":"⏰ 2166. 设计位集【中等】","link":"/notes/2166. 设计位集【中等】/README"},{"text":"⏰ 2167. 移除所有载有违禁货物车厢所需的最少时间【困难】","link":"/notes/2167. 移除所有载有违禁货物车厢所需的最少时间【困难】/README"},{"text":"⏰ 2168. 每个数字的频率都相同的独特子字符串的数量【中等】","link":"/notes/2168. 每个数字的频率都相同的独特子字符串的数量【中等】/README"},{"text":"⏰ 2169. 得到 0 的操作数【简单】","link":"/notes/2169. 得到 0 的操作数【简单】/README"},{"text":"⏰ 2170. 使数组变成交替数组的最少操作数【中等】","link":"/notes/2170. 使数组变成交替数组的最少操作数【中等】/README"},{"text":"⏰ 2171. 拿出最少数目的魔法豆【中等】","link":"/notes/2171. 拿出最少数目的魔法豆【中等】/README"},{"text":"⏰ 2172. 数组的最大与和【困难】","link":"/notes/2172. 数组的最大与和【困难】/README"},{"text":"⏰ 2173. 最多连胜的次数【困难】","link":"/notes/2173. 最多连胜的次数【困难】/README"},{"text":"⏰ 2174. 通过翻转行或列来去除所有的 1 II【中等】","link":"/notes/2174. 通过翻转行或列来去除所有的 1 II【中等】/README"},{"text":"⏰ 2175. 世界排名的变化【中等】","link":"/notes/2175. 世界排名的变化【中等】/README"},{"text":"⏰ 2176. 统计数组中相等且可以被整除的数对【简单】","link":"/notes/2176. 统计数组中相等且可以被整除的数对【简单】/README"},{"text":"⏰ 2177. 找到和为给定整数的三个连续整数【中等】","link":"/notes/2177. 找到和为给定整数的三个连续整数【中等】/README"},{"text":"⏰ 2178. 拆分成最多数目的正偶数之和【中等】","link":"/notes/2178. 拆分成最多数目的正偶数之和【中等】/README"},{"text":"⏰ 2179. 统计数组中好三元组数目【困难】","link":"/notes/2179. 统计数组中好三元组数目【困难】/README"},{"text":"⏰ 2180. 统计各位数字之和为偶数的整数个数【简单】","link":"/notes/2180. 统计各位数字之和为偶数的整数个数【简单】/README"},{"text":"⏰ 2181. 合并零之间的节点【中等】","link":"/notes/2181. 合并零之间的节点【中等】/README"},{"text":"⏰ 2182. 构造限制重复的字符串【中等】","link":"/notes/2182. 构造限制重复的字符串【中等】/README"},{"text":"⏰ 2183. 统计可以被 K 整除的下标对数目【困难】","link":"/notes/2183. 统计可以被 K 整除的下标对数目【困难】/README"},{"text":"⏰ 2184. 建造坚实的砖墙的方法数【中等】","link":"/notes/2184. 建造坚实的砖墙的方法数【中等】/README"},{"text":"⏰ 2185. 统计包含给定前缀的字符串【简单】","link":"/notes/2185. 统计包含给定前缀的字符串【简单】/README"},{"text":"⏰ 2186. 制造字母异位词的最小步骤数 II【中等】","link":"/notes/2186. 制造字母异位词的最小步骤数 II【中等】/README"},{"text":"⏰ 2187. 完成旅途的最少时间【中等】","link":"/notes/2187. 完成旅途的最少时间【中等】/README"},{"text":"⏰ 2188. 完成比赛的最少时间【困难】","link":"/notes/2188. 完成比赛的最少时间【困难】/README"},{"text":"⏰ 2189. 建造纸牌屋的方法数【中等】","link":"/notes/2189. 建造纸牌屋的方法数【中等】/README"},{"text":"⏰ 2190. 数组中紧跟 key 之后出现最频繁的数字【简单】","link":"/notes/2190. 数组中紧跟 key 之后出现最频繁的数字【简单】/README"},{"text":"⏰ 2191. 将杂乱无章的数字排序【中等】","link":"/notes/2191. 将杂乱无章的数字排序【中等】/README"},{"text":"⏰ 2192. 有向无环图中一个节点的所有祖先【中等】","link":"/notes/2192. 有向无环图中一个节点的所有祖先【中等】/README"},{"text":"⏰ 2193. 得到回文串的最少操作次数【困难】","link":"/notes/2193. 得到回文串的最少操作次数【困难】/README"},{"text":"⏰ 2194. Excel 表中某个范围内的单元格【简单】","link":"/notes/2194. Excel 表中某个范围内的单元格【简单】/README"},{"text":"⏰ 2195. 向数组中追加 K 个整数【中等】","link":"/notes/2195. 向数组中追加 K 个整数【中等】/README"},{"text":"⏰ 2196. 根据描述创建二叉树【中等】","link":"/notes/2196. 根据描述创建二叉树【中等】/README"},{"text":"⏰ 2197. 替换数组中的非互质数【困难】","link":"/notes/2197. 替换数组中的非互质数【困难】/README"},{"text":"⏰ 2198. 单因数三元组【中等】","link":"/notes/2198. 单因数三元组【中等】/README"},{"text":"⏰ 2199. 找到每篇文章的主题【困难】","link":"/notes/2199. 找到每篇文章的主题【困难】/README"},{"text":"⏰ 2200. 找出数组中的所有 K 近邻下标【简单】","link":"/notes/2200. 找出数组中的所有 K 近邻下标【简单】/README"}]},{"text":"24. 2201~2300","collapsed":true,"items":[{"text":"⏰ 2201. 统计可以提取的工件【中等】","link":"/notes/2201. 统计可以提取的工件【中等】/README"},{"text":"⏰ 2202. K 次操作后最大化顶端元素【中等】","link":"/notes/2202. K 次操作后最大化顶端元素【中等】/README"},{"text":"⏰ 2203. 得到要求路径的最小带权子图【困难】","link":"/notes/2203. 得到要求路径的最小带权子图【困难】/README"},{"text":"⏰ 2204. 无向图中到环的距离【困难】","link":"/notes/2204. 无向图中到环的距离【困难】/README"},{"text":"⏰ 2205. 有资格享受折扣的用户数量【简单】","link":"/notes/2205. 有资格享受折扣的用户数量【简单】/README"},{"text":"⏰ 2206. 将数组划分成相等数对【简单】","link":"/notes/2206. 将数组划分成相等数对【简单】/README"},{"text":"⏰ 2207. 字符串中最多数目的子序列【中等】","link":"/notes/2207. 字符串中最多数目的子序列【中等】/README"},{"text":"⏰ 2208. 将数组和减半的最少操作次数【中等】","link":"/notes/2208. 将数组和减半的最少操作次数【中等】/README"},{"text":"⏰ 2209. 用地毯覆盖后的最少白色砖块【困难】","link":"/notes/2209. 用地毯覆盖后的最少白色砖块【困难】/README"},{"text":"⏰ 2210. 统计数组中峰和谷的数量【简单】","link":"/notes/2210. 统计数组中峰和谷的数量【简单】/README"},{"text":"⏰ 2211. 统计道路上的碰撞次数【中等】","link":"/notes/2211. 统计道路上的碰撞次数【中等】/README"},{"text":"⏰ 2212. 射箭比赛中的最大得分【中等】","link":"/notes/2212. 射箭比赛中的最大得分【中等】/README"},{"text":"⏰ 2213. 由单个字符重复的最长子字符串【困难】","link":"/notes/2213. 由单个字符重复的最长子字符串【困难】/README"},{"text":"⏰ 2214. 通关游戏所需的最低生命值【中等】","link":"/notes/2214. 通关游戏所需的最低生命值【中等】/README"},{"text":"⏰ 2215. 找出两数组的不同【简单】","link":"/notes/2215. 找出两数组的不同【简单】/README"},{"text":"⏰ 2216. 美化数组的最少删除数【中等】","link":"/notes/2216. 美化数组的最少删除数【中等】/README"},{"text":"⏰ 2217. 找到指定长度的回文数【中等】","link":"/notes/2217. 找到指定长度的回文数【中等】/README"},{"text":"⏰ 2218. 从栈中取出 K 个硬币的最大面值和【困难】","link":"/notes/2218. 从栈中取出 K 个硬币的最大面值和【困难】/README"},{"text":"⏰ 2219. 数组的最大总分【中等】","link":"/notes/2219. 数组的最大总分【中等】/README"},{"text":"⏰ 2220. 转换数字的最少位翻转次数【简单】","link":"/notes/2220. 转换数字的最少位翻转次数【简单】/README"},{"text":"⏰ 2221. 数组的三角和【中等】","link":"/notes/2221. 数组的三角和【中等】/README"},{"text":"⏰ 2222. 选择建筑的方案数【中等】","link":"/notes/2222. 选择建筑的方案数【中等】/README"},{"text":"⏰ 2223. 构造字符串的总得分和【困难】","link":"/notes/2223. 构造字符串的总得分和【困难】/README"},{"text":"⏰ 2224. 转化时间需要的最少操作数【简单】","link":"/notes/2224. 转化时间需要的最少操作数【简单】/README"},{"text":"⏰ 2225. 找出输掉零场或一场比赛的玩家【中等】","link":"/notes/2225. 找出输掉零场或一场比赛的玩家【中等】/README"},{"text":"⏰ 2226. 每个小孩最多能分到多少糖果【中等】","link":"/notes/2226. 每个小孩最多能分到多少糖果【中等】/README"},{"text":"⏰ 2227. 加密解密字符串【困难】","link":"/notes/2227. 加密解密字符串【困难】/README"},{"text":"⏰ 2228. 7 天内两次购买的用户【中等】","link":"/notes/2228. 7 天内两次购买的用户【中等】/README"},{"text":"⏰ 2229. 检查数组是否连贯【简单】","link":"/notes/2229. 检查数组是否连贯【简单】/README"},{"text":"⏰ 2230. 查找可享受优惠的用户【简单】","link":"/notes/2230. 查找可享受优惠的用户【简单】/README"},{"text":"⏰ 2231. 按奇偶性交换后的最大数字【简单】","link":"/notes/2231. 按奇偶性交换后的最大数字【简单】/README"},{"text":"⏰ 2232. 向表达式添加括号后的最小结果【中等】","link":"/notes/2232. 向表达式添加括号后的最小结果【中等】/README"},{"text":"⏰ 2233. K 次增加后的最大乘积【中等】","link":"/notes/2233. K 次增加后的最大乘积【中等】/README"},{"text":"⏰ 2234. 花园的最大总美丽值【困难】","link":"/notes/2234. 花园的最大总美丽值【困难】/README"},{"text":"⏰ 2235. 两整数相加【简单】","link":"/notes/2235. 两整数相加【简单】/README"},{"text":"⏰ 2236. 判断根结点是否等于子结点之和【简单】","link":"/notes/2236. 判断根结点是否等于子结点之和【简单】/README"},{"text":"⏰ 2237. 计算街道上满足所需亮度的位置数量【中等】","link":"/notes/2237. 计算街道上满足所需亮度的位置数量【中等】/README"},{"text":"⏰ 2238. 司机成为乘客的次数【中等】","link":"/notes/2238. 司机成为乘客的次数【中等】/README"},{"text":"⏰ 2239. 找到最接近 0 的数字【简单】","link":"/notes/2239. 找到最接近 0 的数字【简单】/README"},{"text":"⏰ 2240. 买钢笔和铅笔的方案数【中等】","link":"/notes/2240. 买钢笔和铅笔的方案数【中等】/README"},{"text":"⏰ 2241. 设计一个 ATM 机器【中等】","link":"/notes/2241. 设计一个 ATM 机器【中等】/README"},{"text":"⏰ 2242. 节点序列的最大得分【困难】","link":"/notes/2242. 节点序列的最大得分【困难】/README"},{"text":"⏰ 2243. 计算字符串的数字和【简单】","link":"/notes/2243. 计算字符串的数字和【简单】/README"},{"text":"⏰ 2244. 完成所有任务需要的最少轮数【中等】","link":"/notes/2244. 完成所有任务需要的最少轮数【中等】/README"},{"text":"⏰ 2245. 转角路径的乘积中最多能有几个尾随零【中等】","link":"/notes/2245. 转角路径的乘积中最多能有几个尾随零【中等】/README"},{"text":"⏰ 2246. 相邻字符不同的最长路径【困难】","link":"/notes/2246. 相邻字符不同的最长路径【困难】/README"},{"text":"⏰ 2247. K 条高速公路的最大旅行费用【困难】","link":"/notes/2247. K 条高速公路的最大旅行费用【困难】/README"},{"text":"⏰ 2248. 多个数组求交集【简单】","link":"/notes/2248. 多个数组求交集【简单】/README"},{"text":"⏰ 2249. 统计圆内格点数目【中等】","link":"/notes/2249. 统计圆内格点数目【中等】/README"},{"text":"⏰ 2250. 统计包含每个点的矩形数目【中等】","link":"/notes/2250. 统计包含每个点的矩形数目【中等】/README"},{"text":"⏰ 2251. 花期内花的数目【困难】","link":"/notes/2251. 花期内花的数目【困难】/README"},{"text":"⏰ 2252. 表的动态旋转【困难】","link":"/notes/2252. 表的动态旋转【困难】/README"},{"text":"⏰ 2253. 动态取消表的旋转【困难】","link":"/notes/2253. 动态取消表的旋转【困难】/README"},{"text":"⏰ 2254. 设计视频共享平台【困难】","link":"/notes/2254. 设计视频共享平台【困难】/README"},{"text":"⏰ 2255. 统计是给定字符串前缀的字符串数目【简单】","link":"/notes/2255. 统计是给定字符串前缀的字符串数目【简单】/README"},{"text":"⏰ 2256. 最小平均差【中等】","link":"/notes/2256. 最小平均差【中等】/README"},{"text":"⏰ 2257. 统计网格图中没有被保卫的格子数【中等】","link":"/notes/2257. 统计网格图中没有被保卫的格子数【中等】/README"},{"text":"⏰ 2258. 逃离火灾【困难】","link":"/notes/2258. 逃离火灾【困难】/README"},{"text":"⏰ 2259. 移除指定数字得到的最大结果【简单】","link":"/notes/2259. 移除指定数字得到的最大结果【简单】/README"},{"text":"⏰ 2260. 必须拿起的最小连续卡牌数【中等】","link":"/notes/2260. 必须拿起的最小连续卡牌数【中等】/README"},{"text":"⏰ 2261. 含最多 K 个可整除元素的子数组【中等】","link":"/notes/2261. 含最多 K 个可整除元素的子数组【中等】/README"},{"text":"⏰ 2262. 字符串的总引力【困难】","link":"/notes/2262. 字符串的总引力【困难】/README"},{"text":"⏰ 2263. 数组变为有序的最小操作次数【困难】","link":"/notes/2263. 数组变为有序的最小操作次数【困难】/README"},{"text":"⏰ 2264. 字符串中最大的 3 位相同数字【简单】","link":"/notes/2264. 字符串中最大的 3 位相同数字【简单】/README"},{"text":"⏰ 2265. 统计值等于子树平均值的节点数【中等】","link":"/notes/2265. 统计值等于子树平均值的节点数【中等】/README"},{"text":"⏰ 2266. 统计打字方案数【中等】","link":"/notes/2266. 统计打字方案数【中等】/README"},{"text":"⏰ 2267. 检查是否有合法括号字符串路径【困难】","link":"/notes/2267. 检查是否有合法括号字符串路径【困难】/README"},{"text":"⏰ 2268. 最少按键次数【中等】","link":"/notes/2268. 最少按键次数【中等】/README"},{"text":"⏰ 2269. 找到一个数字的 K 美丽值【简单】","link":"/notes/2269. 找到一个数字的 K 美丽值【简单】/README"},{"text":"⏰ 2270. 分割数组的方案数【中等】","link":"/notes/2270. 分割数组的方案数【中等】/README"},{"text":"⏰ 2271. 毯子覆盖的最多白色砖块数【中等】","link":"/notes/2271. 毯子覆盖的最多白色砖块数【中等】/README"},{"text":"⏰ 2272. 最大波动的子字符串【困难】","link":"/notes/2272. 最大波动的子字符串【困难】/README"},{"text":"✅ 2273. 移除字母异位词后的结果数组【简单】","link":"/notes/2273. 移除字母异位词后的结果数组【简单】/README"},{"text":"⏰ 2274. 不含特殊楼层的最大连续楼层数【中等】","link":"/notes/2274. 不含特殊楼层的最大连续楼层数【中等】/README"},{"text":"⏰ 2275. 按位与结果大于零的最长组合【中等】","link":"/notes/2275. 按位与结果大于零的最长组合【中等】/README"},{"text":"⏰ 2276. 统计区间中的整数数目【困难】","link":"/notes/2276. 统计区间中的整数数目【困难】/README"},{"text":"⏰ 2277. 树中最接近路径的节点【困难】","link":"/notes/2277. 树中最接近路径的节点【困难】/README"},{"text":"⏰ 2278. 字母在字符串中的百分比【简单】","link":"/notes/2278. 字母在字符串中的百分比【简单】/README"},{"text":"⏰ 2279. 装满石头的背包的最大数量【中等】","link":"/notes/2279. 装满石头的背包的最大数量【中等】/README"},{"text":"⏰ 2280. 表示一个折线图的最少线段数【中等】","link":"/notes/2280. 表示一个折线图的最少线段数【中等】/README"},{"text":"⏰ 2281. 巫师的总力量和【困难】","link":"/notes/2281. 巫师的总力量和【困难】/README"},{"text":"⏰ 2282. 在一个网格中可以看到的人数【中等】","link":"/notes/2282. 在一个网格中可以看到的人数【中等】/README"},{"text":"⏰ 2283. 判断一个数的数字计数是否等于数位的值【简单】","link":"/notes/2283. 判断一个数的数字计数是否等于数位的值【简单】/README"},{"text":"⏰ 2284. 最多单词数的发件人【中等】","link":"/notes/2284. 最多单词数的发件人【中等】/README"},{"text":"⏰ 2285. 道路的最大总重要性【中等】","link":"/notes/2285. 道路的最大总重要性【中等】/README"},{"text":"⏰ 2286. 以组为单位订音乐会的门票【困难】","link":"/notes/2286. 以组为单位订音乐会的门票【困难】/README"},{"text":"⏰ 2287. 重排字符形成目标字符串【简单】","link":"/notes/2287. 重排字符形成目标字符串【简单】/README"},{"text":"⏰ 2288. 价格减免【中等】","link":"/notes/2288. 价格减免【中等】/README"},{"text":"⏰ 2289. 使数组按非递减顺序排列【中等】","link":"/notes/2289. 使数组按非递减顺序排列【中等】/README"},{"text":"⏰ 2290. 到达角落需要移除障碍物的最小数目【困难】","link":"/notes/2290. 到达角落需要移除障碍物的最小数目【困难】/README"},{"text":"⏰ 2291. 最大股票收益【中等】","link":"/notes/2291. 最大股票收益【中等】/README"},{"text":"⏰ 2292. 连续两年有 3 个及以上订单的产品【中等】","link":"/notes/2292. 连续两年有 3 个及以上订单的产品【中等】/README"},{"text":"⏰ 2293. 极大极小游戏【简单】","link":"/notes/2293. 极大极小游戏【简单】/README"},{"text":"⏰ 2294. 划分数组使最大差为 K【中等】","link":"/notes/2294. 划分数组使最大差为 K【中等】/README"},{"text":"⏰ 2295. 替换数组中的元素【中等】","link":"/notes/2295. 替换数组中的元素【中等】/README"},{"text":"⏰ 2296. 设计一个文本编辑器【困难】","link":"/notes/2296. 设计一个文本编辑器【困难】/README"},{"text":"⏰ 2297. 跳跃游戏 VIII【中等】","link":"/notes/2297. 跳跃游戏 VIII【中等】/README"},{"text":"⏰ 2298. 周末任务计数【中等】","link":"/notes/2298. 周末任务计数【中等】/README"},{"text":"✅ 2299. 强密码检验器 II【简单】","link":"/notes/2299. 强密码检验器 II【简单】/README"},{"text":"⏰ 2300. 咒语和药水的成功对数【中等】","link":"/notes/2300. 咒语和药水的成功对数【中等】/README"}]},{"text":"25. 2301~2400","collapsed":true,"items":[{"text":"⏰ 2301. 替换字符后匹配【困难】","link":"/notes/2301. 替换字符后匹配【困难】/README"},{"text":"⏰ 2302. 统计得分小于 K 的子数组数目【困难】","link":"/notes/2302. 统计得分小于 K 的子数组数目【困难】/README"},{"text":"⏰ 2303. 计算应缴税款总额【简单】","link":"/notes/2303. 计算应缴税款总额【简单】/README"},{"text":"⏰ 2304. 网格中的最小路径代价【中等】","link":"/notes/2304. 网格中的最小路径代价【中等】/README"},{"text":"⏰ 2305. 公平分发饼干【中等】","link":"/notes/2305. 公平分发饼干【中等】/README"},{"text":"⏰ 2306. 公司命名【困难】","link":"/notes/2306. 公司命名【困难】/README"},{"text":"⏰ 2307. 检查方程中的矛盾之处【困难】","link":"/notes/2307. 检查方程中的矛盾之处【困难】/README"},{"text":"⏰ 2308. 按性别排列表格【中等】","link":"/notes/2308. 按性别排列表格【中等】/README"},{"text":"⏰ 2309. 兼具大小写的最好英文字母【简单】","link":"/notes/2309. 兼具大小写的最好英文字母【简单】/README"},{"text":"⏰ 2310. 个位数字为 K 的整数之和【中等】","link":"/notes/2310. 个位数字为 K 的整数之和【中等】/README"},{"text":"⏰ 2311. 小于等于 K 的最长二进制子序列【中等】","link":"/notes/2311. 小于等于 K 的最长二进制子序列【中等】/README"},{"text":"⏰ 2312. 卖木头块【困难】","link":"/notes/2312. 卖木头块【困难】/README"},{"text":"⏰ 2313. 二叉树中得到结果所需的最少翻转次数【困难】","link":"/notes/2313. 二叉树中得到结果所需的最少翻转次数【困难】/README"},{"text":"⏰ 2314. 每个城市最高气温的第一天【中等】","link":"/notes/2314. 每个城市最高气温的第一天【中等】/README"},{"text":"⏰ 2315. 统计星号【简单】","link":"/notes/2315. 统计星号【简单】/README"},{"text":"⏰ 2316. 统计无向图中无法互相到达点对数【中等】","link":"/notes/2316. 统计无向图中无法互相到达点对数【中等】/README"},{"text":"⏰ 2317. 操作后的最大异或和【中等】","link":"/notes/2317. 操作后的最大异或和【中等】/README"},{"text":"⏰ 2318. 不同骰子序列的数目【困难】","link":"/notes/2318. 不同骰子序列的数目【困难】/README"},{"text":"⏰ 2319. 判断矩阵是否是一个 X 矩阵【简单】","link":"/notes/2319. 判断矩阵是否是一个 X 矩阵【简单】/README"},{"text":"⏰ 2320. 统计放置房子的方式数【中等】","link":"/notes/2320. 统计放置房子的方式数【中等】/README"},{"text":"⏰ 2321. 拼接数组的最大分数【困难】","link":"/notes/2321. 拼接数组的最大分数【困难】/README"},{"text":"⏰ 2322. 从树中删除边的最小分数【困难】","link":"/notes/2322. 从树中删除边的最小分数【困难】/README"},{"text":"⏰ 2323. 完成所有工作的最短时间 II【中等】","link":"/notes/2323. 完成所有工作的最短时间 II【中等】/README"},{"text":"⏰ 2324. 产品销售分析 IV【中等】","link":"/notes/2324. 产品销售分析 IV【中等】/README"},{"text":"⏰ 2325. 解密消息【简单】","link":"/notes/2325. 解密消息【简单】/README"},{"text":"⏰ 2326. 螺旋矩阵 IV【中等】","link":"/notes/2326. 螺旋矩阵 IV【中等】/README"},{"text":"⏰ 2327. 知道秘密的人数【中等】","link":"/notes/2327. 知道秘密的人数【中等】/README"},{"text":"⏰ 2328. 网格图中递增路径的数目【困难】","link":"/notes/2328. 网格图中递增路径的数目【困难】/README"},{"text":"⏰ 2329. 产品销售分析Ⅴ【简单】","link":"/notes/2329. 产品销售分析Ⅴ【简单】/README"},{"text":"⏰ 2330. 验证回文串 IV【中等】","link":"/notes/2330. 验证回文串 IV【中等】/README"},{"text":"⏰ 2331. 计算布尔二叉树的值【简单】","link":"/notes/2331. 计算布尔二叉树的值【简单】/README"},{"text":"⏰ 2332. 坐上公交的最晚时间【中等】","link":"/notes/2332. 坐上公交的最晚时间【中等】/README"},{"text":"⏰ 2333. 最小差值平方和【中等】","link":"/notes/2333. 最小差值平方和【中等】/README"},{"text":"⏰ 2334. 元素值大于变化阈值的子数组【困难】","link":"/notes/2334. 元素值大于变化阈值的子数组【困难】/README"},{"text":"⏰ 2335. 装满杯子需要的最短总时长【简单】","link":"/notes/2335. 装满杯子需要的最短总时长【简单】/README"},{"text":"⏰ 2336. 无限集中的最小数字【中等】","link":"/notes/2336. 无限集中的最小数字【中等】/README"},{"text":"⏰ 2337. 移动片段得到字符串【中等】","link":"/notes/2337. 移动片段得到字符串【中等】/README"},{"text":"⏰ 2338. 统计理想数组的数目【困难】","link":"/notes/2338. 统计理想数组的数目【困难】/README"},{"text":"⏰ 2339. 联赛的所有比赛【简单】","link":"/notes/2339. 联赛的所有比赛【简单】/README"},{"text":"⏰ 2340. 生成有效数组的最少交换次数【中等】","link":"/notes/2340. 生成有效数组的最少交换次数【中等】/README"},{"text":"⏰ 2341. 数组能形成多少数对【简单】","link":"/notes/2341. 数组能形成多少数对【简单】/README"},{"text":"⏰ 2342. 数位和相等数对的最大和【中等】","link":"/notes/2342. 数位和相等数对的最大和【中等】/README"},{"text":"⏰ 2343. 裁剪数字后查询第 K 小的数字【中等】","link":"/notes/2343. 裁剪数字后查询第 K 小的数字【中等】/README"},{"text":"⏰ 2344. 使数组可以被整除的最少删除次数【困难】","link":"/notes/2344. 使数组可以被整除的最少删除次数【困难】/README"},{"text":"⏰ 2345. 寻找可见山的数量【中等】","link":"/notes/2345. 寻找可见山的数量【中等】/README"},{"text":"⏰ 2346. 以百分比计算排名【中等】","link":"/notes/2346. 以百分比计算排名【中等】/README"},{"text":"⏰ 2347. 最好的扑克手牌【简单】","link":"/notes/2347. 最好的扑克手牌【简单】/README"},{"text":"⏰ 2348. 全 0 子数组的数目【中等】","link":"/notes/2348. 全 0 子数组的数目【中等】/README"},{"text":"⏰ 2349. 设计数字容器系统【中等】","link":"/notes/2349. 设计数字容器系统【中等】/README"},{"text":"⏰ 2350. 不可能得到的最短骰子序列【困难】","link":"/notes/2350. 不可能得到的最短骰子序列【困难】/README"},{"text":"⏰ 2351. 第一个出现两次的字母【简单】","link":"/notes/2351. 第一个出现两次的字母【简单】/README"},{"text":"⏰ 2352. 相等行列对【中等】","link":"/notes/2352. 相等行列对【中等】/README"},{"text":"⏰ 2353. 设计食物评分系统【中等】","link":"/notes/2353. 设计食物评分系统【中等】/README"},{"text":"⏰ 2354. 优质数对的数目【困难】","link":"/notes/2354. 优质数对的数目【困难】/README"},{"text":"⏰ 2355. 你能拿走的最大图书数量【困难】","link":"/notes/2355. 你能拿走的最大图书数量【困难】/README"},{"text":"⏰ 2356. 每位教师所教授的科目种类的数量【简单】","link":"/notes/2356. 每位教师所教授的科目种类的数量【简单】/README"},{"text":"⏰ 2357. 使数组中所有元素都等于零【简单】","link":"/notes/2357. 使数组中所有元素都等于零【简单】/README"},{"text":"⏰ 2358. 分组的最大数量【中等】","link":"/notes/2358. 分组的最大数量【中等】/README"},{"text":"⏰ 2359. 找到离给定两个节点最近的节点【中等】","link":"/notes/2359. 找到离给定两个节点最近的节点【中等】/README"},{"text":"⏰ 2360. 图中的最长环【困难】","link":"/notes/2360. 图中的最长环【困难】/README"},{"text":"⏰ 2361. 乘坐火车路线的最少费用【困难】","link":"/notes/2361. 乘坐火车路线的最少费用【困难】/README"},{"text":"⏰ 2362. 生成发票【困难】","link":"/notes/2362. 生成发票【困难】/README"},{"text":"⏰ 2363. 合并相似的物品【简单】","link":"/notes/2363. 合并相似的物品【简单】/README"},{"text":"⏰ 2364. 统计坏数对的数目【中等】","link":"/notes/2364. 统计坏数对的数目【中等】/README"},{"text":"⏰ 2365. 任务调度器 II【中等】","link":"/notes/2365. 任务调度器 II【中等】/README"},{"text":"⏰ 2366. 将数组排序的最少替换次数【困难】","link":"/notes/2366. 将数组排序的最少替换次数【困难】/README"},{"text":"⏰ 2367. 等差三元组的数目【简单】","link":"/notes/2367. 等差三元组的数目【简单】/README"},{"text":"⏰ 2368. 受限条件下可到达节点的数目【中等】","link":"/notes/2368. 受限条件下可到达节点的数目【中等】/README"},{"text":"⏰ 2369. 检查数组是否存在有效划分【中等】","link":"/notes/2369. 检查数组是否存在有效划分【中等】/README"},{"text":"⏰ 2370. 最长理想子序列【中等】","link":"/notes/2370. 最长理想子序列【中等】/README"},{"text":"⏰ 2371. 最小化网格中的最大值【困难】","link":"/notes/2371. 最小化网格中的最大值【困难】/README"},{"text":"⏰ 2372. 计算每个销售人员的影响力【中等】","link":"/notes/2372. 计算每个销售人员的影响力【中等】/README"},{"text":"⏰ 2373. 矩阵中的局部最大值【简单】","link":"/notes/2373. 矩阵中的局部最大值【简单】/README"},{"text":"⏰ 2374. 边积分最高的节点【中等】","link":"/notes/2374. 边积分最高的节点【中等】/README"},{"text":"⏰ 2375. 根据模式串构造最小数字【中等】","link":"/notes/2375. 根据模式串构造最小数字【中等】/README"},{"text":"⏰ 2376. 统计特殊整数【困难】","link":"/notes/2376. 统计特殊整数【困难】/README"},{"text":"⏰ 2377. 整理奥运表【简单】","link":"/notes/2377. 整理奥运表【简单】/README"},{"text":"⏰ 2378. 选择边来最大化树的得分【中等】","link":"/notes/2378. 选择边来最大化树的得分【中等】/README"},{"text":"⏰ 2379. 得到 K 个黑块的最少涂色次数【简单】","link":"/notes/2379. 得到 K 个黑块的最少涂色次数【简单】/README"},{"text":"⏰ 2380. 二进制字符串重新安排顺序需要的时间【中等】","link":"/notes/2380. 二进制字符串重新安排顺序需要的时间【中等】/README"},{"text":"⏰ 2381. 字母移位 II【中等】","link":"/notes/2381. 字母移位 II【中等】/README"},{"text":"⏰ 2382. 删除操作后的最大子段和【困难】","link":"/notes/2382. 删除操作后的最大子段和【困难】/README"},{"text":"⏰ 2383. 赢得比赛需要的最少训练时长【简单】","link":"/notes/2383. 赢得比赛需要的最少训练时长【简单】/README"},{"text":"⏰ 2384. 最大回文数字【中等】","link":"/notes/2384. 最大回文数字【中等】/README"},{"text":"⏰ 2385. 感染二叉树需要的总时间【中等】","link":"/notes/2385. 感染二叉树需要的总时间【中等】/README"},{"text":"⏰ 2386. 找出数组的第 K 大和【困难】","link":"/notes/2386. 找出数组的第 K 大和【困难】/README"},{"text":"⏰ 2387. 行排序矩阵的中位数【中等】","link":"/notes/2387. 行排序矩阵的中位数【中等】/README"},{"text":"⏰ 2388. 将表中的空值更改为前一个值【中等】","link":"/notes/2388. 将表中的空值更改为前一个值【中等】/README"},{"text":"⏰ 2389. 和有限的最长子序列【简单】","link":"/notes/2389. 和有限的最长子序列【简单】/README"},{"text":"⏰ 2390. 从字符串中移除星号【中等】","link":"/notes/2390. 从字符串中移除星号【中等】/README"},{"text":"⏰ 2391. 收集垃圾的最少总时间【中等】","link":"/notes/2391. 收集垃圾的最少总时间【中等】/README"},{"text":"⏰ 2392. 给定条件下构造矩阵【困难】","link":"/notes/2392. 给定条件下构造矩阵【困难】/README"},{"text":"⏰ 2393. 严格递增的子数组个数【中等】","link":"/notes/2393. 严格递增的子数组个数【中等】/README"},{"text":"⏰ 2394. 开除员工【中等】","link":"/notes/2394. 开除员工【中等】/README"},{"text":"⏰ 2395. 和相等的子数组【简单】","link":"/notes/2395. 和相等的子数组【简单】/README"},{"text":"⏰ 2396. 严格回文的数字【中等】","link":"/notes/2396. 严格回文的数字【中等】/README"},{"text":"⏰ 2397. 被列覆盖的最多行数【中等】","link":"/notes/2397. 被列覆盖的最多行数【中等】/README"},{"text":"⏰ 2398. 预算内的最多机器人数目【困难】","link":"/notes/2398. 预算内的最多机器人数目【困难】/README"},{"text":"✅ 2399. 检查相同字母间的距离【简单】","link":"/notes/2399. 检查相同字母间的距离【简单】/README"},{"text":"⏰ 2400. 恰好移动 k 步到达某一位置的方法数目【中等】","link":"/notes/2400. 恰好移动 k 步到达某一位置的方法数目【中等】/README"}]},{"text":"26. 2401~2500","collapsed":true,"items":[{"text":"⏰ 2401. 最长优雅子数组【中等】","link":"/notes/2401. 最长优雅子数组【中等】/README"},{"text":"⏰ 2402. 会议室 III【困难】","link":"/notes/2402. 会议室 III【困难】/README"},{"text":"⏰ 2403. 杀死所有怪物的最短时间【困难】","link":"/notes/2403. 杀死所有怪物的最短时间【困难】/README"},{"text":"⏰ 2404. 出现最频繁的偶数元素【简单】","link":"/notes/2404. 出现最频繁的偶数元素【简单】/README"},{"text":"⏰ 2405. 子字符串的最优划分【中等】","link":"/notes/2405. 子字符串的最优划分【中等】/README"},{"text":"⏰ 2406. 将区间分为最少组数【中等】","link":"/notes/2406. 将区间分为最少组数【中等】/README"},{"text":"⏰ 2407. 最长递增子序列 II【困难】","link":"/notes/2407. 最长递增子序列 II【困难】/README"},{"text":"⏰ 2408. 设计 SQL【中等】","link":"/notes/2408. 设计 SQL【中等】/README"},{"text":"⏰ 2409. 统计共同度过的日子数【简单】","link":"/notes/2409. 统计共同度过的日子数【简单】/README"},{"text":"⏰ 2410. 运动员和训练师的最大匹配数【中等】","link":"/notes/2410. 运动员和训练师的最大匹配数【中等】/README"},{"text":"⏰ 2411. 按位或最大的最小子数组长度【中等】","link":"/notes/2411. 按位或最大的最小子数组长度【中等】/README"},{"text":"⏰ 2412. 完成所有交易的初始最少钱数【困难】","link":"/notes/2412. 完成所有交易的初始最少钱数【困难】/README"},{"text":"⏰ 2413. 最小偶倍数【简单】","link":"/notes/2413. 最小偶倍数【简单】/README"},{"text":"⏰ 2414. 最长的字母序连续子字符串的长度【中等】","link":"/notes/2414. 最长的字母序连续子字符串的长度【中等】/README"},{"text":"⏰ 2415. 反转二叉树的奇数层【中等】","link":"/notes/2415. 反转二叉树的奇数层【中等】/README"},{"text":"⏰ 2416. 字符串的前缀分数和【困难】","link":"/notes/2416. 字符串的前缀分数和【困难】/README"},{"text":"⏰ 2417. 最近的公平整数【中等】","link":"/notes/2417. 最近的公平整数【中等】/README"},{"text":"✅ 2418. 按身高排序【简单】","link":"/notes/2418. 按身高排序【简单】/README"},{"text":"⏰ 2419. 按位与最大的最长子数组【中等】","link":"/notes/2419. 按位与最大的最长子数组【中等】/README"},{"text":"⏰ 2420. 找到所有好下标【中等】","link":"/notes/2420. 找到所有好下标【中等】/README"},{"text":"⏰ 2421. 好路径的数目【困难】","link":"/notes/2421. 好路径的数目【困难】/README"},{"text":"⏰ 2422. 使用合并操作将数组转换为回文序列【中等】","link":"/notes/2422. 使用合并操作将数组转换为回文序列【中等】/README"},{"text":"⏰ 2423. 删除字符使频率相同【简单】","link":"/notes/2423. 删除字符使频率相同【简单】/README"},{"text":"⏰ 2424. 最长上传前缀【中等】","link":"/notes/2424. 最长上传前缀【中等】/README"},{"text":"⏰ 2425. 所有数对的异或和【中等】","link":"/notes/2425. 所有数对的异或和【中等】/README"},{"text":"⏰ 2426. 满足不等式的数对数目【困难】","link":"/notes/2426. 满足不等式的数对数目【困难】/README"},{"text":"⏰ 2427. 公因子的数目【简单】","link":"/notes/2427. 公因子的数目【简单】/README"},{"text":"⏰ 2428. 沙漏的最大总和【中等】","link":"/notes/2428. 沙漏的最大总和【中等】/README"},{"text":"⏰ 2429. 最小异或【中等】","link":"/notes/2429. 最小异或【中等】/README"},{"text":"⏰ 2430. 对字母串可执行的最大删除数【困难】","link":"/notes/2430. 对字母串可执行的最大删除数【困难】/README"},{"text":"⏰ 2431. 最大限度地提高购买水果的口味【中等】","link":"/notes/2431. 最大限度地提高购买水果的口味【中等】/README"},{"text":"⏰ 2432. 处理用时最长的那个任务的员工【简单】","link":"/notes/2432. 处理用时最长的那个任务的员工【简单】/README"},{"text":"⏰ 2433. 找出前缀异或的原始数组【中等】","link":"/notes/2433. 找出前缀异或的原始数组【中等】/README"},{"text":"⏰ 2434. 使用机器人打印字典序最小的字符串【中等】","link":"/notes/2434. 使用机器人打印字典序最小的字符串【中等】/README"},{"text":"⏰ 2435. 矩阵中和能被 K 整除的路径【困难】","link":"/notes/2435. 矩阵中和能被 K 整除的路径【困难】/README"},{"text":"⏰ 2436. 使子数组最大公约数大于一的最小分割数【中等】","link":"/notes/2436. 使子数组最大公约数大于一的最小分割数【中等】/README"},{"text":"⏰ 2437. 有效时间的数目【简单】","link":"/notes/2437. 有效时间的数目【简单】/README"},{"text":"⏰ 2438. 二的幂数组中查询范围内的乘积【中等】","link":"/notes/2438. 二的幂数组中查询范围内的乘积【中等】/README"},{"text":"⏰ 2439. 最小化数组中的最大值【中等】","link":"/notes/2439. 最小化数组中的最大值【中等】/README"},{"text":"⏰ 2440. 创建价值相同的连通块【困难】","link":"/notes/2440. 创建价值相同的连通块【困难】/README"},{"text":"⏰ 2441. 与对应负数同时存在的最大正整数【简单】","link":"/notes/2441. 与对应负数同时存在的最大正整数【简单】/README"},{"text":"⏰ 2442. 反转之后不同整数的数目【中等】","link":"/notes/2442. 反转之后不同整数的数目【中等】/README"},{"text":"⏰ 2443. 反转之后的数字和【中等】","link":"/notes/2443. 反转之后的数字和【中等】/README"},{"text":"⏰ 2444. 统计定界子数组的数目【困难】","link":"/notes/2444. 统计定界子数组的数目【困难】/README"},{"text":"⏰ 2445. 值为 1 的节点数【中等】","link":"/notes/2445. 值为 1 的节点数【中等】/README"},{"text":"⏰ 2446. 判断两个事件是否存在冲突【简单】","link":"/notes/2446. 判断两个事件是否存在冲突【简单】/README"},{"text":"⏰ 2447. 最大公因数等于 K 的子数组数目【中等】","link":"/notes/2447. 最大公因数等于 K 的子数组数目【中等】/README"},{"text":"⏰ 2448. 使数组相等的最小开销【困难】","link":"/notes/2448. 使数组相等的最小开销【困难】/README"},{"text":"⏰ 2449. 使数组相似的最少操作次数【困难】","link":"/notes/2449. 使数组相似的最少操作次数【困难】/README"},{"text":"⏰ 2450. 应用操作后不同二进制字符串的数量【中等】","link":"/notes/2450. 应用操作后不同二进制字符串的数量【中等】/README"},{"text":"✅ 2451. 差值数组不同的字符串【简单】","link":"/notes/2451. 差值数组不同的字符串【简单】/README"},{"text":"⏰ 2452. 距离字典两次编辑以内的单词【中等】","link":"/notes/2452. 距离字典两次编辑以内的单词【中等】/README"},{"text":"⏰ 2453. 摧毁一系列目标【中等】","link":"/notes/2453. 摧毁一系列目标【中等】/README"},{"text":"⏰ 2454. 下一个更大元素 IV【困难】","link":"/notes/2454. 下一个更大元素 IV【困难】/README"},{"text":"⏰ 2455. 可被三整除的偶数的平均值【简单】","link":"/notes/2455. 可被三整除的偶数的平均值【简单】/README"},{"text":"⏰ 2456. 最流行的视频创作者【中等】","link":"/notes/2456. 最流行的视频创作者【中等】/README"},{"text":"⏰ 2457. 美丽整数的最小增量【中等】","link":"/notes/2457. 美丽整数的最小增量【中等】/README"},{"text":"⏰ 2458. 移除子树后的二叉树高度【困难】","link":"/notes/2458. 移除子树后的二叉树高度【困难】/README"},{"text":"⏰ 2459. 通过移动项目到空白区域来排序数组【困难】","link":"/notes/2459. 通过移动项目到空白区域来排序数组【困难】/README"},{"text":"⏰ 2460. 对数组执行操作【简单】","link":"/notes/2460. 对数组执行操作【简单】/README"},{"text":"⏰ 2461. 长度为 K 子数组中的最大和【中等】","link":"/notes/2461. 长度为 K 子数组中的最大和【中等】/README"},{"text":"⏰ 2462. 雇佣 K 位工人的总代价【中等】","link":"/notes/2462. 雇佣 K 位工人的总代价【中等】/README"},{"text":"⏰ 2463. 最小移动总距离【困难】","link":"/notes/2463. 最小移动总距离【困难】/README"},{"text":"⏰ 2464. 有效分割中的最少子数组数目【中等】","link":"/notes/2464. 有效分割中的最少子数组数目【中等】/README"},{"text":"⏰ 2465. 不同的平均值数目【简单】","link":"/notes/2465. 不同的平均值数目【简单】/README"},{"text":"⏰ 2466. 统计构造好字符串的方案数【中等】","link":"/notes/2466. 统计构造好字符串的方案数【中等】/README"},{"text":"⏰ 2467. 树上最大得分和路径【中等】","link":"/notes/2467. 树上最大得分和路径【中等】/README"},{"text":"⏰ 2468. 根据限制分割消息【困难】","link":"/notes/2468. 根据限制分割消息【困难】/README"},{"text":"⏰ 2469. 温度转换【简单】","link":"/notes/2469. 温度转换【简单】/README"},{"text":"⏰ 2470. 最小公倍数等于 K 的子数组数目【中等】","link":"/notes/2470. 最小公倍数等于 K 的子数组数目【中等】/README"},{"text":"⏰ 2471. 逐层排序二叉树所需的最少操作数目【中等】","link":"/notes/2471. 逐层排序二叉树所需的最少操作数目【中等】/README"},{"text":"⏰ 2472. 不重叠回文子字符串的最大数目【困难】","link":"/notes/2472. 不重叠回文子字符串的最大数目【困难】/README"},{"text":"⏰ 2473. 购买苹果的最低成本【中等】","link":"/notes/2473. 购买苹果的最低成本【中等】/README"},{"text":"⏰ 2474. 购买量严格增加的客户【困难】","link":"/notes/2474. 购买量严格增加的客户【困难】/README"},{"text":"⏰ 2475. 数组中不等三元组的数目【简单】","link":"/notes/2475. 数组中不等三元组的数目【简单】/README"},{"text":"⏰ 2476. 二叉搜索树最近节点查询【中等】","link":"/notes/2476. 二叉搜索树最近节点查询【中等】/README"},{"text":"⏰ 2477. 到达首都的最少油耗【中等】","link":"/notes/2477. 到达首都的最少油耗【中等】/README"},{"text":"⏰ 2478. 完美分割的方案数【困难】","link":"/notes/2478. 完美分割的方案数【困难】/README"},{"text":"⏰ 2479. 两个不重叠子树的最大异或值【困难】","link":"/notes/2479. 两个不重叠子树的最大异或值【困难】/README"},{"text":"⏰ 2480. 形成化学键【简单】","link":"/notes/2480. 形成化学键【简单】/README"},{"text":"⏰ 2481. 分割圆的最少切割次数【简单】","link":"/notes/2481. 分割圆的最少切割次数【简单】/README"},{"text":"⏰ 2482. 行和列中一和零的差值【中等】","link":"/notes/2482. 行和列中一和零的差值【中等】/README"},{"text":"⏰ 2483. 商店的最少代价【中等】","link":"/notes/2483. 商店的最少代价【中等】/README"},{"text":"⏰ 2484. 统计回文子序列数目【困难】","link":"/notes/2484. 统计回文子序列数目【困难】/README"},{"text":"⏰ 2485. 找出中枢整数【简单】","link":"/notes/2485. 找出中枢整数【简单】/README"},{"text":"⏰ 2486. 追加字符以获得子序列【中等】","link":"/notes/2486. 追加字符以获得子序列【中等】/README"},{"text":"⏰ 2487. 从链表中移除节点【中等】","link":"/notes/2487. 从链表中移除节点【中等】/README"},{"text":"⏰ 2488. 统计中位数为 K 的子数组【困难】","link":"/notes/2488. 统计中位数为 K 的子数组【困难】/README"},{"text":"⏰ 2489. 固定比率的子字符串数【中等】","link":"/notes/2489. 固定比率的子字符串数【中等】/README"},{"text":"⏰ 2490. 回环句【简单】","link":"/notes/2490. 回环句【简单】/README"},{"text":"⏰ 2491. 划分技能点相等的团队【中等】","link":"/notes/2491. 划分技能点相等的团队【中等】/README"},{"text":"⏰ 2492. 两个城市间路径的最小分数【中等】","link":"/notes/2492. 两个城市间路径的最小分数【中等】/README"},{"text":"⏰ 2493. 将节点分成尽可能多的组【困难】","link":"/notes/2493. 将节点分成尽可能多的组【困难】/README"},{"text":"⏰ 2494. 合并在同一个大厅重叠的活动【困难】","link":"/notes/2494. 合并在同一个大厅重叠的活动【困难】/README"},{"text":"⏰ 2495. 乘积为偶数的子数组数【中等】","link":"/notes/2495. 乘积为偶数的子数组数【中等】/README"},{"text":"⏰ 2496. 数组中字符串的最大值【简单】","link":"/notes/2496. 数组中字符串的最大值【简单】/README"},{"text":"⏰ 2497. 图中最大星和【中等】","link":"/notes/2497. 图中最大星和【中等】/README"},{"text":"⏰ 2498. 青蛙过河 II【中等】","link":"/notes/2498. 青蛙过河 II【中等】/README"},{"text":"⏰ 2499. 让数组不相等的最小总代价【困难】","link":"/notes/2499. 让数组不相等的最小总代价【困难】/README"},{"text":"⏰ 2500. 删除每行中的最大值【简单】","link":"/notes/2500. 删除每行中的最大值【简单】/README"}]},{"text":"27. 2501~2600","collapsed":true,"items":[{"text":"⏰ 2501. 数组中最长的方波【中等】","link":"/notes/2501. 数组中最长的方波【中等】/README"},{"text":"⏰ 2502. 设计内存分配器【中等】","link":"/notes/2502. 设计内存分配器【中等】/README"},{"text":"⏰ 2503. 矩阵查询可获得的最大分数【困难】","link":"/notes/2503. 矩阵查询可获得的最大分数【困难】/README"},{"text":"⏰ 2504. 把名字和职业联系起来【简单】","link":"/notes/2504. 把名字和职业联系起来【简单】/README"},{"text":"⏰ 2505. 所有子序列和的按位或【中等】","link":"/notes/2505. 所有子序列和的按位或【中等】/README"},{"text":"✅ 2506. 统计相似字符串对的数目【简单】","link":"/notes/2506. 统计相似字符串对的数目【简单】/README"},{"text":"⏰ 2507. 使用质因数之和替换后可以取到的最小值【中等】","link":"/notes/2507. 使用质因数之和替换后可以取到的最小值【中等】/README"},{"text":"⏰ 2508. 添加边使所有节点度数都为偶数【困难】","link":"/notes/2508. 添加边使所有节点度数都为偶数【困难】/README"},{"text":"⏰ 2509. 查询树中环的长度【困难】","link":"/notes/2509. 查询树中环的长度【困难】/README"},{"text":"⏰ 2510. 检查是否有路径经过相同数量的 0 和 1【中等】","link":"/notes/2510. 检查是否有路径经过相同数量的 0 和 1【中等】/README"},{"text":"⏰ 2511. 最多可以摧毁的敌人城堡数目【简单】","link":"/notes/2511. 最多可以摧毁的敌人城堡数目【简单】/README"},{"text":"⏰ 2512. 奖励最顶尖的 K 名学生【中等】","link":"/notes/2512. 奖励最顶尖的 K 名学生【中等】/README"},{"text":"⏰ 2513. 最小化两个数组中的最大值【中等】","link":"/notes/2513. 最小化两个数组中的最大值【中等】/README"},{"text":"⏰ 2514. 统计同位异构字符串数目【困难】","link":"/notes/2514. 统计同位异构字符串数目【困难】/README"},{"text":"⏰ 2515. 到目标字符串的最短距离【简单】","link":"/notes/2515. 到目标字符串的最短距离【简单】/README"},{"text":"⏰ 2516. 每种字符至少取 K 个【中等】","link":"/notes/2516. 每种字符至少取 K 个【中等】/README"},{"text":"⏰ 2517. 礼盒的最大甜蜜度【中等】","link":"/notes/2517. 礼盒的最大甜蜜度【中等】/README"},{"text":"⏰ 2518. 好分区的数目【困难】","link":"/notes/2518. 好分区的数目【困难】/README"},{"text":"⏰ 2519. 统计 K-Big 索引的数量【困难】","link":"/notes/2519. 统计 K-Big 索引的数量【困难】/README"},{"text":"⏰ 2520. 统计能整除数字的位数【简单】","link":"/notes/2520. 统计能整除数字的位数【简单】/README"},{"text":"⏰ 2521. 数组乘积中的不同质因数数目【中等】","link":"/notes/2521. 数组乘积中的不同质因数数目【中等】/README"},{"text":"⏰ 2522. 将字符串分割成值不超过 K 的子字符串【中等】","link":"/notes/2522. 将字符串分割成值不超过 K 的子字符串【中等】/README"},{"text":"⏰ 2523. 范围内最接近的两个质数【中等】","link":"/notes/2523. 范围内最接近的两个质数【中等】/README"},{"text":"⏰ 2524. 子数组的最大频率分数【困难】","link":"/notes/2524. 子数组的最大频率分数【困难】/README"},{"text":"⏰ 2525. 根据规则将箱子分类【简单】","link":"/notes/2525. 根据规则将箱子分类【简单】/README"},{"text":"⏰ 2526. 找到数据流中的连续整数【中等】","link":"/notes/2526. 找到数据流中的连续整数【中等】/README"},{"text":"⏰ 2527. 查询数组异或美丽值【中等】","link":"/notes/2527. 查询数组异或美丽值【中等】/README"},{"text":"⏰ 2528. 最大化城市的最小电量【困难】","link":"/notes/2528. 最大化城市的最小电量【困难】/README"},{"text":"⏰ 2529. 正整数和负整数的最大计数【简单】","link":"/notes/2529. 正整数和负整数的最大计数【简单】/README"},{"text":"⏰ 2530. 执行 K 次操作后的最大分数【中等】","link":"/notes/2530. 执行 K 次操作后的最大分数【中等】/README"},{"text":"⏰ 2531. 使字符串中不同字符的数目相等【中等】","link":"/notes/2531. 使字符串中不同字符的数目相等【中等】/README"},{"text":"⏰ 2532. 过桥的时间【困难】","link":"/notes/2532. 过桥的时间【困难】/README"},{"text":"⏰ 2533. 好二进制字符串的数量【中等】","link":"/notes/2533. 好二进制字符串的数量【中等】/README"},{"text":"⏰ 2534. 通过门的时间【困难】","link":"/notes/2534. 通过门的时间【困难】/README"},{"text":"⏰ 2535. 数组元素和与数字和的绝对差【简单】","link":"/notes/2535. 数组元素和与数字和的绝对差【简单】/README"},{"text":"⏰ 2536. 子矩阵元素加 1【中等】","link":"/notes/2536. 子矩阵元素加 1【中等】/README"},{"text":"⏰ 2537. 统计好子数组的数目【中等】","link":"/notes/2537. 统计好子数组的数目【中等】/README"},{"text":"⏰ 2538. 最大价值和与最小价值和的差值【困难】","link":"/notes/2538. 最大价值和与最小价值和的差值【困难】/README"},{"text":"⏰ 2539. 好子序列的个数【中等】","link":"/notes/2539. 好子序列的个数【中等】/README"},{"text":"⏰ 2540. 最小公共值【简单】","link":"/notes/2540. 最小公共值【简单】/README"},{"text":"⏰ 2541. 使数组中所有元素相等的最小操作数 II【中等】","link":"/notes/2541. 使数组中所有元素相等的最小操作数 II【中等】/README"},{"text":"⏰ 2542. 最大子序列的分数【中等】","link":"/notes/2542. 最大子序列的分数【中等】/README"},{"text":"⏰ 2543. 判断一个点是否可以到达【困难】","link":"/notes/2543. 判断一个点是否可以到达【困难】/README"},{"text":"⏰ 2544. 交替数字和【简单】","link":"/notes/2544. 交替数字和【简单】/README"},{"text":"⏰ 2545. 根据第 K 场考试的分数排序【中等】","link":"/notes/2545. 根据第 K 场考试的分数排序【中等】/README"},{"text":"⏰ 2546. 执行逐位运算使字符串相等【中等】","link":"/notes/2546. 执行逐位运算使字符串相等【中等】/README"},{"text":"⏰ 2547. 拆分数组的最小代价【困难】","link":"/notes/2547. 拆分数组的最小代价【困难】/README"},{"text":"⏰ 2548. 填满背包的最大价格【中等】","link":"/notes/2548. 填满背包的最大价格【中等】/README"},{"text":"⏰ 2549. 统计桌面上的不同数字【简单】","link":"/notes/2549. 统计桌面上的不同数字【简单】/README"},{"text":"⏰ 2550. 猴子碰撞的方法数【中等】","link":"/notes/2550. 猴子碰撞的方法数【中等】/README"},{"text":"⏰ 2551. 将珠子放入背包中【困难】","link":"/notes/2551. 将珠子放入背包中【困难】/README"},{"text":"⏰ 2552. 统计上升四元组【困难】","link":"/notes/2552. 统计上升四元组【困难】/README"},{"text":"⏰ 2553. 分割数组中数字的数位【简单】","link":"/notes/2553. 分割数组中数字的数位【简单】/README"},{"text":"⏰ 2554. 从一个范围内选择最多整数 I【中等】","link":"/notes/2554. 从一个范围内选择最多整数 I【中等】/README"},{"text":"⏰ 2555. 两个线段获得的最多奖品【中等】","link":"/notes/2555. 两个线段获得的最多奖品【中等】/README"},{"text":"⏰ 2556. 二进制矩阵中翻转最多一次使路径不连通【中等】","link":"/notes/2556. 二进制矩阵中翻转最多一次使路径不连通【中等】/README"},{"text":"⏰ 2557. 从一个范围内选择最多整数 II【中等】","link":"/notes/2557. 从一个范围内选择最多整数 II【中等】/README"},{"text":"⏰ 2558. 从数量最多的堆取走礼物【简单】","link":"/notes/2558. 从数量最多的堆取走礼物【简单】/README"},{"text":"⏰ 2559. 统计范围内的元音字符串数【中等】","link":"/notes/2559. 统计范围内的元音字符串数【中等】/README"},{"text":"⏰ 2560. 打家劫舍 IV【中等】","link":"/notes/2560. 打家劫舍 IV【中等】/README"},{"text":"⏰ 2561. 重排水果【困难】","link":"/notes/2561. 重排水果【困难】/README"},{"text":"⏰ 2562. 找出数组的串联值【简单】","link":"/notes/2562. 找出数组的串联值【简单】/README"},{"text":"⏰ 2563. 统计公平数对的数目【中等】","link":"/notes/2563. 统计公平数对的数目【中等】/README"},{"text":"⏰ 2564. 子字符串异或查询【中等】","link":"/notes/2564. 子字符串异或查询【中等】/README"},{"text":"⏰ 2565. 最少得分子序列【困难】","link":"/notes/2565. 最少得分子序列【困难】/README"},{"text":"⏰ 2566. 替换一个数字后的最大差值【简单】","link":"/notes/2566. 替换一个数字后的最大差值【简单】/README"},{"text":"⏰ 2567. 修改两个元素的最小分数【中等】","link":"/notes/2567. 修改两个元素的最小分数【中等】/README"},{"text":"⏰ 2568. 最小无法得到的或值【中等】","link":"/notes/2568. 最小无法得到的或值【中等】/README"},{"text":"⏰ 2569. 更新数组后处理求和查询【困难】","link":"/notes/2569. 更新数组后处理求和查询【困难】/README"},{"text":"⏰ 2570. 合并两个二维数组 - 求和法【简单】","link":"/notes/2570. 合并两个二维数组 - 求和法【简单】/README"},{"text":"⏰ 2571. 将整数减少到零需要的最少操作数【中等】","link":"/notes/2571. 将整数减少到零需要的最少操作数【中等】/README"},{"text":"⏰ 2572. 无平方子集计数【中等】","link":"/notes/2572. 无平方子集计数【中等】/README"},{"text":"⏰ 2573. 找出对应 LCP 矩阵的字符串【困难】","link":"/notes/2573. 找出对应 LCP 矩阵的字符串【困难】/README"},{"text":"⏰ 2574. 左右元素和的差值【简单】","link":"/notes/2574. 左右元素和的差值【简单】/README"},{"text":"⏰ 2575. 找出字符串的可整除数组【中等】","link":"/notes/2575. 找出字符串的可整除数组【中等】/README"},{"text":"⏰ 2576. 求出最多标记下标【中等】","link":"/notes/2576. 求出最多标记下标【中等】/README"},{"text":"⏰ 2577. 在网格图中访问一个格子的最少时间【困难】","link":"/notes/2577. 在网格图中访问一个格子的最少时间【困难】/README"},{"text":"⏰ 2578. 最小和分割【简单】","link":"/notes/2578. 最小和分割【简单】/README"},{"text":"⏰ 2579. 统计染色格子数【中等】","link":"/notes/2579. 统计染色格子数【中等】/README"},{"text":"⏰ 2580. 统计将重叠区间合并成组的方案数【中等】","link":"/notes/2580. 统计将重叠区间合并成组的方案数【中等】/README"},{"text":"⏰ 2581. 统计可能的树根数目【困难】","link":"/notes/2581. 统计可能的树根数目【困难】/README"},{"text":"⏰ 2582. 递枕头【简单】","link":"/notes/2582. 递枕头【简单】/README"},{"text":"⏰ 2583. 二叉树中的第 K 大层和【中等】","link":"/notes/2583. 二叉树中的第 K 大层和【中等】/README"},{"text":"⏰ 2584. 分割数组使乘积互质【困难】","link":"/notes/2584. 分割数组使乘积互质【困难】/README"},{"text":"⏰ 2585. 获得分数的方法数【困难】","link":"/notes/2585. 获得分数的方法数【困难】/README"},{"text":"⏰ 2586. 统计范围内的元音字符串数【简单】","link":"/notes/2586. 统计范围内的元音字符串数【简单】/README"},{"text":"⏰ 2587. 重排数组以得到最大前缀分数【中等】","link":"/notes/2587. 重排数组以得到最大前缀分数【中等】/README"},{"text":"⏰ 2588. 统计美丽子数组数目【中等】","link":"/notes/2588. 统计美丽子数组数目【中等】/README"},{"text":"⏰ 2589. 完成所有任务的最少时间【困难】","link":"/notes/2589. 完成所有任务的最少时间【困难】/README"},{"text":"⏰ 2590. 设计一个待办事项清单【中等】","link":"/notes/2590. 设计一个待办事项清单【中等】/README"},{"text":"⏰ 2591. 将钱分给最多的儿童【简单】","link":"/notes/2591. 将钱分给最多的儿童【简单】/README"},{"text":"⏰ 2592. 最大化数组的伟大值【中等】","link":"/notes/2592. 最大化数组的伟大值【中等】/README"},{"text":"⏰ 2593. 标记所有元素后数组的分数【中等】","link":"/notes/2593. 标记所有元素后数组的分数【中等】/README"},{"text":"⏰ 2594. 修车的最少时间【中等】","link":"/notes/2594. 修车的最少时间【中等】/README"},{"text":"⏰ 2595. 奇偶位数【简单】","link":"/notes/2595. 奇偶位数【简单】/README"},{"text":"⏰ 2596. 检查骑士巡视方案【中等】","link":"/notes/2596. 检查骑士巡视方案【中等】/README"},{"text":"⏰ 2597. 美丽子集的数目【中等】","link":"/notes/2597. 美丽子集的数目【中等】/README"},{"text":"⏰ 2598. 执行操作后的最大 MEX【中等】","link":"/notes/2598. 执行操作后的最大 MEX【中等】/README"},{"text":"⏰ 2599. 使前缀和数组非负【中等】","link":"/notes/2599. 使前缀和数组非负【中等】/README"},{"text":"⏰ 2600. K 件物品的最大和【简单】","link":"/notes/2600. K 件物品的最大和【简单】/README"}]},{"text":"28. 2601~2700","collapsed":true,"items":[{"text":"⏰ 2601. 质数减法运算【中等】","link":"/notes/2601. 质数减法运算【中等】/README"},{"text":"⏰ 2602. 使数组元素全部相等的最少操作次数【中等】","link":"/notes/2602. 使数组元素全部相等的最少操作次数【中等】/README"},{"text":"⏰ 2603. 收集树中金币【困难】","link":"/notes/2603. 收集树中金币【困难】/README"},{"text":"⏰ 2604. 吃掉所有谷子的最短时间【困难】","link":"/notes/2604. 吃掉所有谷子的最短时间【困难】/README"},{"text":"⏰ 2605. 从两个数字数组里生成最小数字【简单】","link":"/notes/2605. 从两个数字数组里生成最小数字【简单】/README"},{"text":"⏰ 2606. 找到最大开销的子字符串【中等】","link":"/notes/2606. 找到最大开销的子字符串【中等】/README"},{"text":"⏰ 2607. 使子数组元素和相等【中等】","link":"/notes/2607. 使子数组元素和相等【中等】/README"},{"text":"⏰ 2608. 图中的最短环【困难】","link":"/notes/2608. 图中的最短环【困难】/README"},{"text":"⏰ 2609. 最长平衡子字符串【简单】","link":"/notes/2609. 最长平衡子字符串【简单】/README"},{"text":"⏰ 2610. 转换二维数组【中等】","link":"/notes/2610. 转换二维数组【中等】/README"},{"text":"⏰ 2611. 老鼠和奶酪【中等】","link":"/notes/2611. 老鼠和奶酪【中等】/README"},{"text":"⏰ 2612. 最少翻转操作数【困难】","link":"/notes/2612. 最少翻转操作数【困难】/README"},{"text":"⏰ 2613. 美数对【困难】","link":"/notes/2613. 美数对【困难】/README"},{"text":"⏰ 2614. 对角线上的质数【简单】","link":"/notes/2614. 对角线上的质数【简单】/README"},{"text":"⏰ 2615. 等值距离和【中等】","link":"/notes/2615. 等值距离和【中等】/README"},{"text":"⏰ 2616. 最小化数对的最大差值【中等】","link":"/notes/2616. 最小化数对的最大差值【中等】/README"},{"text":"⏰ 2617. 网格图中最少访问的格子数【困难】","link":"/notes/2617. 网格图中最少访问的格子数【困难】/README"},{"text":"⏰ 2618. 检查是否是类的对象实例【中等】","link":"/notes/2618. 检查是否是类的对象实例【中等】/README"},{"text":"⏰ 2619. 数组原型对象的最后一个元素【简单】","link":"/notes/2619. 数组原型对象的最后一个元素【简单】/README"},{"text":"⏰ 2620. 计数器【简单】","link":"/notes/2620. 计数器【简单】/README"},{"text":"⏰ 2621. 睡眠函数【简单】","link":"/notes/2621. 睡眠函数【简单】/README"},{"text":"⏰ 2622. 有时间限制的缓存【中等】","link":"/notes/2622. 有时间限制的缓存【中等】/README"},{"text":"⏰ 2623. 记忆函数【中等】","link":"/notes/2623. 记忆函数【中等】/README"},{"text":"⏰ 2624. 蜗牛排序【中等】","link":"/notes/2624. 蜗牛排序【中等】/README"},{"text":"⏰ 2625. 扁平化嵌套数组【中等】","link":"/notes/2625. 扁平化嵌套数组【中等】/README"},{"text":"⏰ 2626. 数组归约运算【简单】","link":"/notes/2626. 数组归约运算【简单】/README"},{"text":"⏰ 2627. 函数防抖【中等】","link":"/notes/2627. 函数防抖【中等】/README"},{"text":"⏰ 2628. 完全相等的 JSON 字符串【中等】","link":"/notes/2628. 完全相等的 JSON 字符串【中等】/README"},{"text":"⏰ 2629. 复合函数【简单】","link":"/notes/2629. 复合函数【简单】/README"},{"text":"⏰ 2630. 记忆函数 II【困难】","link":"/notes/2630. 记忆函数 II【困难】/README"},{"text":"⏰ 2631. 分组【中等】","link":"/notes/2631. 分组【中等】/README"},{"text":"⏰ 2632. 柯里化【中等】","link":"/notes/2632. 柯里化【中等】/README"},{"text":"⏰ 2633. 将对象转换为 JSON 字符串【中等】","link":"/notes/2633. 将对象转换为 JSON 字符串【中等】/README"},{"text":"⏰ 2634. 过滤数组中的元素【简单】","link":"/notes/2634. 过滤数组中的元素【简单】/README"},{"text":"⏰ 2635. 转换数组中的每个元素【简单】","link":"/notes/2635. 转换数组中的每个元素【简单】/README"},{"text":"⏰ 2636. Promise 对象池【中等】","link":"/notes/2636. Promise 对象池【中等】/README"},{"text":"⏰ 2637. 有时间限制的 Promise 对象【中等】","link":"/notes/2637. 有时间限制的 Promise 对象【中等】/README"},{"text":"⏰ 2638. 统计 K-Free 子集的总数【中等】","link":"/notes/2638. 统计 K-Free 子集的总数【中等】/README"},{"text":"⏰ 2639. 查询网格图中每一列的宽度【简单】","link":"/notes/2639. 查询网格图中每一列的宽度【简单】/README"},{"text":"⏰ 2640. 一个数组所有前缀的分数【中等】","link":"/notes/2640. 一个数组所有前缀的分数【中等】/README"},{"text":"⏰ 2641. 二叉树的堂兄弟节点 II【中等】","link":"/notes/2641. 二叉树的堂兄弟节点 II【中等】/README"},{"text":"⏰ 2642. 设计可以求最短路径的图类【困难】","link":"/notes/2642. 设计可以求最短路径的图类【困难】/README"},{"text":"⏰ 2643. 一最多的行【简单】","link":"/notes/2643. 一最多的行【简单】/README"},{"text":"⏰ 2644. 找出可整除性得分最大的整数【简单】","link":"/notes/2644. 找出可整除性得分最大的整数【简单】/README"},{"text":"⏰ 2645. 构造有效字符串的最少插入数【中等】","link":"/notes/2645. 构造有效字符串的最少插入数【中等】/README"},{"text":"⏰ 2646. 最小化旅行的价格总和【困难】","link":"/notes/2646. 最小化旅行的价格总和【困难】/README"},{"text":"⏰ 2647. 把三角形染成红色【困难】","link":"/notes/2647. 把三角形染成红色【困难】/README"},{"text":"✅ 2648. 生成斐波那契数列【简单】","link":"/notes/2648. 生成斐波那契数列【简单】/README"},{"text":"⏰ 2649. 嵌套数组生成器【中等】","link":"/notes/2649. 嵌套数组生成器【中等】/README"},{"text":"⏰ 2650. 设计可取消函数【困难】","link":"/notes/2650. 设计可取消函数【困难】/README"},{"text":"⏰ 2651. 计算列车到站时间【简单】","link":"/notes/2651. 计算列车到站时间【简单】/README"},{"text":"⏰ 2652. 倍数求和【简单】","link":"/notes/2652. 倍数求和【简单】/README"},{"text":"⏰ 2653. 滑动子数组的美丽值【中等】","link":"/notes/2653. 滑动子数组的美丽值【中等】/README"},{"text":"⏰ 2654. 使数组所有元素变成 1 的最少操作次数【中等】","link":"/notes/2654. 使数组所有元素变成 1 的最少操作次数【中等】/README"},{"text":"⏰ 2655. 寻找最大长度的未覆盖区间【中等】","link":"/notes/2655. 寻找最大长度的未覆盖区间【中等】/README"},{"text":"⏰ 2656. K 个元素的最大和【简单】","link":"/notes/2656. K 个元素的最大和【简单】/README"},{"text":"⏰ 2657. 找到两个数组的前缀公共数组【中等】","link":"/notes/2657. 找到两个数组的前缀公共数组【中等】/README"},{"text":"⏰ 2658. 网格图中鱼的最大数目【中等】","link":"/notes/2658. 网格图中鱼的最大数目【中等】/README"},{"text":"⏰ 2659. 将数组清空【困难】","link":"/notes/2659. 将数组清空【困难】/README"},{"text":"⏰ 2660. 保龄球游戏的获胜者【简单】","link":"/notes/2660. 保龄球游戏的获胜者【简单】/README"},{"text":"⏰ 2661. 找出叠涂元素【中等】","link":"/notes/2661. 找出叠涂元素【中等】/README"},{"text":"⏰ 2662. 前往目标的最小代价【中等】","link":"/notes/2662. 前往目标的最小代价【中等】/README"},{"text":"⏰ 2663. 字典序最小的美丽字符串【困难】","link":"/notes/2663. 字典序最小的美丽字符串【困难】/README"},{"text":"⏰ 2664. 巡逻的骑士【中等】","link":"/notes/2664. 巡逻的骑士【中等】/README"},{"text":"⏰ 2665. 计数器 II【简单】","link":"/notes/2665. 计数器 II【简单】/README"},{"text":"⏰ 2666. 只允许一次函数调用【简单】","link":"/notes/2666. 只允许一次函数调用【简单】/README"},{"text":"⏰ 2667. 创建 Hello World 函数【简单】","link":"/notes/2667. 创建 Hello World 函数【简单】/README"},{"text":"⏰ 2668. 查询员工当前薪水【简单】","link":"/notes/2668. 查询员工当前薪水【简单】/README"},{"text":"⏰ 2669. 统计 Spotify 排行榜上艺术家出现次数【简单】","link":"/notes/2669. 统计 Spotify 排行榜上艺术家出现次数【简单】/README"},{"text":"⏰ 2670. 找出不同元素数目差数组【简单】","link":"/notes/2670. 找出不同元素数目差数组【简单】/README"},{"text":"⏰ 2671. 频率跟踪器【中等】","link":"/notes/2671. 频率跟踪器【中等】/README"},{"text":"⏰ 2672. 有相同颜色的相邻元素数目【中等】","link":"/notes/2672. 有相同颜色的相邻元素数目【中等】/README"},{"text":"⏰ 2673. 使二叉树所有路径值相等的最小代价【中等】","link":"/notes/2673. 使二叉树所有路径值相等的最小代价【中等】/README"},{"text":"⏰ 2674. 拆分循环链表【中等】","link":"/notes/2674. 拆分循环链表【中等】/README"},{"text":"⏰ 2675. 将对象数组转换为矩阵【困难】","link":"/notes/2675. 将对象数组转换为矩阵【困难】/README"},{"text":"⏰ 2676. 节流【中等】","link":"/notes/2676. 节流【中等】/README"},{"text":"⏰ 2677. 分块数组【简单】","link":"/notes/2677. 分块数组【简单】/README"},{"text":"⏰ 2678. 老人的数目【简单】","link":"/notes/2678. 老人的数目【简单】/README"},{"text":"⏰ 2679. 矩阵中的和【中等】","link":"/notes/2679. 矩阵中的和【中等】/README"},{"text":"⏰ 2680. 最大或值【中等】","link":"/notes/2680. 最大或值【中等】/README"},{"text":"⏰ 2681. 英雄的力量【困难】","link":"/notes/2681. 英雄的力量【困难】/README"},{"text":"⏰ 2682. 找出转圈游戏输家【简单】","link":"/notes/2682. 找出转圈游戏输家【简单】/README"},{"text":"⏰ 2683. 相邻值的按位异或【中等】","link":"/notes/2683. 相邻值的按位异或【中等】/README"},{"text":"⏰ 2684. 矩阵中移动的最大次数【中等】","link":"/notes/2684. 矩阵中移动的最大次数【中等】/README"},{"text":"⏰ 2685. 统计完全连通分量的数量【中等】","link":"/notes/2685. 统计完全连通分量的数量【中等】/README"},{"text":"⏰ 2686. 即时食物配送 III【中等】","link":"/notes/2686. 即时食物配送 III【中等】/README"},{"text":"⏰ 2687. 自行车的最后使用时间【简单】","link":"/notes/2687. 自行车的最后使用时间【简单】/README"},{"text":"⏰ 2688. 查找活跃用户【中等】","link":"/notes/2688. 查找活跃用户【中等】/README"},{"text":"⏰ 2689. 从 Rope 树中提取第 K 个字符【简单】","link":"/notes/2689. 从 Rope 树中提取第 K 个字符【简单】/README"},{"text":"⏰ 2690. 无穷方法对象【简单】","link":"/notes/2690. 无穷方法对象【简单】/README"},{"text":"⏰ 2691. 不可变辅助工具【困难】","link":"/notes/2691. 不可变辅助工具【困难】/README"},{"text":"⏰ 2692. 使对象不可变【中等】","link":"/notes/2692. 使对象不可变【中等】/README"},{"text":"⏰ 2693. 使用自定义上下文调用函数【中等】","link":"/notes/2693. 使用自定义上下文调用函数【中等】/README"},{"text":"⏰ 2694. 事件发射器【中等】","link":"/notes/2694. 事件发射器【中等】/README"},{"text":"✅ 2695. 包装数组【简单】","link":"/notes/2695. 包装数组【简单】/README"},{"text":"⏰ 2696. 删除子串后的字符串最小长度【简单】","link":"/notes/2696. 删除子串后的字符串最小长度【简单】/README"},{"text":"⏰ 2697. 字典序最小回文串【简单】","link":"/notes/2697. 字典序最小回文串【简单】/README"},{"text":"⏰ 2698. 求一个整数的惩罚数【中等】","link":"/notes/2698. 求一个整数的惩罚数【中等】/README"},{"text":"⏰ 2699. 修改图中的边权【困难】","link":"/notes/2699. 修改图中的边权【困难】/README"},{"text":"⏰ 2700. 两个对象之间的差异【中等】","link":"/notes/2700. 两个对象之间的差异【中等】/README"}]},{"text":"29. 2701~2800","collapsed":true,"items":[{"text":"⏰ 2701. 连续递增交易【困难】","link":"/notes/2701. 连续递增交易【困难】/README"},{"text":"⏰ 2702. 使数字变为非正数的最小操作次数【困难】","link":"/notes/2702. 使数字变为非正数的最小操作次数【困难】/README"},{"text":"⏰ 2703. 返回传递的参数的长度【简单】","link":"/notes/2703. 返回传递的参数的长度【简单】/README"},{"text":"⏰ 2704. 相等还是不相等【简单】","link":"/notes/2704. 相等还是不相等【简单】/README"},{"text":"⏰ 2705. 精简对象【中等】","link":"/notes/2705. 精简对象【中等】/README"},{"text":"⏰ 2706. 购买两块巧克力【简单】","link":"/notes/2706. 购买两块巧克力【简单】/README"},{"text":"⏰ 2707. 字符串中的额外字符【中等】","link":"/notes/2707. 字符串中的额外字符【中等】/README"},{"text":"⏰ 2708. 一个小组的最大实力值【中等】","link":"/notes/2708. 一个小组的最大实力值【中等】/README"},{"text":"⏰ 2709. 最大公约数遍历【困难】","link":"/notes/2709. 最大公约数遍历【困难】/README"},{"text":"⏰ 2710. 移除字符串中的尾随零【简单】","link":"/notes/2710. 移除字符串中的尾随零【简单】/README"},{"text":"⏰ 2711. 对角线上不同值的数量差【中等】","link":"/notes/2711. 对角线上不同值的数量差【中等】/README"},{"text":"⏰ 2712. 使所有字符相等的最小成本【中等】","link":"/notes/2712. 使所有字符相等的最小成本【中等】/README"},{"text":"⏰ 2713. 矩阵中严格递增的单元格数【困难】","link":"/notes/2713. 矩阵中严格递增的单元格数【困难】/README"},{"text":"⏰ 2714. 找到 K 次跨越的最短路径【困难】","link":"/notes/2714. 找到 K 次跨越的最短路径【困难】/README"},{"text":"⏰ 2715. 执行可取消的延迟函数【简单】","link":"/notes/2715. 执行可取消的延迟函数【简单】/README"},{"text":"⏰ 2716. 最小化字符串长度【简单】","link":"/notes/2716. 最小化字符串长度【简单】/README"},{"text":"⏰ 2717. 半有序排列【简单】","link":"/notes/2717. 半有序排列【简单】/README"},{"text":"⏰ 2718. 查询后矩阵的和【中等】","link":"/notes/2718. 查询后矩阵的和【中等】/README"},{"text":"⏰ 2719. 统计整数数目【困难】","link":"/notes/2719. 统计整数数目【困难】/README"},{"text":"⏰ 2720. 受欢迎度百分比【困难】","link":"/notes/2720. 受欢迎度百分比【困难】/README"},{"text":"⏰ 2721. 并行执行异步函数【中等】","link":"/notes/2721. 并行执行异步函数【中等】/README"},{"text":"⏰ 2722. 根据 ID 合并两个数组【中等】","link":"/notes/2722. 根据 ID 合并两个数组【中等】/README"},{"text":"⏰ 2723. 两个 Promise 对象相加【简单】","link":"/notes/2723. 两个 Promise 对象相加【简单】/README"},{"text":"⏰ 2724. 排序方式【简单】","link":"/notes/2724. 排序方式【简单】/README"},{"text":"⏰ 2725. 间隔取消【简单】","link":"/notes/2725. 间隔取消【简单】/README"},{"text":"⏰ 2726. 使用方法链的计算器【简单】","link":"/notes/2726. 使用方法链的计算器【简单】/README"},{"text":"⏰ 2727. 判断对象是否为空【简单】","link":"/notes/2727. 判断对象是否为空【简单】/README"},{"text":"⏰ 2728. 计算一个环形街道上的房屋数量【简单】","link":"/notes/2728. 计算一个环形街道上的房屋数量【简单】/README"},{"text":"⏰ 2729. 判断一个数是否迷人【简单】","link":"/notes/2729. 判断一个数是否迷人【简单】/README"},{"text":"⏰ 2730. 找到最长的半重复子字符串【中等】","link":"/notes/2730. 找到最长的半重复子字符串【中等】/README"},{"text":"⏰ 2731. 移动机器人【中等】","link":"/notes/2731. 移动机器人【中等】/README"},{"text":"⏰ 2732. 找到矩阵中的好子集【困难】","link":"/notes/2732. 找到矩阵中的好子集【困难】/README"},{"text":"⏰ 2733. 既不是最小值也不是最大值【简单】","link":"/notes/2733. 既不是最小值也不是最大值【简单】/README"},{"text":"⏰ 2734. 执行子串操作后的字典序最小字符串【中等】","link":"/notes/2734. 执行子串操作后的字典序最小字符串【中等】/README"},{"text":"⏰ 2735. 收集巧克力【中等】","link":"/notes/2735. 收集巧克力【中等】/README"},{"text":"⏰ 2736. 最大和查询【困难】","link":"/notes/2736. 最大和查询【困难】/README"},{"text":"⏰ 2737. 找到最近的标记节点【中等】","link":"/notes/2737. 找到最近的标记节点【中等】/README"},{"text":"⏰ 2738. 统计文本中单词的出现次数【中等】","link":"/notes/2738. 统计文本中单词的出现次数【中等】/README"},{"text":"⏰ 2739. 总行驶距离【简单】","link":"/notes/2739. 总行驶距离【简单】/README"},{"text":"⏰ 2740. 找出分区值【中等】","link":"/notes/2740. 找出分区值【中等】/README"},{"text":"⏰ 2741. 特别的排列【中等】","link":"/notes/2741. 特别的排列【中等】/README"},{"text":"⏰ 2742. 给墙壁刷油漆【困难】","link":"/notes/2742. 给墙壁刷油漆【困难】/README"},{"text":"⏰ 2743. 计算没有重复字符的子字符串数量【中等】","link":"/notes/2743. 计算没有重复字符的子字符串数量【中等】/README"},{"text":"✅ 2744. 最大字符串配对数目【简单】","link":"/notes/2744. 最大字符串配对数目【简单】/README"},{"text":"⏰ 2745. 构造最长的新字符串【中等】","link":"/notes/2745. 构造最长的新字符串【中等】/README"},{"text":"⏰ 2746. 字符串连接删减字母【中等】","link":"/notes/2746. 字符串连接删减字母【中等】/README"},{"text":"⏰ 2747. 统计没有收到请求的服务器数目【中等】","link":"/notes/2747. 统计没有收到请求的服务器数目【中等】/README"},{"text":"⏰ 2748. 美丽下标对的数目【简单】","link":"/notes/2748. 美丽下标对的数目【简单】/README"},{"text":"⏰ 2749. 得到整数零需要执行的最少操作数【中等】","link":"/notes/2749. 得到整数零需要执行的最少操作数【中等】/README"},{"text":"⏰ 2750. 将数组划分成若干好子数组的方式【中等】","link":"/notes/2750. 将数组划分成若干好子数组的方式【中等】/README"},{"text":"⏰ 2751. 机器人碰撞【困难】","link":"/notes/2751. 机器人碰撞【困难】/README"},{"text":"⏰ 2752. 在连续天数上进行了最多交易次数的顾客【困难】","link":"/notes/2752. 在连续天数上进行了最多交易次数的顾客【困难】/README"},{"text":"⏰ 2753. 计算一个环形街道上的房屋数量 II【困难】","link":"/notes/2753. 计算一个环形街道上的房屋数量 II【困难】/README"},{"text":"⏰ 2754. 将函数绑定到上下文【中等】","link":"/notes/2754. 将函数绑定到上下文【中等】/README"},{"text":"⏰ 2755. 深度合并两个对象【中等】","link":"/notes/2755. 深度合并两个对象【中等】/README"},{"text":"⏰ 2756. 批处理查询【困难】","link":"/notes/2756. 批处理查询【困难】/README"},{"text":"⏰ 2757. 生成循环数组的值【中等】","link":"/notes/2757. 生成循环数组的值【中等】/README"},{"text":"⏰ 2758. 下一天【简单】","link":"/notes/2758. 下一天【简单】/README"},{"text":"⏰ 2759. 将 JSON 字符串转换为对象【困难】","link":"/notes/2759. 将 JSON 字符串转换为对象【困难】/README"},{"text":"⏰ 2760. 最长奇偶子数组【简单】","link":"/notes/2760. 最长奇偶子数组【简单】/README"},{"text":"⏰ 2761. 和等于目标值的质数对【中等】","link":"/notes/2761. 和等于目标值的质数对【中等】/README"},{"text":"⏰ 2762. 不间断子数组【中等】","link":"/notes/2762. 不间断子数组【中等】/README"},{"text":"⏰ 2763. 所有子数组中不平衡数字之和【困难】","link":"/notes/2763. 所有子数组中不平衡数字之和【困难】/README"},{"text":"⏰ 2764. 数组是否表示某二叉树的前序遍历【中等】","link":"/notes/2764. 数组是否表示某二叉树的前序遍历【中等】/README"},{"text":"⏰ 2765. 最长交替子数组【简单】","link":"/notes/2765. 最长交替子数组【简单】/README"},{"text":"⏰ 2766. 重新放置石块【中等】","link":"/notes/2766. 重新放置石块【中等】/README"},{"text":"⏰ 2767. 将字符串分割为最少的美丽子字符串【中等】","link":"/notes/2767. 将字符串分割为最少的美丽子字符串【中等】/README"},{"text":"⏰ 2768. 黑格子的数目【中等】","link":"/notes/2768. 黑格子的数目【中等】/README"},{"text":"⏰ 2769. 找出最大的可达成数字【简单】","link":"/notes/2769. 找出最大的可达成数字【简单】/README"},{"text":"⏰ 2770. 达到末尾下标所需的最大跳跃次数【中等】","link":"/notes/2770. 达到末尾下标所需的最大跳跃次数【中等】/README"},{"text":"⏰ 2771. 构造最长非递减子数组【中等】","link":"/notes/2771. 构造最长非递减子数组【中等】/README"},{"text":"⏰ 2772. 使数组中的所有元素都等于零【中等】","link":"/notes/2772. 使数组中的所有元素都等于零【中等】/README"},{"text":"⏰ 2773. 特殊二叉树的高度【中等】","link":"/notes/2773. 特殊二叉树的高度【中等】/README"},{"text":"⏰ 2774. 数组的上界【简单】","link":"/notes/2774. 数组的上界【简单】/README"},{"text":"⏰ 2775. 将 undefined 转为 null【中等】","link":"/notes/2775. 将 undefined 转为 null【中等】/README"},{"text":"⏰ 2776. 转换回调函数为 Promise 函数【中等】","link":"/notes/2776. 转换回调函数为 Promise 函数【中等】/README"},{"text":"⏰ 2777. 日期范围生成器【中等】","link":"/notes/2777. 日期范围生成器【中等】/README"},{"text":"⏰ 2778. 特殊元素平方和【简单】","link":"/notes/2778. 特殊元素平方和【简单】/README"},{"text":"⏰ 2779. 数组的最大美丽值【中等】","link":"/notes/2779. 数组的最大美丽值【中等】/README"},{"text":"⏰ 2780. 合法分割的最小下标【中等】","link":"/notes/2780. 合法分割的最小下标【中等】/README"},{"text":"⏰ 2781. 最长合法子字符串的长度【困难】","link":"/notes/2781. 最长合法子字符串的长度【困难】/README"},{"text":"⏰ 2782. 唯一类别的数量【中等】","link":"/notes/2782. 唯一类别的数量【中等】/README"},{"text":"⏰ 2783. 航班入座率和等待名单分析【中等】","link":"/notes/2783. 航班入座率和等待名单分析【中等】/README"},{"text":"⏰ 2784. 检查数组是否是好的【简单】","link":"/notes/2784. 检查数组是否是好的【简单】/README"},{"text":"⏰ 2785. 将字符串中的元音字母排序【中等】","link":"/notes/2785. 将字符串中的元音字母排序【中等】/README"},{"text":"⏰ 2786. 访问数组中的位置使分数最大【中等】","link":"/notes/2786. 访问数组中的位置使分数最大【中等】/README"},{"text":"⏰ 2787. 将一个数字表示成幂的和的方案数【中等】","link":"/notes/2787. 将一个数字表示成幂的和的方案数【中等】/README"},{"text":"⏰ 2788. 按分隔符拆分字符串【简单】","link":"/notes/2788. 按分隔符拆分字符串【简单】/README"},{"text":"⏰ 2789. 合并后数组中的最大元素【中等】","link":"/notes/2789. 合并后数组中的最大元素【中等】/README"},{"text":"⏰ 2790. 长度递增组的最大数目【困难】","link":"/notes/2790. 长度递增组的最大数目【困难】/README"},{"text":"⏰ 2791. 树中可以形成回文的路径数【困难】","link":"/notes/2791. 树中可以形成回文的路径数【困难】/README"},{"text":"⏰ 2792. 计算足够大的节点数【困难】","link":"/notes/2792. 计算足够大的节点数【困难】/README"},{"text":"⏰ 2793. 航班机票状态【困难】","link":"/notes/2793. 航班机票状态【困难】/README"},{"text":"⏰ 2794. 从两个数组中创建对象【简单】","link":"/notes/2794. 从两个数组中创建对象【简单】/README"},{"text":"⏰ 2795. 并行执行 Promise 以获取独有的结果【中等】","link":"/notes/2795. 并行执行 Promise 以获取独有的结果【中等】/README"},{"text":"⏰ 2796. 重复字符串【简单】","link":"/notes/2796. 重复字符串【简单】/README"},{"text":"⏰ 2797. 带有占位符的部分函数【简单】","link":"/notes/2797. 带有占位符的部分函数【简单】/README"},{"text":"⏰ 2798. 满足目标工作时长的员工数目【简单】","link":"/notes/2798. 满足目标工作时长的员工数目【简单】/README"},{"text":"⏰ 2799. 统计完全子数组的数目【中等】","link":"/notes/2799. 统计完全子数组的数目【中等】/README"},{"text":"⏰ 2800. 包含三个字符串的最短字符串【中等】","link":"/notes/2800. 包含三个字符串的最短字符串【中等】/README"}]},{"text":"30. 2801~2900","collapsed":true,"items":[{"text":"⏰ 2801. 统计范围内的步进数字数目【困难】","link":"/notes/2801. 统计范围内的步进数字数目【困难】/README"},{"text":"⏰ 2802. 找出第 K 个幸运数字【中等】","link":"/notes/2802. 找出第 K 个幸运数字【中等】/README"},{"text":"⏰ 2803. 阶乘生成器【简单】","link":"/notes/2803. 阶乘生成器【简单】/README"},{"text":"⏰ 2804. 数组原型的 forEach 方法【简单】","link":"/notes/2804. 数组原型的 forEach 方法【简单】/README"},{"text":"⏰ 2805. 自定义间隔【中等】","link":"/notes/2805. 自定义间隔【中等】/README"},{"text":"⏰ 2806. 取整购买后的账户余额【简单】","link":"/notes/2806. 取整购买后的账户余额【简单】/README"},{"text":"⏰ 2807. 在链表中插入最大公约数【中等】","link":"/notes/2807. 在链表中插入最大公约数【中等】/README"},{"text":"⏰ 2808. 使循环数组所有元素相等的最少秒数【中等】","link":"/notes/2808. 使循环数组所有元素相等的最少秒数【中等】/README"},{"text":"⏰ 2809. 使数组和小于等于 x 的最少时间【困难】","link":"/notes/2809. 使数组和小于等于 x 的最少时间【困难】/README"},{"text":"⏰ 2810. 故障键盘【简单】","link":"/notes/2810. 故障键盘【简单】/README"},{"text":"⏰ 2811. 判断是否能拆分数组【中等】","link":"/notes/2811. 判断是否能拆分数组【中等】/README"},{"text":"⏰ 2812. 找出最安全路径【中等】","link":"/notes/2812. 找出最安全路径【中等】/README"},{"text":"⏰ 2813. 子序列最大优雅度【困难】","link":"/notes/2813. 子序列最大优雅度【困难】/README"},{"text":"⏰ 2814. 避免淹死并到达目的地的最短时间【困难】","link":"/notes/2814. 避免淹死并到达目的地的最短时间【困难】/README"},{"text":"⏰ 2815. 数组中的最大数对和【简单】","link":"/notes/2815. 数组中的最大数对和【简单】/README"},{"text":"⏰ 2816. 翻倍以链表形式表示的数字【中等】","link":"/notes/2816. 翻倍以链表形式表示的数字【中等】/README"},{"text":"⏰ 2817. 限制条件下元素之间的最小绝对差【中等】","link":"/notes/2817. 限制条件下元素之间的最小绝对差【中等】/README"},{"text":"⏰ 2818. 操作使得分最大【困难】","link":"/notes/2818. 操作使得分最大【困难】/README"},{"text":"⏰ 2819. 购买巧克力后的最小相对损失【困难】","link":"/notes/2819. 购买巧克力后的最小相对损失【困难】/README"},{"text":"⏰ 2820. 选举结果【中等】","link":"/notes/2820. 选举结果【中等】/README"},{"text":"⏰ 2821. 延迟每个 Promise 对象的解析【中等】","link":"/notes/2821. 延迟每个 Promise 对象的解析【中等】/README"},{"text":"⏰ 2822. 对象反转【简单】","link":"/notes/2822. 对象反转【简单】/README"},{"text":"⏰ 2823. 深度对象筛选【中等】","link":"/notes/2823. 深度对象筛选【中等】/README"},{"text":"⏰ 2824. 统计和小于目标的下标对数目【简单】","link":"/notes/2824. 统计和小于目标的下标对数目【简单】/README"},{"text":"⏰ 2825. 循环增长使字符串子序列等于另一个字符串【中等】","link":"/notes/2825. 循环增长使字符串子序列等于另一个字符串【中等】/README"},{"text":"⏰ 2826. 将三个组排序【中等】","link":"/notes/2826. 将三个组排序【中等】/README"},{"text":"⏰ 2827. 范围中美丽整数的数目【困难】","link":"/notes/2827. 范围中美丽整数的数目【困难】/README"},{"text":"⏰ 2828. 判别首字母缩略词【简单】","link":"/notes/2828. 判别首字母缩略词【简单】/README"},{"text":"⏰ 2829. k-avoiding 数组的最小总和【中等】","link":"/notes/2829. k-avoiding 数组的最小总和【中等】/README"},{"text":"⏰ 2830. 销售利润最大化【中等】","link":"/notes/2830. 销售利润最大化【中等】/README"},{"text":"⏰ 2831. 找出最长等值子数组【中等】","link":"/notes/2831. 找出最长等值子数组【中等】/README"},{"text":"⏰ 2832. 每个元素为最大值的最大范围【中等】","link":"/notes/2832. 每个元素为最大值的最大范围【中等】/README"},{"text":"⏰ 2833. 距离原点最远的点【简单】","link":"/notes/2833. 距离原点最远的点【简单】/README"},{"text":"⏰ 2834. 找出美丽数组的最小和【中等】","link":"/notes/2834. 找出美丽数组的最小和【中等】/README"},{"text":"⏰ 2835. 使子序列的和等于目标的最少操作次数【困难】","link":"/notes/2835. 使子序列的和等于目标的最少操作次数【困难】/README"},{"text":"⏰ 2836. 在传球游戏中最大化函数值【困难】","link":"/notes/2836. 在传球游戏中最大化函数值【困难】/README"},{"text":"⏰ 2837. 总旅行距离【简单】","link":"/notes/2837. 总旅行距离【简单】/README"},{"text":"⏰ 2838. 英雄可以获得的最大金币数【中等】","link":"/notes/2838. 英雄可以获得的最大金币数【中等】/README"},{"text":"⏰ 2839. 判断通过操作能否让字符串相等 I【简单】","link":"/notes/2839. 判断通过操作能否让字符串相等 I【简单】/README"},{"text":"⏰ 2840. 判断通过操作能否让字符串相等 II【中等】","link":"/notes/2840. 判断通过操作能否让字符串相等 II【中等】/README"},{"text":"⏰ 2841. 几乎唯一子数组的最大和【中等】","link":"/notes/2841. 几乎唯一子数组的最大和【中等】/README"},{"text":"⏰ 2842. 统计一个字符串的 k 子序列美丽值最大的数目【困难】","link":"/notes/2842. 统计一个字符串的 k 子序列美丽值最大的数目【困难】/README"},{"text":"⏰ 2843. 统计对称整数的数目【简单】","link":"/notes/2843. 统计对称整数的数目【简单】/README"},{"text":"⏰ 2844. 生成特殊数字的最少操作【中等】","link":"/notes/2844. 生成特殊数字的最少操作【中等】/README"},{"text":"⏰ 2845. 统计趣味子数组的数目【中等】","link":"/notes/2845. 统计趣味子数组的数目【中等】/README"},{"text":"⏰ 2846. 边权重均等查询【困难】","link":"/notes/2846. 边权重均等查询【困难】/README"},{"text":"⏰ 2847. 给定数字乘积的最小数字【中等】","link":"/notes/2847. 给定数字乘积的最小数字【中等】/README"},{"text":"⏰ 2848. 与车相交的点【简单】","link":"/notes/2848. 与车相交的点【简单】/README"},{"text":"⏰ 2849. 判断能否在给定时间到达单元格【中等】","link":"/notes/2849. 判断能否在给定时间到达单元格【中等】/README"},{"text":"⏰ 2850. 将石头分散到网格图的最少移动次数【中等】","link":"/notes/2850. 将石头分散到网格图的最少移动次数【中等】/README"},{"text":"⏰ 2851. 字符串转换【困难】","link":"/notes/2851. 字符串转换【困难】/README"},{"text":"⏰ 2852. 所有单元格的远离程度之和【中等】","link":"/notes/2852. 所有单元格的远离程度之和【中等】/README"},{"text":"⏰ 2853. 最高薪水差异【简单】","link":"/notes/2853. 最高薪水差异【简单】/README"},{"text":"⏰ 2854. 滚动平均步数【中等】","link":"/notes/2854. 滚动平均步数【中等】/README"},{"text":"⏰ 2855. 使数组成为递增数组的最少右移次数【简单】","link":"/notes/2855. 使数组成为递增数组的最少右移次数【简单】/README"},{"text":"⏰ 2856. 删除数对后的最小数组长度【中等】","link":"/notes/2856. 删除数对后的最小数组长度【中等】/README"},{"text":"⏰ 2857. 统计距离为 k 的点对【中等】","link":"/notes/2857. 统计距离为 k 的点对【中等】/README"},{"text":"⏰ 2858. 可以到达每一个节点的最少边反转次数【困难】","link":"/notes/2858. 可以到达每一个节点的最少边反转次数【困难】/README"},{"text":"⏰ 2859. 计算 K 置位下标对应元素的和【简单】","link":"/notes/2859. 计算 K 置位下标对应元素的和【简单】/README"},{"text":"⏰ 2860. 让所有学生保持开心的分组方法数【中等】","link":"/notes/2860. 让所有学生保持开心的分组方法数【中等】/README"},{"text":"⏰ 2861. 最大合金数【中等】","link":"/notes/2861. 最大合金数【中等】/README"},{"text":"⏰ 2862. 完全子集的最大元素和【困难】","link":"/notes/2862. 完全子集的最大元素和【困难】/README"},{"text":"⏰ 2863. 最长半递减子数组的长度【中等】","link":"/notes/2863. 最长半递减子数组的长度【中等】/README"},{"text":"⏰ 2864. 最大二进制奇数【简单】","link":"/notes/2864. 最大二进制奇数【简单】/README"},{"text":"⏰ 2865. 美丽塔 I【中等】","link":"/notes/2865. 美丽塔 I【中等】/README"},{"text":"⏰ 2866. 美丽塔 II【中等】","link":"/notes/2866. 美丽塔 II【中等】/README"},{"text":"⏰ 2867. 统计树中的合法路径数目【困难】","link":"/notes/2867. 统计树中的合法路径数目【困难】/README"},{"text":"⏰ 2868. 单词游戏【困难】","link":"/notes/2868. 单词游戏【困难】/README"},{"text":"⏰ 2869. 收集元素的最少操作次数【简单】","link":"/notes/2869. 收集元素的最少操作次数【简单】/README"},{"text":"⏰ 2870. 使数组为空的最少操作次数【中等】","link":"/notes/2870. 使数组为空的最少操作次数【中等】/README"},{"text":"⏰ 2871. 将数组分割成最多数目的子数组【中等】","link":"/notes/2871. 将数组分割成最多数目的子数组【中等】/README"},{"text":"⏰ 2872. 可以被 K 整除连通块的最大数目【困难】","link":"/notes/2872. 可以被 K 整除连通块的最大数目【困难】/README"},{"text":"⏰ 2873. 有序三元组中的最大值 I【简单】","link":"/notes/2873. 有序三元组中的最大值 I【简单】/README"},{"text":"⏰ 2874. 有序三元组中的最大值 II【中等】","link":"/notes/2874. 有序三元组中的最大值 II【中等】/README"},{"text":"⏰ 2875. 无限数组的最短子数组【中等】","link":"/notes/2875. 无限数组的最短子数组【中等】/README"},{"text":"⏰ 2876. 有向图访问计数【困难】","link":"/notes/2876. 有向图访问计数【困难】/README"},{"text":"⏰ 2877. 从表中创建 DataFrame【简单】","link":"/notes/2877. 从表中创建 DataFrame【简单】/README"},{"text":"⏰ 2878. 获取 DataFrame 的大小【简单】","link":"/notes/2878. 获取 DataFrame 的大小【简单】/README"},{"text":"⏰ 2879. 显示前三行【简单】","link":"/notes/2879. 显示前三行【简单】/README"},{"text":"⏰ 2880. 数据选取【简单】","link":"/notes/2880. 数据选取【简单】/README"},{"text":"⏰ 2881. 创建新列【简单】","link":"/notes/2881. 创建新列【简单】/README"},{"text":"⏰ 2882. 删去重复的行【简单】","link":"/notes/2882. 删去重复的行【简单】/README"},{"text":"⏰ 2883. 删去丢失的数据【简单】","link":"/notes/2883. 删去丢失的数据【简单】/README"},{"text":"⏰ 2884. 修改列【简单】","link":"/notes/2884. 修改列【简单】/README"},{"text":"⏰ 2885. 重命名列【简单】","link":"/notes/2885. 重命名列【简单】/README"},{"text":"⏰ 2886. 改变数据类型【简单】","link":"/notes/2886. 改变数据类型【简单】/README"},{"text":"⏰ 2887. 填充缺失值【简单】","link":"/notes/2887. 填充缺失值【简单】/README"},{"text":"⏰ 2888. 重塑数据：连结【简单】","link":"/notes/2888. 重塑数据：连结【简单】/README"},{"text":"⏰ 2889. 数据重塑：透视【简单】","link":"/notes/2889. 数据重塑：透视【简单】/README"},{"text":"⏰ 2890. 重塑数据：融合【简单】","link":"/notes/2890. 重塑数据：融合【简单】/README"},{"text":"⏰ 2891. 方法链【简单】","link":"/notes/2891. 方法链【简单】/README"},{"text":"⏰ 2892. 将相邻元素相乘后得到最小化数组【中等】","link":"/notes/2892. 将相邻元素相乘后得到最小化数组【中等】/README"},{"text":"⏰ 2893. 计算每个区间内的订单【中等】","link":"/notes/2893. 计算每个区间内的订单【中等】/README"},{"text":"⏰ 2894. 分类求和并作差【简单】","link":"/notes/2894. 分类求和并作差【简单】/README"},{"text":"⏰ 2895. 最小处理时间【中等】","link":"/notes/2895. 最小处理时间【中等】/README"},{"text":"⏰ 2896. 执行操作使两个字符串相等【中等】","link":"/notes/2896. 执行操作使两个字符串相等【中等】/README"},{"text":"⏰ 2897. 对数组执行操作使平方和最大【困难】","link":"/notes/2897. 对数组执行操作使平方和最大【困难】/README"},{"text":"⏰ 2898. 最大线性股票得分【中等】","link":"/notes/2898. 最大线性股票得分【中等】/README"},{"text":"⏰ 2899. 上一个遍历的整数【简单】","link":"/notes/2899. 上一个遍历的整数【简单】/README"},{"text":"⏰ 2900. 最长相邻不相等子序列 I【简单】","link":"/notes/2900. 最长相邻不相等子序列 I【简单】/README"}]},{"text":"31. 2901~3000","collapsed":true,"items":[{"text":"⏰ 2901. 最长相邻不相等子序列 II【中等】","link":"/notes/2901. 最长相邻不相等子序列 II【中等】/README"},{"text":"⏰ 2902. 和带限制的子多重集合的数目【困难】","link":"/notes/2902. 和带限制的子多重集合的数目【困难】/README"},{"text":"⏰ 2903. 找出满足差值条件的下标 I【简单】","link":"/notes/2903. 找出满足差值条件的下标 I【简单】/README"},{"text":"⏰ 2904. 最短且字典序最小的美丽子字符串【中等】","link":"/notes/2904. 最短且字典序最小的美丽子字符串【中等】/README"},{"text":"⏰ 2905. 找出满足差值条件的下标 II【中等】","link":"/notes/2905. 找出满足差值条件的下标 II【中等】/README"},{"text":"⏰ 2906. 构造乘积矩阵【中等】","link":"/notes/2906. 构造乘积矩阵【中等】/README"},{"text":"⏰ 2907. 价格递增的最大利润三元组 I【中等】","link":"/notes/2907. 价格递增的最大利润三元组 I【中等】/README"},{"text":"⏰ 2908. 元素和最小的山形三元组 I【简单】","link":"/notes/2908. 元素和最小的山形三元组 I【简单】/README"},{"text":"⏰ 2909. 元素和最小的山形三元组 II【中等】","link":"/notes/2909. 元素和最小的山形三元组 II【中等】/README"},{"text":"⏰ 2910. 合法分组的最少组数【中等】","link":"/notes/2910. 合法分组的最少组数【中等】/README"},{"text":"⏰ 2911. 得到 K 个半回文串的最少修改次数【困难】","link":"/notes/2911. 得到 K 个半回文串的最少修改次数【困难】/README"},{"text":"⏰ 2912. 在网格上移动到目的地的方法数【困难】","link":"/notes/2912. 在网格上移动到目的地的方法数【困难】/README"},{"text":"⏰ 2913. 子数组不同元素数目的平方和 I【简单】","link":"/notes/2913. 子数组不同元素数目的平方和 I【简单】/README"},{"text":"⏰ 2914. 使二进制字符串变美丽的最少修改次数【中等】","link":"/notes/2914. 使二进制字符串变美丽的最少修改次数【中等】/README"},{"text":"⏰ 2915. 和为目标值的最长子序列的长度【中等】","link":"/notes/2915. 和为目标值的最长子序列的长度【中等】/README"},{"text":"⏰ 2916. 子数组不同元素数目的平方和 II【困难】","link":"/notes/2916. 子数组不同元素数目的平方和 II【困难】/README"},{"text":"⏰ 2917. 找出数组中的 K-or 值【简单】","link":"/notes/2917. 找出数组中的 K-or 值【简单】/README"},{"text":"⏰ 2918. 数组的最小相等和【中等】","link":"/notes/2918. 数组的最小相等和【中等】/README"},{"text":"⏰ 2919. 使数组变美的最小增量运算数【中等】","link":"/notes/2919. 使数组变美的最小增量运算数【中等】/README"},{"text":"⏰ 2920. 收集所有金币可获得的最大积分【困难】","link":"/notes/2920. 收集所有金币可获得的最大积分【困难】/README"},{"text":"⏰ 2921. 价格递增的最大利润三元组 II【困难】","link":"/notes/2921. 价格递增的最大利润三元组 II【困难】/README"},{"text":"⏰ 2922. 市场分析 III【中等】","link":"/notes/2922. 市场分析 III【中等】/README"},{"text":"⏰ 2923. 找到冠军 I【简单】","link":"/notes/2923. 找到冠军 I【简单】/README"},{"text":"⏰ 2924. 找到冠军 II【中等】","link":"/notes/2924. 找到冠军 II【中等】/README"},{"text":"⏰ 2925. 在树上执行操作以后得到的最大分数【中等】","link":"/notes/2925. 在树上执行操作以后得到的最大分数【中等】/README"},{"text":"⏰ 2926. 平衡子序列的最大和【困难】","link":"/notes/2926. 平衡子序列的最大和【困难】/README"},{"text":"⏰ 2927. 给小朋友们分糖果 III【困难】","link":"/notes/2927. 给小朋友们分糖果 III【困难】/README"},{"text":"⏰ 2928. 给小朋友们分糖果 I【简单】","link":"/notes/2928. 给小朋友们分糖果 I【简单】/README"},{"text":"⏰ 2929. 给小朋友们分糖果 II【中等】","link":"/notes/2929. 给小朋友们分糖果 II【中等】/README"},{"text":"⏰ 2930. 重新排列后包含指定子字符串的字符串数目【中等】","link":"/notes/2930. 重新排列后包含指定子字符串的字符串数目【中等】/README"},{"text":"⏰ 2931. 购买物品的最大开销【困难】","link":"/notes/2931. 购买物品的最大开销【困难】/README"},{"text":"⏰ 2932. 找出强数对的最大异或值 I【简单】","link":"/notes/2932. 找出强数对的最大异或值 I【简单】/README"},{"text":"⏰ 2933. 高访问员工【中等】","link":"/notes/2933. 高访问员工【中等】/README"},{"text":"⏰ 2934. 最大化数组末位元素的最少操作次数【中等】","link":"/notes/2934. 最大化数组末位元素的最少操作次数【中等】/README"},{"text":"⏰ 2935. 找出强数对的最大异或值 II【困难】","link":"/notes/2935. 找出强数对的最大异或值 II【困难】/README"},{"text":"⏰ 2936. 包含相等值数字块的数量【中等】","link":"/notes/2936. 包含相等值数字块的数量【中等】/README"},{"text":"⏰ 2937. 使三个字符串相等【简单】","link":"/notes/2937. 使三个字符串相等【简单】/README"},{"text":"⏰ 2938. 区分黑球与白球【中等】","link":"/notes/2938. 区分黑球与白球【中等】/README"},{"text":"⏰ 2939. 最大异或乘积【中等】","link":"/notes/2939. 最大异或乘积【中等】/README"},{"text":"⏰ 2940. 找到 Alice 和 Bob 可以相遇的建筑【困难】","link":"/notes/2940. 找到 Alice 和 Bob 可以相遇的建筑【困难】/README"},{"text":"⏰ 2941. 子数组的最大 GCD-Sum【困难】","link":"/notes/2941. 子数组的最大 GCD-Sum【困难】/README"},{"text":"⏰ 2942. 查找包含给定字符的单词【简单】","link":"/notes/2942. 查找包含给定字符的单词【简单】/README"},{"text":"⏰ 2943. 最大化网格图中正方形空洞的面积【中等】","link":"/notes/2943. 最大化网格图中正方形空洞的面积【中等】/README"},{"text":"⏰ 2944. 购买水果需要的最少金币数【中等】","link":"/notes/2944. 购买水果需要的最少金币数【中等】/README"},{"text":"⏰ 2945. 找到最大非递减数组的长度【困难】","link":"/notes/2945. 找到最大非递减数组的长度【困难】/README"},{"text":"⏰ 2946. 循环移位后的矩阵相似检查【简单】","link":"/notes/2946. 循环移位后的矩阵相似检查【简单】/README"},{"text":"⏰ 2947. 统计美丽子字符串 I【中等】","link":"/notes/2947. 统计美丽子字符串 I【中等】/README"},{"text":"⏰ 2948. 交换得到字典序最小的数组【中等】","link":"/notes/2948. 交换得到字典序最小的数组【中等】/README"},{"text":"⏰ 2949. 统计美丽子字符串 II【困难】","link":"/notes/2949. 统计美丽子字符串 II【困难】/README"},{"text":"⏰ 2950. 可整除子串的数量【中等】","link":"/notes/2950. 可整除子串的数量【中等】/README"},{"text":"⏰ 2951. 找出峰值【简单】","link":"/notes/2951. 找出峰值【简单】/README"},{"text":"⏰ 2952. 需要添加的硬币的最小数量【中等】","link":"/notes/2952. 需要添加的硬币的最小数量【中等】/README"},{"text":"⏰ 2953. 统计完全子字符串【困难】","link":"/notes/2953. 统计完全子字符串【困难】/README"},{"text":"⏰ 2954. 统计感冒序列的数目【困难】","link":"/notes/2954. 统计感冒序列的数目【困难】/README"},{"text":"⏰ 2955. 同端子串的数量【中等】","link":"/notes/2955. 同端子串的数量【中等】/README"},{"text":"⏰ 2956. 找到两个数组中的公共元素【简单】","link":"/notes/2956. 找到两个数组中的公共元素【简单】/README"},{"text":"⏰ 2957. 消除相邻近似相等字符【中等】","link":"/notes/2957. 消除相邻近似相等字符【中等】/README"},{"text":"⏰ 2958. 最多 K 个重复元素的最长子数组【中等】","link":"/notes/2958. 最多 K 个重复元素的最长子数组【中等】/README"},{"text":"⏰ 2959. 关闭分部的可行集合数目【困难】","link":"/notes/2959. 关闭分部的可行集合数目【困难】/README"},{"text":"⏰ 2960. 统计已测试设备【简单】","link":"/notes/2960. 统计已测试设备【简单】/README"},{"text":"⏰ 2961. 双模幂运算【中等】","link":"/notes/2961. 双模幂运算【中等】/README"},{"text":"⏰ 2962. 统计最大元素出现至少 K 次的子数组【中等】","link":"/notes/2962. 统计最大元素出现至少 K 次的子数组【中等】/README"},{"text":"⏰ 2963. 统计好分割方案的数目【困难】","link":"/notes/2963. 统计好分割方案的数目【困难】/README"},{"text":"⏰ 2964. 可被整除的三元组数量【中等】","link":"/notes/2964. 可被整除的三元组数量【中等】/README"},{"text":"⏰ 2965. 找出缺失和重复的数字【简单】","link":"/notes/2965. 找出缺失和重复的数字【简单】/README"},{"text":"⏰ 2966. 划分数组并满足最大差限制【中等】","link":"/notes/2966. 划分数组并满足最大差限制【中等】/README"},{"text":"⏰ 2967. 使数组成为等数数组的最小代价【中等】","link":"/notes/2967. 使数组成为等数数组的最小代价【中等】/README"},{"text":"⏰ 2968. 执行操作使频率分数最大【困难】","link":"/notes/2968. 执行操作使频率分数最大【困难】/README"},{"text":"⏰ 2969. 购买水果需要的最少金币数 II【困难】","link":"/notes/2969. 购买水果需要的最少金币数 II【困难】/README"},{"text":"⏰ 2970. 统计移除递增子数组的数目 I【简单】","link":"/notes/2970. 统计移除递增子数组的数目 I【简单】/README"},{"text":"⏰ 2971. 找到最大周长的多边形【中等】","link":"/notes/2971. 找到最大周长的多边形【中等】/README"},{"text":"⏰ 2972. 统计移除递增子数组的数目 II【困难】","link":"/notes/2972. 统计移除递增子数组的数目 II【困难】/README"},{"text":"⏰ 2973. 树中每个节点放置的金币数目【困难】","link":"/notes/2973. 树中每个节点放置的金币数目【困难】/README"},{"text":"⏰ 2974. 最小数字游戏【简单】","link":"/notes/2974. 最小数字游戏【简单】/README"},{"text":"⏰ 2975. 移除栅栏得到的正方形田地的最大面积【中等】","link":"/notes/2975. 移除栅栏得到的正方形田地的最大面积【中等】/README"},{"text":"⏰ 2976. 转换字符串的最小成本 I【中等】","link":"/notes/2976. 转换字符串的最小成本 I【中等】/README"},{"text":"⏰ 2977. 转换字符串的最小成本 II【困难】","link":"/notes/2977. 转换字符串的最小成本 II【困难】/README"},{"text":"⏰ 2978. 对称坐标【中等】","link":"/notes/2978. 对称坐标【中等】/README"},{"text":"⏰ 2979. 最贵的无法购买的商品【中等】","link":"/notes/2979. 最贵的无法购买的商品【中等】/README"},{"text":"⏰ 2980. 检查按位或是否存在尾随零【简单】","link":"/notes/2980. 检查按位或是否存在尾随零【简单】/README"},{"text":"⏰ 2981. 找出出现至少三次的最长特殊子字符串 I【中等】","link":"/notes/2981. 找出出现至少三次的最长特殊子字符串 I【中等】/README"},{"text":"⏰ 2982. 找出出现至少三次的最长特殊子字符串 II【中等】","link":"/notes/2982. 找出出现至少三次的最长特殊子字符串 II【中等】/README"},{"text":"⏰ 2983. 回文串重新排列查询【困难】","link":"/notes/2983. 回文串重新排列查询【困难】/README"},{"text":"⏰ 2984. 找到每座城市的高峰通话时间【中等】","link":"/notes/2984. 找到每座城市的高峰通话时间【中等】/README"},{"text":"⏰ 2985. 计算订单平均商品数量【简单】","link":"/notes/2985. 计算订单平均商品数量【简单】/README"},{"text":"⏰ 2986. 找到第三笔交易【中等】","link":"/notes/2986. 找到第三笔交易【中等】/README"},{"text":"⏰ 2987. 寻找房价最贵的城市【简单】","link":"/notes/2987. 寻找房价最贵的城市【简单】/README"},{"text":"⏰ 2988. 最大部门的经理【中等】","link":"/notes/2988. 最大部门的经理【中等】/README"},{"text":"⏰ 2989. 班级表现【中等】","link":"/notes/2989. 班级表现【中等】/README"},{"text":"⏰ 2990. 贷款类型【简单】","link":"/notes/2990. 贷款类型【简单】/README"},{"text":"⏰ 2991. 最好的三家酒庄【困难】","link":"/notes/2991. 最好的三家酒庄【困难】/README"},{"text":"⏰ 2992. 自整除排列的数量【中等】","link":"/notes/2992. 自整除排列的数量【中等】/README"},{"text":"⏰ 2993. 发生在周五的交易 I【中等】","link":"/notes/2993. 发生在周五的交易 I【中等】/README"},{"text":"⏰ 2994. 发生在周五的交易 II【困难】","link":"/notes/2994. 发生在周五的交易 II【困难】/README"},{"text":"⏰ 2995. 观众变主播【困难】","link":"/notes/2995. 观众变主播【困难】/README"},{"text":"⏰ 2996. 大于等于顺序前缀和的最小缺失整数【简单】","link":"/notes/2996. 大于等于顺序前缀和的最小缺失整数【简单】/README"},{"text":"⏰ 2997. 使数组异或和等于 K 的最少操作次数【中等】","link":"/notes/2997. 使数组异或和等于 K 的最少操作次数【中等】/README"},{"text":"⏰ 2998. 使 X 和 Y 相等的最少操作次数【中等】","link":"/notes/2998. 使 X 和 Y 相等的最少操作次数【中等】/README"},{"text":"⏰ 2999. 统计强大整数的数目【困难】","link":"/notes/2999. 统计强大整数的数目【困难】/README"},{"text":"⏰ 3000. 对角线最长的矩形的面积【简单】","link":"/notes/3000. 对角线最长的矩形的面积【简单】/README"}]},{"text":"32. 3001~3100","collapsed":true,"items":[{"text":"⏰ 3001. 捕获黑皇后需要的最少移动次数【中等】","link":"/notes/3001. 捕获黑皇后需要的最少移动次数【中等】/README"},{"text":"⏰ 3002. 移除后集合的最多元素数【中等】","link":"/notes/3002. 移除后集合的最多元素数【中等】/README"},{"text":"⏰ 3003. 执行操作后的最大分割数量【困难】","link":"/notes/3003. 执行操作后的最大分割数量【困难】/README"},{"text":"⏰ 3004. 相同颜色的最大子树【中等】","link":"/notes/3004. 相同颜色的最大子树【中等】/README"},{"text":"⏰ 3005. 最大频率元素计数【简单】","link":"/notes/3005. 最大频率元素计数【简单】/README"},{"text":"⏰ 3006. 找出数组中的美丽下标 I【中等】","link":"/notes/3006. 找出数组中的美丽下标 I【中等】/README"},{"text":"⏰ 3007. 价值和小于等于 K 的最大数字【中等】","link":"/notes/3007. 价值和小于等于 K 的最大数字【中等】/README"},{"text":"⏰ 3008. 找出数组中的美丽下标 II【困难】","link":"/notes/3008. 找出数组中的美丽下标 II【困难】/README"},{"text":"⏰ 3009. 折线图上的最大交点数量【困难】","link":"/notes/3009. 折线图上的最大交点数量【困难】/README"},{"text":"⏰ 3010. 将数组分成最小总代价的子数组 I【简单】","link":"/notes/3010. 将数组分成最小总代价的子数组 I【简单】/README"},{"text":"⏰ 3011. 判断一个数组是否可以变为有序【中等】","link":"/notes/3011. 判断一个数组是否可以变为有序【中等】/README"},{"text":"⏰ 3012. 通过操作使数组长度最小【中等】","link":"/notes/3012. 通过操作使数组长度最小【中等】/README"},{"text":"⏰ 3013. 将数组分成最小总代价的子数组 II【困难】","link":"/notes/3013. 将数组分成最小总代价的子数组 II【困难】/README"},{"text":"⏰ 3014. 输入单词需要的最少按键次数 I【简单】","link":"/notes/3014. 输入单词需要的最少按键次数 I【简单】/README"},{"text":"⏰ 3015. 按距离统计房屋对数目 I【中等】","link":"/notes/3015. 按距离统计房屋对数目 I【中等】/README"},{"text":"⏰ 3016. 输入单词需要的最少按键次数 II【中等】","link":"/notes/3016. 输入单词需要的最少按键次数 II【中等】/README"},{"text":"⏰ 3017. 按距离统计房屋对数目 II【困难】","link":"/notes/3017. 按距离统计房屋对数目 II【困难】/README"},{"text":"⏰ 3018. 可处理的最大删除操作数 I【困难】","link":"/notes/3018. 可处理的最大删除操作数 I【困难】/README"},{"text":"⏰ 3019. 按键变更的次数【简单】","link":"/notes/3019. 按键变更的次数【简单】/README"},{"text":"⏰ 3020. 子集中元素的最大数量【中等】","link":"/notes/3020. 子集中元素的最大数量【中等】/README"},{"text":"⏰ 3021. Alice 和 Bob 玩鲜花游戏【中等】","link":"/notes/3021. Alice 和 Bob 玩鲜花游戏【中等】/README"},{"text":"⏰ 3022. 给定操作次数内使剩余元素的或值最小【困难】","link":"/notes/3022. 给定操作次数内使剩余元素的或值最小【困难】/README"},{"text":"⏰ 3023. 在无限流中寻找模式 I【中等】","link":"/notes/3023. 在无限流中寻找模式 I【中等】/README"},{"text":"⏰ 3024. 三角形类型【简单】","link":"/notes/3024. 三角形类型【简单】/README"},{"text":"⏰ 3025. 人员站位的方案数 I【中等】","link":"/notes/3025. 人员站位的方案数 I【中等】/README"},{"text":"⏰ 3026. 最大好子数组和【中等】","link":"/notes/3026. 最大好子数组和【中等】/README"},{"text":"⏰ 3027. 人员站位的方案数 II【困难】","link":"/notes/3027. 人员站位的方案数 II【困难】/README"},{"text":"⏰ 3028. 边界上的蚂蚁【简单】","link":"/notes/3028. 边界上的蚂蚁【简单】/README"},{"text":"⏰ 3029. 将单词恢复初始状态所需的最短时间 I【中等】","link":"/notes/3029. 将单词恢复初始状态所需的最短时间 I【中等】/README"},{"text":"⏰ 3030. 找出网格的区域平均强度【中等】","link":"/notes/3030. 找出网格的区域平均强度【中等】/README"},{"text":"⏰ 3031. 将单词恢复初始状态所需的最短时间 II【困难】","link":"/notes/3031. 将单词恢复初始状态所需的最短时间 II【困难】/README"},{"text":"⏰ 3032. 统计各位数字都不同的数字个数 II【简单】","link":"/notes/3032. 统计各位数字都不同的数字个数 II【简单】/README"},{"text":"⏰ 3033. 修改矩阵【简单】","link":"/notes/3033. 修改矩阵【简单】/README"},{"text":"⏰ 3034. 匹配模式数组的子数组数目 I【中等】","link":"/notes/3034. 匹配模式数组的子数组数目 I【中等】/README"},{"text":"⏰ 3035. 回文字符串的最大数量【中等】","link":"/notes/3035. 回文字符串的最大数量【中等】/README"},{"text":"⏰ 3036. 匹配模式数组的子数组数目 II【困难】","link":"/notes/3036. 匹配模式数组的子数组数目 II【困难】/README"},{"text":"⏰ 3037. 在无限流中寻找模式 II【困难】","link":"/notes/3037. 在无限流中寻找模式 II【困难】/README"},{"text":"⏰ 3038. 相同分数的最大操作数目 I【简单】","link":"/notes/3038. 相同分数的最大操作数目 I【简单】/README"},{"text":"⏰ 3039. 进行操作使字符串为空【中等】","link":"/notes/3039. 进行操作使字符串为空【中等】/README"},{"text":"⏰ 3040. 相同分数的最大操作数目 II【中等】","link":"/notes/3040. 相同分数的最大操作数目 II【中等】/README"},{"text":"⏰ 3041. 修改数组后最大化数组中的连续元素数目【困难】","link":"/notes/3041. 修改数组后最大化数组中的连续元素数目【困难】/README"},{"text":"⏰ 3042. 统计前后缀下标对 I【简单】","link":"/notes/3042. 统计前后缀下标对 I【简单】/README"},{"text":"⏰ 3043. 最长公共前缀的长度【中等】","link":"/notes/3043. 最长公共前缀的长度【中等】/README"},{"text":"⏰ 3044. 出现频率最高的质数【中等】","link":"/notes/3044. 出现频率最高的质数【中等】/README"},{"text":"⏰ 3045. 统计前后缀下标对 II【困难】","link":"/notes/3045. 统计前后缀下标对 II【困难】/README"},{"text":"⏰ 3046. 分割数组【简单】","link":"/notes/3046. 分割数组【简单】/README"},{"text":"⏰ 3047. 求交集区域内的最大正方形面积【中等】","link":"/notes/3047. 求交集区域内的最大正方形面积【中等】/README"},{"text":"⏰ 3048. 标记所有下标的最早秒数 I【中等】","link":"/notes/3048. 标记所有下标的最早秒数 I【中等】/README"},{"text":"⏰ 3049. 标记所有下标的最早秒数 II【困难】","link":"/notes/3049. 标记所有下标的最早秒数 II【困难】/README"},{"text":"⏰ 3050. 披萨配料成本分析【中等】","link":"/notes/3050. 披萨配料成本分析【中等】/README"},{"text":"⏰ 3051. 寻找数据科学家职位的候选人【简单】","link":"/notes/3051. 寻找数据科学家职位的候选人【简单】/README"},{"text":"⏰ 3052. 最大化商品【困难】","link":"/notes/3052. 最大化商品【困难】/README"},{"text":"⏰ 3053. 根据长度分类三角形【简单】","link":"/notes/3053. 根据长度分类三角形【简单】/README"},{"text":"⏰ 3054. 二叉树节点【中等】","link":"/notes/3054. 二叉树节点【中等】/README"},{"text":"⏰ 3055. 最高欺诈百分位数【中等】","link":"/notes/3055. 最高欺诈百分位数【中等】/README"},{"text":"⏰ 3056. 快照分析【中等】","link":"/notes/3056. 快照分析【中等】/README"},{"text":"⏰ 3057. 员工项目分配【困难】","link":"/notes/3057. 员工项目分配【困难】/README"},{"text":"⏰ 3058. 没有共同朋友的朋友【中等】","link":"/notes/3058. 没有共同朋友的朋友【中等】/README"},{"text":"⏰ 3059. 找到所有不同的邮件域名【简单】","link":"/notes/3059. 找到所有不同的邮件域名【简单】/README"},{"text":"⏰ 3060. 时间范围内的用户活动【困难】","link":"/notes/3060. 时间范围内的用户活动【困难】/README"},{"text":"⏰ 3061. 计算滞留雨水【困难】","link":"/notes/3061. 计算滞留雨水【困难】/README"},{"text":"⏰ 3062. 链表游戏的获胜者【简单】","link":"/notes/3062. 链表游戏的获胜者【简单】/README"},{"text":"⏰ 3063. 链表频率【简单】","link":"/notes/3063. 链表频率【简单】/README"},{"text":"⏰ 3064. 使用按位查询猜测数字 I【中等】","link":"/notes/3064. 使用按位查询猜测数字 I【中等】/README"},{"text":"⏰ 3065. 超过阈值的最少操作数 I【简单】","link":"/notes/3065. 超过阈值的最少操作数 I【简单】/README"},{"text":"⏰ 3066. 超过阈值的最少操作数 II【中等】","link":"/notes/3066. 超过阈值的最少操作数 II【中等】/README"},{"text":"⏰ 3067. 在带权树网络中统计可连接服务器对数目【中等】","link":"/notes/3067. 在带权树网络中统计可连接服务器对数目【中等】/README"},{"text":"⏰ 3068. 最大节点价值之和【困难】","link":"/notes/3068. 最大节点价值之和【困难】/README"},{"text":"⏰ 3069. 将元素分配到两个数组中 I【简单】","link":"/notes/3069. 将元素分配到两个数组中 I【简单】/README"},{"text":"⏰ 3070. 元素和小于等于 k 的子矩阵的数目【中等】","link":"/notes/3070. 元素和小于等于 k 的子矩阵的数目【中等】/README"},{"text":"⏰ 3071. 在矩阵上写出字母 Y 所需的最少操作次数【中等】","link":"/notes/3071. 在矩阵上写出字母 Y 所需的最少操作次数【中等】/README"},{"text":"⏰ 3072. 将元素分配到两个数组中 II【困难】","link":"/notes/3072. 将元素分配到两个数组中 II【困难】/README"},{"text":"⏰ 3073. 最大递增三元组【中等】","link":"/notes/3073. 最大递增三元组【中等】/README"},{"text":"⏰ 3074. 重新分装苹果【简单】","link":"/notes/3074. 重新分装苹果【简单】/README"},{"text":"⏰ 3075. 幸福值最大化的选择方案【中等】","link":"/notes/3075. 幸福值最大化的选择方案【中等】/README"},{"text":"⏰ 3076. 数组中的最短非公共子字符串【中等】","link":"/notes/3076. 数组中的最短非公共子字符串【中等】/README"},{"text":"⏰ 3077. K 个不相交子数组的最大能量值【困难】","link":"/notes/3077. K 个不相交子数组的最大能量值【困难】/README"},{"text":"⏰ 3078. 矩阵中的字母数字模式匹配 I【中等】","link":"/notes/3078. 矩阵中的字母数字模式匹配 I【中等】/README"},{"text":"⏰ 3079. 求出加密整数的和【简单】","link":"/notes/3079. 求出加密整数的和【简单】/README"},{"text":"⏰ 3080. 执行操作标记数组中的元素【中等】","link":"/notes/3080. 执行操作标记数组中的元素【中等】/README"},{"text":"⏰ 3081. 替换字符串中的问号使分数最小【中等】","link":"/notes/3081. 替换字符串中的问号使分数最小【中等】/README"},{"text":"⏰ 3082. 求出所有子序列的能量和【困难】","link":"/notes/3082. 求出所有子序列的能量和【困难】/README"},{"text":"⏰ 3083. 字符串及其反转中是否存在同一子字符串【简单】","link":"/notes/3083. 字符串及其反转中是否存在同一子字符串【简单】/README"},{"text":"⏰ 3084. 统计以给定字符开头和结尾的子字符串总数【中等】","link":"/notes/3084. 统计以给定字符开头和结尾的子字符串总数【中等】/README"},{"text":"⏰ 3085. 成为 K 特殊字符串需要删除的最少字符数【中等】","link":"/notes/3085. 成为 K 特殊字符串需要删除的最少字符数【中等】/README"},{"text":"⏰ 3086. 拾起 K 个 1 需要的最少行动次数【困难】","link":"/notes/3086. 拾起 K 个 1 需要的最少行动次数【困难】/README"},{"text":"⏰ 3087. 查找热门话题标签【中等】","link":"/notes/3087. 查找热门话题标签【中等】/README"},{"text":"⏰ 3088. 使字符串反回文【困难】","link":"/notes/3088. 使字符串反回文【困难】/README"},{"text":"⏰ 3089. 查找突发行为【中等】","link":"/notes/3089. 查找突发行为【中等】/README"},{"text":"⏰ 3090. 每个字符最多出现两次的最长子字符串【简单】","link":"/notes/3090. 每个字符最多出现两次的最长子字符串【简单】/README"},{"text":"⏰ 3091. 执行操作使数据元素之和大于等于 K【中等】","link":"/notes/3091. 执行操作使数据元素之和大于等于 K【中等】/README"},{"text":"⏰ 3092. 最高频率的 ID【中等】","link":"/notes/3092. 最高频率的 ID【中等】/README"},{"text":"⏰ 3093. 最长公共后缀查询【困难】","link":"/notes/3093. 最长公共后缀查询【困难】/README"},{"text":"⏰ 3094. 使用按位查询猜测数字 II【中等】","link":"/notes/3094. 使用按位查询猜测数字 II【中等】/README"},{"text":"⏰ 3095. 或值至少 K 的最短子数组 I【简单】","link":"/notes/3095. 或值至少 K 的最短子数组 I【简单】/README"},{"text":"⏰ 3096. 得到更多分数的最少关卡数目【中等】","link":"/notes/3096. 得到更多分数的最少关卡数目【中等】/README"},{"text":"⏰ 3097. 或值至少为 K 的最短子数组 II【中等】","link":"/notes/3097. 或值至少为 K 的最短子数组 II【中等】/README"},{"text":"⏰ 3098. 求出所有子序列的能量和【困难】","link":"/notes/3098. 求出所有子序列的能量和【困难】/README"},{"text":"⏰ 3099. 哈沙德数【简单】","link":"/notes/3099. 哈沙德数【简单】/README"},{"text":"⏰ 3100. 换水问题 II【中等】","link":"/notes/3100. 换水问题 II【中等】/README"}]},{"text":"33. 3101~3200","collapsed":true,"items":[{"text":"⏰ 3101. 交替子数组计数【中等】","link":"/notes/3101. 交替子数组计数【中等】/README"},{"text":"⏰ 3102. 最小化曼哈顿距离【困难】","link":"/notes/3102. 最小化曼哈顿距离【困难】/README"},{"text":"⏰ 3103. 查找热门话题标签 II【困难】","link":"/notes/3103. 查找热门话题标签 II【困难】/README"},{"text":"⏰ 3104. 查找最长的自包含子串【困难】","link":"/notes/3104. 查找最长的自包含子串【困难】/README"},{"text":"⏰ 3105. 最长的严格递增或递减子数组【简单】","link":"/notes/3105. 最长的严格递增或递减子数组【简单】/README"},{"text":"⏰ 3106. 满足距离约束且字典序最小的字符串【中等】","link":"/notes/3106. 满足距离约束且字典序最小的字符串【中等】/README"},{"text":"⏰ 3107. 使数组中位数等于 K 的最少操作数【中等】","link":"/notes/3107. 使数组中位数等于 K 的最少操作数【中等】/README"},{"text":"⏰ 3108. 带权图里旅途的最小代价【困难】","link":"/notes/3108. 带权图里旅途的最小代价【困难】/README"},{"text":"⏰ 3109. 查找排列的下标【中等】","link":"/notes/3109. 查找排列的下标【中等】/README"},{"text":"⏰ 3110. 字符串的分数【简单】","link":"/notes/3110. 字符串的分数【简单】/README"},{"text":"⏰ 3111. 覆盖所有点的最少矩形数目【中等】","link":"/notes/3111. 覆盖所有点的最少矩形数目【中等】/README"},{"text":"⏰ 3112. 访问消失节点的最少时间【中等】","link":"/notes/3112. 访问消失节点的最少时间【中等】/README"},{"text":"⏰ 3113. 边界元素是最大值的子数组数目【困难】","link":"/notes/3113. 边界元素是最大值的子数组数目【困难】/README"},{"text":"⏰ 3114. 替换字符可以得到的最晚时间【简单】","link":"/notes/3114. 替换字符可以得到的最晚时间【简单】/README"},{"text":"⏰ 3115. 质数的最大距离【中等】","link":"/notes/3115. 质数的最大距离【中等】/README"},{"text":"⏰ 3116. 单面值组合的第 K 小金额【困难】","link":"/notes/3116. 单面值组合的第 K 小金额【困难】/README"},{"text":"⏰ 3117. 划分数组得到最小的值之和【困难】","link":"/notes/3117. 划分数组得到最小的值之和【困难】/README"},{"text":"⏰ 3118. 发生在周五的交易 III【中等】","link":"/notes/3118. 发生在周五的交易 III【中等】/README"},{"text":"⏰ 3119. 最大数量的可修复坑洼【中等】","link":"/notes/3119. 最大数量的可修复坑洼【中等】/README"},{"text":"⏰ 3120. 统计特殊字母的数量 I【简单】","link":"/notes/3120. 统计特殊字母的数量 I【简单】/README"},{"text":"⏰ 3121. 统计特殊字母的数量 II【中等】","link":"/notes/3121. 统计特殊字母的数量 II【中等】/README"},{"text":"⏰ 3122. 使矩阵满足条件的最少操作次数【中等】","link":"/notes/3122. 使矩阵满足条件的最少操作次数【中等】/README"},{"text":"⏰ 3123. 最短路径中的边【困难】","link":"/notes/3123. 最短路径中的边【困难】/README"},{"text":"⏰ 3124. 查找最长的电话【中等】","link":"/notes/3124. 查找最长的电话【中等】/README"},{"text":"⏰ 3125. 使得按位与结果为 0 的最大数字【中等】","link":"/notes/3125. 使得按位与结果为 0 的最大数字【中等】/README"},{"text":"⏰ 3126. 服务器利用时间【中等】","link":"/notes/3126. 服务器利用时间【中等】/README"},{"text":"⏰ 3127. 构造相同颜色的正方形【简单】","link":"/notes/3127. 构造相同颜色的正方形【简单】/README"},{"text":"⏰ 3128. 直角三角形【中等】","link":"/notes/3128. 直角三角形【中等】/README"},{"text":"⏰ 3129. 找出所有稳定的二进制数组 I【中等】","link":"/notes/3129. 找出所有稳定的二进制数组 I【中等】/README"},{"text":"⏰ 3130. 找出所有稳定的二进制数组 II【困难】","link":"/notes/3130. 找出所有稳定的二进制数组 II【困难】/README"},{"text":"⏰ 3131. 找出与数组相加的整数 I【简单】","link":"/notes/3131. 找出与数组相加的整数 I【简单】/README"},{"text":"⏰ 3132. 找出与数组相加的整数 II【中等】","link":"/notes/3132. 找出与数组相加的整数 II【中等】/README"},{"text":"⏰ 3133. 数组最后一个元素的最小值【中等】","link":"/notes/3133. 数组最后一个元素的最小值【中等】/README"},{"text":"⏰ 3134. 找出唯一性数组的中位数【困难】","link":"/notes/3134. 找出唯一性数组的中位数【困难】/README"},{"text":"⏰ 3135. 通过添加或删除结尾字符来同化字符串【中等】","link":"/notes/3135. 通过添加或删除结尾字符来同化字符串【中等】/README"},{"text":"⏰ 3136. 有效单词【简单】","link":"/notes/3136. 有效单词【简单】/README"},{"text":"⏰ 3137. K 周期字符串需要的最少操作次数【中等】","link":"/notes/3137. K 周期字符串需要的最少操作次数【中等】/README"},{"text":"⏰ 3138. 同位字符串连接的最小长度【中等】","link":"/notes/3138. 同位字符串连接的最小长度【中等】/README"},{"text":"⏰ 3139. 使数组中所有元素相等的最小开销【困难】","link":"/notes/3139. 使数组中所有元素相等的最小开销【困难】/README"},{"text":"⏰ 3140. 连续空余座位 II【中等】","link":"/notes/3140. 连续空余座位 II【中等】/README"},{"text":"⏰ 3141. 最大汉明距离【困难】","link":"/notes/3141. 最大汉明距离【困难】/README"},{"text":"⏰ 3142. 判断矩阵是否满足条件【简单】","link":"/notes/3142. 判断矩阵是否满足条件【简单】/README"},{"text":"⏰ 3143. 正方形中的最多点数【中等】","link":"/notes/3143. 正方形中的最多点数【中等】/README"},{"text":"⏰ 3144. 分割字符频率相等的最少子字符串【中等】","link":"/notes/3144. 分割字符频率相等的最少子字符串【中等】/README"},{"text":"⏰ 3145. 大数组元素的乘积【困难】","link":"/notes/3145. 大数组元素的乘积【困难】/README"},{"text":"⏰ 3146. 两个字符串的排列差【简单】","link":"/notes/3146. 两个字符串的排列差【简单】/README"},{"text":"⏰ 3147. 从魔法师身上吸取的最大能量【中等】","link":"/notes/3147. 从魔法师身上吸取的最大能量【中等】/README"},{"text":"⏰ 3148. 矩阵中的最大得分【中等】","link":"/notes/3148. 矩阵中的最大得分【中等】/README"},{"text":"⏰ 3149. 找出分数最低的排列【困难】","link":"/notes/3149. 找出分数最低的排列【困难】/README"},{"text":"⏰ 3150. 无效的推文 II【简单】","link":"/notes/3150. 无效的推文 II【简单】/README"},{"text":"⏰ 3151. 特殊数组 I【简单】","link":"/notes/3151. 特殊数组 I【简单】/README"},{"text":"⏰ 3152. 特殊数组 II【中等】","link":"/notes/3152. 特殊数组 II【中等】/README"},{"text":"⏰ 3153. 所有数对中数位差之和【中等】","link":"/notes/3153. 所有数对中数位差之和【中等】/README"},{"text":"⏰ 3154. 到达第 K 级台阶的方案数【困难】","link":"/notes/3154. 到达第 K 级台阶的方案数【困难】/README"},{"text":"⏰ 3155. 可升级服务器的最大数量【中等】","link":"/notes/3155. 可升级服务器的最大数量【中等】/README"},{"text":"⏰ 3156. 员工任务持续时间和并发任务【困难】","link":"/notes/3156. 员工任务持续时间和并发任务【困难】/README"},{"text":"⏰ 3157. 找到具有最小和的树的层数【中等】","link":"/notes/3157. 找到具有最小和的树的层数【中等】/README"},{"text":"⏰ 3158. 求出出现两次数字的 XOR 值【简单】","link":"/notes/3158. 求出出现两次数字的 XOR 值【简单】/README"},{"text":"⏰ 3159. 查询数组中元素的出现位置【中等】","link":"/notes/3159. 查询数组中元素的出现位置【中等】/README"},{"text":"⏰ 3160. 所有球里面不同颜色的数目【中等】","link":"/notes/3160. 所有球里面不同颜色的数目【中等】/README"},{"text":"⏰ 3161. 物块放置查询【困难】","link":"/notes/3161. 物块放置查询【困难】/README"},{"text":"⏰ 3162. 优质数对的总数 I【简单】","link":"/notes/3162. 优质数对的总数 I【简单】/README"},{"text":"⏰ 3163. 压缩字符串 III【中等】","link":"/notes/3163. 压缩字符串 III【中等】/README"},{"text":"⏰ 3164. 优质数对的总数 II【中等】","link":"/notes/3164. 优质数对的总数 II【中等】/README"},{"text":"⏰ 3165. 不包含相邻元素的子序列的最大和【困难】","link":"/notes/3165. 不包含相邻元素的子序列的最大和【困难】/README"},{"text":"⏰ 3166. 计算停车费与时长【中等】","link":"/notes/3166. 计算停车费与时长【中等】/README"},{"text":"⏰ 3167. 字符串的更好压缩【中等】","link":"/notes/3167. 字符串的更好压缩【中等】/README"},{"text":"⏰ 3168. 候诊室中的最少椅子数【简单】","link":"/notes/3168. 候诊室中的最少椅子数【简单】/README"},{"text":"⏰ 3169. 无需开会的工作日【中等】","link":"/notes/3169. 无需开会的工作日【中等】/README"},{"text":"⏰ 3170. 删除星号以后字典序最小的字符串【中等】","link":"/notes/3170. 删除星号以后字典序最小的字符串【中等】/README"},{"text":"⏰ 3171. 找到按位或最接近 K 的子数组【困难】","link":"/notes/3171. 找到按位或最接近 K 的子数组【困难】/README"},{"text":"⏰ 3172. 第二天验证【简单】","link":"/notes/3172. 第二天验证【简单】/README"},{"text":"⏰ 3173. 相邻元素的按位或【简单】","link":"/notes/3173. 相邻元素的按位或【简单】/README"},{"text":"⏰ 3174. 清除数字【简单】","link":"/notes/3174. 清除数字【简单】/README"},{"text":"⏰ 3175. 找到连续赢 K 场比赛的第一位玩家【中等】","link":"/notes/3175. 找到连续赢 K 场比赛的第一位玩家【中等】/README"},{"text":"⏰ 3176. 求出最长好子序列 I【中等】","link":"/notes/3176. 求出最长好子序列 I【中等】/README"},{"text":"⏰ 3177. 求出最长好子序列 II【困难】","link":"/notes/3177. 求出最长好子序列 II【困难】/README"},{"text":"⏰ 3178. 找出 K 秒后拿着球的孩子【简单】","link":"/notes/3178. 找出 K 秒后拿着球的孩子【简单】/README"},{"text":"⏰ 3179. K 秒后第 N 个元素的值【中等】","link":"/notes/3179. K 秒后第 N 个元素的值【中等】/README"},{"text":"⏰ 3180. 执行操作可获得的最大总奖励 I【中等】","link":"/notes/3180. 执行操作可获得的最大总奖励 I【中等】/README"},{"text":"⏰ 3181. 执行操作可获得的最大总奖励 II【困难】","link":"/notes/3181. 执行操作可获得的最大总奖励 II【困难】/README"},{"text":"⏰ 3182. 查找得分最高的学生【中等】","link":"/notes/3182. 查找得分最高的学生【中等】/README"},{"text":"⏰ 3183. 达到总和的方法数量【中等】","link":"/notes/3183. 达到总和的方法数量【中等】/README"},{"text":"⏰ 3184. 构成整天的下标对数目 I【简单】","link":"/notes/3184. 构成整天的下标对数目 I【简单】/README"},{"text":"⏰ 3185. 构成整天的下标对数目 II【中等】","link":"/notes/3185. 构成整天的下标对数目 II【中等】/README"},{"text":"⏰ 3186. 施咒的最大总伤害【中等】","link":"/notes/3186. 施咒的最大总伤害【中等】/README"},{"text":"⏰ 3187. 数组中的峰值【困难】","link":"/notes/3187. 数组中的峰值【困难】/README"},{"text":"⏰ 3188. 查找得分最高的学生 II【困难】","link":"/notes/3188. 查找得分最高的学生 II【困难】/README"},{"text":"⏰ 3189. 得到一个和平棋盘的最少步骤【中等】","link":"/notes/3189. 得到一个和平棋盘的最少步骤【中等】/README"},{"text":"⏰ 3190. 使所有元素都可以被 3 整除的最少操作数【简单】","link":"/notes/3190. 使所有元素都可以被 3 整除的最少操作数【简单】/README"},{"text":"⏰ 3191. 使二进制数组全部等于 1 的最少操作次数 I【中等】","link":"/notes/3191. 使二进制数组全部等于 1 的最少操作次数 I【中等】/README"},{"text":"⏰ 3192. 使二进制数组全部等于 1 的最少操作次数 II【中等】","link":"/notes/3192. 使二进制数组全部等于 1 的最少操作次数 II【中等】/README"},{"text":"⏰ 3193. 统计逆序对的数目【困难】","link":"/notes/3193. 统计逆序对的数目【困难】/README"},{"text":"⏰ 3194. 最小元素和最大元素的最小平均值【简单】","link":"/notes/3194. 最小元素和最大元素的最小平均值【简单】/README"},{"text":"⏰ 3195. 包含所有 1 的最小矩形面积 I【中等】","link":"/notes/3195. 包含所有 1 的最小矩形面积 I【中等】/README"},{"text":"⏰ 3196. 最大化子数组的总成本【中等】","link":"/notes/3196. 最大化子数组的总成本【中等】/README"},{"text":"⏰ 3197. 包含所有 1 的最小矩形面积 II【困难】","link":"/notes/3197. 包含所有 1 的最小矩形面积 II【困难】/README"},{"text":"⏰ 3198. 查找每个州的城市【简单】","link":"/notes/3198. 查找每个州的城市【简单】/README"},{"text":"⏰ 3199. 用偶数异或设置位计数三元组 I【简单】","link":"/notes/3199. 用偶数异或设置位计数三元组 I【简单】/README"},{"text":"⏰ 3200. 三角形的最大高度【简单】","link":"/notes/3200. 三角形的最大高度【简单】/README"}]},{"text":"34. 3201~3300","collapsed":true,"items":[{"text":"⏰ 3201. 找出有效子序列的最大长度 I【中等】","link":"/notes/3201. 找出有效子序列的最大长度 I【中等】/README"},{"text":"⏰ 3202. 找出有效子序列的最大长度 II【中等】","link":"/notes/3202. 找出有效子序列的最大长度 II【中等】/README"},{"text":"⏰ 3203. 合并两棵树后的最小直径【困难】","link":"/notes/3203. 合并两棵树后的最小直径【困难】/README"},{"text":"⏰ 3204. 按位用户权限分析【中等】","link":"/notes/3204. 按位用户权限分析【中等】/README"},{"text":"⏰ 3205. 最大数组跳跃得分 I【中等】","link":"/notes/3205. 最大数组跳跃得分 I【中等】/README"},{"text":"⏰ 3206. 交替组 I【简单】","link":"/notes/3206. 交替组 I【简单】/README"},{"text":"⏰ 3207. 与敌人战斗后的最大分数【中等】","link":"/notes/3207. 与敌人战斗后的最大分数【中等】/README"},{"text":"⏰ 3208. 交替组 II【中等】","link":"/notes/3208. 交替组 II【中等】/README"},{"text":"⏰ 3209. 子数组按位与值为 K 的数目【困难】","link":"/notes/3209. 子数组按位与值为 K 的数目【困难】/README"},{"text":"⏰ 3210. 找出加密后的字符串【简单】","link":"/notes/3210. 找出加密后的字符串【简单】/README"},{"text":"⏰ 3211. 生成不含相邻零的二进制字符串【中等】","link":"/notes/3211. 生成不含相邻零的二进制字符串【中等】/README"},{"text":"⏰ 3212. 统计 X 和 Y 频数相等的子矩阵数量【中等】","link":"/notes/3212. 统计 X 和 Y 频数相等的子矩阵数量【中等】/README"},{"text":"⏰ 3213. 最小代价构造字符串【困难】","link":"/notes/3213. 最小代价构造字符串【困难】/README"},{"text":"⏰ 3214. 同比增长率【困难】","link":"/notes/3214. 同比增长率【困难】/README"},{"text":"⏰ 3215. 用偶数异或设置位计数三元组 II【中等】","link":"/notes/3215. 用偶数异或设置位计数三元组 II【中等】/README"},{"text":"⏰ 3216. 交换后字典序最小的字符串【简单】","link":"/notes/3216. 交换后字典序最小的字符串【简单】/README"},{"text":"⏰ 3217. 从链表中移除在数组中存在的节点【中等】","link":"/notes/3217. 从链表中移除在数组中存在的节点【中等】/README"},{"text":"⏰ 3218. 切蛋糕的最小总开销 I【中等】","link":"/notes/3218. 切蛋糕的最小总开销 I【中等】/README"},{"text":"⏰ 3219. 切蛋糕的最小总开销 II【困难】","link":"/notes/3219. 切蛋糕的最小总开销 II【困难】/README"},{"text":"⏰ 3220. 奇数和偶数交易【中等】","link":"/notes/3220. 奇数和偶数交易【中等】/README"},{"text":"⏰ 3221. 最大数组跳跃得分 II【中等】","link":"/notes/3221. 最大数组跳跃得分 II【中等】/README"},{"text":"⏰ 3222. 求出硬币游戏的赢家【简单】","link":"/notes/3222. 求出硬币游戏的赢家【简单】/README"},{"text":"⏰ 3223. 操作后字符串的最短长度【中等】","link":"/notes/3223. 操作后字符串的最短长度【中等】/README"},{"text":"⏰ 3224. 使差值相等的最少数组改动次数【中等】","link":"/notes/3224. 使差值相等的最少数组改动次数【中等】/README"},{"text":"⏰ 3225. 网格图操作后的最大分数【困难】","link":"/notes/3225. 网格图操作后的最大分数【困难】/README"},{"text":"⏰ 3226. 使两个整数相等的位更改次数【简单】","link":"/notes/3226. 使两个整数相等的位更改次数【简单】/README"},{"text":"⏰ 3227. 字符串元音游戏【中等】","link":"/notes/3227. 字符串元音游戏【中等】/README"},{"text":"⏰ 3228. 将 1 移动到末尾的最大操作次数【中等】","link":"/notes/3228. 将 1 移动到末尾的最大操作次数【中等】/README"},{"text":"⏰ 3229. 使数组等于目标数组所需的最少操作次数【困难】","link":"/notes/3229. 使数组等于目标数组所需的最少操作次数【困难】/README"},{"text":"⏰ 3230. 客户购买行为分析【中等】","link":"/notes/3230. 客户购买行为分析【中等】/README"},{"text":"⏰ 3231. 要删除的递增子序列的最小数量【困难】","link":"/notes/3231. 要删除的递增子序列的最小数量【困难】/README"},{"text":"⏰ 3232. 判断是否可以赢得数字游戏【简单】","link":"/notes/3232. 判断是否可以赢得数字游戏【简单】/README"},{"text":"⏰ 3233. 统计不是特殊数字的数字数量【中等】","link":"/notes/3233. 统计不是特殊数字的数字数量【中等】/README"},{"text":"⏰ 3234. 统计 1 显著的字符串的数量【中等】","link":"/notes/3234. 统计 1 显著的字符串的数量【中等】/README"},{"text":"⏰ 3235. 判断矩形的两个角落是否可达【困难】","link":"/notes/3235. 判断矩形的两个角落是否可达【困难】/README"},{"text":"⏰ 3236. 首席执行官下属层级【困难】","link":"/notes/3236. 首席执行官下属层级【困难】/README"},{"text":"⏰ 3237. Alt 和 Tab 模拟【中等】","link":"/notes/3237. Alt 和 Tab 模拟【中等】/README"},{"text":"⏰ 3238. 求出胜利玩家的数目【简单】","link":"/notes/3238. 求出胜利玩家的数目【简单】/README"},{"text":"⏰ 3239. 最少翻转次数使二进制矩阵回文 I【中等】","link":"/notes/3239. 最少翻转次数使二进制矩阵回文 I【中等】/README"},{"text":"⏰ 3240. 最少翻转次数使二进制矩阵回文 II【中等】","link":"/notes/3240. 最少翻转次数使二进制矩阵回文 II【中等】/README"},{"text":"⏰ 3241. 标记所有节点需要的时间【困难】","link":"/notes/3241. 标记所有节点需要的时间【困难】/README"},{"text":"⏰ 3242. 设计相邻元素求和服务【简单】","link":"/notes/3242. 设计相邻元素求和服务【简单】/README"},{"text":"⏰ 3243. 新增道路查询后的最短距离 I【中等】","link":"/notes/3243. 新增道路查询后的最短距离 I【中等】/README"},{"text":"⏰ 3244. 新增道路查询后的最短距离 II【困难】","link":"/notes/3244. 新增道路查询后的最短距离 II【困难】/README"},{"text":"⏰ 3245. 交替组 III【困难】","link":"/notes/3245. 交替组 III【困难】/README"},{"text":"⏰ 3246. 英超积分榜排名【简单】","link":"/notes/3246. 英超积分榜排名【简单】/README"},{"text":"⏰ 3247. 奇数和子序列的数量【中等】","link":"/notes/3247. 奇数和子序列的数量【中等】/README"},{"text":"⏰ 3248. 矩阵中的蛇【简单】","link":"/notes/3248. 矩阵中的蛇【简单】/README"},{"text":"⏰ 3249. 统计好节点的数目【中等】","link":"/notes/3249. 统计好节点的数目【中等】/README"},{"text":"⏰ 3250. 单调数组对的数目 I【困难】","link":"/notes/3250. 单调数组对的数目 I【困难】/README"},{"text":"⏰ 3251. 单调数组对的数目 II【困难】","link":"/notes/3251. 单调数组对的数目 II【困难】/README"},{"text":"⏰ 3252. 英超积分榜排名 II【中等】","link":"/notes/3252. 英超积分榜排名 II【中等】/README"},{"text":"⏰ 3253. 最小代价构造字符串（简单）【中等】","link":"/notes/3253. 最小代价构造字符串（简单）【中等】/README"},{"text":"⏰ 3254. 长度为 K 的子数组的能量值 I【中等】","link":"/notes/3254. 长度为 K 的子数组的能量值 I【中等】/README"},{"text":"⏰ 3255. 长度为 K 的子数组的能量值 II【中等】","link":"/notes/3255. 长度为 K 的子数组的能量值 II【中等】/README"},{"text":"⏰ 3256. 放三个车的价值之和最大 I【困难】","link":"/notes/3256. 放三个车的价值之和最大 I【困难】/README"},{"text":"⏰ 3257. 放三个车的价值之和最大 II【困难】","link":"/notes/3257. 放三个车的价值之和最大 II【困难】/README"},{"text":"⏰ 3258. 统计满足 K 约束的子字符串数量 I【简单】","link":"/notes/3258. 统计满足 K 约束的子字符串数量 I【简单】/README"},{"text":"⏰ 3259. 超级饮料的最大强化能量【中等】","link":"/notes/3259. 超级饮料的最大强化能量【中等】/README"},{"text":"⏰ 3260. 找出最大的 N 位 K 回文数【困难】","link":"/notes/3260. 找出最大的 N 位 K 回文数【困难】/README"},{"text":"⏰ 3261. 统计满足 K 约束的子字符串数量 II【困难】","link":"/notes/3261. 统计满足 K 约束的子字符串数量 II【困难】/README"},{"text":"⏰ 3262. 查找重叠的班次【中等】","link":"/notes/3262. 查找重叠的班次【中等】/README"},{"text":"⏰ 3263. 将双链表转换为数组 I【简单】","link":"/notes/3263. 将双链表转换为数组 I【简单】/README"},{"text":"⏰ 3264. K 次乘运算后的最终数组 I【简单】","link":"/notes/3264. K 次乘运算后的最终数组 I【简单】/README"},{"text":"⏰ 3265. 统计近似相等数对 I【中等】","link":"/notes/3265. 统计近似相等数对 I【中等】/README"},{"text":"⏰ 3266. K 次乘运算后的最终数组 II【困难】","link":"/notes/3266. K 次乘运算后的最终数组 II【困难】/README"},{"text":"⏰ 3267. 统计近似相等数对 II【困难】","link":"/notes/3267. 统计近似相等数对 II【困难】/README"},{"text":"⏰ 3268. 查找重叠的班次 II【困难】","link":"/notes/3268. 查找重叠的班次 II【困难】/README"},{"text":"⏰ 3269. 构建两个递增数组【困难】","link":"/notes/3269. 构建两个递增数组【困难】/README"},{"text":"⏰ 3270. 求出数字答案【简单】","link":"/notes/3270. 求出数字答案【简单】/README"},{"text":"⏰ 3271. 哈希分割字符串【中等】","link":"/notes/3271. 哈希分割字符串【中等】/README"},{"text":"⏰ 3272. 统计好整数的数目【困难】","link":"/notes/3272. 统计好整数的数目【困难】/README"},{"text":"⏰ 3273. 对 Bob 造成的最少伤害【困难】","link":"/notes/3273. 对 Bob 造成的最少伤害【困难】/README"},{"text":"⏰ 3274. 检查棋盘方格颜色是否相同【简单】","link":"/notes/3274. 检查棋盘方格颜色是否相同【简单】/README"},{"text":"⏰ 3275. 第 K 近障碍物查询【中等】","link":"/notes/3275. 第 K 近障碍物查询【中等】/README"},{"text":"⏰ 3276. 选择矩阵中单元格的最大得分【困难】","link":"/notes/3276. 选择矩阵中单元格的最大得分【困难】/README"},{"text":"⏰ 3277. 查询子数组最大异或值【困难】","link":"/notes/3277. 查询子数组最大异或值【困难】/README"},{"text":"⏰ 3278. 寻找数据科学家职位的候选人 II【中等】","link":"/notes/3278. 寻找数据科学家职位的候选人 II【中等】/README"},{"text":"⏰ 3279. 活塞占据的最大总区域【困难】","link":"/notes/3279. 活塞占据的最大总区域【困难】/README"},{"text":"⏰ 3280. 将日期转换为二进制表示【简单】","link":"/notes/3280. 将日期转换为二进制表示【简单】/README"},{"text":"⏰ 3281. 范围内整数的最大得分【中等】","link":"/notes/3281. 范围内整数的最大得分【中等】/README"},{"text":"⏰ 3282. 到达数组末尾的最大得分【中等】","link":"/notes/3282. 到达数组末尾的最大得分【中等】/README"},{"text":"⏰ 3283. 吃掉所有兵需要的最多移动次数【困难】","link":"/notes/3283. 吃掉所有兵需要的最多移动次数【困难】/README"},{"text":"⏰ 3284. 连续子数组的和【中等】","link":"/notes/3284. 连续子数组的和【中等】/README"},{"text":"⏰ 3285. 找到稳定山的下标【简单】","link":"/notes/3285. 找到稳定山的下标【简单】/README"},{"text":"⏰ 3286. 穿越网格图的安全路径【中等】","link":"/notes/3286. 穿越网格图的安全路径【中等】/README"},{"text":"⏰ 3287. 求出数组中最大序列值【困难】","link":"/notes/3287. 求出数组中最大序列值【困难】/README"},{"text":"⏰ 3288. 最长上升路径的长度【困难】","link":"/notes/3288. 最长上升路径的长度【困难】/README"},{"text":"⏰ 3289. 数字小镇中的捣蛋鬼【简单】","link":"/notes/3289. 数字小镇中的捣蛋鬼【简单】/README"},{"text":"⏰ 3290. 最高乘法得分【中等】","link":"/notes/3290. 最高乘法得分【中等】/README"},{"text":"⏰ 3291. 形成目标字符串需要的最少字符串数 I【中等】","link":"/notes/3291. 形成目标字符串需要的最少字符串数 I【中等】/README"},{"text":"⏰ 3292. 形成目标字符串需要的最少字符串数 II【困难】","link":"/notes/3292. 形成目标字符串需要的最少字符串数 II【困难】/README"},{"text":"⏰ 3293. 计算产品最终价格【中等】","link":"/notes/3293. 计算产品最终价格【中等】/README"},{"text":"⏰ 3294. 将双链表转换为数组 II【中等】","link":"/notes/3294. 将双链表转换为数组 II【中等】/README"},{"text":"⏰ 3295. 举报垃圾信息【中等】","link":"/notes/3295. 举报垃圾信息【中等】/README"},{"text":"⏰ 3296. 移山所需的最少秒数【中等】","link":"/notes/3296. 移山所需的最少秒数【中等】/README"},{"text":"⏰ 3297. 统计重新排列后包含另一个字符串的子字符串数目 I【中等】","link":"/notes/3297. 统计重新排列后包含另一个字符串的子字符串数目 I【中等】/README"},{"text":"⏰ 3298. 统计重新排列后包含另一个字符串的子字符串数目 II【困难】","link":"/notes/3298. 统计重新排列后包含另一个字符串的子字符串数目 II【困难】/README"},{"text":"⏰ 3299. 连续子序列的和【困难】","link":"/notes/3299. 连续子序列的和【困难】/README"},{"text":"⏰ 3300. 替换为数位和以后的最小元素【简单】","link":"/notes/3300. 替换为数位和以后的最小元素【简单】/README"}]},{"text":"35. 3301~3400","collapsed":true,"items":[{"text":"⏰ 3301. 高度互不相同的最大塔高和【中等】","link":"/notes/3301. 高度互不相同的最大塔高和【中等】/README"},{"text":"⏰ 3302. 字典序最小的合法序列【中等】","link":"/notes/3302. 字典序最小的合法序列【中等】/README"},{"text":"⏰ 3303. 第一个几乎相等子字符串的下标【困难】","link":"/notes/3303. 第一个几乎相等子字符串的下标【困难】/README"},{"text":"⏰ 3304. 找出第 K 个字符 I【简单】","link":"/notes/3304. 找出第 K 个字符 I【简单】/README"},{"text":"⏰ 3305. 元音辅音字符串计数 I【中等】","link":"/notes/3305. 元音辅音字符串计数 I【中等】/README"},{"text":"⏰ 3306. 元音辅音字符串计数 II【中等】","link":"/notes/3306. 元音辅音字符串计数 II【中等】/README"},{"text":"⏰ 3307. 找出第 K 个字符 II【困难】","link":"/notes/3307. 找出第 K 个字符 II【困难】/README"},{"text":"⏰ 3308. 寻找表现最佳的司机【中等】","link":"/notes/3308. 寻找表现最佳的司机【中等】/README"},{"text":"⏰ 3309. 连接二进制表示可形成的最大数值【中等】","link":"/notes/3309. 连接二进制表示可形成的最大数值【中等】/README"},{"text":"⏰ 3310. 移除可疑的方法【中等】","link":"/notes/3310. 移除可疑的方法【中等】/README"},{"text":"⏰ 3311. 构造符合图结构的二维矩阵【困难】","link":"/notes/3311. 构造符合图结构的二维矩阵【困难】/README"},{"text":"⏰ 3312. 查询排序后的最大公约数【困难】","link":"/notes/3312. 查询排序后的最大公约数【困难】/README"},{"text":"⏰ 3313. 查找树中最后标记的节点【困难】","link":"/notes/3313. 查找树中最后标记的节点【困难】/README"},{"text":"⏰ 3314. 构造最小位运算数组 I【简单】","link":"/notes/3314. 构造最小位运算数组 I【简单】/README"},{"text":"⏰ 3315. 构造最小位运算数组 II【中等】","link":"/notes/3315. 构造最小位运算数组 II【中等】/README"},{"text":"⏰ 3316. 从原字符串里进行删除操作的最多次数【中等】","link":"/notes/3316. 从原字符串里进行删除操作的最多次数【中等】/README"},{"text":"⏰ 3317. 安排活动的方案数【困难】","link":"/notes/3317. 安排活动的方案数【困难】/README"},{"text":"⏰ 3318. 计算子数组的 x-sum I【简单】","link":"/notes/3318. 计算子数组的 x-sum I【简单】/README"},{"text":"⏰ 3319. 第 K 大的完美二叉子树的大小【中等】","link":"/notes/3319. 第 K 大的完美二叉子树的大小【中等】/README"},{"text":"⏰ 3320. 统计能获胜的出招序列数【困难】","link":"/notes/3320. 统计能获胜的出招序列数【困难】/README"},{"text":"⏰ 3321. 计算子数组的 x-sum II【困难】","link":"/notes/3321. 计算子数组的 x-sum II【困难】/README"},{"text":"⏰ 3322. 英超积分榜排名 III【中等】","link":"/notes/3322. 英超积分榜排名 III【中等】/README"},{"text":"⏰ 3323. 通过插入区间最小化连通组【中等】","link":"/notes/3323. 通过插入区间最小化连通组【中等】/README"},{"text":"⏰ 3324. 出现在屏幕上的字符串序列【中等】","link":"/notes/3324. 出现在屏幕上的字符串序列【中等】/README"},{"text":"⏰ 3325. 字符至少出现 K 次的子字符串 I【中等】","link":"/notes/3325. 字符至少出现 K 次的子字符串 I【中等】/README"},{"text":"⏰ 3326. 使数组非递减的最少除法操作次数【中等】","link":"/notes/3326. 使数组非递减的最少除法操作次数【中等】/README"},{"text":"⏰ 3327. 判断 DFS 字符串是否是回文串【困难】","link":"/notes/3327. 判断 DFS 字符串是否是回文串【困难】/README"},{"text":"⏰ 3328. 查找每个州的城市 II【中等】","link":"/notes/3328. 查找每个州的城市 II【中等】/README"},{"text":"⏰ 3329. 字符至少出现 K 次的子字符串 II【困难】","link":"/notes/3329. 字符至少出现 K 次的子字符串 II【困难】/README"},{"text":"⏰ 3330. 找到初始输入字符串 I【简单】","link":"/notes/3330. 找到初始输入字符串 I【简单】/README"},{"text":"⏰ 3331. 修改后子树的大小【中等】","link":"/notes/3331. 修改后子树的大小【中等】/README"},{"text":"⏰ 3332. 旅客可以得到的最多点数【中等】","link":"/notes/3332. 旅客可以得到的最多点数【中等】/README"},{"text":"⏰ 3333. 找到初始输入字符串 II【困难】","link":"/notes/3333. 找到初始输入字符串 II【困难】/README"},{"text":"⏰ 3334. 数组的最大因子得分【中等】","link":"/notes/3334. 数组的最大因子得分【中等】/README"},{"text":"⏰ 3335. 字符串转换后的长度 I【中等】","link":"/notes/3335. 字符串转换后的长度 I【中等】/README"},{"text":"⏰ 3336. 最大公约数相等的子序列数量【困难】","link":"/notes/3336. 最大公约数相等的子序列数量【困难】/README"},{"text":"⏰ 3337. 字符串转换后的长度 II【困难】","link":"/notes/3337. 字符串转换后的长度 II【困难】/README"},{"text":"⏰ 3338. 第二高的薪水 II【中等】","link":"/notes/3338. 第二高的薪水 II【中等】/README"},{"text":"⏰ 3339. 查找 K 偶数数组的数量【中等】","link":"/notes/3339. 查找 K 偶数数组的数量【中等】/README"},{"text":"⏰ 3340. 检查平衡字符串【简单】","link":"/notes/3340. 检查平衡字符串【简单】/README"},{"text":"⏰ 3341. 到达最后一个房间的最少时间 I【中等】","link":"/notes/3341. 到达最后一个房间的最少时间 I【中等】/README"},{"text":"⏰ 3342. 到达最后一个房间的最少时间 II【中等】","link":"/notes/3342. 到达最后一个房间的最少时间 II【中等】/README"},{"text":"⏰ 3343. 统计平衡排列的数目【困难】","link":"/notes/3343. 统计平衡排列的数目【困难】/README"},{"text":"⏰ 3344. 最大尺寸数组【中等】","link":"/notes/3344. 最大尺寸数组【中等】/README"},{"text":"⏰ 3345. 最小可整除数位乘积 I【简单】","link":"/notes/3345. 最小可整除数位乘积 I【简单】/README"},{"text":"⏰ 3346. 执行操作后元素的最高频率 I【中等】","link":"/notes/3346. 执行操作后元素的最高频率 I【中等】/README"},{"text":"⏰ 3347. 执行操作后元素的最高频率 II【困难】","link":"/notes/3347. 执行操作后元素的最高频率 II【困难】/README"},{"text":"⏰ 3348. 最小可整除数位乘积 II【困难】","link":"/notes/3348. 最小可整除数位乘积 II【困难】/README"},{"text":"⏰ 3349. 检测相邻递增子数组 I【简单】","link":"/notes/3349. 检测相邻递增子数组 I【简单】/README"},{"text":"⏰ 3350. 检测相邻递增子数组 II【中等】","link":"/notes/3350. 检测相邻递增子数组 II【中等】/README"},{"text":"⏰ 3351. 好子序列的元素之和【困难】","link":"/notes/3351. 好子序列的元素之和【困难】/README"},{"text":"⏰ 3352. 统计小于 N 的 K 可约简整数【困难】","link":"/notes/3352. 统计小于 N 的 K 可约简整数【困难】/README"},{"text":"⏰ 3353. 最小总操作数【简单】","link":"/notes/3353. 最小总操作数【简单】/README"},{"text":"⏰ 3354. 使数组元素等于零【简单】","link":"/notes/3354. 使数组元素等于零【简单】/README"},{"text":"⏰ 3355. 零数组变换 I【中等】","link":"/notes/3355. 零数组变换 I【中等】/README"},{"text":"⏰ 3356. 零数组变换 II【中等】","link":"/notes/3356. 零数组变换 II【中等】/README"},{"text":"⏰ 3357. 最小化相邻元素的最大差值【困难】","link":"/notes/3357. 最小化相邻元素的最大差值【困难】/README"},{"text":"⏰ 3358. 评分为 NULL 的图书【简单】","link":"/notes/3358. 评分为 NULL 的图书【简单】/README"},{"text":"⏰ 3359. 查找最大元素不超过 K 的有序子矩阵【困难】","link":"/notes/3359. 查找最大元素不超过 K 的有序子矩阵【困难】/README"},{"text":"⏰ 3360. 移除石头游戏【简单】","link":"/notes/3360. 移除石头游戏【简单】/README"},{"text":"⏰ 3361. 两个字符串的切换距离【中等】","link":"/notes/3361. 两个字符串的切换距离【中等】/README"},{"text":"⏰ 3362. 零数组变换 III【中等】","link":"/notes/3362. 零数组变换 III【中等】/README"},{"text":"⏰ 3363. 最多可收集的水果数目【困难】","link":"/notes/3363. 最多可收集的水果数目【困难】/README"},{"text":"⏰ 3364. 最小正和子数组【简单】","link":"/notes/3364. 最小正和子数组【简单】/README"},{"text":"⏰ 3365. 重排子字符串以形成目标字符串【中等】","link":"/notes/3365. 重排子字符串以形成目标字符串【中等】/README"},{"text":"⏰ 3366. 最小数组和【中等】","link":"/notes/3366. 最小数组和【中等】/README"},{"text":"⏰ 3367. 移除边之后的权重最大和【困难】","link":"/notes/3367. 移除边之后的权重最大和【困难】/README"},{"text":"⏰ 3368. 首字母大写【困难】","link":"/notes/3368. 首字母大写【困难】/README"},{"text":"⏰ 3369. 设计数组统计跟踪器【困难】","link":"/notes/3369. 设计数组统计跟踪器【困难】/README"},{"text":"⏰ 3370. 仅含置位位的最小整数【简单】","link":"/notes/3370. 仅含置位位的最小整数【简单】/README"},{"text":"⏰ 3371. 识别数组中的最大异常值【中等】","link":"/notes/3371. 识别数组中的最大异常值【中等】/README"},{"text":"⏰ 3372. 连接两棵树后最大目标节点数目 I【中等】","link":"/notes/3372. 连接两棵树后最大目标节点数目 I【中等】/README"},{"text":"⏰ 3373. 连接两棵树后最大目标节点数目 II【困难】","link":"/notes/3373. 连接两棵树后最大目标节点数目 II【困难】/README"},{"text":"⏰ 3374. 首字母大写 II【困难】","link":"/notes/3374. 首字母大写 II【困难】/README"},{"text":"⏰ 3375. 使数组的值全部为 K 的最少操作次数【简单】","link":"/notes/3375. 使数组的值全部为 K 的最少操作次数【简单】/README"},{"text":"⏰ 3376. 破解锁的最少时间 I【中等】","link":"/notes/3376. 破解锁的最少时间 I【中等】/README"},{"text":"⏰ 3377. 使两个整数相等的数位操作【中等】","link":"/notes/3377. 使两个整数相等的数位操作【中等】/README"},{"text":"⏰ 3378. 统计最小公倍数图中的连通块数目【困难】","link":"/notes/3378. 统计最小公倍数图中的连通块数目【困难】/README"},{"text":"⏰ 3379. 转换数组【简单】","link":"/notes/3379. 转换数组【简单】/README"},{"text":"⏰ 3380. 用点构造面积最大的矩形 I【中等】","link":"/notes/3380. 用点构造面积最大的矩形 I【中等】/README"},{"text":"⏰ 3381. 长度可被 K 整除的子数组的最大元素和【中等】","link":"/notes/3381. 长度可被 K 整除的子数组的最大元素和【中等】/README"},{"text":"⏰ 3382. 用点构造面积最大的矩形 II【困难】","link":"/notes/3382. 用点构造面积最大的矩形 II【困难】/README"},{"text":"⏰ 3383. 施法所需最低符文数量【困难】","link":"/notes/3383. 施法所需最低符文数量【困难】/README"},{"text":"⏰ 3384. 球队传球成功的优势得分【困难】","link":"/notes/3384. 球队传球成功的优势得分【困难】/README"},{"text":"⏰ 3385. 破解锁的最少时间 II【困难】","link":"/notes/3385. 破解锁的最少时间 II【困难】/README"},{"text":"⏰ 3386. 按下时间最长的按钮【简单】","link":"/notes/3386. 按下时间最长的按钮【简单】/README"},{"text":"⏰ 3387. 两天自由外汇交易后的最大货币数【中等】","link":"/notes/3387. 两天自由外汇交易后的最大货币数【中等】/README"},{"text":"⏰ 3388. 统计数组中的美丽分割【中等】","link":"/notes/3388. 统计数组中的美丽分割【中等】/README"},{"text":"⏰ 3389. 使字符频率相等的最少操作次数【困难】","link":"/notes/3389. 使字符频率相等的最少操作次数【困难】/README"},{"text":"⏰ 3390. Longest Team Pass Streak【困难】","link":"/notes/3390. Longest Team Pass Streak【困难】/README"},{"text":"⏰ 3391. 设计一个高效的层跟踪三维二进制矩阵【中等】","link":"/notes/3391. 设计一个高效的层跟踪三维二进制矩阵【中等】/README"},{"text":"⏰ 3392. 统计符合条件长度为 3 的子数组数目【简单】","link":"/notes/3392. 统计符合条件长度为 3 的子数组数目【简单】/README"},{"text":"⏰ 3393. 统计异或值为给定值的路径数目【中等】","link":"/notes/3393. 统计异或值为给定值的路径数目【中等】/README"},{"text":"⏰ 3394. 判断网格图能否被切割成块【中等】","link":"/notes/3394. 判断网格图能否被切割成块【中等】/README"},{"text":"⏰ 3395. 唯一中间众数子序列 I【困难】","link":"/notes/3395. 唯一中间众数子序列 I【困难】/README"},{"text":"⏰ 3396. 使数组元素互不相同所需的最少操作次数【简单】","link":"/notes/3396. 使数组元素互不相同所需的最少操作次数【简单】/README"},{"text":"⏰ 3397. 执行操作后不同元素的最大数量【中等】","link":"/notes/3397. 执行操作后不同元素的最大数量【中等】/README"},{"text":"⏰ 3398. 字符相同的最短子字符串 I【困难】","link":"/notes/3398. 字符相同的最短子字符串 I【困难】/README"},{"text":"⏰ 3399. 字符相同的最短子字符串 II【困难】","link":"/notes/3399. 字符相同的最短子字符串 II【困难】/README"},{"text":"⏰ 3400. 右移后的最大匹配索引数【中等】","link":"/notes/3400. 右移后的最大匹配索引数【中等】/README"}]},{"text":"36. 3401~3500","collapsed":true,"items":[{"text":"⏰ 3401. 寻找环形礼物交换链【困难】","link":"/notes/3401. 寻找环形礼物交换链【困难】/README"},{"text":"⏰ 3402. 使每一列严格递增的最少操作次数【简单】","link":"/notes/3402. 使每一列严格递增的最少操作次数【简单】/README"},{"text":"⏰ 3403. 从盒子中找出字典序最大的字符串 I【中等】","link":"/notes/3403. 从盒子中找出字典序最大的字符串 I【中等】/README"},{"text":"⏰ 3404. 统计特殊子序列的数目【中等】","link":"/notes/3404. 统计特殊子序列的数目【中等】/README"},{"text":"⏰ 3405. 统计恰好有 K 个相等相邻元素的数组数目【困难】","link":"/notes/3405. 统计恰好有 K 个相等相邻元素的数组数目【困难】/README"},{"text":"⏰ 3406. 从盒子中找出字典序最大的字符串 II【困难】","link":"/notes/3406. 从盒子中找出字典序最大的字符串 II【困难】/README"},{"text":"⏰ 3407. 子字符串匹配模式【简单】","link":"/notes/3407. 子字符串匹配模式【简单】/README"},{"text":"⏰ 3408. 设计任务管理器【中等】","link":"/notes/3408. 设计任务管理器【中等】/README"},{"text":"⏰ 3409. 最长相邻绝对差递减子序列【中等】","link":"/notes/3409. 最长相邻绝对差递减子序列【中等】/README"},{"text":"⏰ 3410. 删除所有值为某个元素后的最大子数组和【困难】","link":"/notes/3410. 删除所有值为某个元素后的最大子数组和【困难】/README"},{"text":"⏰ 3411. 最长乘积等价子数组【简单】","link":"/notes/3411. 最长乘积等价子数组【简单】/README"},{"text":"⏰ 3412. 计算字符串的镜像分数【中等】","link":"/notes/3412. 计算字符串的镜像分数【中等】/README"},{"text":"⏰ 3413. 收集连续 K 个袋子可以获得的最多硬币数量【中等】","link":"/notes/3413. 收集连续 K 个袋子可以获得的最多硬币数量【中等】/README"},{"text":"⏰ 3414. 不重叠区间的最大得分【困难】","link":"/notes/3414. 不重叠区间的最大得分【困难】/README"},{"text":"⏰ 3415. 查找具有三个连续数字的产品【简单】","link":"/notes/3415. 查找具有三个连续数字的产品【简单】/README"},{"text":"⏰ 3416. 唯一中间众数子序列 II【困难】","link":"/notes/3416. 唯一中间众数子序列 II【困难】/README"},{"text":"⏰ 3417. 跳过交替单元格的之字形遍历【简单】","link":"/notes/3417. 跳过交替单元格的之字形遍历【简单】/README"},{"text":"⏰ 3418. 机器人可以获得的最大金币数【中等】","link":"/notes/3418. 机器人可以获得的最大金币数【中等】/README"},{"text":"⏰ 3419. 图的最大边权的最小值【中等】","link":"/notes/3419. 图的最大边权的最小值【中等】/README"},{"text":"⏰ 3420. 统计 K 次操作以内得到非递减子数组的数目【困难】","link":"/notes/3420. 统计 K 次操作以内得到非递减子数组的数目【困难】/README"},{"text":"⏰ 3421. 查找进步的学生【中等】","link":"/notes/3421. 查找进步的学生【中等】/README"},{"text":"⏰ 3422. 将子数组元素变为相等所需的最小操作数【中等】","link":"/notes/3422. 将子数组元素变为相等所需的最小操作数【中等】/README"},{"text":"⏰ 3423. 循环数组中相邻元素的最大差值【简单】","link":"/notes/3423. 循环数组中相邻元素的最大差值【简单】/README"},{"text":"⏰ 3424. 将数组变相同的最小代价【中等】","link":"/notes/3424. 将数组变相同的最小代价【中等】/README"},{"text":"⏰ 3425. 最长特殊路径【困难】","link":"/notes/3425. 最长特殊路径【困难】/README"},{"text":"⏰ 3426. 所有安放棋子方案的曼哈顿距离【困难】","link":"/notes/3426. 所有安放棋子方案的曼哈顿距离【困难】/README"},{"text":"⏰ 3427. 变长子数组求和【简单】","link":"/notes/3427. 变长子数组求和【简单】/README"},{"text":"⏰ 3428. 最多 K 个元素的子序列的最值之和【中等】","link":"/notes/3428. 最多 K 个元素的子序列的最值之和【中等】/README"},{"text":"⏰ 3429. 粉刷房子 IV【中等】","link":"/notes/3429. 粉刷房子 IV【中等】/README"},{"text":"⏰ 3430. 最多 K 个元素的子数组的最值之和【困难】","link":"/notes/3430. 最多 K 个元素的子数组的最值之和【困难】/README"},{"text":"⏰ 3431. 对数字排序的最小解锁下标【中等】","link":"/notes/3431. 对数字排序的最小解锁下标【中等】/README"},{"text":"⏰ 3432. 统计元素和差值为偶数的分区方案【简单】","link":"/notes/3432. 统计元素和差值为偶数的分区方案【简单】/README"},{"text":"⏰ 3433. 统计用户被提及情况【中等】","link":"/notes/3433. 统计用户被提及情况【中等】/README"},{"text":"⏰ 3434. 子数组操作后的最大频率【中等】","link":"/notes/3434. 子数组操作后的最大频率【中等】/README"},{"text":"⏰ 3435. 最短公共超序列的字母出现频率【困难】","link":"/notes/3435. 最短公共超序列的字母出现频率【困难】/README"},{"text":"⏰ 3436. 查找合法邮箱【简单】","link":"/notes/3436. 查找合法邮箱【简单】/README"},{"text":"⏰ 3437. 全排列 III【中等】","link":"/notes/3437. 全排列 III【中等】/README"},{"text":"⏰ 3438. 找到字符串中合法的相邻数字【简单】","link":"/notes/3438. 找到字符串中合法的相邻数字【简单】/README"},{"text":"⏰ 3439. 重新安排会议得到最多空余时间 I【中等】","link":"/notes/3439. 重新安排会议得到最多空余时间 I【中等】/README"},{"text":"⏰ 3440. 重新安排会议得到最多空余时间 II【中等】","link":"/notes/3440. 重新安排会议得到最多空余时间 II【中等】/README"},{"text":"⏰ 3441. 变成好标题的最少代价【困难】","link":"/notes/3441. 变成好标题的最少代价【困难】/README"},{"text":"⏰ 3442. 奇偶频次间的最大差值 I【简单】","link":"/notes/3442. 奇偶频次间的最大差值 I【简单】/README"},{"text":"⏰ 3443. K 次修改后的最大曼哈顿距离【中等】","link":"/notes/3443. K 次修改后的最大曼哈顿距离【中等】/README"},{"text":"⏰ 3444. 使数组包含目标值倍数的最少增量【困难】","link":"/notes/3444. 使数组包含目标值倍数的最少增量【困难】/README"},{"text":"⏰ 3445. 奇偶频次间的最大差值 II【困难】","link":"/notes/3445. 奇偶频次间的最大差值 II【困难】/README"},{"text":"⏰ 3446. 按对角线进行矩阵排序【中等】","link":"/notes/3446. 按对角线进行矩阵排序【中等】/README"},{"text":"⏰ 3447. 将元素分配给有约束条件的组【中等】","link":"/notes/3447. 将元素分配给有约束条件的组【中等】/README"},{"text":"⏰ 3448. 统计可以被最后一个数位整除的子字符串数目【困难】","link":"/notes/3448. 统计可以被最后一个数位整除的子字符串数目【困难】/README"},{"text":"⏰ 3449. 最大化游戏分数的最小值【困难】","link":"/notes/3449. 最大化游戏分数的最小值【困难】/README"},{"text":"⏰ 3450. 一张长椅上的最多学生【简单】","link":"/notes/3450. 一张长椅上的最多学生【简单】/README"},{"text":"⏰ 3451. 查找无效的 IP 地址【困难】","link":"/notes/3451. 查找无效的 IP 地址【困难】/README"},{"text":"⏰ 3452. 好数字之和【简单】","link":"/notes/3452. 好数字之和【简单】/README"},{"text":"⏰ 3453. 分割正方形 I【中等】","link":"/notes/3453. 分割正方形 I【中等】/README"},{"text":"⏰ 3454. 分割正方形 II【困难】","link":"/notes/3454. 分割正方形 II【困难】/README"},{"text":"⏰ 3455. 最短匹配子字符串【困难】","link":"/notes/3455. 最短匹配子字符串【困难】/README"},{"text":"⏰ 3456. 找出长度为 K 的特殊子字符串【简单】","link":"/notes/3456. 找出长度为 K 的特殊子字符串【简单】/README"},{"text":"⏰ 3457. 吃披萨【中等】","link":"/notes/3457. 吃披萨【中等】/README"},{"text":"⏰ 3458. 选择 K 个互不重叠的特殊子字符串【中等】","link":"/notes/3458. 选择 K 个互不重叠的特殊子字符串【中等】/README"},{"text":"⏰ 3459. 最长 V 形对角线段的长度【困难】","link":"/notes/3459. 最长 V 形对角线段的长度【困难】/README"},{"text":"⏰ 3460. 最多删除一次后的最长公共前缀【中等】","link":"/notes/3460. 最多删除一次后的最长公共前缀【中等】/README"},{"text":"⏰ 3461. 判断操作后字符串中的数字是否相等 I【简单】","link":"/notes/3461. 判断操作后字符串中的数字是否相等 I【简单】/README"},{"text":"⏰ 3462. 提取至多 K 个元素的最大总和【中等】","link":"/notes/3462. 提取至多 K 个元素的最大总和【中等】/README"},{"text":"⏰ 3463. 判断操作后字符串中的数字是否相等 II【困难】","link":"/notes/3463. 判断操作后字符串中的数字是否相等 II【困难】/README"},{"text":"⏰ 3464. 正方形上的点之间的最大距离【困难】","link":"/notes/3464. 正方形上的点之间的最大距离【困难】/README"},{"text":"⏰ 3465. 查找具有有效序列号的产品【简单】","link":"/notes/3465. 查找具有有效序列号的产品【简单】/README"},{"text":"⏰ 3466. 最大硬币收集量【中等】","link":"/notes/3466. 最大硬币收集量【中等】/README"},{"text":"⏰ 3467. 将数组按照奇偶性转化【简单】","link":"/notes/3467. 将数组按照奇偶性转化【简单】/README"},{"text":"⏰ 3468. 可行数组的数目【中等】","link":"/notes/3468. 可行数组的数目【中等】/README"},{"text":"⏰ 3469. 移除所有数组元素的最小代价【中等】","link":"/notes/3469. 移除所有数组元素的最小代价【中等】/README"},{"text":"⏰ 3470. 全排列 IV【困难】","link":"/notes/3470. 全排列 IV【困难】/README"},{"text":"⏰ 3471. 找出最大的几近缺失整数【简单】","link":"/notes/3471. 找出最大的几近缺失整数【简单】/README"},{"text":"⏰ 3472. 至多 K 次操作后的最长回文子序列【中等】","link":"/notes/3472. 至多 K 次操作后的最长回文子序列【中等】/README"},{"text":"⏰ 3473. 长度至少为 M 的 K 个子数组之和【中等】","link":"/notes/3473. 长度至少为 M 的 K 个子数组之和【中等】/README"},{"text":"⏰ 3474. 字典序最小的生成字符串【困难】","link":"/notes/3474. 字典序最小的生成字符串【困难】/README"},{"text":"⏰ 3475. DNA 模式识别【中等】","link":"/notes/3475. DNA 模式识别【中等】/README"},{"text":"⏰ 3476. 最大化任务分配的利润【中等】","link":"/notes/3476. 最大化任务分配的利润【中等】/README"},{"text":"⏰ 3477. 水果成篮 II【简单】","link":"/notes/3477. 水果成篮 II【简单】/README"},{"text":"⏰ 3478. 选出和最大的 K 个元素【中等】","link":"/notes/3478. 选出和最大的 K 个元素【中等】/README"},{"text":"⏰ 3479. 将水果装入篮子 III【中等】","link":"/notes/3479. 将水果装入篮子 III【中等】/README"},{"text":"⏰ 3480. 删除一个冲突对后最大子数组数目【困难】","link":"/notes/3480. 删除一个冲突对后最大子数组数目【困难】/README"},{"text":"⏰ 3481. 应用替换【中等】","link":"/notes/3481. 应用替换【中等】/README"},{"text":"⏰ 3482. 分析组织层级【困难】","link":"/notes/3482. 分析组织层级【困难】/README"},{"text":"⏰ 3483. 不同三位偶数的数目【简单】","link":"/notes/3483. 不同三位偶数的数目【简单】/README"},{"text":"⏰ 3484. 设计电子表格【中等】","link":"/notes/3484. 设计电子表格【中等】/README"},{"text":"⏰ 3485. 删除元素后 K 个字符串的最长公共前缀【困难】","link":"/notes/3485. 删除元素后 K 个字符串的最长公共前缀【困难】/README"},{"text":"⏰ 3486. 最长特殊路径 II【困难】","link":"/notes/3486. 最长特殊路径 II【困难】/README"},{"text":"⏰ 3487. 删除后的最大子数组元素和【简单】","link":"/notes/3487. 删除后的最大子数组元素和【简单】/README"},{"text":"⏰ 3488. 距离最小相等元素查询【中等】","link":"/notes/3488. 距离最小相等元素查询【中等】/README"},{"text":"⏰ 3489. 零数组变换 IV【中等】","link":"/notes/3489. 零数组变换 IV【中等】/README"},{"text":"⏰ 3490. 统计美丽整数的数目【困难】","link":"/notes/3490. 统计美丽整数的数目【困难】/README"},{"text":"⏰ 3491. 电话号码前缀【简单】","link":"/notes/3491. 电话号码前缀【简单】/README"},{"text":"⏰ 3492. 船上可以装载的最大集装箱数量【简单】","link":"/notes/3492. 船上可以装载的最大集装箱数量【简单】/README"},{"text":"⏰ 3493. 属性图【中等】","link":"/notes/3493. 属性图【中等】/README"},{"text":"⏰ 3494. 酿造药水需要的最少总时间【中等】","link":"/notes/3494. 酿造药水需要的最少总时间【中等】/README"},{"text":"⏰ 3495. 使数组元素都变为零的最少操作次数【困难】","link":"/notes/3495. 使数组元素都变为零的最少操作次数【困难】/README"},{"text":"⏰ 3496. 最大化配对删除后的得分【中等】","link":"/notes/3496. 最大化配对删除后的得分【中等】/README"},{"text":"⏰ 3497. 分析订阅转化【中等】","link":"/notes/3497. 分析订阅转化【中等】/README"},{"text":"⏰ 3498. 字符串的反转度【简单】","link":"/notes/3498. 字符串的反转度【简单】/README"},{"text":"⏰ 3499. 操作后最大活跃区段数 I【中等】","link":"/notes/3499. 操作后最大活跃区段数 I【中等】/README"},{"text":"⏰ 3500. 将数组分割为子数组的最小代价【困难】","link":"/notes/3500. 将数组分割为子数组的最小代价【困难】/README"}]},{"text":"37. 3501~3600","collapsed":true,"items":[{"text":"⏰ 3501. 操作后最大活跃区段数 II【困难】","link":"/notes/3501. 操作后最大活跃区段数 II【困难】/README"},{"text":"⏰ 3502. 到达每个位置的最小费用【简单】","link":"/notes/3502. 到达每个位置的最小费用【简单】/README"},{"text":"⏰ 3503. 子字符串连接后的最长回文串 I【中等】","link":"/notes/3503. 子字符串连接后的最长回文串 I【中等】/README"},{"text":"⏰ 3504. 子字符串连接后的最长回文串 II【困难】","link":"/notes/3504. 子字符串连接后的最长回文串 II【困难】/README"},{"text":"⏰ 3505. 使 K 个子数组内元素相等的最少操作数【困难】","link":"/notes/3505. 使 K 个子数组内元素相等的最少操作数【困难】/README"},{"text":"⏰ 3506. 查找消除细菌菌株所需时间【困难】","link":"/notes/3506. 查找消除细菌菌株所需时间【困难】/README"},{"text":"⏰ 3507. 移除最小数对使数组有序 I【简单】","link":"/notes/3507. 移除最小数对使数组有序 I【简单】/README"},{"text":"⏰ 3508. 设计路由器【中等】","link":"/notes/3508. 设计路由器【中等】/README"},{"text":"⏰ 3509. 最大化交错和为 K 的子序列乘积【困难】","link":"/notes/3509. 最大化交错和为 K 的子序列乘积【困难】/README"},{"text":"⏰ 3510. 移除最小数对使数组有序 II【困难】","link":"/notes/3510. 移除最小数对使数组有序 II【困难】/README"},{"text":"⏰ 3511. 构造正数组【中等】","link":"/notes/3511. 构造正数组【中等】/README"},{"text":"⏰ 3512. 使数组和能被 K 整除的最少操作次数【简单】","link":"/notes/3512. 使数组和能被 K 整除的最少操作次数【简单】/README"},{"text":"⏰ 3513. 不同 XOR 三元组的数目 I【中等】","link":"/notes/3513. 不同 XOR 三元组的数目 I【中等】/README"},{"text":"⏰ 3514. 不同 XOR 三元组的数目 II【中等】","link":"/notes/3514. 不同 XOR 三元组的数目 II【中等】/README"},{"text":"⏰ 3515. 带权树中的最短路径【困难】","link":"/notes/3515. 带权树中的最短路径【困难】/README"},{"text":"⏰ 3516. 找到最近的人【简单】","link":"/notes/3516. 找到最近的人【简单】/README"},{"text":"⏰ 3517. 最小回文排列 I【中等】","link":"/notes/3517. 最小回文排列 I【中等】/README"},{"text":"⏰ 3518. 最小回文排列 II【困难】","link":"/notes/3518. 最小回文排列 II【困难】/README"},{"text":"⏰ 3519. 统计逐位非递减的整数【困难】","link":"/notes/3519. 统计逐位非递减的整数【困难】/README"},{"text":"⏰ 3520. 逆序对计数的最小阈值【中等】","link":"/notes/3520. 逆序对计数的最小阈值【中等】/README"},{"text":"⏰ 3521. 查找推荐产品对【中等】","link":"/notes/3521. 查找推荐产品对【中等】/README"},{"text":"⏰ 3522. 执行指令后的得分【中等】","link":"/notes/3522. 执行指令后的得分【中等】/README"},{"text":"⏰ 3523. 非递减数组的最大长度【中等】","link":"/notes/3523. 非递减数组的最大长度【中等】/README"},{"text":"⏰ 3524. 求出数组的 X 值 I【中等】","link":"/notes/3524. 求出数组的 X 值 I【中等】/README"},{"text":"⏰ 3525. 求出数组的 X 值 II【困难】","link":"/notes/3525. 求出数组的 X 值 II【困难】/README"},{"text":"⏰ 3526. 范围异或查询与子数组反转【困难】","link":"/notes/3526. 范围异或查询与子数组反转【困难】/README"},{"text":"⏰ 3527. 找到最常见的回答【中等】","link":"/notes/3527. 找到最常见的回答【中等】/README"},{"text":"⏰ 3528. 单位转换 I【中等】","link":"/notes/3528. 单位转换 I【中等】/README"},{"text":"⏰ 3529. 统计水平子串和垂直子串重叠格子的数目【中等】","link":"/notes/3529. 统计水平子串和垂直子串重叠格子的数目【中等】/README"},{"text":"⏰ 3530. 有向无环图中合法拓扑排序的最大利润【困难】","link":"/notes/3530. 有向无环图中合法拓扑排序的最大利润【困难】/README"},{"text":"⏰ 3531. 统计被覆盖的建筑【中等】","link":"/notes/3531. 统计被覆盖的建筑【中等】/README"},{"text":"⏰ 3532. 针对图的路径存在性查询 I【中等】","link":"/notes/3532. 针对图的路径存在性查询 I【中等】/README"},{"text":"⏰ 3533. 判断连接可整除性【困难】","link":"/notes/3533. 判断连接可整除性【困难】/README"},{"text":"⏰ 3534. 针对图的路径存在性查询 II【困难】","link":"/notes/3534. 针对图的路径存在性查询 II【困难】/README"},{"text":"⏰ 3535. 单位转换 II【中等】","link":"/notes/3535. 单位转换 II【中等】/README"},{"text":"⏰ 3536. 两个数字的最大乘积【简单】","link":"/notes/3536. 两个数字的最大乘积【简单】/README"},{"text":"⏰ 3537. 填充特殊网格【中等】","link":"/notes/3537. 填充特殊网格【中等】/README"},{"text":"⏰ 3538. 合并得到最小旅行时间【困难】","link":"/notes/3538. 合并得到最小旅行时间【困难】/README"},{"text":"⏰ 3539. 魔法序列的数组乘积之和【困难】","link":"/notes/3539. 魔法序列的数组乘积之和【困难】/README"},{"text":"⏰ 3540. 访问所有房屋的最短时间【中等】","link":"/notes/3540. 访问所有房屋的最短时间【中等】/README"},{"text":"⏰ 3541. 找到频率最高的元音和辅音【简单】","link":"/notes/3541. 找到频率最高的元音和辅音【简单】/README"},{"text":"⏰ 3542. 将所有元素变为 0 的最少操作次数【中等】","link":"/notes/3542. 将所有元素变为 0 的最少操作次数【中等】/README"},{"text":"⏰ 3543. K 条边路径的最大边权和【中等】","link":"/notes/3543. K 条边路径的最大边权和【中等】/README"},{"text":"⏰ 3544. 子树反转和【困难】","link":"/notes/3544. 子树反转和【困难】/README"},{"text":"⏰ 3545. 不同字符数量最多为 K 时的最少删除数【简单】","link":"/notes/3545. 不同字符数量最多为 K 时的最少删除数【简单】/README"},{"text":"⏰ 3546. 等和矩阵分割 I【中等】","link":"/notes/3546. 等和矩阵分割 I【中等】/README"},{"text":"⏰ 3547. 图中边值的最大和【困难】","link":"/notes/3547. 图中边值的最大和【困难】/README"},{"text":"⏰ 3548. 等和矩阵分割 II【困难】","link":"/notes/3548. 等和矩阵分割 II【困难】/README"},{"text":"⏰ 3549. 两个多项式相乘【困难】","link":"/notes/3549. 两个多项式相乘【困难】/README"},{"text":"⏰ 3550. 数位和等于下标的最小下标【简单】","link":"/notes/3550. 数位和等于下标的最小下标【简单】/README"},{"text":"⏰ 3551. 数位和排序需要的最小交换次数【中等】","link":"/notes/3551. 数位和排序需要的最小交换次数【中等】/README"},{"text":"⏰ 3552. 网格传送门旅游【中等】","link":"/notes/3552. 网格传送门旅游【中等】/README"},{"text":"⏰ 3553. 包含给定路径的最小带权子树 II【困难】","link":"/notes/3553. 包含给定路径的最小带权子树 II【困难】/README"},{"text":"⏰ 3554. 查找类别推荐对【困难】","link":"/notes/3554. 查找类别推荐对【困难】/README"},{"text":"⏰ 3555. 排序每个滑动窗口中最小的子数组【中等】","link":"/notes/3555. 排序每个滑动窗口中最小的子数组【中等】/README"},{"text":"⏰ 3556. 最大质数子字符串之和【中等】","link":"/notes/3556. 最大质数子字符串之和【中等】/README"},{"text":"⏰ 3557. 不相交子字符串的最大数量【中等】","link":"/notes/3557. 不相交子字符串的最大数量【中等】/README"},{"text":"⏰ 3558. 给边赋权值的方案数 I【中等】","link":"/notes/3558. 给边赋权值的方案数 I【中等】/README"},{"text":"⏰ 3559. 给边赋权值的方案数 II【困难】","link":"/notes/3559. 给边赋权值的方案数 II【困难】/README"},{"text":"⏰ 3560. 木材运输的最小成本【简单】","link":"/notes/3560. 木材运输的最小成本【简单】/README"},{"text":"⏰ 3561. 移除相邻字符【中等】","link":"/notes/3561. 移除相邻字符【中等】/README"},{"text":"⏰ 3562. 折扣价交易股票的最大利润【困难】","link":"/notes/3562. 折扣价交易股票的最大利润【困难】/README"},{"text":"⏰ 3563. 移除相邻字符后字典序最小的字符串【困难】","link":"/notes/3563. 移除相邻字符后字典序最小的字符串【困难】/README"},{"text":"⏰ 3564. 季节性销售分析【中等】","link":"/notes/3564. 季节性销售分析【中等】/README"}]},{"text":"38. 3601-3700","collapsed":true,"items":[{"text":"⏰ 3606. 优惠券校验器","link":"/notes/3606. 优惠券校验器/README"}]}],"socialLinks":[{"ariaLabel":"Tdahuyou 语雀主页链接","link":"https://www.yuque.com/tdahuyou","icon":{"svg":"<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"24\\" viewBox=\\"0 0 24 24\\"><path fill=\\"currentColor\\" d=\\"M17.28 2.955c2.97.203 3.756 2.342 3.84 2.597l1.297.096c.13 0 .169.18.054.236c-1.323.716-1.727 2.17-1.49 3.118c.09.358.254.69.412 1.02c.307.642.651 1.418.707 2.981c.117 3.24-2.51 6.175-5.789 6.593c1.17-1.187 1.815-2.444 2.12-3.375c.606-1.846.508-3.316.055-4.44a4.46 4.46 0 0 0-1.782-2.141c-1.683-1.02-3.22-1.09-4.444-.762c.465-.594.876-1.201 1.2-1.864c.584-1.65-.102-2.848-.704-3.519c-.192-.246-.061-.655.305-.655c1.41 0 2.813.02 4.22.115M3.32 19.107c1.924-2.202 4.712-5.394 7.162-8.15c.559-.63 2.769-2.338 5.748-.533c.878.532 2.43 2.165 1.332 5.51c-.803 2.446-4.408 7.796-15.76 5.844c-.227-.039-.511-.354-.218-.687z\\"/></svg>"}},{"ariaLabel":"Tdahuyou B 站主页链接","link":"https://space.bilibili.com/407241004","icon":{"svg":"<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"1024\\" height=\\"1024\\" viewBox=\\"0 0 1024 1024\\"><g fill=\\"currentColor\\"><path d=\\"M310.134 596.45c-7.999-4.463-16.498-8.43-24.997-11.9a274 274 0 0 0-26.996-7.438c-2.5-.992-2.5.991-2.5 1.487c0 7.934.5 18.843 1.5 27.768c1 7.438 2 15.372 4 22.81c0 .496 0 .991.5 1.487c.999.992 1.999 1.488 2.999.496c7.999-4.463 15.998-8.43 22.997-13.388c7.499-5.454 15.498-11.9 21.997-18.347c1.5-1.487 0-2.479.5-2.975m323.96-11.9a274 274 0 0 0-26.997-7.438c-2.5-.992-2.5.991-2.5 1.487c0 7.934.5 18.843 1.5 27.768c1 7.438 2 15.372 4 22.81c0 .496 0 .991.5 1.487c1 .992 2 1.488 3 .496c7.999-4.463 15.998-8.43 22.997-13.388c7.499-5.454 15.498-11.9 21.997-18.347c2-1.487.5-2.479.5-2.975c-7.5-4.463-16.498-8.43-24.997-11.9\\"/><path d=\\"M741.496 112H283c-94.501 0-171 76.5-171 171.5v458c.5 94 77 170.5 170.999 170.5h457.997c94.5 0 171.002-76.5 171.002-170.5v-458c.497-95-76.002-171.5-170.502-171.5m95 343.5h15.5v48h-15.5zm-95.5-1.5l2 43l-13.5 1.5l-5-44.5zm-23.5 0l4 45.5l-14.5 1.5l-6.5-47.5h17zm-230.498 1.5h15v48h-15zm-96-1.5l2 43l-13.5 1.5l-5-44.5zm-23.5 0l4 45.5l-14.5 2l-6-47.5zm-3.5 149C343.498 668.5 216 662.5 204.5 660.5C195.5 499 181.5 464 170 385l54.5-22.5c1 71.5 9 185 9 185s108.5-15.5 132 47c.5 3 0 6-1.5 8.5m20.5 35.5l-23.5-124h35.5l13 123zm44.5-8l-27-235l33.5-1.5l21 236H429zm34-175h17.5v48H467zm41 190h-26.5l-9.5-126h36zm209.998-43C693.496 668 565.997 662 554.497 660c-9-161-23-196-34.5-275l54.5-22.5c1 71.5 9 185 9 185s108.5-15.5 132 46.5c.5 3 0 6-1.5 8.5m19.5 36l-23-124h35.5l13 123zm45.5-8l-27.5-235l33.5-1.5l21 236h-27zm33.5-175h17.5v48h-13zm41 190h-26.5l-9.5-126h36z\\"/></g></svg>"}},{"ariaLabel":"TNotes.leetcode github 仓库链接","link":"https://github.com/Tdahuyou/TNotes.leetcode","icon":"github"}]},"locales":{},"scrollOffset":134,"cleanUrls":true}'));
const __vite_import_meta_env__ = {};
const EXTERNAL_URL_RE = /^(?:[a-z]+:|\/\/)/i;
const APPEARANCE_KEY = "vitepress-theme-appearance";
const HASH_RE = /#.*$/;
const HASH_OR_QUERY_RE = /[?#].*$/;
const INDEX_OR_EXT_RE = /(?:(^|\/)index)?\.(?:md|html)$/;
const inBrowser = typeof document !== "undefined";
const notFoundPageData = {
  relativePath: "404.md",
  filePath: "",
  title: "404",
  description: "Not Found",
  headers: [],
  frontmatter: { sidebar: false, layout: "page" },
  lastUpdated: 0,
  isNotFound: true
};
function isActive(currentPath, matchPath, asRegex = false) {
  if (matchPath === void 0) {
    return false;
  }
  currentPath = normalize(`/${currentPath}`);
  if (asRegex) {
    return new RegExp(matchPath).test(currentPath);
  }
  if (normalize(matchPath) !== currentPath) {
    return false;
  }
  const hashMatch = matchPath.match(HASH_RE);
  if (hashMatch) {
    return (inBrowser ? location.hash : "") === hashMatch[0];
  }
  return true;
}
function normalize(path) {
  return decodeURI(path).replace(HASH_OR_QUERY_RE, "").replace(INDEX_OR_EXT_RE, "$1");
}
function isExternal(path) {
  return EXTERNAL_URL_RE.test(path);
}
function getLocaleForPath(siteData2, relativePath) {
  return Object.keys((siteData2 == null ? void 0 : siteData2.locales) || {}).find((key) => key !== "root" && !isExternal(key) && isActive(relativePath, `/${key}/`, true)) || "root";
}
function resolveSiteDataByRoute(siteData2, relativePath) {
  var _a, _b, _c, _d, _e, _f, _g;
  const localeIndex = getLocaleForPath(siteData2, relativePath);
  return Object.assign({}, siteData2, {
    localeIndex,
    lang: ((_a = siteData2.locales[localeIndex]) == null ? void 0 : _a.lang) ?? siteData2.lang,
    dir: ((_b = siteData2.locales[localeIndex]) == null ? void 0 : _b.dir) ?? siteData2.dir,
    title: ((_c = siteData2.locales[localeIndex]) == null ? void 0 : _c.title) ?? siteData2.title,
    titleTemplate: ((_d = siteData2.locales[localeIndex]) == null ? void 0 : _d.titleTemplate) ?? siteData2.titleTemplate,
    description: ((_e = siteData2.locales[localeIndex]) == null ? void 0 : _e.description) ?? siteData2.description,
    head: mergeHead(siteData2.head, ((_f = siteData2.locales[localeIndex]) == null ? void 0 : _f.head) ?? []),
    themeConfig: {
      ...siteData2.themeConfig,
      ...(_g = siteData2.locales[localeIndex]) == null ? void 0 : _g.themeConfig
    }
  });
}
function createTitle(siteData2, pageData) {
  const title = pageData.title || siteData2.title;
  const template = pageData.titleTemplate ?? siteData2.titleTemplate;
  if (typeof template === "string" && template.includes(":title")) {
    return template.replace(/:title/g, title);
  }
  const templateString = createTitleTemplate(siteData2.title, template);
  if (title === templateString.slice(3)) {
    return title;
  }
  return `${title}${templateString}`;
}
function createTitleTemplate(siteTitle, template) {
  if (template === false) {
    return "";
  }
  if (template === true || template === void 0) {
    return ` | ${siteTitle}`;
  }
  if (siteTitle === template) {
    return "";
  }
  return ` | ${template}`;
}
function hasTag(head, tag) {
  const [tagType, tagAttrs] = tag;
  if (tagType !== "meta")
    return false;
  const keyAttr = Object.entries(tagAttrs)[0];
  if (keyAttr == null)
    return false;
  return head.some(([type, attrs]) => type === tagType && attrs[keyAttr[0]] === keyAttr[1]);
}
function mergeHead(prev, curr) {
  return [...prev.filter((tagAttrs) => !hasTag(curr, tagAttrs)), ...curr];
}
const INVALID_CHAR_REGEX = /[\u0000-\u001F"#$&*+,:;<=>?[\]^`{|}\u007F]/g;
const DRIVE_LETTER_REGEX = /^[a-z]:/i;
function sanitizeFileName(name) {
  const match = DRIVE_LETTER_REGEX.exec(name);
  const driveLetter = match ? match[0] : "";
  return driveLetter + name.slice(driveLetter.length).replace(INVALID_CHAR_REGEX, "_").replace(/(^|\/)_+(?=[^/]*$)/, "$1");
}
const KNOWN_EXTENSIONS = /* @__PURE__ */ new Set();
function treatAsHtml(filename) {
  var _a;
  if (KNOWN_EXTENSIONS.size === 0) {
    const extraExts = typeof process === "object" && ((_a = process.env) == null ? void 0 : _a.VITE_EXTRA_EXTENSIONS) || (__vite_import_meta_env__ == null ? void 0 : __vite_import_meta_env__.VITE_EXTRA_EXTENSIONS) || "";
    ("3g2,3gp,aac,ai,apng,au,avif,bin,bmp,cer,class,conf,crl,css,csv,dll,doc,eps,epub,exe,gif,gz,ics,ief,jar,jpe,jpeg,jpg,js,json,jsonld,m4a,man,mid,midi,mjs,mov,mp2,mp3,mp4,mpe,mpeg,mpg,mpp,oga,ogg,ogv,ogx,opus,otf,p10,p7c,p7m,p7s,pdf,png,ps,qt,roff,rtf,rtx,ser,svg,t,tif,tiff,tr,ts,tsv,ttf,txt,vtt,wav,weba,webm,webp,woff,woff2,xhtml,xml,yaml,yml,zip" + (extraExts && typeof extraExts === "string" ? "," + extraExts : "")).split(",").forEach((ext2) => KNOWN_EXTENSIONS.add(ext2));
  }
  const ext = filename.split(".").pop();
  return ext == null || !KNOWN_EXTENSIONS.has(ext.toLowerCase());
}
function escapeRegExp(str) {
  return str.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
}
const dataSymbol = Symbol();
const siteDataRef = shallowRef(siteData);
function initData(route) {
  const site = computed(() => resolveSiteDataByRoute(siteDataRef.value, route.data.relativePath));
  const appearance = site.value.appearance;
  const isDark = appearance === "force-dark" ? ref(true) : appearance === "force-auto" ? usePreferredDark() : appearance ? useDark({
    storageKey: APPEARANCE_KEY,
    initialValue: () => appearance === "dark" ? "dark" : "auto",
    ...typeof appearance === "object" ? appearance : {}
  }) : ref(false);
  const hashRef = ref(inBrowser ? location.hash : "");
  if (inBrowser) {
    window.addEventListener("hashchange", () => {
      hashRef.value = location.hash;
    });
  }
  watch(() => route.data, () => {
    hashRef.value = inBrowser ? location.hash : "";
  });
  return {
    site,
    theme: computed(() => site.value.themeConfig),
    page: computed(() => route.data),
    frontmatter: computed(() => route.data.frontmatter),
    params: computed(() => route.data.params),
    lang: computed(() => site.value.lang),
    dir: computed(() => route.data.frontmatter.dir || site.value.dir),
    localeIndex: computed(() => site.value.localeIndex || "root"),
    title: computed(() => createTitle(site.value, route.data)),
    description: computed(() => route.data.description || site.value.description),
    isDark,
    hash: computed(() => hashRef.value)
  };
}
function useData$1() {
  const data2 = inject(dataSymbol);
  if (!data2) {
    throw new Error("vitepress data not properly injected in app");
  }
  return data2;
}
function joinPath(base, path) {
  return `${base}${path}`.replace(/\/+/g, "/");
}
function withBase(path) {
  return EXTERNAL_URL_RE.test(path) || !path.startsWith("/") ? path : joinPath(siteDataRef.value.base, path);
}
function pathToFile(path) {
  let pagePath = path.replace(/\.html$/, "");
  pagePath = decodeURIComponent(pagePath);
  pagePath = pagePath.replace(/\/$/, "/index");
  {
    if (inBrowser) {
      const base = "/TNotes.leetcode/";
      pagePath = sanitizeFileName(pagePath.slice(base.length).replace(/\//g, "_") || "index") + ".md";
      let pageHash = __VP_HASH_MAP__[pagePath.toLowerCase()];
      if (!pageHash) {
        pagePath = pagePath.endsWith("_index.md") ? pagePath.slice(0, -9) + ".md" : pagePath.slice(0, -3) + "_index.md";
        pageHash = __VP_HASH_MAP__[pagePath.toLowerCase()];
      }
      if (!pageHash)
        return null;
      pagePath = `${base}${"assets"}/${pagePath}.${pageHash}.js`;
    } else {
      pagePath = `./${sanitizeFileName(pagePath.slice(1).replace(/\//g, "_"))}.md.js`;
    }
  }
  return pagePath;
}
let contentUpdatedCallbacks = [];
function onContentUpdated(fn) {
  contentUpdatedCallbacks.push(fn);
  onUnmounted(() => {
    contentUpdatedCallbacks = contentUpdatedCallbacks.filter((f) => f !== fn);
  });
}
function getScrollOffset() {
  let scrollOffset = siteDataRef.value.scrollOffset;
  let offset = 0;
  let padding = 24;
  if (typeof scrollOffset === "object" && "padding" in scrollOffset) {
    padding = scrollOffset.padding;
    scrollOffset = scrollOffset.selector;
  }
  if (typeof scrollOffset === "number") {
    offset = scrollOffset;
  } else if (typeof scrollOffset === "string") {
    offset = tryOffsetSelector(scrollOffset, padding);
  } else if (Array.isArray(scrollOffset)) {
    for (const selector of scrollOffset) {
      const res = tryOffsetSelector(selector, padding);
      if (res) {
        offset = res;
        break;
      }
    }
  }
  return offset;
}
function tryOffsetSelector(selector, padding) {
  const el = document.querySelector(selector);
  if (!el)
    return 0;
  const bot = el.getBoundingClientRect().bottom;
  if (bot < 0)
    return 0;
  return bot + padding;
}
const RouterSymbol = Symbol();
const fakeHost = "http://a.com";
const getDefaultRoute = () => ({
  path: "/",
  component: null,
  data: notFoundPageData
});
function createRouter(loadPageModule, fallbackComponent) {
  const route = reactive(getDefaultRoute());
  const router = {
    route,
    go
  };
  async function go(href = inBrowser ? location.href : "/") {
    var _a, _b;
    href = normalizeHref(href);
    if (await ((_a = router.onBeforeRouteChange) == null ? void 0 : _a.call(router, href)) === false)
      return;
    if (inBrowser && href !== normalizeHref(location.href)) {
      history.replaceState({ scrollPosition: window.scrollY }, "");
      history.pushState({}, "", href);
    }
    await loadPage(href);
    await ((_b = router.onAfterRouteChange ?? router.onAfterRouteChanged) == null ? void 0 : _b(href));
  }
  let latestPendingPath = null;
  async function loadPage(href, scrollPosition = 0, isRetry = false) {
    var _a, _b;
    if (await ((_a = router.onBeforePageLoad) == null ? void 0 : _a.call(router, href)) === false)
      return;
    const targetLoc = new URL(href, fakeHost);
    const pendingPath = latestPendingPath = targetLoc.pathname;
    try {
      let page = await loadPageModule(pendingPath);
      if (!page) {
        throw new Error(`Page not found: ${pendingPath}`);
      }
      if (latestPendingPath === pendingPath) {
        latestPendingPath = null;
        const { default: comp, __pageData } = page;
        if (!comp) {
          throw new Error(`Invalid route component: ${comp}`);
        }
        await ((_b = router.onAfterPageLoad) == null ? void 0 : _b.call(router, href));
        route.path = inBrowser ? pendingPath : withBase(pendingPath);
        route.component = markRaw(comp);
        route.data = true ? markRaw(__pageData) : readonly(__pageData);
        if (inBrowser) {
          nextTick(() => {
            let actualPathname = siteDataRef.value.base + __pageData.relativePath.replace(/(?:(^|\/)index)?\.md$/, "$1");
            if (!siteDataRef.value.cleanUrls && !actualPathname.endsWith("/")) {
              actualPathname += ".html";
            }
            if (actualPathname !== targetLoc.pathname) {
              targetLoc.pathname = actualPathname;
              href = actualPathname + targetLoc.search + targetLoc.hash;
              history.replaceState({}, "", href);
            }
            if (targetLoc.hash && !scrollPosition) {
              let target = null;
              try {
                target = document.getElementById(decodeURIComponent(targetLoc.hash).slice(1));
              } catch (e) {
                console.warn(e);
              }
              if (target) {
                scrollTo(target, targetLoc.hash);
                return;
              }
            }
            window.scrollTo(0, scrollPosition);
          });
        }
      }
    } catch (err) {
      if (!/fetch|Page not found/.test(err.message) && !/^\/404(\.html|\/)?$/.test(href)) {
        console.error(err);
      }
      if (!isRetry) {
        try {
          const res = await fetch(siteDataRef.value.base + "hashmap.json");
          window.__VP_HASH_MAP__ = await res.json();
          await loadPage(href, scrollPosition, true);
          return;
        } catch (e) {
        }
      }
      if (latestPendingPath === pendingPath) {
        latestPendingPath = null;
        route.path = inBrowser ? pendingPath : withBase(pendingPath);
        route.component = fallbackComponent ? markRaw(fallbackComponent) : null;
        const relativePath = inBrowser ? pendingPath.replace(/(^|\/)$/, "$1index").replace(/(\.html)?$/, ".md").replace(/^\//, "") : "404.md";
        route.data = { ...notFoundPageData, relativePath };
      }
    }
  }
  if (inBrowser) {
    if (history.state === null) {
      history.replaceState({}, "");
    }
    window.addEventListener("click", (e) => {
      if (e.defaultPrevented || !(e.target instanceof Element) || e.target.closest("button") || // temporary fix for docsearch action buttons
      e.button !== 0 || e.ctrlKey || e.shiftKey || e.altKey || e.metaKey)
        return;
      const link2 = e.target.closest("a");
      if (!link2 || link2.closest(".vp-raw") || link2.hasAttribute("download") || link2.hasAttribute("target"))
        return;
      const linkHref = link2.getAttribute("href") ?? (link2 instanceof SVGAElement ? link2.getAttribute("xlink:href") : null);
      if (linkHref == null)
        return;
      const { href, origin, pathname, hash, search } = new URL(linkHref, link2.baseURI);
      const currentUrl = new URL(location.href);
      if (origin === currentUrl.origin && treatAsHtml(pathname)) {
        e.preventDefault();
        if (pathname === currentUrl.pathname && search === currentUrl.search) {
          if (hash !== currentUrl.hash) {
            history.pushState({}, "", href);
            window.dispatchEvent(new HashChangeEvent("hashchange", {
              oldURL: currentUrl.href,
              newURL: href
            }));
          }
          if (hash) {
            scrollTo(link2, hash, link2.classList.contains("header-anchor"));
          } else {
            window.scrollTo(0, 0);
          }
        } else {
          go(href);
        }
      }
    }, { capture: true });
    window.addEventListener("popstate", async (e) => {
      var _a;
      if (e.state === null)
        return;
      const href = normalizeHref(location.href);
      await loadPage(href, e.state && e.state.scrollPosition || 0);
      await ((_a = router.onAfterRouteChange ?? router.onAfterRouteChanged) == null ? void 0 : _a(href));
    });
    window.addEventListener("hashchange", (e) => {
      e.preventDefault();
    });
  }
  return router;
}
function useRouter() {
  const router = inject(RouterSymbol);
  if (!router) {
    throw new Error("useRouter() is called without provider.");
  }
  return router;
}
function useRoute() {
  return useRouter().route;
}
function scrollTo(el, hash, smooth = false) {
  let target = null;
  try {
    target = el.classList.contains("header-anchor") ? el : document.getElementById(decodeURIComponent(hash).slice(1));
  } catch (e) {
    console.warn(e);
  }
  if (target) {
    let scrollToTarget = function() {
      if (!smooth || Math.abs(targetTop - window.scrollY) > window.innerHeight)
        window.scrollTo(0, targetTop);
      else
        window.scrollTo({ left: 0, top: targetTop, behavior: "smooth" });
    };
    const targetPadding = parseInt(window.getComputedStyle(target).paddingTop, 10);
    const targetTop = window.scrollY + target.getBoundingClientRect().top - getScrollOffset() + targetPadding;
    requestAnimationFrame(scrollToTarget);
  }
}
function normalizeHref(href) {
  const url = new URL(href, fakeHost);
  url.pathname = url.pathname.replace(/(^|\/)index(\.html)?$/, "$1");
  if (siteDataRef.value.cleanUrls)
    url.pathname = url.pathname.replace(/\.html$/, "");
  else if (!url.pathname.endsWith("/") && !url.pathname.endsWith(".html"))
    url.pathname += ".html";
  return url.pathname + url.search + url.hash;
}
const runCbs = () => contentUpdatedCallbacks.forEach((fn) => fn());
const Content = defineComponent({
  name: "VitePressContent",
  props: {
    as: { type: [Object, String], default: "div" }
  },
  setup(props) {
    const route = useRoute();
    const { frontmatter, site } = useData$1();
    watch(frontmatter, runCbs, { deep: true, flush: "post" });
    return () => h(props.as, site.value.contentProps ?? { style: { position: "relative" } }, [
      route.component ? h(route.component, {
        onVnodeMounted: runCbs,
        onVnodeUpdated: runCbs,
        onVnodeUnmounted: runCbs
      }) : "404 Page Not Found"
    ]);
  }
});
const _sfc_main$1g = {
  __name: "Mermaid",
  __ssrInlineRender: true,
  props: {
    graph: {
      type: String,
      required: true
    },
    id: {
      type: String,
      required: true
    },
    class: {
      type: String,
      required: false,
      default: "mermaid"
    }
  },
  setup(__props) {
    const pluginSettings = ref({
      securityLevel: "loose",
      startOnLoad: false,
      externalDiagrams: []
    });
    const { page } = useData$1();
    const { frontmatter } = toRaw(page.value);
    const mermaidPageTheme = frontmatter.mermaidTheme || "";
    const props = __props;
    const svg = ref(null);
    let mut = null;
    onMounted(async () => {
      var _a;
      await init(pluginSettings.value.externalDiagrams);
      let settings = await import("./virtual_mermaid-config.CM0F1BUC.js");
      if (settings == null ? void 0 : settings.default) pluginSettings.value = settings.default;
      mut = new MutationObserver(async () => await renderChart());
      mut.observe(document.documentElement, { attributes: true });
      await renderChart();
      const hasImages = ((_a = /<img([\w\W]+?)>/.exec(decodeURIComponent(props.graph))) == null ? void 0 : _a.length) > 0;
      if (hasImages)
        setTimeout(() => {
          let imgElements = document.getElementsByTagName("img");
          let imgs = Array.from(imgElements);
          if (imgs.length) {
            Promise.all(
              imgs.filter((img) => !img.complete).map(
                (img) => new Promise((resolve) => {
                  img.onload = img.onerror = resolve;
                })
              )
            ).then(async () => {
              await renderChart();
            });
          }
        }, 100);
    });
    onUnmounted(() => mut.disconnect());
    const renderChart = async () => {
      const hasDarkClass = document.documentElement.classList.contains("dark");
      let mermaidConfig = {
        ...pluginSettings.value
      };
      if (mermaidPageTheme) mermaidConfig.theme = mermaidPageTheme;
      if (hasDarkClass) mermaidConfig.theme = "dark";
      let svgCode = await render$1(
        props.id,
        decodeURIComponent(props.graph),
        mermaidConfig
      );
      const salt = Math.random().toString(36).substring(7);
      svg.value = `${svgCode} <span style="display: none">${salt}</span>`;
    };
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: props.class
      }, _attrs))}>${svg.value ?? ""}</div>`);
    };
  }
};
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress-plugin-mermaid/dist/Mermaid.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
const _sfc_main$1f = /* @__PURE__ */ defineComponent({
  __name: "VPBadge",
  __ssrInlineRender: true,
  props: {
    text: {},
    type: { default: "tip" }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<span${ssrRenderAttrs(mergeProps({
        class: ["VPBadge", _ctx.type]
      }, _attrs))}>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, () => {
        _push(`${ssrInterpolate(_ctx.text)}`);
      }, _push, _parent);
      _push(`</span>`);
    };
  }
});
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPBadge.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
const _sfc_main$1e = /* @__PURE__ */ defineComponent({
  __name: "VPBackdrop",
  __ssrInlineRender: true,
  props: {
    show: { type: Boolean }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      if (_ctx.show) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPBackdrop" }, _attrs))} data-v-54a304ca></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPBackdrop.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
const VPBackdrop = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["__scopeId", "data-v-54a304ca"]]);
const useData = useData$1;
function throttleAndDebounce(fn, delay) {
  let timeoutId;
  let called = false;
  return () => {
    if (timeoutId)
      clearTimeout(timeoutId);
    if (!called) {
      fn();
      (called = true) && setTimeout(() => called = false, delay);
    } else
      timeoutId = setTimeout(fn, delay);
  };
}
function ensureStartingSlash(path) {
  return path.startsWith("/") ? path : `/${path}`;
}
function normalizeLink$1(url) {
  const { pathname, search, hash, protocol } = new URL(url, "http://a.com");
  if (isExternal(url) || url.startsWith("#") || !protocol.startsWith("http") || !treatAsHtml(pathname))
    return url;
  const { site } = useData();
  const normalizedPath = pathname.endsWith("/") || pathname.endsWith(".html") ? url : url.replace(/(?:(^\.+)\/)?.*$/, `$1${pathname.replace(/(\.md)?$/, site.value.cleanUrls ? "" : ".html")}${search}${hash}`);
  return withBase(normalizedPath);
}
function useLangs({ correspondingLink = false } = {}) {
  const { site, localeIndex, page, theme: theme2, hash } = useData();
  const currentLang = computed(() => {
    var _a, _b;
    return {
      label: (_a = site.value.locales[localeIndex.value]) == null ? void 0 : _a.label,
      link: ((_b = site.value.locales[localeIndex.value]) == null ? void 0 : _b.link) || (localeIndex.value === "root" ? "/" : `/${localeIndex.value}/`)
    };
  });
  const localeLinks = computed(() => Object.entries(site.value.locales).flatMap(([key, value]) => currentLang.value.label === value.label ? [] : {
    text: value.label,
    link: normalizeLink(value.link || (key === "root" ? "/" : `/${key}/`), theme2.value.i18nRouting !== false && correspondingLink, page.value.relativePath.slice(currentLang.value.link.length - 1), !site.value.cleanUrls) + hash.value
  }));
  return { localeLinks, currentLang };
}
function normalizeLink(link2, addPath, path, addExt) {
  return addPath ? link2.replace(/\/$/, "") + ensureStartingSlash(path.replace(/(^|\/)index\.md$/, "$1").replace(/\.md$/, addExt ? ".html" : "")) : link2;
}
const _sfc_main$1d = /* @__PURE__ */ defineComponent({
  __name: "NotFound",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    const { currentLang } = useLangs();
    return (_ctx, _push, _parent, _attrs) => {
      var _a, _b, _c, _d, _e;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "NotFound" }, _attrs))} data-v-6ff51ddd><p class="code" data-v-6ff51ddd>${ssrInterpolate(((_a = unref(theme2).notFound) == null ? void 0 : _a.code) ?? "404")}</p><h1 class="title" data-v-6ff51ddd>${ssrInterpolate(((_b = unref(theme2).notFound) == null ? void 0 : _b.title) ?? "PAGE NOT FOUND")}</h1><div class="divider" data-v-6ff51ddd></div><blockquote class="quote" data-v-6ff51ddd>${ssrInterpolate(((_c = unref(theme2).notFound) == null ? void 0 : _c.quote) ?? "But if you don't change your direction, and if you keep looking, you may end up where you are heading.")}</blockquote><div class="action" data-v-6ff51ddd><a class="link"${ssrRenderAttr("href", unref(withBase)(unref(currentLang).link))}${ssrRenderAttr("aria-label", ((_d = unref(theme2).notFound) == null ? void 0 : _d.linkLabel) ?? "go to home")} data-v-6ff51ddd>${ssrInterpolate(((_e = unref(theme2).notFound) == null ? void 0 : _e.linkText) ?? "Take me home")}</a></div></div>`);
    };
  }
});
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/NotFound.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
const NotFound = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["__scopeId", "data-v-6ff51ddd"]]);
function getSidebar(_sidebar, path) {
  if (Array.isArray(_sidebar))
    return addBase(_sidebar);
  if (_sidebar == null)
    return [];
  path = ensureStartingSlash(path);
  const dir = Object.keys(_sidebar).sort((a, b) => {
    return b.split("/").length - a.split("/").length;
  }).find((dir2) => {
    return path.startsWith(ensureStartingSlash(dir2));
  });
  const sidebar = dir ? _sidebar[dir] : [];
  return Array.isArray(sidebar) ? addBase(sidebar) : addBase(sidebar.items, sidebar.base);
}
function getSidebarGroups(sidebar) {
  const groups = [];
  let lastGroupIndex = 0;
  for (const index in sidebar) {
    const item = sidebar[index];
    if (item.items) {
      lastGroupIndex = groups.push(item);
      continue;
    }
    if (!groups[lastGroupIndex]) {
      groups.push({ items: [] });
    }
    groups[lastGroupIndex].items.push(item);
  }
  return groups;
}
function getFlatSideBarLinks(sidebar) {
  const links = [];
  function recursivelyExtractLinks(items) {
    for (const item of items) {
      if (item.text && item.link) {
        links.push({
          text: item.text,
          link: item.link,
          docFooterText: item.docFooterText
        });
      }
      if (item.items) {
        recursivelyExtractLinks(item.items);
      }
    }
  }
  recursivelyExtractLinks(sidebar);
  return links;
}
function hasActiveLink(path, items) {
  if (Array.isArray(items)) {
    return items.some((item) => hasActiveLink(path, item));
  }
  return isActive(path, items.link) ? true : items.items ? hasActiveLink(path, items.items) : false;
}
function addBase(items, _base) {
  return [...items].map((_item) => {
    const item = { ..._item };
    const base = item.base || _base;
    if (base && item.link)
      item.link = base + item.link;
    if (item.items)
      item.items = addBase(item.items, base);
    return item;
  });
}
function useSidebar() {
  const { frontmatter, page, theme: theme2 } = useData();
  const is960 = useMediaQuery("(min-width: 960px)");
  const isOpen = ref(false);
  const _sidebar = computed(() => {
    const sidebarConfig = theme2.value.sidebar;
    const relativePath = page.value.relativePath;
    return sidebarConfig ? getSidebar(sidebarConfig, relativePath) : [];
  });
  const sidebar = ref(_sidebar.value);
  watch(_sidebar, (next, prev) => {
    if (JSON.stringify(next) !== JSON.stringify(prev))
      sidebar.value = _sidebar.value;
  });
  const hasSidebar = computed(() => {
    return frontmatter.value.sidebar !== false && sidebar.value.length > 0 && frontmatter.value.layout !== "home";
  });
  const leftAside = computed(() => {
    if (hasAside)
      return frontmatter.value.aside == null ? theme2.value.aside === "left" : frontmatter.value.aside === "left";
    return false;
  });
  const hasAside = computed(() => {
    if (frontmatter.value.layout === "home")
      return false;
    if (frontmatter.value.aside != null)
      return !!frontmatter.value.aside;
    return theme2.value.aside !== false;
  });
  const isSidebarEnabled = computed(() => hasSidebar.value && is960.value);
  const sidebarGroups = computed(() => {
    return hasSidebar.value ? getSidebarGroups(sidebar.value) : [];
  });
  function open() {
    isOpen.value = true;
  }
  function close() {
    isOpen.value = false;
  }
  function toggle() {
    isOpen.value ? close() : open();
  }
  return {
    isOpen,
    sidebar,
    sidebarGroups,
    hasSidebar,
    hasAside,
    leftAside,
    isSidebarEnabled,
    open,
    close,
    toggle
  };
}
function useCloseSidebarOnEscape(isOpen, close) {
  let triggerElement;
  watchEffect(() => {
    triggerElement = isOpen.value ? document.activeElement : void 0;
  });
  onMounted(() => {
    window.addEventListener("keyup", onEscape);
  });
  onUnmounted(() => {
    window.removeEventListener("keyup", onEscape);
  });
  function onEscape(e) {
    if (e.key === "Escape" && isOpen.value) {
      close();
      triggerElement == null ? void 0 : triggerElement.focus();
    }
  }
}
function useSidebarControl(item) {
  const { page, hash } = useData();
  const collapsed = ref(false);
  const collapsible = computed(() => {
    return item.value.collapsed != null;
  });
  const isLink = computed(() => {
    return !!item.value.link;
  });
  const isActiveLink = ref(false);
  const updateIsActiveLink = () => {
    isActiveLink.value = isActive(page.value.relativePath, item.value.link);
  };
  watch([page, item, hash], updateIsActiveLink);
  onMounted(updateIsActiveLink);
  const hasActiveLink$1 = computed(() => {
    if (isActiveLink.value) {
      return true;
    }
    return item.value.items ? hasActiveLink(page.value.relativePath, item.value.items) : false;
  });
  const hasChildren = computed(() => {
    return !!(item.value.items && item.value.items.length);
  });
  watchEffect(() => {
    collapsed.value = !!(collapsible.value && item.value.collapsed);
  });
  watchPostEffect(() => {
    (isActiveLink.value || hasActiveLink$1.value) && (collapsed.value = false);
  });
  function toggle() {
    if (collapsible.value) {
      collapsed.value = !collapsed.value;
    }
  }
  return {
    collapsed,
    collapsible,
    isLink,
    isActiveLink,
    hasActiveLink: hasActiveLink$1,
    hasChildren,
    toggle
  };
}
function useAside() {
  const { hasSidebar } = useSidebar();
  const is960 = useMediaQuery("(min-width: 960px)");
  const is1280 = useMediaQuery("(min-width: 1280px)");
  const isAsideEnabled = computed(() => {
    if (!is1280.value && !is960.value) {
      return false;
    }
    return hasSidebar.value ? is1280.value : is960.value;
  });
  return {
    isAsideEnabled
  };
}
const ignoreRE = /\b(?:VPBadge|header-anchor|footnote-ref|ignore-header)\b/;
const resolvedHeaders = [];
function resolveTitle(theme2) {
  return typeof theme2.outline === "object" && !Array.isArray(theme2.outline) && theme2.outline.label || theme2.outlineTitle || "On this page";
}
function getHeaders(range) {
  const headers = [
    ...document.querySelectorAll(".VPDoc :where(h1,h2,h3,h4,h5,h6)")
  ].filter((el) => el.id && el.hasChildNodes()).map((el) => {
    const level = Number(el.tagName[1]);
    return {
      element: el,
      title: serializeHeader(el),
      link: "#" + el.id,
      level
    };
  });
  return resolveHeaders(headers, range);
}
function serializeHeader(h2) {
  let ret = "";
  for (const node of h2.childNodes) {
    if (node.nodeType === 1) {
      if (ignoreRE.test(node.className))
        continue;
      ret += node.textContent;
    } else if (node.nodeType === 3) {
      ret += node.textContent;
    }
  }
  return ret.trim();
}
function resolveHeaders(headers, range) {
  if (range === false) {
    return [];
  }
  const levelsRange = (typeof range === "object" && !Array.isArray(range) ? range.level : range) || 2;
  const [high, low] = typeof levelsRange === "number" ? [levelsRange, levelsRange] : levelsRange === "deep" ? [2, 6] : levelsRange;
  return buildTree(headers, high, low);
}
function useActiveAnchor(container, marker) {
  const { isAsideEnabled } = useAside();
  const onScroll = throttleAndDebounce(setActiveLink, 100);
  let prevActiveLink = null;
  onMounted(() => {
    requestAnimationFrame(setActiveLink);
    window.addEventListener("scroll", onScroll);
  });
  onUpdated(() => {
    activateLink(location.hash);
  });
  onUnmounted(() => {
    window.removeEventListener("scroll", onScroll);
  });
  function setActiveLink() {
    if (!isAsideEnabled.value) {
      return;
    }
    const scrollY = window.scrollY;
    const innerHeight = window.innerHeight;
    const offsetHeight = document.body.offsetHeight;
    const isBottom = Math.abs(scrollY + innerHeight - offsetHeight) < 1;
    const headers = resolvedHeaders.map(({ element, link: link2 }) => ({
      link: link2,
      top: getAbsoluteTop(element)
    })).filter(({ top }) => !Number.isNaN(top)).sort((a, b) => a.top - b.top);
    if (!headers.length) {
      activateLink(null);
      return;
    }
    if (scrollY < 1) {
      activateLink(null);
      return;
    }
    if (isBottom) {
      activateLink(headers[headers.length - 1].link);
      return;
    }
    let activeLink = null;
    for (const { link: link2, top } of headers) {
      if (top > scrollY + getScrollOffset() + 4) {
        break;
      }
      activeLink = link2;
    }
    activateLink(activeLink);
  }
  function activateLink(hash) {
    if (prevActiveLink) {
      prevActiveLink.classList.remove("active");
    }
    if (hash == null) {
      prevActiveLink = null;
    } else {
      prevActiveLink = container.value.querySelector(`a[href="${decodeURIComponent(hash)}"]`);
    }
    const activeLink = prevActiveLink;
    if (activeLink) {
      activeLink.classList.add("active");
      marker.value.style.top = activeLink.offsetTop + 39 + "px";
      marker.value.style.opacity = "1";
    } else {
      marker.value.style.top = "33px";
      marker.value.style.opacity = "0";
    }
  }
}
function getAbsoluteTop(element) {
  let offsetTop = 0;
  while (element !== document.body) {
    if (element === null) {
      return NaN;
    }
    offsetTop += element.offsetTop;
    element = element.offsetParent;
  }
  return offsetTop;
}
function buildTree(data2, min, max) {
  resolvedHeaders.length = 0;
  const result = [];
  const stack = [];
  data2.forEach((item) => {
    const node = { ...item, children: [] };
    let parent = stack[stack.length - 1];
    while (parent && parent.level >= node.level) {
      stack.pop();
      parent = stack[stack.length - 1];
    }
    if (node.element.classList.contains("ignore-header") || parent && "shouldIgnore" in parent) {
      stack.push({ level: node.level, shouldIgnore: true });
      return;
    }
    if (node.level > max || node.level < min)
      return;
    resolvedHeaders.push({ element: node.element, link: node.link });
    if (parent)
      parent.children.push(node);
    else
      result.push(node);
    stack.push(node);
  });
  return result;
}
const _sfc_main$1c = /* @__PURE__ */ defineComponent({
  __name: "VPDocOutlineItem",
  __ssrInlineRender: true,
  props: {
    headers: {},
    root: { type: Boolean }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_VPDocOutlineItem = resolveComponent("VPDocOutlineItem", true);
      _push(`<ul${ssrRenderAttrs(mergeProps({
        class: ["VPDocOutlineItem", _ctx.root ? "root" : "nested"]
      }, _attrs))} data-v-53c99d69><!--[-->`);
      ssrRenderList(_ctx.headers, ({ children, link: link2, title }) => {
        _push(`<li data-v-53c99d69><a class="outline-link"${ssrRenderAttr("href", link2)}${ssrRenderAttr("title", title)} data-v-53c99d69>${ssrInterpolate(title)}</a>`);
        if (children == null ? void 0 : children.length) {
          _push(ssrRenderComponent(_component_VPDocOutlineItem, { headers: children }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`</li>`);
      });
      _push(`<!--]--></ul>`);
    };
  }
});
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocOutlineItem.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
const VPDocOutlineItem = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["__scopeId", "data-v-53c99d69"]]);
const _sfc_main$1b = /* @__PURE__ */ defineComponent({
  __name: "VPDocAsideOutline",
  __ssrInlineRender: true,
  setup(__props) {
    const { frontmatter, theme: theme2 } = useData();
    const headers = shallowRef([]);
    onContentUpdated(() => {
      headers.value = getHeaders(frontmatter.value.outline ?? theme2.value.outline);
    });
    const container = ref();
    const marker = ref();
    useActiveAnchor(container, marker);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<nav${ssrRenderAttrs(mergeProps({
        "aria-labelledby": "doc-outline-aria-label",
        class: ["VPDocAsideOutline", { "has-outline": headers.value.length > 0 }],
        ref_key: "container",
        ref: container
      }, _attrs))} data-v-f610f197><div class="content" data-v-f610f197><div class="outline-marker" data-v-f610f197></div><div aria-level="2" class="outline-title" id="doc-outline-aria-label" role="heading" data-v-f610f197>${ssrInterpolate(unref(resolveTitle)(unref(theme2)))}</div>`);
      _push(ssrRenderComponent(VPDocOutlineItem, {
        headers: headers.value,
        root: true
      }, null, _parent));
      _push(`</div></nav>`);
    };
  }
});
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocAsideOutline.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
const VPDocAsideOutline = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["__scopeId", "data-v-f610f197"]]);
const _sfc_main$1a = /* @__PURE__ */ defineComponent({
  __name: "VPDocAsideCarbonAds",
  __ssrInlineRender: true,
  props: {
    carbonAds: {}
  },
  setup(__props) {
    const VPCarbonAds = () => null;
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPDocAsideCarbonAds" }, _attrs))}>`);
      _push(ssrRenderComponent(unref(VPCarbonAds), { "carbon-ads": _ctx.carbonAds }, null, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocAsideCarbonAds.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
const _sfc_main$19 = /* @__PURE__ */ defineComponent({
  __name: "VPDocAside",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPDocAside" }, _attrs))} data-v-cb998dce>`);
      ssrRenderSlot(_ctx.$slots, "aside-top", {}, null, _push, _parent);
      ssrRenderSlot(_ctx.$slots, "aside-outline-before", {}, null, _push, _parent);
      _push(ssrRenderComponent(VPDocAsideOutline, null, null, _parent));
      ssrRenderSlot(_ctx.$slots, "aside-outline-after", {}, null, _push, _parent);
      _push(`<div class="spacer" data-v-cb998dce></div>`);
      ssrRenderSlot(_ctx.$slots, "aside-ads-before", {}, null, _push, _parent);
      if (unref(theme2).carbonAds) {
        _push(ssrRenderComponent(_sfc_main$1a, {
          "carbon-ads": unref(theme2).carbonAds
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      ssrRenderSlot(_ctx.$slots, "aside-ads-after", {}, null, _push, _parent);
      ssrRenderSlot(_ctx.$slots, "aside-bottom", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
});
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocAside.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
const VPDocAside = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["__scopeId", "data-v-cb998dce"]]);
function useEditLink() {
  const { theme: theme2, page } = useData();
  return computed(() => {
    const { text = "Edit this page", pattern = "" } = theme2.value.editLink || {};
    let url;
    if (typeof pattern === "function") {
      url = pattern(page.value);
    } else {
      url = pattern.replace(/:path/g, page.value.filePath);
    }
    return { url, text };
  });
}
function usePrevNext() {
  const { page, theme: theme2, frontmatter } = useData();
  return computed(() => {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const sidebar = getSidebar(theme2.value.sidebar, page.value.relativePath);
    const links = getFlatSideBarLinks(sidebar);
    const candidates = uniqBy(links, (link2) => link2.link.replace(/[?#].*$/, ""));
    const index = candidates.findIndex((link2) => {
      return isActive(page.value.relativePath, link2.link);
    });
    const hidePrev = ((_a = theme2.value.docFooter) == null ? void 0 : _a.prev) === false && !frontmatter.value.prev || frontmatter.value.prev === false;
    const hideNext = ((_b = theme2.value.docFooter) == null ? void 0 : _b.next) === false && !frontmatter.value.next || frontmatter.value.next === false;
    return {
      prev: hidePrev ? void 0 : {
        text: (typeof frontmatter.value.prev === "string" ? frontmatter.value.prev : typeof frontmatter.value.prev === "object" ? frontmatter.value.prev.text : void 0) ?? ((_c = candidates[index - 1]) == null ? void 0 : _c.docFooterText) ?? ((_d = candidates[index - 1]) == null ? void 0 : _d.text),
        link: (typeof frontmatter.value.prev === "object" ? frontmatter.value.prev.link : void 0) ?? ((_e = candidates[index - 1]) == null ? void 0 : _e.link)
      },
      next: hideNext ? void 0 : {
        text: (typeof frontmatter.value.next === "string" ? frontmatter.value.next : typeof frontmatter.value.next === "object" ? frontmatter.value.next.text : void 0) ?? ((_f = candidates[index + 1]) == null ? void 0 : _f.docFooterText) ?? ((_g = candidates[index + 1]) == null ? void 0 : _g.text),
        link: (typeof frontmatter.value.next === "object" ? frontmatter.value.next.link : void 0) ?? ((_h = candidates[index + 1]) == null ? void 0 : _h.link)
      }
    };
  });
}
function uniqBy(array, keyFn) {
  const seen = /* @__PURE__ */ new Set();
  return array.filter((item) => {
    const k = keyFn(item);
    return seen.has(k) ? false : seen.add(k);
  });
}
const _sfc_main$18 = /* @__PURE__ */ defineComponent({
  __name: "VPLink",
  __ssrInlineRender: true,
  props: {
    tag: {},
    href: {},
    noIcon: { type: Boolean },
    target: {},
    rel: {}
  },
  setup(__props) {
    const props = __props;
    const tag = computed(() => props.tag ?? (props.href ? "a" : "span"));
    const isExternal2 = computed(
      () => props.href && EXTERNAL_URL_RE.test(props.href) || props.target === "_blank"
    );
    return (_ctx, _push, _parent, _attrs) => {
      ssrRenderVNode(_push, createVNode(resolveDynamicComponent(tag.value), mergeProps({
        class: ["VPLink", {
          link: _ctx.href,
          "vp-external-link-icon": isExternal2.value,
          "no-icon": _ctx.noIcon
        }],
        href: _ctx.href ? unref(normalizeLink$1)(_ctx.href) : void 0,
        target: _ctx.target ?? (isExternal2.value ? "_blank" : void 0),
        rel: _ctx.rel ?? (isExternal2.value ? "noreferrer" : void 0)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default")
            ];
          }
        }),
        _: 3
      }), _parent);
    };
  }
});
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPLink.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
const _sfc_main$17 = /* @__PURE__ */ defineComponent({
  __name: "VPDocFooterLastUpdated",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2, page, lang } = useData();
    const date = computed(
      () => new Date(page.value.lastUpdated)
    );
    const isoDatetime = computed(() => date.value.toISOString());
    const datetime = ref("");
    onMounted(() => {
      watchEffect(() => {
        var _a, _b, _c;
        datetime.value = new Intl.DateTimeFormat(
          ((_b = (_a = theme2.value.lastUpdated) == null ? void 0 : _a.formatOptions) == null ? void 0 : _b.forceLocale) ? lang.value : void 0,
          ((_c = theme2.value.lastUpdated) == null ? void 0 : _c.formatOptions) ?? {
            dateStyle: "short",
            timeStyle: "short"
          }
        ).format(date.value);
      });
    });
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      _push(`<p${ssrRenderAttrs(mergeProps({ class: "VPLastUpdated" }, _attrs))} data-v-1bb0c8a8>${ssrInterpolate(((_a = unref(theme2).lastUpdated) == null ? void 0 : _a.text) || unref(theme2).lastUpdatedText || "Last updated")}: <time${ssrRenderAttr("datetime", isoDatetime.value)} data-v-1bb0c8a8>${ssrInterpolate(datetime.value)}</time></p>`);
    };
  }
});
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocFooterLastUpdated.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
const VPDocFooterLastUpdated = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["__scopeId", "data-v-1bb0c8a8"]]);
const _sfc_main$16 = /* @__PURE__ */ defineComponent({
  __name: "VPDocFooter",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2, page, frontmatter } = useData();
    const editLink = useEditLink();
    const control = usePrevNext();
    const hasEditLink = computed(
      () => theme2.value.editLink && frontmatter.value.editLink !== false
    );
    const hasLastUpdated = computed(() => page.value.lastUpdated);
    const showFooter = computed(
      () => hasEditLink.value || hasLastUpdated.value || control.value.prev || control.value.next
    );
    return (_ctx, _push, _parent, _attrs) => {
      var _a, _b, _c, _d;
      if (showFooter.value) {
        _push(`<footer${ssrRenderAttrs(mergeProps({ class: "VPDocFooter" }, _attrs))} data-v-1bcd8184>`);
        ssrRenderSlot(_ctx.$slots, "doc-footer-before", {}, null, _push, _parent);
        if (hasEditLink.value || hasLastUpdated.value) {
          _push(`<div class="edit-info" data-v-1bcd8184>`);
          if (hasEditLink.value) {
            _push(`<div class="edit-link" data-v-1bcd8184>`);
            _push(ssrRenderComponent(_sfc_main$18, {
              class: "edit-link-button",
              href: unref(editLink).url,
              "no-icon": true
            }, {
              default: withCtx((_, _push2, _parent2, _scopeId) => {
                if (_push2) {
                  _push2(`<span class="vpi-square-pen edit-link-icon" data-v-1bcd8184${_scopeId}></span> ${ssrInterpolate(unref(editLink).text)}`);
                } else {
                  return [
                    createVNode("span", { class: "vpi-square-pen edit-link-icon" }),
                    createTextVNode(" " + toDisplayString(unref(editLink).text), 1)
                  ];
                }
              }),
              _: 1
            }, _parent));
            _push(`</div>`);
          } else {
            _push(`<!---->`);
          }
          if (hasLastUpdated.value) {
            _push(`<div class="last-updated" data-v-1bcd8184>`);
            _push(ssrRenderComponent(VPDocFooterLastUpdated, null, null, _parent));
            _push(`</div>`);
          } else {
            _push(`<!---->`);
          }
          _push(`</div>`);
        } else {
          _push(`<!---->`);
        }
        if (((_a = unref(control).prev) == null ? void 0 : _a.link) || ((_b = unref(control).next) == null ? void 0 : _b.link)) {
          _push(`<nav class="prev-next" aria-labelledby="doc-footer-aria-label" data-v-1bcd8184><span class="visually-hidden" id="doc-footer-aria-label" data-v-1bcd8184>Pager</span><div class="pager" data-v-1bcd8184>`);
          if ((_c = unref(control).prev) == null ? void 0 : _c.link) {
            _push(ssrRenderComponent(_sfc_main$18, {
              class: "pager-link prev",
              href: unref(control).prev.link
            }, {
              default: withCtx((_, _push2, _parent2, _scopeId) => {
                var _a2, _b2;
                if (_push2) {
                  _push2(`<span class="desc" data-v-1bcd8184${_scopeId}>${((_a2 = unref(theme2).docFooter) == null ? void 0 : _a2.prev) || "Previous page"}</span><span class="title" data-v-1bcd8184${_scopeId}>${unref(control).prev.text ?? ""}</span>`);
                } else {
                  return [
                    createVNode("span", {
                      class: "desc",
                      innerHTML: ((_b2 = unref(theme2).docFooter) == null ? void 0 : _b2.prev) || "Previous page"
                    }, null, 8, ["innerHTML"]),
                    createVNode("span", {
                      class: "title",
                      innerHTML: unref(control).prev.text
                    }, null, 8, ["innerHTML"])
                  ];
                }
              }),
              _: 1
            }, _parent));
          } else {
            _push(`<!---->`);
          }
          _push(`</div><div class="pager" data-v-1bcd8184>`);
          if ((_d = unref(control).next) == null ? void 0 : _d.link) {
            _push(ssrRenderComponent(_sfc_main$18, {
              class: "pager-link next",
              href: unref(control).next.link
            }, {
              default: withCtx((_, _push2, _parent2, _scopeId) => {
                var _a2, _b2;
                if (_push2) {
                  _push2(`<span class="desc" data-v-1bcd8184${_scopeId}>${((_a2 = unref(theme2).docFooter) == null ? void 0 : _a2.next) || "Next page"}</span><span class="title" data-v-1bcd8184${_scopeId}>${unref(control).next.text ?? ""}</span>`);
                } else {
                  return [
                    createVNode("span", {
                      class: "desc",
                      innerHTML: ((_b2 = unref(theme2).docFooter) == null ? void 0 : _b2.next) || "Next page"
                    }, null, 8, ["innerHTML"]),
                    createVNode("span", {
                      class: "title",
                      innerHTML: unref(control).next.text
                    }, null, 8, ["innerHTML"])
                  ];
                }
              }),
              _: 1
            }, _parent));
          } else {
            _push(`<!---->`);
          }
          _push(`</div></nav>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</footer>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocFooter.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
const VPDocFooter = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["__scopeId", "data-v-1bcd8184"]]);
const _sfc_main$15 = /* @__PURE__ */ defineComponent({
  __name: "VPDoc",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    const route = useRoute();
    const { hasSidebar, hasAside, leftAside } = useSidebar();
    const pageName = computed(
      () => route.path.replace(/[./]+/g, "_").replace(/_html$/, "")
    );
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Content = resolveComponent("Content");
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPDoc", { "has-sidebar": unref(hasSidebar), "has-aside": unref(hasAside) }]
      }, _attrs))} data-v-e6f2a212>`);
      ssrRenderSlot(_ctx.$slots, "doc-top", {}, null, _push, _parent);
      _push(`<div class="container" data-v-e6f2a212>`);
      if (unref(hasAside)) {
        _push(`<div class="${ssrRenderClass([{ "left-aside": unref(leftAside) }, "aside"])}" data-v-e6f2a212><div class="aside-curtain" data-v-e6f2a212></div><div class="aside-container" data-v-e6f2a212><div class="aside-content" data-v-e6f2a212>`);
        _push(ssrRenderComponent(VPDocAside, null, {
          "aside-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-top", {}, void 0, true)
              ];
            }
          }),
          "aside-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-bottom", {}, void 0, true)
              ];
            }
          }),
          "aside-outline-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-outline-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-outline-before", {}, void 0, true)
              ];
            }
          }),
          "aside-outline-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-outline-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-outline-after", {}, void 0, true)
              ];
            }
          }),
          "aside-ads-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-ads-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-ads-before", {}, void 0, true)
              ];
            }
          }),
          "aside-ads-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-ads-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-ads-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
        _push(`</div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="content" data-v-e6f2a212><div class="content-container" data-v-e6f2a212>`);
      ssrRenderSlot(_ctx.$slots, "doc-before", {}, null, _push, _parent);
      _push(`<main class="main" data-v-e6f2a212>`);
      _push(ssrRenderComponent(_component_Content, {
        class: ["vp-doc", [
          pageName.value,
          unref(theme2).externalLinkIcon && "external-link-icon-enabled"
        ]]
      }, null, _parent));
      _push(`</main>`);
      _push(ssrRenderComponent(VPDocFooter, null, {
        "doc-footer-before": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "doc-footer-before", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "doc-footer-before", {}, void 0, true)
            ];
          }
        }),
        _: 3
      }, _parent));
      ssrRenderSlot(_ctx.$slots, "doc-after", {}, null, _push, _parent);
      _push(`</div></div></div>`);
      ssrRenderSlot(_ctx.$slots, "doc-bottom", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
});
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDoc.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
const VPDoc = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["__scopeId", "data-v-e6f2a212"]]);
const _sfc_main$14 = /* @__PURE__ */ defineComponent({
  __name: "VPButton",
  __ssrInlineRender: true,
  props: {
    tag: {},
    size: { default: "medium" },
    theme: { default: "brand" },
    text: {},
    href: {},
    target: {},
    rel: {}
  },
  setup(__props) {
    const props = __props;
    const isExternal2 = computed(
      () => props.href && EXTERNAL_URL_RE.test(props.href)
    );
    const component = computed(() => {
      return props.tag || (props.href ? "a" : "button");
    });
    return (_ctx, _push, _parent, _attrs) => {
      ssrRenderVNode(_push, createVNode(resolveDynamicComponent(component.value), mergeProps({
        class: ["VPButton", [_ctx.size, _ctx.theme]],
        href: _ctx.href ? unref(normalizeLink$1)(_ctx.href) : void 0,
        target: props.target ?? (isExternal2.value ? "_blank" : void 0),
        rel: props.rel ?? (isExternal2.value ? "noreferrer" : void 0)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate(_ctx.text)}`);
          } else {
            return [
              createTextVNode(toDisplayString(_ctx.text), 1)
            ];
          }
        }),
        _: 1
      }), _parent);
    };
  }
});
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPButton.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
const VPButton = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["__scopeId", "data-v-93dc4167"]]);
const _sfc_main$13 = /* @__PURE__ */ defineComponent({
  ...{ inheritAttrs: false },
  __name: "VPImage",
  __ssrInlineRender: true,
  props: {
    image: {},
    alt: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      const _component_VPImage = resolveComponent("VPImage", true);
      if (_ctx.image) {
        _push(`<!--[-->`);
        if (typeof _ctx.image === "string" || "src" in _ctx.image) {
          _push(`<img${ssrRenderAttrs(mergeProps({ class: "VPImage" }, typeof _ctx.image === "string" ? _ctx.$attrs : { ..._ctx.image, ..._ctx.$attrs }, {
            src: unref(withBase)(typeof _ctx.image === "string" ? _ctx.image : _ctx.image.src),
            alt: _ctx.alt ?? (typeof _ctx.image === "string" ? "" : _ctx.image.alt || "")
          }))} data-v-ab19afbb>`);
        } else {
          _push(`<!--[-->`);
          _push(ssrRenderComponent(_component_VPImage, mergeProps({
            class: "dark",
            image: _ctx.image.dark,
            alt: _ctx.image.alt
          }, _ctx.$attrs), null, _parent));
          _push(ssrRenderComponent(_component_VPImage, mergeProps({
            class: "light",
            image: _ctx.image.light,
            alt: _ctx.image.alt
          }, _ctx.$attrs), null, _parent));
          _push(`<!--]-->`);
        }
        _push(`<!--]-->`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPImage.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
const VPImage = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["__scopeId", "data-v-ab19afbb"]]);
const _sfc_main$12 = /* @__PURE__ */ defineComponent({
  __name: "VPHero",
  __ssrInlineRender: true,
  props: {
    name: {},
    text: {},
    tagline: {},
    image: {},
    actions: {}
  },
  setup(__props) {
    const heroImageSlotExists = inject("hero-image-slot-exists");
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPHero", { "has-image": _ctx.image || unref(heroImageSlotExists) }]
      }, _attrs))} data-v-dd8814ff><div class="container" data-v-dd8814ff><div class="main" data-v-dd8814ff>`);
      ssrRenderSlot(_ctx.$slots, "home-hero-info-before", {}, null, _push, _parent);
      ssrRenderSlot(_ctx.$slots, "home-hero-info", {}, () => {
        _push(`<h1 class="heading" data-v-dd8814ff>`);
        if (_ctx.name) {
          _push(`<span class="name clip" data-v-dd8814ff>${_ctx.name ?? ""}</span>`);
        } else {
          _push(`<!---->`);
        }
        if (_ctx.text) {
          _push(`<span class="text" data-v-dd8814ff>${_ctx.text ?? ""}</span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</h1>`);
        if (_ctx.tagline) {
          _push(`<p class="tagline" data-v-dd8814ff>${_ctx.tagline ?? ""}</p>`);
        } else {
          _push(`<!---->`);
        }
      }, _push, _parent);
      ssrRenderSlot(_ctx.$slots, "home-hero-info-after", {}, null, _push, _parent);
      if (_ctx.actions) {
        _push(`<div class="actions" data-v-dd8814ff><!--[-->`);
        ssrRenderList(_ctx.actions, (action) => {
          _push(`<div class="action" data-v-dd8814ff>`);
          _push(ssrRenderComponent(VPButton, {
            tag: "a",
            size: "medium",
            theme: action.theme,
            text: action.text,
            href: action.link,
            target: action.target,
            rel: action.rel
          }, null, _parent));
          _push(`</div>`);
        });
        _push(`<!--]--></div>`);
      } else {
        _push(`<!---->`);
      }
      ssrRenderSlot(_ctx.$slots, "home-hero-actions-after", {}, null, _push, _parent);
      _push(`</div>`);
      if (_ctx.image || unref(heroImageSlotExists)) {
        _push(`<div class="image" data-v-dd8814ff><div class="image-container" data-v-dd8814ff><div class="image-bg" data-v-dd8814ff></div>`);
        ssrRenderSlot(_ctx.$slots, "home-hero-image", {}, () => {
          if (_ctx.image) {
            _push(ssrRenderComponent(VPImage, {
              class: "image-src",
              image: _ctx.image
            }, null, _parent));
          } else {
            _push(`<!---->`);
          }
        }, _push, _parent);
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPHero.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
const VPHero = /* @__PURE__ */ _export_sfc(_sfc_main$12, [["__scopeId", "data-v-dd8814ff"]]);
const _sfc_main$11 = /* @__PURE__ */ defineComponent({
  __name: "VPHomeHero",
  __ssrInlineRender: true,
  setup(__props) {
    const { frontmatter: fm } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(fm).hero) {
        _push(ssrRenderComponent(VPHero, mergeProps({
          class: "VPHomeHero",
          name: unref(fm).hero.name,
          text: unref(fm).hero.text,
          tagline: unref(fm).hero.tagline,
          image: unref(fm).hero.image,
          actions: unref(fm).hero.actions
        }, _attrs), {
          "home-hero-info-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info-before")
              ];
            }
          }),
          "home-hero-info": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info")
              ];
            }
          }),
          "home-hero-info-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info-after")
              ];
            }
          }),
          "home-hero-actions-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-actions-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-actions-after")
              ];
            }
          }),
          "home-hero-image": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-image", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-image")
              ];
            }
          }),
          _: 3
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPHomeHero.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
const _sfc_main$10 = /* @__PURE__ */ defineComponent({
  __name: "VPFeature",
  __ssrInlineRender: true,
  props: {
    icon: {},
    title: {},
    details: {},
    link: {},
    linkText: {},
    rel: {},
    target: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$18, mergeProps({
        class: "VPFeature",
        href: _ctx.link,
        rel: _ctx.rel,
        target: _ctx.target,
        "no-icon": true,
        tag: _ctx.link ? "a" : "div"
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<article class="box" data-v-bd37d1a2${_scopeId}>`);
            if (typeof _ctx.icon === "object" && _ctx.icon.wrap) {
              _push2(`<div class="icon" data-v-bd37d1a2${_scopeId}>`);
              _push2(ssrRenderComponent(VPImage, {
                image: _ctx.icon,
                alt: _ctx.icon.alt,
                height: _ctx.icon.height || 48,
                width: _ctx.icon.width || 48
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else if (typeof _ctx.icon === "object") {
              _push2(ssrRenderComponent(VPImage, {
                image: _ctx.icon,
                alt: _ctx.icon.alt,
                height: _ctx.icon.height || 48,
                width: _ctx.icon.width || 48
              }, null, _parent2, _scopeId));
            } else if (_ctx.icon) {
              _push2(`<div class="icon" data-v-bd37d1a2${_scopeId}>${_ctx.icon ?? ""}</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<h2 class="title" data-v-bd37d1a2${_scopeId}>${_ctx.title ?? ""}</h2>`);
            if (_ctx.details) {
              _push2(`<p class="details" data-v-bd37d1a2${_scopeId}>${_ctx.details ?? ""}</p>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.linkText) {
              _push2(`<div class="link-text" data-v-bd37d1a2${_scopeId}><p class="link-text-value" data-v-bd37d1a2${_scopeId}>${ssrInterpolate(_ctx.linkText)} <span class="vpi-arrow-right link-text-icon" data-v-bd37d1a2${_scopeId}></span></p></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</article>`);
          } else {
            return [
              createVNode("article", { class: "box" }, [
                typeof _ctx.icon === "object" && _ctx.icon.wrap ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "icon"
                }, [
                  createVNode(VPImage, {
                    image: _ctx.icon,
                    alt: _ctx.icon.alt,
                    height: _ctx.icon.height || 48,
                    width: _ctx.icon.width || 48
                  }, null, 8, ["image", "alt", "height", "width"])
                ])) : typeof _ctx.icon === "object" ? (openBlock(), createBlock(VPImage, {
                  key: 1,
                  image: _ctx.icon,
                  alt: _ctx.icon.alt,
                  height: _ctx.icon.height || 48,
                  width: _ctx.icon.width || 48
                }, null, 8, ["image", "alt", "height", "width"])) : _ctx.icon ? (openBlock(), createBlock("div", {
                  key: 2,
                  class: "icon",
                  innerHTML: _ctx.icon
                }, null, 8, ["innerHTML"])) : createCommentVNode("", true),
                createVNode("h2", {
                  class: "title",
                  innerHTML: _ctx.title
                }, null, 8, ["innerHTML"]),
                _ctx.details ? (openBlock(), createBlock("p", {
                  key: 3,
                  class: "details",
                  innerHTML: _ctx.details
                }, null, 8, ["innerHTML"])) : createCommentVNode("", true),
                _ctx.linkText ? (openBlock(), createBlock("div", {
                  key: 4,
                  class: "link-text"
                }, [
                  createVNode("p", { class: "link-text-value" }, [
                    createTextVNode(toDisplayString(_ctx.linkText) + " ", 1),
                    createVNode("span", { class: "vpi-arrow-right link-text-icon" })
                  ])
                ])) : createCommentVNode("", true)
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPFeature.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
const VPFeature = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["__scopeId", "data-v-bd37d1a2"]]);
const _sfc_main$$ = /* @__PURE__ */ defineComponent({
  __name: "VPFeatures",
  __ssrInlineRender: true,
  props: {
    features: {}
  },
  setup(__props) {
    const props = __props;
    const grid = computed(() => {
      const length = props.features.length;
      if (!length) {
        return;
      } else if (length === 2) {
        return "grid-2";
      } else if (length === 3) {
        return "grid-3";
      } else if (length % 3 === 0) {
        return "grid-6";
      } else if (length > 3) {
        return "grid-4";
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (_ctx.features) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPFeatures" }, _attrs))} data-v-b1eea84a><div class="container" data-v-b1eea84a><div class="items" data-v-b1eea84a><!--[-->`);
        ssrRenderList(_ctx.features, (feature) => {
          _push(`<div class="${ssrRenderClass([[grid.value], "item"])}" data-v-b1eea84a>`);
          _push(ssrRenderComponent(VPFeature, {
            icon: feature.icon,
            title: feature.title,
            details: feature.details,
            link: feature.link,
            "link-text": feature.linkText,
            rel: feature.rel,
            target: feature.target
          }, null, _parent));
          _push(`</div>`);
        });
        _push(`<!--]--></div></div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPFeatures.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
const VPFeatures = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["__scopeId", "data-v-b1eea84a"]]);
const _sfc_main$_ = /* @__PURE__ */ defineComponent({
  __name: "VPHomeFeatures",
  __ssrInlineRender: true,
  setup(__props) {
    const { frontmatter: fm } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(fm).features) {
        _push(ssrRenderComponent(VPFeatures, mergeProps({
          class: "VPHomeFeatures",
          features: unref(fm).features
        }, _attrs), null, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPHomeFeatures.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
const _sfc_main$Z = /* @__PURE__ */ defineComponent({
  __name: "VPHomeContent",
  __ssrInlineRender: true,
  setup(__props) {
    const { width: vw } = useWindowSize({
      initialWidth: 0,
      includeScrollbar: false
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "vp-doc container",
        style: unref(vw) ? { "--vp-offset": `calc(50% - ${unref(vw) / 2}px)` } : {}
      }, _attrs))} data-v-c141a4bd>`);
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
});
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPHomeContent.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
const VPHomeContent = /* @__PURE__ */ _export_sfc(_sfc_main$Z, [["__scopeId", "data-v-c141a4bd"]]);
const _sfc_main$Y = /* @__PURE__ */ defineComponent({
  __name: "VPHome",
  __ssrInlineRender: true,
  setup(__props) {
    const { frontmatter, theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Content = resolveComponent("Content");
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPHome", {
          "external-link-icon-enabled": unref(theme2).externalLinkIcon
        }]
      }, _attrs))} data-v-e07eaea7>`);
      ssrRenderSlot(_ctx.$slots, "home-hero-before", {}, null, _push, _parent);
      _push(ssrRenderComponent(_sfc_main$11, null, {
        "home-hero-info-before": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "home-hero-info-before", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "home-hero-info-before", {}, void 0, true)
            ];
          }
        }),
        "home-hero-info": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "home-hero-info", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "home-hero-info", {}, void 0, true)
            ];
          }
        }),
        "home-hero-info-after": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "home-hero-info-after", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "home-hero-info-after", {}, void 0, true)
            ];
          }
        }),
        "home-hero-actions-after": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "home-hero-actions-after", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "home-hero-actions-after", {}, void 0, true)
            ];
          }
        }),
        "home-hero-image": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "home-hero-image", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "home-hero-image", {}, void 0, true)
            ];
          }
        }),
        _: 3
      }, _parent));
      ssrRenderSlot(_ctx.$slots, "home-hero-after", {}, null, _push, _parent);
      ssrRenderSlot(_ctx.$slots, "home-features-before", {}, null, _push, _parent);
      _push(ssrRenderComponent(_sfc_main$_, null, null, _parent));
      ssrRenderSlot(_ctx.$slots, "home-features-after", {}, null, _push, _parent);
      if (unref(frontmatter).markdownStyles !== false) {
        _push(ssrRenderComponent(VPHomeContent, null, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(ssrRenderComponent(_component_Content, null, null, _parent2, _scopeId));
            } else {
              return [
                createVNode(_component_Content)
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(ssrRenderComponent(_component_Content, null, null, _parent));
      }
      _push(`</div>`);
    };
  }
});
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPHome.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
const VPHome = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["__scopeId", "data-v-e07eaea7"]]);
const _sfc_main$X = {};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs) {
  const _component_Content = resolveComponent("Content");
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPPage" }, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "page-top", {}, null, _push, _parent);
  _push(ssrRenderComponent(_component_Content, null, null, _parent));
  ssrRenderSlot(_ctx.$slots, "page-bottom", {}, null, _push, _parent);
  _push(`</div>`);
}
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPPage.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
const VPPage = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["ssrRender", _sfc_ssrRender$1]]);
const _sfc_main$W = /* @__PURE__ */ defineComponent({
  __name: "VPContent",
  __ssrInlineRender: true,
  setup(__props) {
    const { page, frontmatter } = useData();
    const { hasSidebar } = useSidebar();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPContent", {
          "has-sidebar": unref(hasSidebar),
          "is-home": unref(frontmatter).layout === "home"
        }],
        id: "VPContent"
      }, _attrs))} data-v-9a6c75ad>`);
      if (unref(page).isNotFound) {
        ssrRenderSlot(_ctx.$slots, "not-found", {}, () => {
          _push(ssrRenderComponent(NotFound, null, null, _parent));
        }, _push, _parent);
      } else if (unref(frontmatter).layout === "page") {
        _push(ssrRenderComponent(VPPage, null, {
          "page-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "page-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "page-top", {}, void 0, true)
              ];
            }
          }),
          "page-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "page-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "page-bottom", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
      } else if (unref(frontmatter).layout === "home") {
        _push(ssrRenderComponent(VPHome, null, {
          "home-hero-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-before", {}, void 0, true)
              ];
            }
          }),
          "home-hero-info-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info-before", {}, void 0, true)
              ];
            }
          }),
          "home-hero-info": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info", {}, void 0, true)
              ];
            }
          }),
          "home-hero-info-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info-after", {}, void 0, true)
              ];
            }
          }),
          "home-hero-actions-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-actions-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-actions-after", {}, void 0, true)
              ];
            }
          }),
          "home-hero-image": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-image", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-image", {}, void 0, true)
              ];
            }
          }),
          "home-hero-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-after", {}, void 0, true)
              ];
            }
          }),
          "home-features-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-features-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-features-before", {}, void 0, true)
              ];
            }
          }),
          "home-features-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-features-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-features-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
      } else if (unref(frontmatter).layout && unref(frontmatter).layout !== "doc") {
        ssrRenderVNode(_push, createVNode(resolveDynamicComponent(unref(frontmatter).layout), null, null), _parent);
      } else {
        _push(ssrRenderComponent(VPDoc, null, {
          "doc-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-top", {}, void 0, true)
              ];
            }
          }),
          "doc-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-bottom", {}, void 0, true)
              ];
            }
          }),
          "doc-footer-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-footer-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-footer-before", {}, void 0, true)
              ];
            }
          }),
          "doc-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-before", {}, void 0, true)
              ];
            }
          }),
          "doc-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-after", {}, void 0, true)
              ];
            }
          }),
          "aside-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-top", {}, void 0, true)
              ];
            }
          }),
          "aside-outline-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-outline-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-outline-before", {}, void 0, true)
              ];
            }
          }),
          "aside-outline-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-outline-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-outline-after", {}, void 0, true)
              ];
            }
          }),
          "aside-ads-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-ads-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-ads-before", {}, void 0, true)
              ];
            }
          }),
          "aside-ads-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-ads-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-ads-after", {}, void 0, true)
              ];
            }
          }),
          "aside-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-bottom", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
      }
      _push(`</div>`);
    };
  }
});
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPContent.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
const VPContent = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["__scopeId", "data-v-9a6c75ad"]]);
const _sfc_main$V = /* @__PURE__ */ defineComponent({
  __name: "VPFooter",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2, frontmatter } = useData();
    const { hasSidebar } = useSidebar();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(theme2).footer && unref(frontmatter).footer !== false) {
        _push(`<footer${ssrRenderAttrs(mergeProps({
          class: ["VPFooter", { "has-sidebar": unref(hasSidebar) }]
        }, _attrs))} data-v-566314d4><div class="container" data-v-566314d4>`);
        if (unref(theme2).footer.message) {
          _push(`<p class="message" data-v-566314d4>${unref(theme2).footer.message ?? ""}</p>`);
        } else {
          _push(`<!---->`);
        }
        if (unref(theme2).footer.copyright) {
          _push(`<p class="copyright" data-v-566314d4>${unref(theme2).footer.copyright ?? ""}</p>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div></footer>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPFooter.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
const VPFooter = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["__scopeId", "data-v-566314d4"]]);
function useLocalNav() {
  const { theme: theme2, frontmatter } = useData();
  const headers = shallowRef([]);
  const hasLocalNav = computed(() => {
    return headers.value.length > 0;
  });
  onContentUpdated(() => {
    headers.value = getHeaders(frontmatter.value.outline ?? theme2.value.outline);
  });
  return {
    headers,
    hasLocalNav
  };
}
const _sfc_main$U = /* @__PURE__ */ defineComponent({
  __name: "VPLocalNavOutlineDropdown",
  __ssrInlineRender: true,
  props: {
    headers: {},
    navHeight: {}
  },
  setup(__props) {
    const { theme: theme2 } = useData();
    const open = ref(false);
    const vh = ref(0);
    const main = ref();
    ref();
    function closeOnClickOutside(e) {
      var _a;
      if (!((_a = main.value) == null ? void 0 : _a.contains(e.target))) {
        open.value = false;
      }
    }
    watch(open, (value) => {
      if (value) {
        document.addEventListener("click", closeOnClickOutside);
        return;
      }
      document.removeEventListener("click", closeOnClickOutside);
    });
    onKeyStroke("Escape", () => {
      open.value = false;
    });
    onContentUpdated(() => {
      open.value = false;
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "VPLocalNavOutlineDropdown",
        style: { "--vp-vh": vh.value + "px" },
        ref_key: "main",
        ref: main
      }, _attrs))} data-v-6b867909>`);
      if (_ctx.headers.length > 0) {
        _push(`<button class="${ssrRenderClass({ open: open.value })}" data-v-6b867909><span class="menu-text" data-v-6b867909>${ssrInterpolate(unref(resolveTitle)(unref(theme2)))}</span><span class="vpi-chevron-right icon" data-v-6b867909></span></button>`);
      } else {
        _push(`<button data-v-6b867909>${ssrInterpolate(unref(theme2).returnToTopLabel || "Return to top")}</button>`);
      }
      if (open.value) {
        _push(`<div class="items" data-v-6b867909><div class="header" data-v-6b867909><a class="top-link" href="#" data-v-6b867909>${ssrInterpolate(unref(theme2).returnToTopLabel || "Return to top")}</a></div><div class="outline" data-v-6b867909>`);
        _push(ssrRenderComponent(VPDocOutlineItem, { headers: _ctx.headers }, null, _parent));
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
});
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPLocalNavOutlineDropdown.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
const VPLocalNavOutlineDropdown = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["__scopeId", "data-v-6b867909"]]);
const _sfc_main$T = /* @__PURE__ */ defineComponent({
  __name: "VPLocalNav",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean }
  },
  emits: ["open-menu"],
  setup(__props) {
    const { theme: theme2, frontmatter } = useData();
    const { hasSidebar } = useSidebar();
    const { headers } = useLocalNav();
    const { y } = useWindowScroll();
    const navHeight = ref(0);
    onMounted(() => {
      navHeight.value = parseInt(
        getComputedStyle(document.documentElement).getPropertyValue(
          "--vp-nav-height"
        )
      );
    });
    onContentUpdated(() => {
      headers.value = getHeaders(frontmatter.value.outline ?? theme2.value.outline);
    });
    const empty = computed(() => {
      return headers.value.length === 0;
    });
    const emptyAndNoSidebar = computed(() => {
      return empty.value && !hasSidebar.value;
    });
    const classes = computed(() => {
      return {
        VPLocalNav: true,
        "has-sidebar": hasSidebar.value,
        empty: empty.value,
        fixed: emptyAndNoSidebar.value
      };
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(frontmatter).layout !== "home" && (!emptyAndNoSidebar.value || unref(y) >= navHeight.value)) {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: classes.value }, _attrs))} data-v-2488c25a><div class="container" data-v-2488c25a>`);
        if (unref(hasSidebar)) {
          _push(`<button class="menu"${ssrRenderAttr("aria-expanded", _ctx.open)} aria-controls="VPSidebarNav" data-v-2488c25a><span class="vpi-align-left menu-icon" data-v-2488c25a></span><span class="menu-text" data-v-2488c25a>${ssrInterpolate(unref(theme2).sidebarMenuLabel || "Menu")}</span></button>`);
        } else {
          _push(`<!---->`);
        }
        _push(ssrRenderComponent(VPLocalNavOutlineDropdown, {
          headers: unref(headers),
          navHeight: navHeight.value
        }, null, _parent));
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPLocalNav.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
const VPLocalNav = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["__scopeId", "data-v-2488c25a"]]);
function useNav() {
  const isScreenOpen = ref(false);
  function openScreen() {
    isScreenOpen.value = true;
    window.addEventListener("resize", closeScreenOnTabletWindow);
  }
  function closeScreen() {
    isScreenOpen.value = false;
    window.removeEventListener("resize", closeScreenOnTabletWindow);
  }
  function toggleScreen() {
    isScreenOpen.value ? closeScreen() : openScreen();
  }
  function closeScreenOnTabletWindow() {
    window.outerWidth >= 768 && closeScreen();
  }
  const route = useRoute();
  watch(() => route.path, closeScreen);
  return {
    isScreenOpen,
    openScreen,
    closeScreen,
    toggleScreen
  };
}
const _sfc_main$S = {};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    class: "VPSwitch",
    type: "button",
    role: "switch"
  }, _attrs))} data-v-b4ccac88><span class="check" data-v-b4ccac88>`);
  if (_ctx.$slots.default) {
    _push(`<span class="icon" data-v-b4ccac88>`);
    ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</span>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</span></button>`);
}
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSwitch.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
const VPSwitch = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["ssrRender", _sfc_ssrRender], ["__scopeId", "data-v-b4ccac88"]]);
const _sfc_main$R = /* @__PURE__ */ defineComponent({
  __name: "VPSwitchAppearance",
  __ssrInlineRender: true,
  setup(__props) {
    const { isDark, theme: theme2 } = useData();
    const toggleAppearance = inject("toggle-appearance", () => {
      isDark.value = !isDark.value;
    });
    const switchTitle = ref("");
    watchPostEffect(() => {
      switchTitle.value = isDark.value ? theme2.value.lightModeSwitchTitle || "Switch to light theme" : theme2.value.darkModeSwitchTitle || "Switch to dark theme";
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(VPSwitch, mergeProps({
        title: switchTitle.value,
        class: "VPSwitchAppearance",
        "aria-checked": unref(isDark),
        onClick: unref(toggleAppearance)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span class="vpi-sun sun" data-v-be9742d9${_scopeId}></span><span class="vpi-moon moon" data-v-be9742d9${_scopeId}></span>`);
          } else {
            return [
              createVNode("span", { class: "vpi-sun sun" }),
              createVNode("span", { class: "vpi-moon moon" })
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSwitchAppearance.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
const VPSwitchAppearance = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["__scopeId", "data-v-be9742d9"]]);
const _sfc_main$Q = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarAppearance",
  __ssrInlineRender: true,
  setup(__props) {
    const { site } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(site).appearance && unref(site).appearance !== "force-dark" && unref(site).appearance !== "force-auto") {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPNavBarAppearance" }, _attrs))} data-v-3f90c1a5>`);
        _push(ssrRenderComponent(VPSwitchAppearance, null, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarAppearance.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
const VPNavBarAppearance = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["__scopeId", "data-v-3f90c1a5"]]);
const focusedElement = ref();
let active = false;
let listeners = 0;
function useFlyout(options) {
  const focus = ref(false);
  if (inBrowser) {
    !active && activateFocusTracking();
    listeners++;
    const unwatch = watch(focusedElement, (el) => {
      var _a, _b, _c;
      if (el === options.el.value || ((_a = options.el.value) == null ? void 0 : _a.contains(el))) {
        focus.value = true;
        (_b = options.onFocus) == null ? void 0 : _b.call(options);
      } else {
        focus.value = false;
        (_c = options.onBlur) == null ? void 0 : _c.call(options);
      }
    });
    onUnmounted(() => {
      unwatch();
      listeners--;
      if (!listeners) {
        deactivateFocusTracking();
      }
    });
  }
  return readonly(focus);
}
function activateFocusTracking() {
  document.addEventListener("focusin", handleFocusIn);
  active = true;
  focusedElement.value = document.activeElement;
}
function deactivateFocusTracking() {
  document.removeEventListener("focusin", handleFocusIn);
}
function handleFocusIn() {
  focusedElement.value = document.activeElement;
}
const _sfc_main$P = /* @__PURE__ */ defineComponent({
  __name: "VPMenuLink",
  __ssrInlineRender: true,
  props: {
    item: {}
  },
  setup(__props) {
    const { page } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPMenuLink" }, _attrs))} data-v-7eeeb2dc>`);
      _push(ssrRenderComponent(_sfc_main$18, {
        class: {
          active: unref(isActive)(
            unref(page).relativePath,
            _ctx.item.activeMatch || _ctx.item.link,
            !!_ctx.item.activeMatch
          )
        },
        href: _ctx.item.link,
        target: _ctx.item.target,
        rel: _ctx.item.rel,
        "no-icon": _ctx.item.noIcon
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span data-v-7eeeb2dc${_scopeId}>${_ctx.item.text ?? ""}</span>`);
          } else {
            return [
              createVNode("span", {
                innerHTML: _ctx.item.text
              }, null, 8, ["innerHTML"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPMenuLink.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
const VPMenuLink = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["__scopeId", "data-v-7eeeb2dc"]]);
const _sfc_main$O = /* @__PURE__ */ defineComponent({
  __name: "VPMenuGroup",
  __ssrInlineRender: true,
  props: {
    text: {},
    items: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPMenuGroup" }, _attrs))} data-v-a6b0397c>`);
      if (_ctx.text) {
        _push(`<p class="title" data-v-a6b0397c>${ssrInterpolate(_ctx.text)}</p>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<!--[-->`);
      ssrRenderList(_ctx.items, (item) => {
        _push(`<!--[-->`);
        if ("link" in item) {
          _push(ssrRenderComponent(VPMenuLink, { item }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPMenuGroup.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
const VPMenuGroup = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["__scopeId", "data-v-a6b0397c"]]);
const _sfc_main$N = /* @__PURE__ */ defineComponent({
  __name: "VPMenu",
  __ssrInlineRender: true,
  props: {
    items: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPMenu" }, _attrs))} data-v-20ed86d6>`);
      if (_ctx.items) {
        _push(`<div class="items" data-v-20ed86d6><!--[-->`);
        ssrRenderList(_ctx.items, (item) => {
          _push(`<!--[-->`);
          if ("link" in item) {
            _push(ssrRenderComponent(VPMenuLink, { item }, null, _parent));
          } else if ("component" in item) {
            ssrRenderVNode(_push, createVNode(resolveDynamicComponent(item.component), mergeProps({ ref_for: true }, item.props), null), _parent);
          } else {
            _push(ssrRenderComponent(VPMenuGroup, {
              text: item.text,
              items: item.items
            }, null, _parent));
          }
          _push(`<!--]-->`);
        });
        _push(`<!--]--></div>`);
      } else {
        _push(`<!---->`);
      }
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
      _push(`</div>`);
    };
  }
});
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPMenu.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
const VPMenu = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["__scopeId", "data-v-20ed86d6"]]);
const _sfc_main$M = /* @__PURE__ */ defineComponent({
  __name: "VPFlyout",
  __ssrInlineRender: true,
  props: {
    icon: {},
    button: {},
    label: {},
    items: {}
  },
  setup(__props) {
    const open = ref(false);
    const el = ref();
    useFlyout({ el, onBlur });
    function onBlur() {
      open.value = false;
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "VPFlyout",
        ref_key: "el",
        ref: el
      }, _attrs))} data-v-bfe7971f><button type="button" class="button" aria-haspopup="true"${ssrRenderAttr("aria-expanded", open.value)}${ssrRenderAttr("aria-label", _ctx.label)} data-v-bfe7971f>`);
      if (_ctx.button || _ctx.icon) {
        _push(`<span class="text" data-v-bfe7971f>`);
        if (_ctx.icon) {
          _push(`<span class="${ssrRenderClass([_ctx.icon, "option-icon"])}" data-v-bfe7971f></span>`);
        } else {
          _push(`<!---->`);
        }
        if (_ctx.button) {
          _push(`<span data-v-bfe7971f>${_ctx.button ?? ""}</span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<span class="vpi-chevron-down text-icon" data-v-bfe7971f></span></span>`);
      } else {
        _push(`<span class="vpi-more-horizontal icon" data-v-bfe7971f></span>`);
      }
      _push(`</button><div class="menu" data-v-bfe7971f>`);
      _push(ssrRenderComponent(VPMenu, { items: _ctx.items }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "default", {}, void 0, true)
            ];
          }
        }),
        _: 3
      }, _parent));
      _push(`</div></div>`);
    };
  }
});
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPFlyout.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
const VPFlyout = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["__scopeId", "data-v-bfe7971f"]]);
const _sfc_main$L = /* @__PURE__ */ defineComponent({
  __name: "VPSocialLink",
  __ssrInlineRender: true,
  props: {
    icon: {},
    link: {},
    ariaLabel: {}
  },
  setup(__props) {
    var _a;
    const props = __props;
    const el = ref();
    onMounted(async () => {
      var _a2;
      await nextTick();
      const span = (_a2 = el.value) == null ? void 0 : _a2.children[0];
      if (span instanceof HTMLElement && span.className.startsWith("vpi-social-") && (getComputedStyle(span).maskImage || getComputedStyle(span).webkitMaskImage) === "none") {
        span.style.setProperty(
          "--icon",
          `url('https://api.iconify.design/simple-icons/${props.icon}.svg')`
        );
      }
    });
    const svg = computed(() => {
      if (typeof props.icon === "object") return props.icon.svg;
      return `<span class="vpi-social-${props.icon}"></span>`;
    });
    {
      typeof props.icon === "string" && ((_a = useSSRContext()) == null ? void 0 : _a.vpSocialIcons.add(props.icon));
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<a${ssrRenderAttrs(mergeProps({
        ref_key: "el",
        ref: el,
        class: "VPSocialLink no-icon",
        href: _ctx.link,
        "aria-label": _ctx.ariaLabel ?? (typeof _ctx.icon === "string" ? _ctx.icon : ""),
        target: "_blank",
        rel: "noopener"
      }, _attrs))} data-v-60a9a2d3>${svg.value ?? ""}</a>`);
    };
  }
});
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSocialLink.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
const VPSocialLink = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["__scopeId", "data-v-60a9a2d3"]]);
const _sfc_main$K = /* @__PURE__ */ defineComponent({
  __name: "VPSocialLinks",
  __ssrInlineRender: true,
  props: {
    links: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPSocialLinks" }, _attrs))} data-v-e71e869c><!--[-->`);
      ssrRenderList(_ctx.links, ({ link: link2, icon, ariaLabel }) => {
        _push(ssrRenderComponent(VPSocialLink, {
          key: link2,
          icon,
          link: link2,
          ariaLabel
        }, null, _parent));
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSocialLinks.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
const VPSocialLinks = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["__scopeId", "data-v-e71e869c"]]);
const _sfc_main$J = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarExtra",
  __ssrInlineRender: true,
  setup(__props) {
    const { site, theme: theme2 } = useData();
    const { localeLinks, currentLang } = useLangs({ correspondingLink: true });
    const hasExtraContent = computed(
      () => localeLinks.value.length && currentLang.value.label || site.value.appearance || theme2.value.socialLinks
    );
    return (_ctx, _push, _parent, _attrs) => {
      if (hasExtraContent.value) {
        _push(ssrRenderComponent(VPFlyout, mergeProps({
          class: "VPNavBarExtra",
          label: "extra navigation"
        }, _attrs), {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              if (unref(localeLinks).length && unref(currentLang).label) {
                _push2(`<div class="group translations" data-v-f953d92f${_scopeId}><p class="trans-title" data-v-f953d92f${_scopeId}>${ssrInterpolate(unref(currentLang).label)}</p><!--[-->`);
                ssrRenderList(unref(localeLinks), (locale) => {
                  _push2(ssrRenderComponent(VPMenuLink, { item: locale }, null, _parent2, _scopeId));
                });
                _push2(`<!--]--></div>`);
              } else {
                _push2(`<!---->`);
              }
              if (unref(site).appearance && unref(site).appearance !== "force-dark" && unref(site).appearance !== "force-auto") {
                _push2(`<div class="group" data-v-f953d92f${_scopeId}><div class="item appearance" data-v-f953d92f${_scopeId}><p class="label" data-v-f953d92f${_scopeId}>${ssrInterpolate(unref(theme2).darkModeSwitchLabel || "Appearance")}</p><div class="appearance-action" data-v-f953d92f${_scopeId}>`);
                _push2(ssrRenderComponent(VPSwitchAppearance, null, null, _parent2, _scopeId));
                _push2(`</div></div></div>`);
              } else {
                _push2(`<!---->`);
              }
              if (unref(theme2).socialLinks) {
                _push2(`<div class="group" data-v-f953d92f${_scopeId}><div class="item social-links" data-v-f953d92f${_scopeId}>`);
                _push2(ssrRenderComponent(VPSocialLinks, {
                  class: "social-links-list",
                  links: unref(theme2).socialLinks
                }, null, _parent2, _scopeId));
                _push2(`</div></div>`);
              } else {
                _push2(`<!---->`);
              }
            } else {
              return [
                unref(localeLinks).length && unref(currentLang).label ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "group translations"
                }, [
                  createVNode("p", { class: "trans-title" }, toDisplayString(unref(currentLang).label), 1),
                  (openBlock(true), createBlock(Fragment, null, renderList(unref(localeLinks), (locale) => {
                    return openBlock(), createBlock(VPMenuLink, {
                      key: locale.link,
                      item: locale
                    }, null, 8, ["item"]);
                  }), 128))
                ])) : createCommentVNode("", true),
                unref(site).appearance && unref(site).appearance !== "force-dark" && unref(site).appearance !== "force-auto" ? (openBlock(), createBlock("div", {
                  key: 1,
                  class: "group"
                }, [
                  createVNode("div", { class: "item appearance" }, [
                    createVNode("p", { class: "label" }, toDisplayString(unref(theme2).darkModeSwitchLabel || "Appearance"), 1),
                    createVNode("div", { class: "appearance-action" }, [
                      createVNode(VPSwitchAppearance)
                    ])
                  ])
                ])) : createCommentVNode("", true),
                unref(theme2).socialLinks ? (openBlock(), createBlock("div", {
                  key: 2,
                  class: "group"
                }, [
                  createVNode("div", { class: "item social-links" }, [
                    createVNode(VPSocialLinks, {
                      class: "social-links-list",
                      links: unref(theme2).socialLinks
                    }, null, 8, ["links"])
                  ])
                ])) : createCommentVNode("", true)
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarExtra.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
const VPNavBarExtra = /* @__PURE__ */ _export_sfc(_sfc_main$J, [["__scopeId", "data-v-f953d92f"]]);
const _sfc_main$I = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarHamburger",
  __ssrInlineRender: true,
  props: {
    active: { type: Boolean }
  },
  emits: ["click"],
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${ssrRenderAttrs(mergeProps({
        type: "button",
        class: ["VPNavBarHamburger", { active: _ctx.active }],
        "aria-label": "mobile navigation",
        "aria-expanded": _ctx.active,
        "aria-controls": "VPNavScreen"
      }, _attrs))} data-v-6bee1efd><span class="container" data-v-6bee1efd><span class="top" data-v-6bee1efd></span><span class="middle" data-v-6bee1efd></span><span class="bottom" data-v-6bee1efd></span></span></button>`);
    };
  }
});
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarHamburger.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
const VPNavBarHamburger = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["__scopeId", "data-v-6bee1efd"]]);
const _sfc_main$H = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarMenuLink",
  __ssrInlineRender: true,
  props: {
    item: {}
  },
  setup(__props) {
    const { page } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$18, mergeProps({
        class: {
          VPNavBarMenuLink: true,
          active: unref(isActive)(
            unref(page).relativePath,
            _ctx.item.activeMatch || _ctx.item.link,
            !!_ctx.item.activeMatch
          )
        },
        href: _ctx.item.link,
        target: _ctx.item.target,
        rel: _ctx.item.rel,
        "no-icon": _ctx.item.noIcon,
        tabindex: "0"
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span data-v-815115f5${_scopeId}>${_ctx.item.text ?? ""}</span>`);
          } else {
            return [
              createVNode("span", {
                innerHTML: _ctx.item.text
              }, null, 8, ["innerHTML"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarMenuLink.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
const VPNavBarMenuLink = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["__scopeId", "data-v-815115f5"]]);
const _sfc_main$G = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarMenuGroup",
  __ssrInlineRender: true,
  props: {
    item: {}
  },
  setup(__props) {
    const props = __props;
    const { page } = useData();
    const isChildActive = (navItem) => {
      if ("component" in navItem) return false;
      if ("link" in navItem) {
        return isActive(
          page.value.relativePath,
          navItem.link,
          !!props.item.activeMatch
        );
      }
      return navItem.items.some(isChildActive);
    };
    const childrenActive = computed(() => isChildActive(props.item));
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(VPFlyout, mergeProps({
        class: {
          VPNavBarMenuGroup: true,
          active: unref(isActive)(unref(page).relativePath, _ctx.item.activeMatch, !!_ctx.item.activeMatch) || childrenActive.value
        },
        button: _ctx.item.text,
        items: _ctx.item.items
      }, _attrs), null, _parent));
    };
  }
});
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarMenuGroup.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
const _sfc_main$F = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarMenu",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(theme2).nav) {
        _push(`<nav${ssrRenderAttrs(mergeProps({
          "aria-labelledby": "main-nav-aria-label",
          class: "VPNavBarMenu"
        }, _attrs))} data-v-afb2845e><span id="main-nav-aria-label" class="visually-hidden" data-v-afb2845e> Main Navigation </span><!--[-->`);
        ssrRenderList(unref(theme2).nav, (item) => {
          _push(`<!--[-->`);
          if ("link" in item) {
            _push(ssrRenderComponent(VPNavBarMenuLink, { item }, null, _parent));
          } else if ("component" in item) {
            ssrRenderVNode(_push, createVNode(resolveDynamicComponent(item.component), mergeProps({ ref_for: true }, item.props), null), _parent);
          } else {
            _push(ssrRenderComponent(_sfc_main$G, { item }, null, _parent));
          }
          _push(`<!--]-->`);
        });
        _push(`<!--]--></nav>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarMenu.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
const VPNavBarMenu = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["__scopeId", "data-v-afb2845e"]]);
function createSearchTranslate(defaultTranslations) {
  const { localeIndex, theme: theme2 } = useData();
  function translate(key) {
    var _a, _b, _c;
    const keyPath = key.split(".");
    const themeObject = (_a = theme2.value.search) == null ? void 0 : _a.options;
    const isObject = themeObject && typeof themeObject === "object";
    const locales = isObject && ((_c = (_b = themeObject.locales) == null ? void 0 : _b[localeIndex.value]) == null ? void 0 : _c.translations) || null;
    const translations = isObject && themeObject.translations || null;
    let localeResult = locales;
    let translationResult = translations;
    let defaultResult = defaultTranslations;
    const lastKey = keyPath.pop();
    for (const k of keyPath) {
      let fallbackResult = null;
      const foundInFallback = defaultResult == null ? void 0 : defaultResult[k];
      if (foundInFallback) {
        fallbackResult = defaultResult = foundInFallback;
      }
      const foundInTranslation = translationResult == null ? void 0 : translationResult[k];
      if (foundInTranslation) {
        fallbackResult = translationResult = foundInTranslation;
      }
      const foundInLocale = localeResult == null ? void 0 : localeResult[k];
      if (foundInLocale) {
        fallbackResult = localeResult = foundInLocale;
      }
      if (!foundInFallback) {
        defaultResult = fallbackResult;
      }
      if (!foundInTranslation) {
        translationResult = fallbackResult;
      }
      if (!foundInLocale) {
        localeResult = fallbackResult;
      }
    }
    return (localeResult == null ? void 0 : localeResult[lastKey]) ?? (translationResult == null ? void 0 : translationResult[lastKey]) ?? (defaultResult == null ? void 0 : defaultResult[lastKey]) ?? "";
  }
  return translate;
}
const _sfc_main$E = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarSearchButton",
  __ssrInlineRender: true,
  setup(__props) {
    const defaultTranslations = {
      button: {
        buttonText: "Search",
        buttonAriaLabel: "Search"
      }
    };
    const translate = createSearchTranslate(defaultTranslations);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<button${ssrRenderAttrs(mergeProps({
        type: "button",
        class: "DocSearch DocSearch-Button",
        "aria-label": unref(translate)("button.buttonAriaLabel")
      }, _attrs))}><span class="DocSearch-Button-Container"><span class="vp-icon DocSearch-Search-Icon"></span><span class="DocSearch-Button-Placeholder">${ssrInterpolate(unref(translate)("button.buttonText"))}</span></span><span class="DocSearch-Button-Keys"><kbd class="DocSearch-Button-Key"></kbd><kbd class="DocSearch-Button-Key">K</kbd></span></button>`);
    };
  }
});
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarSearchButton.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
const _sfc_main$D = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarSearch",
  __ssrInlineRender: true,
  setup(__props) {
    const VPLocalSearchBox = defineAsyncComponent(() => import("./VPLocalSearchBox.Cn1LuPCj.js"));
    const VPAlgoliaSearchBox = () => null;
    const { theme: theme2 } = useData();
    const loaded = ref(false);
    const actuallyLoaded = ref(false);
    onMounted(() => {
      {
        return;
      }
    });
    function load() {
      if (!loaded.value) {
        loaded.value = true;
        setTimeout(poll, 16);
      }
    }
    function poll() {
      const e = new Event("keydown");
      e.key = "k";
      e.metaKey = true;
      window.dispatchEvent(e);
      setTimeout(() => {
        if (!document.querySelector(".DocSearch-Modal")) {
          poll();
        }
      }, 16);
    }
    function isEditingContent(event2) {
      const element = event2.target;
      const tagName = element.tagName;
      return element.isContentEditable || tagName === "INPUT" || tagName === "SELECT" || tagName === "TEXTAREA";
    }
    const showSearch = ref(false);
    {
      onKeyStroke("k", (event2) => {
        if (event2.ctrlKey || event2.metaKey) {
          event2.preventDefault();
          showSearch.value = true;
        }
      });
      onKeyStroke("/", (event2) => {
        if (!isEditingContent(event2)) {
          event2.preventDefault();
          showSearch.value = true;
        }
      });
    }
    const provider = "local";
    return (_ctx, _push, _parent, _attrs) => {
      var _a;
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPNavBarSearch" }, _attrs))}>`);
      if (unref(provider) === "local") {
        _push(`<!--[-->`);
        if (showSearch.value) {
          _push(ssrRenderComponent(unref(VPLocalSearchBox), {
            onClose: ($event) => showSearch.value = false
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`<div id="local-search">`);
        _push(ssrRenderComponent(_sfc_main$E, {
          onClick: ($event) => showSearch.value = true
        }, null, _parent));
        _push(`</div><!--]-->`);
      } else if (unref(provider) === "algolia") {
        _push(`<!--[-->`);
        if (loaded.value) {
          _push(ssrRenderComponent(unref(VPAlgoliaSearchBox), {
            algolia: ((_a = unref(theme2).search) == null ? void 0 : _a.options) ?? unref(theme2).algolia,
            onVnodeBeforeMount: ($event) => actuallyLoaded.value = true
          }, null, _parent));
        } else {
          _push(`<!---->`);
        }
        if (!actuallyLoaded.value) {
          _push(`<div id="docsearch">`);
          _push(ssrRenderComponent(_sfc_main$E, { onClick: load }, null, _parent));
          _push(`</div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`<!--]-->`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
});
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarSearch.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
const _sfc_main$C = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarSocialLinks",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(theme2).socialLinks) {
        _push(ssrRenderComponent(VPSocialLinks, mergeProps({
          class: "VPNavBarSocialLinks",
          links: unref(theme2).socialLinks
        }, _attrs), null, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarSocialLinks.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
const VPNavBarSocialLinks = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["__scopeId", "data-v-ef6192dc"]]);
const _sfc_main$B = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarTitle",
  __ssrInlineRender: true,
  setup(__props) {
    const { site, theme: theme2 } = useData();
    const { hasSidebar } = useSidebar();
    const { currentLang } = useLangs();
    const link2 = computed(
      () => {
        var _a;
        return typeof theme2.value.logoLink === "string" ? theme2.value.logoLink : (_a = theme2.value.logoLink) == null ? void 0 : _a.link;
      }
    );
    const rel = computed(
      () => {
        var _a;
        return typeof theme2.value.logoLink === "string" ? void 0 : (_a = theme2.value.logoLink) == null ? void 0 : _a.rel;
      }
    );
    const target = computed(
      () => {
        var _a;
        return typeof theme2.value.logoLink === "string" ? void 0 : (_a = theme2.value.logoLink) == null ? void 0 : _a.target;
      }
    );
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPNavBarTitle", { "has-sidebar": unref(hasSidebar) }]
      }, _attrs))} data-v-9f43907a><a class="title"${ssrRenderAttr("href", link2.value ?? unref(normalizeLink$1)(unref(currentLang).link))}${ssrRenderAttr("rel", rel.value)}${ssrRenderAttr("target", target.value)} data-v-9f43907a>`);
      ssrRenderSlot(_ctx.$slots, "nav-bar-title-before", {}, null, _push, _parent);
      if (unref(theme2).logo) {
        _push(ssrRenderComponent(VPImage, {
          class: "logo",
          image: unref(theme2).logo
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      if (unref(theme2).siteTitle) {
        _push(`<span data-v-9f43907a>${unref(theme2).siteTitle ?? ""}</span>`);
      } else if (unref(theme2).siteTitle === void 0) {
        _push(`<span data-v-9f43907a>${ssrInterpolate(unref(site).title)}</span>`);
      } else {
        _push(`<!---->`);
      }
      ssrRenderSlot(_ctx.$slots, "nav-bar-title-after", {}, null, _push, _parent);
      _push(`</a></div>`);
    };
  }
});
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarTitle.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
const VPNavBarTitle = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["__scopeId", "data-v-9f43907a"]]);
const _sfc_main$A = /* @__PURE__ */ defineComponent({
  __name: "VPNavBarTranslations",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    const { localeLinks, currentLang } = useLangs({ correspondingLink: true });
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(localeLinks).length && unref(currentLang).label) {
        _push(ssrRenderComponent(VPFlyout, mergeProps({
          class: "VPNavBarTranslations",
          icon: "vpi-languages",
          label: unref(theme2).langMenuLabel || "Change language"
        }, _attrs), {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="items" data-v-acee064b${_scopeId}><p class="title" data-v-acee064b${_scopeId}>${ssrInterpolate(unref(currentLang).label)}</p><!--[-->`);
              ssrRenderList(unref(localeLinks), (locale) => {
                _push2(ssrRenderComponent(VPMenuLink, { item: locale }, null, _parent2, _scopeId));
              });
              _push2(`<!--]--></div>`);
            } else {
              return [
                createVNode("div", { class: "items" }, [
                  createVNode("p", { class: "title" }, toDisplayString(unref(currentLang).label), 1),
                  (openBlock(true), createBlock(Fragment, null, renderList(unref(localeLinks), (locale) => {
                    return openBlock(), createBlock(VPMenuLink, {
                      key: locale.link,
                      item: locale
                    }, null, 8, ["item"]);
                  }), 128))
                ])
              ];
            }
          }),
          _: 1
        }, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBarTranslations.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
const VPNavBarTranslations = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["__scopeId", "data-v-acee064b"]]);
const _sfc_main$z = /* @__PURE__ */ defineComponent({
  __name: "VPNavBar",
  __ssrInlineRender: true,
  props: {
    isScreenOpen: { type: Boolean }
  },
  emits: ["toggle-screen"],
  setup(__props) {
    const props = __props;
    const { y } = useWindowScroll();
    const { hasSidebar } = useSidebar();
    const { frontmatter } = useData();
    const classes = ref({});
    watchPostEffect(() => {
      classes.value = {
        "has-sidebar": hasSidebar.value,
        "home": frontmatter.value.layout === "home",
        "top": y.value === 0,
        "screen-open": props.isScreenOpen
      };
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPNavBar", classes.value]
      }, _attrs))} data-v-9fd4d1dd><div class="wrapper" data-v-9fd4d1dd><div class="container" data-v-9fd4d1dd><div class="title" data-v-9fd4d1dd>`);
      _push(ssrRenderComponent(VPNavBarTitle, null, {
        "nav-bar-title-before": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "nav-bar-title-before", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "nav-bar-title-before", {}, void 0, true)
            ];
          }
        }),
        "nav-bar-title-after": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderSlot(_ctx.$slots, "nav-bar-title-after", {}, null, _push2, _parent2, _scopeId);
          } else {
            return [
              renderSlot(_ctx.$slots, "nav-bar-title-after", {}, void 0, true)
            ];
          }
        }),
        _: 3
      }, _parent));
      _push(`</div><div class="content" data-v-9fd4d1dd><div class="content-body" data-v-9fd4d1dd>`);
      ssrRenderSlot(_ctx.$slots, "nav-bar-content-before", {}, null, _push, _parent);
      _push(ssrRenderComponent(_sfc_main$D, { class: "search" }, null, _parent));
      _push(ssrRenderComponent(VPNavBarMenu, { class: "menu" }, null, _parent));
      _push(ssrRenderComponent(VPNavBarTranslations, { class: "translations" }, null, _parent));
      _push(ssrRenderComponent(VPNavBarAppearance, { class: "appearance" }, null, _parent));
      _push(ssrRenderComponent(VPNavBarSocialLinks, { class: "social-links" }, null, _parent));
      _push(ssrRenderComponent(VPNavBarExtra, { class: "extra" }, null, _parent));
      ssrRenderSlot(_ctx.$slots, "nav-bar-content-after", {}, null, _push, _parent);
      _push(ssrRenderComponent(VPNavBarHamburger, {
        class: "hamburger",
        active: _ctx.isScreenOpen,
        onClick: ($event) => _ctx.$emit("toggle-screen")
      }, null, _parent));
      _push(`</div></div></div></div><div class="divider" data-v-9fd4d1dd><div class="divider-line" data-v-9fd4d1dd></div></div></div>`);
    };
  }
});
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavBar.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
const VPNavBar = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["__scopeId", "data-v-9fd4d1dd"]]);
const _sfc_main$y = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenAppearance",
  __ssrInlineRender: true,
  setup(__props) {
    const { site, theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(site).appearance && unref(site).appearance !== "force-dark" && unref(site).appearance !== "force-auto") {
        _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPNavScreenAppearance" }, _attrs))} data-v-a3e2920d><p class="text" data-v-a3e2920d>${ssrInterpolate(unref(theme2).darkModeSwitchLabel || "Appearance")}</p>`);
        _push(ssrRenderComponent(VPSwitchAppearance, null, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenAppearance.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
const VPNavScreenAppearance = /* @__PURE__ */ _export_sfc(_sfc_main$y, [["__scopeId", "data-v-a3e2920d"]]);
const _sfc_main$x = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenMenuLink",
  __ssrInlineRender: true,
  props: {
    item: {}
  },
  setup(__props) {
    const closeScreen = inject("close-screen");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$18, mergeProps({
        class: "VPNavScreenMenuLink",
        href: _ctx.item.link,
        target: _ctx.item.target,
        rel: _ctx.item.rel,
        "no-icon": _ctx.item.noIcon,
        onClick: unref(closeScreen)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span data-v-fa963d97${_scopeId}>${_ctx.item.text ?? ""}</span>`);
          } else {
            return [
              createVNode("span", {
                innerHTML: _ctx.item.text
              }, null, 8, ["innerHTML"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenMenuLink.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
const VPNavScreenMenuLink = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["__scopeId", "data-v-fa963d97"]]);
const _sfc_main$w = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenMenuGroupLink",
  __ssrInlineRender: true,
  props: {
    item: {}
  },
  setup(__props) {
    const closeScreen = inject("close-screen");
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(_sfc_main$18, mergeProps({
        class: "VPNavScreenMenuGroupLink",
        href: _ctx.item.link,
        target: _ctx.item.target,
        rel: _ctx.item.rel,
        "no-icon": _ctx.item.noIcon,
        onClick: unref(closeScreen)
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span data-v-e04f3e85${_scopeId}>${_ctx.item.text ?? ""}</span>`);
          } else {
            return [
              createVNode("span", {
                innerHTML: _ctx.item.text
              }, null, 8, ["innerHTML"])
            ];
          }
        }),
        _: 1
      }, _parent));
    };
  }
});
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenMenuGroupLink.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
const VPNavScreenMenuGroupLink = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["__scopeId", "data-v-e04f3e85"]]);
const _sfc_main$v = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenMenuGroupSection",
  __ssrInlineRender: true,
  props: {
    text: {},
    items: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPNavScreenMenuGroupSection" }, _attrs))} data-v-f60dbfa7>`);
      if (_ctx.text) {
        _push(`<p class="title" data-v-f60dbfa7>${ssrInterpolate(_ctx.text)}</p>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<!--[-->`);
      ssrRenderList(_ctx.items, (item) => {
        _push(ssrRenderComponent(VPNavScreenMenuGroupLink, {
          key: item.text,
          item
        }, null, _parent));
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenMenuGroupSection.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
const VPNavScreenMenuGroupSection = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["__scopeId", "data-v-f60dbfa7"]]);
const _sfc_main$u = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenMenuGroup",
  __ssrInlineRender: true,
  props: {
    text: {},
    items: {}
  },
  setup(__props) {
    const props = __props;
    const isOpen = ref(false);
    const groupId = computed(
      () => `NavScreenGroup-${props.text.replace(" ", "-").toLowerCase()}`
    );
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPNavScreenMenuGroup", { open: isOpen.value }]
      }, _attrs))} data-v-d99bfeec><button class="button"${ssrRenderAttr("aria-controls", groupId.value)}${ssrRenderAttr("aria-expanded", isOpen.value)} data-v-d99bfeec><span class="button-text" data-v-d99bfeec>${_ctx.text ?? ""}</span><span class="vpi-plus button-icon" data-v-d99bfeec></span></button><div${ssrRenderAttr("id", groupId.value)} class="items" data-v-d99bfeec><!--[-->`);
      ssrRenderList(_ctx.items, (item) => {
        _push(`<!--[-->`);
        if ("link" in item) {
          _push(`<div class="item" data-v-d99bfeec>`);
          _push(ssrRenderComponent(VPNavScreenMenuGroupLink, { item }, null, _parent));
          _push(`</div>`);
        } else if ("component" in item) {
          _push(`<div class="item" data-v-d99bfeec>`);
          ssrRenderVNode(_push, createVNode(resolveDynamicComponent(item.component), mergeProps({ ref_for: true }, item.props, { "screen-menu": "" }), null), _parent);
          _push(`</div>`);
        } else {
          _push(`<div class="group" data-v-d99bfeec>`);
          _push(ssrRenderComponent(VPNavScreenMenuGroupSection, {
            text: item.text,
            items: item.items
          }, null, _parent));
          _push(`</div>`);
        }
        _push(`<!--]-->`);
      });
      _push(`<!--]--></div></div>`);
    };
  }
});
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenMenuGroup.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
const VPNavScreenMenuGroup = /* @__PURE__ */ _export_sfc(_sfc_main$u, [["__scopeId", "data-v-d99bfeec"]]);
const _sfc_main$t = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenMenu",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(theme2).nav) {
        _push(`<nav${ssrRenderAttrs(mergeProps({ class: "VPNavScreenMenu" }, _attrs))}><!--[-->`);
        ssrRenderList(unref(theme2).nav, (item) => {
          _push(`<!--[-->`);
          if ("link" in item) {
            _push(ssrRenderComponent(VPNavScreenMenuLink, { item }, null, _parent));
          } else if ("component" in item) {
            ssrRenderVNode(_push, createVNode(resolveDynamicComponent(item.component), mergeProps({ ref_for: true }, item.props, { "screen-menu": "" }), null), _parent);
          } else {
            _push(ssrRenderComponent(VPNavScreenMenuGroup, {
              text: item.text || "",
              items: item.items
            }, null, _parent));
          }
          _push(`<!--]-->`);
        });
        _push(`<!--]--></nav>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenMenu.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
const _sfc_main$s = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenSocialLinks",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(theme2).socialLinks) {
        _push(ssrRenderComponent(VPSocialLinks, mergeProps({
          class: "VPNavScreenSocialLinks",
          links: unref(theme2).socialLinks
        }, _attrs), null, _parent));
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenSocialLinks.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
const _sfc_main$r = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreenTranslations",
  __ssrInlineRender: true,
  setup(__props) {
    const { localeLinks, currentLang } = useLangs({ correspondingLink: true });
    const isOpen = ref(false);
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(localeLinks).length && unref(currentLang).label) {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: ["VPNavScreenTranslations", { open: isOpen.value }]
        }, _attrs))} data-v-516e4bc3><button class="title" data-v-516e4bc3><span class="vpi-languages icon lang" data-v-516e4bc3></span> ${ssrInterpolate(unref(currentLang).label)} <span class="vpi-chevron-down icon chevron" data-v-516e4bc3></span></button><ul class="list" data-v-516e4bc3><!--[-->`);
        ssrRenderList(unref(localeLinks), (locale) => {
          _push(`<li class="item" data-v-516e4bc3>`);
          _push(ssrRenderComponent(_sfc_main$18, {
            class: "link",
            href: locale.link
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`${ssrInterpolate(locale.text)}`);
              } else {
                return [
                  createTextVNode(toDisplayString(locale.text), 1)
                ];
              }
            }),
            _: 2
          }, _parent));
          _push(`</li>`);
        });
        _push(`<!--]--></ul></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreenTranslations.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
const VPNavScreenTranslations = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["__scopeId", "data-v-516e4bc3"]]);
const _sfc_main$q = /* @__PURE__ */ defineComponent({
  __name: "VPNavScreen",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean }
  },
  setup(__props) {
    const screen = ref(null);
    useScrollLock(inBrowser ? document.body : null);
    return (_ctx, _push, _parent, _attrs) => {
      if (_ctx.open) {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: "VPNavScreen",
          ref_key: "screen",
          ref: screen,
          id: "VPNavScreen"
        }, _attrs))} data-v-2dd6d0c7><div class="container" data-v-2dd6d0c7>`);
        ssrRenderSlot(_ctx.$slots, "nav-screen-content-before", {}, null, _push, _parent);
        _push(ssrRenderComponent(_sfc_main$t, { class: "menu" }, null, _parent));
        _push(ssrRenderComponent(VPNavScreenTranslations, { class: "translations" }, null, _parent));
        _push(ssrRenderComponent(VPNavScreenAppearance, { class: "appearance" }, null, _parent));
        _push(ssrRenderComponent(_sfc_main$s, { class: "social-links" }, null, _parent));
        ssrRenderSlot(_ctx.$slots, "nav-screen-content-after", {}, null, _push, _parent);
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNavScreen.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
const VPNavScreen = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["__scopeId", "data-v-2dd6d0c7"]]);
const _sfc_main$p = /* @__PURE__ */ defineComponent({
  __name: "VPNav",
  __ssrInlineRender: true,
  setup(__props) {
    const { isScreenOpen, closeScreen, toggleScreen } = useNav();
    const { frontmatter } = useData();
    const hasNavbar = computed(() => {
      return frontmatter.value.navbar !== false;
    });
    provide("close-screen", closeScreen);
    watchEffect(() => {
      if (inBrowser) {
        document.documentElement.classList.toggle("hide-nav", !hasNavbar.value);
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      if (hasNavbar.value) {
        _push(`<header${ssrRenderAttrs(mergeProps({ class: "VPNav" }, _attrs))} data-v-7ad780c2>`);
        _push(ssrRenderComponent(VPNavBar, {
          "is-screen-open": unref(isScreenOpen),
          onToggleScreen: unref(toggleScreen)
        }, {
          "nav-bar-title-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-title-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-title-before", {}, void 0, true)
              ];
            }
          }),
          "nav-bar-title-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-title-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-title-after", {}, void 0, true)
              ];
            }
          }),
          "nav-bar-content-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-content-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-content-before", {}, void 0, true)
              ];
            }
          }),
          "nav-bar-content-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-content-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-content-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
        _push(ssrRenderComponent(VPNavScreen, { open: unref(isScreenOpen) }, {
          "nav-screen-content-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-screen-content-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-screen-content-before", {}, void 0, true)
              ];
            }
          }),
          "nav-screen-content-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-screen-content-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-screen-content-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
        _push(`</header>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPNav.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
const VPNav = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["__scopeId", "data-v-7ad780c2"]]);
const _sfc_main$o = /* @__PURE__ */ defineComponent({
  __name: "VPSidebarItem",
  __ssrInlineRender: true,
  props: {
    item: {},
    depth: {}
  },
  setup(__props) {
    const props = __props;
    const {
      collapsed,
      collapsible,
      isLink,
      isActiveLink,
      hasActiveLink: hasActiveLink2,
      hasChildren,
      toggle
    } = useSidebarControl(computed(() => props.item));
    const sectionTag = computed(() => hasChildren.value ? "section" : `div`);
    const linkTag = computed(() => isLink.value ? "a" : "div");
    const textTag = computed(() => {
      return !hasChildren.value ? "p" : props.depth + 2 === 7 ? "p" : `h${props.depth + 2}`;
    });
    const itemRole = computed(() => isLink.value ? void 0 : "button");
    const classes = computed(() => [
      [`level-${props.depth}`],
      { collapsible: collapsible.value },
      { collapsed: collapsed.value },
      { "is-link": isLink.value },
      { "is-active": isActiveLink.value },
      { "has-active": hasActiveLink2.value }
    ]);
    function onItemInteraction(e) {
      if ("key" in e && e.key !== "Enter") {
        return;
      }
      !props.item.link && toggle();
    }
    function onCaretClick() {
      props.item.link && toggle();
    }
    return (_ctx, _push, _parent, _attrs) => {
      const _component_VPSidebarItem = resolveComponent("VPSidebarItem", true);
      ssrRenderVNode(_push, createVNode(resolveDynamicComponent(sectionTag.value), mergeProps({
        class: ["VPSidebarItem", classes.value]
      }, _attrs), {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (_ctx.item.text) {
              _push2(`<div class="item"${ssrRenderAttr("role", itemRole.value)}${ssrRenderAttr("tabindex", _ctx.item.items && 0)} data-v-0009425e${_scopeId}><div class="indicator" data-v-0009425e${_scopeId}></div>`);
              if (_ctx.item.link) {
                _push2(ssrRenderComponent(_sfc_main$18, {
                  tag: linkTag.value,
                  class: "link",
                  href: _ctx.item.link,
                  rel: _ctx.item.rel,
                  target: _ctx.item.target
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      ssrRenderVNode(_push3, createVNode(resolveDynamicComponent(textTag.value), { class: "text" }, null), _parent3, _scopeId2);
                    } else {
                      return [
                        (openBlock(), createBlock(resolveDynamicComponent(textTag.value), {
                          class: "text",
                          innerHTML: _ctx.item.text
                        }, null, 8, ["innerHTML"]))
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(textTag.value), { class: "text" }, null), _parent2, _scopeId);
              }
              if (_ctx.item.collapsed != null && _ctx.item.items && _ctx.item.items.length) {
                _push2(`<div class="caret" role="button" aria-label="toggle section" tabindex="0" data-v-0009425e${_scopeId}><span class="vpi-chevron-right caret-icon" data-v-0009425e${_scopeId}></span></div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.item.items && _ctx.item.items.length) {
              _push2(`<div class="items" data-v-0009425e${_scopeId}>`);
              if (_ctx.depth < 5) {
                _push2(`<!--[-->`);
                ssrRenderList(_ctx.item.items, (i) => {
                  _push2(ssrRenderComponent(_component_VPSidebarItem, {
                    key: i.text,
                    item: i,
                    depth: _ctx.depth + 1
                  }, null, _parent2, _scopeId));
                });
                _push2(`<!--]-->`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              _ctx.item.text ? (openBlock(), createBlock("div", mergeProps({
                key: 0,
                class: "item",
                role: itemRole.value
              }, toHandlers(
                _ctx.item.items ? { click: onItemInteraction, keydown: onItemInteraction } : {},
                true
              ), {
                tabindex: _ctx.item.items && 0
              }), [
                createVNode("div", { class: "indicator" }),
                _ctx.item.link ? (openBlock(), createBlock(_sfc_main$18, {
                  key: 0,
                  tag: linkTag.value,
                  class: "link",
                  href: _ctx.item.link,
                  rel: _ctx.item.rel,
                  target: _ctx.item.target
                }, {
                  default: withCtx(() => [
                    (openBlock(), createBlock(resolveDynamicComponent(textTag.value), {
                      class: "text",
                      innerHTML: _ctx.item.text
                    }, null, 8, ["innerHTML"]))
                  ]),
                  _: 1
                }, 8, ["tag", "href", "rel", "target"])) : (openBlock(), createBlock(resolveDynamicComponent(textTag.value), {
                  key: 1,
                  class: "text",
                  innerHTML: _ctx.item.text
                }, null, 8, ["innerHTML"])),
                _ctx.item.collapsed != null && _ctx.item.items && _ctx.item.items.length ? (openBlock(), createBlock("div", {
                  key: 2,
                  class: "caret",
                  role: "button",
                  "aria-label": "toggle section",
                  onClick: onCaretClick,
                  onKeydown: withKeys(onCaretClick, ["enter"]),
                  tabindex: "0"
                }, [
                  createVNode("span", { class: "vpi-chevron-right caret-icon" })
                ], 32)) : createCommentVNode("", true)
              ], 16, ["role", "tabindex"])) : createCommentVNode("", true),
              _ctx.item.items && _ctx.item.items.length ? (openBlock(), createBlock("div", {
                key: 1,
                class: "items"
              }, [
                _ctx.depth < 5 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(_ctx.item.items, (i) => {
                  return openBlock(), createBlock(_component_VPSidebarItem, {
                    key: i.text,
                    item: i,
                    depth: _ctx.depth + 1
                  }, null, 8, ["item", "depth"]);
                }), 128)) : createCommentVNode("", true)
              ])) : createCommentVNode("", true)
            ];
          }
        }),
        _: 1
      }), _parent);
    };
  }
});
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSidebarItem.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
const VPSidebarItem = /* @__PURE__ */ _export_sfc(_sfc_main$o, [["__scopeId", "data-v-0009425e"]]);
const _sfc_main$n = /* @__PURE__ */ defineComponent({
  __name: "VPSidebarGroup",
  __ssrInlineRender: true,
  props: {
    items: {}
  },
  setup(__props) {
    const disableTransition = ref(true);
    let timer = null;
    onMounted(() => {
      timer = setTimeout(() => {
        timer = null;
        disableTransition.value = false;
      }, 300);
    });
    onBeforeUnmount(() => {
      if (timer != null) {
        clearTimeout(timer);
        timer = null;
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[-->`);
      ssrRenderList(_ctx.items, (item) => {
        _push(`<div class="${ssrRenderClass([{ "no-transition": disableTransition.value }, "group"])}" data-v-51288d80>`);
        _push(ssrRenderComponent(VPSidebarItem, {
          item,
          depth: 0
        }, null, _parent));
        _push(`</div>`);
      });
      _push(`<!--]-->`);
    };
  }
});
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSidebarGroup.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
const VPSidebarGroup = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["__scopeId", "data-v-51288d80"]]);
const _sfc_main$m = /* @__PURE__ */ defineComponent({
  __name: "VPSidebar",
  __ssrInlineRender: true,
  props: {
    open: { type: Boolean }
  },
  setup(__props) {
    const { sidebarGroups, hasSidebar } = useSidebar();
    const props = __props;
    const navEl = ref(null);
    const isLocked = useScrollLock(inBrowser ? document.body : null);
    watch(
      [props, navEl],
      () => {
        var _a;
        if (props.open) {
          isLocked.value = true;
          (_a = navEl.value) == null ? void 0 : _a.focus();
        } else isLocked.value = false;
      },
      { immediate: true, flush: "post" }
    );
    const key = ref(0);
    watch(
      sidebarGroups,
      () => {
        key.value += 1;
      },
      { deep: true }
    );
    return (_ctx, _push, _parent, _attrs) => {
      if (unref(hasSidebar)) {
        _push(`<aside${ssrRenderAttrs(mergeProps({
          class: ["VPSidebar", { open: _ctx.open }],
          ref_key: "navEl",
          ref: navEl
        }, _attrs))} data-v-42c4c606><div class="curtain" data-v-42c4c606></div><nav class="nav" id="VPSidebarNav" aria-labelledby="sidebar-aria-label" tabindex="-1" data-v-42c4c606><span class="visually-hidden" id="sidebar-aria-label" data-v-42c4c606> Sidebar Navigation </span>`);
        ssrRenderSlot(_ctx.$slots, "sidebar-nav-before", {}, null, _push, _parent);
        _push(ssrRenderComponent(VPSidebarGroup, {
          items: unref(sidebarGroups),
          key: key.value
        }, null, _parent));
        ssrRenderSlot(_ctx.$slots, "sidebar-nav-after", {}, null, _push, _parent);
        _push(`</nav></aside>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
});
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSidebar.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
const VPSidebar = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["__scopeId", "data-v-42c4c606"]]);
const _sfc_main$l = /* @__PURE__ */ defineComponent({
  __name: "VPSkipLink",
  __ssrInlineRender: true,
  setup(__props) {
    const { theme: theme2 } = useData();
    const route = useRoute();
    const backToTop = ref();
    watch(() => route.path, () => backToTop.value.focus());
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><span tabindex="-1" data-v-fcbfc0e0></span><a href="#VPContent" class="VPSkipLink visually-hidden" data-v-fcbfc0e0>${ssrInterpolate(unref(theme2).skipToContentLabel || "Skip to content")}</a><!--]-->`);
    };
  }
});
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSkipLink.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
const VPSkipLink = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["__scopeId", "data-v-fcbfc0e0"]]);
const _sfc_main$k = /* @__PURE__ */ defineComponent({
  __name: "Layout",
  __ssrInlineRender: true,
  setup(__props) {
    const {
      isOpen: isSidebarOpen,
      open: openSidebar,
      close: closeSidebar
    } = useSidebar();
    const route = useRoute();
    watch(() => route.path, closeSidebar);
    useCloseSidebarOnEscape(isSidebarOpen, closeSidebar);
    const { frontmatter } = useData();
    const slots = useSlots();
    const heroImageSlotExists = computed(() => !!slots["home-hero-image"]);
    provide("hero-image-slot-exists", heroImageSlotExists);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Content = resolveComponent("Content");
      if (unref(frontmatter).layout !== false) {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: ["Layout", unref(frontmatter).pageClass]
        }, _attrs))} data-v-d8b57b2d>`);
        ssrRenderSlot(_ctx.$slots, "layout-top", {}, null, _push, _parent);
        _push(ssrRenderComponent(VPSkipLink, null, null, _parent));
        _push(ssrRenderComponent(VPBackdrop, {
          class: "backdrop",
          show: unref(isSidebarOpen),
          onClick: unref(closeSidebar)
        }, null, _parent));
        _push(ssrRenderComponent(VPNav, null, {
          "nav-bar-title-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-title-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-title-before", {}, void 0, true)
              ];
            }
          }),
          "nav-bar-title-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-title-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-title-after", {}, void 0, true)
              ];
            }
          }),
          "nav-bar-content-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-content-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-content-before", {}, void 0, true)
              ];
            }
          }),
          "nav-bar-content-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-bar-content-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-bar-content-after", {}, void 0, true)
              ];
            }
          }),
          "nav-screen-content-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-screen-content-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-screen-content-before", {}, void 0, true)
              ];
            }
          }),
          "nav-screen-content-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "nav-screen-content-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "nav-screen-content-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
        _push(ssrRenderComponent(VPLocalNav, {
          open: unref(isSidebarOpen),
          onOpenMenu: unref(openSidebar)
        }, null, _parent));
        _push(ssrRenderComponent(VPSidebar, { open: unref(isSidebarOpen) }, {
          "sidebar-nav-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "sidebar-nav-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "sidebar-nav-before", {}, void 0, true)
              ];
            }
          }),
          "sidebar-nav-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "sidebar-nav-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "sidebar-nav-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
        _push(ssrRenderComponent(VPContent, null, {
          "page-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "page-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "page-top", {}, void 0, true)
              ];
            }
          }),
          "page-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "page-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "page-bottom", {}, void 0, true)
              ];
            }
          }),
          "not-found": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "not-found", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "not-found", {}, void 0, true)
              ];
            }
          }),
          "home-hero-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-before", {}, void 0, true)
              ];
            }
          }),
          "home-hero-info-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info-before", {}, void 0, true)
              ];
            }
          }),
          "home-hero-info": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info", {}, void 0, true)
              ];
            }
          }),
          "home-hero-info-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-info-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-info-after", {}, void 0, true)
              ];
            }
          }),
          "home-hero-actions-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-actions-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-actions-after", {}, void 0, true)
              ];
            }
          }),
          "home-hero-image": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-image", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-image", {}, void 0, true)
              ];
            }
          }),
          "home-hero-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-hero-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-hero-after", {}, void 0, true)
              ];
            }
          }),
          "home-features-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-features-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-features-before", {}, void 0, true)
              ];
            }
          }),
          "home-features-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "home-features-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "home-features-after", {}, void 0, true)
              ];
            }
          }),
          "doc-footer-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-footer-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-footer-before", {}, void 0, true)
              ];
            }
          }),
          "doc-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-before", {}, void 0, true)
              ];
            }
          }),
          "doc-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-after", {}, void 0, true)
              ];
            }
          }),
          "doc-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-top", {}, void 0, true)
              ];
            }
          }),
          "doc-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "doc-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "doc-bottom", {}, void 0, true)
              ];
            }
          }),
          "aside-top": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-top", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-top", {}, void 0, true)
              ];
            }
          }),
          "aside-bottom": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-bottom", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-bottom", {}, void 0, true)
              ];
            }
          }),
          "aside-outline-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-outline-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-outline-before", {}, void 0, true)
              ];
            }
          }),
          "aside-outline-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-outline-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-outline-after", {}, void 0, true)
              ];
            }
          }),
          "aside-ads-before": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-ads-before", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-ads-before", {}, void 0, true)
              ];
            }
          }),
          "aside-ads-after": withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderSlot(_ctx.$slots, "aside-ads-after", {}, null, _push2, _parent2, _scopeId);
            } else {
              return [
                renderSlot(_ctx.$slots, "aside-ads-after", {}, void 0, true)
              ];
            }
          }),
          _: 3
        }, _parent));
        _push(ssrRenderComponent(VPFooter, null, null, _parent));
        ssrRenderSlot(_ctx.$slots, "layout-bottom", {}, null, _push, _parent);
        _push(`</div>`);
      } else {
        _push(ssrRenderComponent(_component_Content, _attrs, null, _parent));
      }
    };
  }
});
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/Layout.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
const Layout$1 = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["__scopeId", "data-v-d8b57b2d"]]);
const GridSettings = {
  xmini: [[0, 2]],
  mini: [],
  small: [
    [920, 6],
    [768, 5],
    [640, 4],
    [480, 3],
    [0, 2]
  ],
  medium: [
    [960, 5],
    [832, 4],
    [640, 3],
    [480, 2]
  ],
  big: [
    [832, 3],
    [640, 2]
  ]
};
function useSponsorsGrid({ el, size = "medium" }) {
  const onResize = throttleAndDebounce(manage, 100);
  onMounted(() => {
    manage();
    window.addEventListener("resize", onResize);
  });
  onUnmounted(() => {
    window.removeEventListener("resize", onResize);
  });
  function manage() {
    adjustSlots(el.value, size);
  }
}
function adjustSlots(el, size) {
  const tsize = el.children.length;
  const asize = el.querySelectorAll(".vp-sponsor-grid-item:not(.empty)").length;
  const grid = setGrid(el, size, asize);
  manageSlots(el, grid, tsize, asize);
}
function setGrid(el, size, items) {
  const settings = GridSettings[size];
  const screen = window.innerWidth;
  let grid = 1;
  settings.some(([breakpoint, value]) => {
    if (screen >= breakpoint) {
      grid = items < value ? items : value;
      return true;
    }
  });
  setGridData(el, grid);
  return grid;
}
function setGridData(el, value) {
  el.dataset.vpGrid = String(value);
}
function manageSlots(el, grid, tsize, asize) {
  const diff = tsize - asize;
  const rem = asize % grid;
  const drem = rem === 0 ? rem : grid - rem;
  neutralizeSlots(el, drem - diff);
}
function neutralizeSlots(el, count) {
  if (count === 0) {
    return;
  }
  count > 0 ? addSlots(el, count) : removeSlots(el, count * -1);
}
function addSlots(el, count) {
  for (let i = 0; i < count; i++) {
    const slot = document.createElement("div");
    slot.classList.add("vp-sponsor-grid-item", "empty");
    el.append(slot);
  }
}
function removeSlots(el, count) {
  for (let i = 0; i < count; i++) {
    el.removeChild(el.lastElementChild);
  }
}
const _sfc_main$j = /* @__PURE__ */ defineComponent({
  __name: "VPSponsorsGrid",
  __ssrInlineRender: true,
  props: {
    size: { default: "medium" },
    data: {}
  },
  setup(__props) {
    const props = __props;
    const el = ref(null);
    useSponsorsGrid({ el, size: props.size });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPSponsorsGrid vp-sponsor-grid", [_ctx.size]],
        ref_key: "el",
        ref: el
      }, _attrs))}><!--[-->`);
      ssrRenderList(_ctx.data, (sponsor) => {
        _push(`<div class="vp-sponsor-grid-item"><a class="vp-sponsor-grid-link"${ssrRenderAttr("href", sponsor.url)} target="_blank" rel="sponsored noopener"><article class="vp-sponsor-grid-box"><h4 class="visually-hidden">${ssrInterpolate(sponsor.name)}</h4><img class="vp-sponsor-grid-image"${ssrRenderAttr("src", sponsor.img)}${ssrRenderAttr("alt", sponsor.name)}></article></a></div>`);
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSponsorsGrid.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
const _sfc_main$i = /* @__PURE__ */ defineComponent({
  __name: "VPSponsors",
  __ssrInlineRender: true,
  props: {
    mode: { default: "normal" },
    tier: {},
    size: {},
    data: {}
  },
  setup(__props) {
    const props = __props;
    const sponsors = computed(() => {
      const isSponsors = props.data.some((s) => {
        return "items" in s;
      });
      if (isSponsors) {
        return props.data;
      }
      return [
        { tier: props.tier, size: props.size, items: props.data }
      ];
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPSponsors vp-sponsor", [_ctx.mode]]
      }, _attrs))}><!--[-->`);
      ssrRenderList(sponsors.value, (sponsor, index) => {
        _push(`<section class="vp-sponsor-section">`);
        if (sponsor.tier) {
          _push(`<h3 class="vp-sponsor-tier">${ssrInterpolate(sponsor.tier)}</h3>`);
        } else {
          _push(`<!---->`);
        }
        _push(ssrRenderComponent(_sfc_main$j, {
          size: sponsor.size,
          data: sponsor.items
        }, null, _parent));
        _push(`</section>`);
      });
      _push(`<!--]--></div>`);
    };
  }
});
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPSponsors.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const _sfc_main$h = /* @__PURE__ */ defineComponent({
  __name: "VPDocAsideSponsors",
  __ssrInlineRender: true,
  props: {
    tier: {},
    size: {},
    data: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "VPDocAsideSponsors" }, _attrs))}>`);
      _push(ssrRenderComponent(_sfc_main$i, {
        mode: "aside",
        tier: _ctx.tier,
        size: _ctx.size,
        data: _ctx.data
      }, null, _parent));
      _push(`</div>`);
    };
  }
});
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPDocAsideSponsors.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const _sfc_main$g = /* @__PURE__ */ defineComponent({
  __name: "VPHomeSponsors",
  __ssrInlineRender: true,
  props: {
    message: {},
    actionText: { default: "Become a sponsor" },
    actionLink: {},
    data: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<section${ssrRenderAttrs(mergeProps({ class: "VPHomeSponsors" }, _attrs))} data-v-3dc26e1d><div class="container" data-v-3dc26e1d><div class="header" data-v-3dc26e1d><div class="love" data-v-3dc26e1d><span class="vpi-heart icon" data-v-3dc26e1d></span></div>`);
      if (_ctx.message) {
        _push(`<h2 class="message" data-v-3dc26e1d>${ssrInterpolate(_ctx.message)}</h2>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="sponsors" data-v-3dc26e1d>`);
      _push(ssrRenderComponent(_sfc_main$i, { data: _ctx.data }, null, _parent));
      _push(`</div>`);
      if (_ctx.actionLink) {
        _push(`<div class="action" data-v-3dc26e1d>`);
        _push(ssrRenderComponent(VPButton, {
          theme: "sponsor",
          text: _ctx.actionText,
          href: _ctx.actionLink
        }, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></section>`);
    };
  }
});
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPHomeSponsors.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
const _sfc_main$f = /* @__PURE__ */ defineComponent({
  __name: "VPTeamMembersItem",
  __ssrInlineRender: true,
  props: {
    size: { default: "medium" },
    member: {}
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<article${ssrRenderAttrs(mergeProps({
        class: ["VPTeamMembersItem", [_ctx.size]]
      }, _attrs))} data-v-acff304e><div class="profile" data-v-acff304e><figure class="avatar" data-v-acff304e><img class="avatar-img"${ssrRenderAttr("src", _ctx.member.avatar)}${ssrRenderAttr("alt", _ctx.member.name)} data-v-acff304e></figure><div class="data" data-v-acff304e><h1 class="name" data-v-acff304e>${ssrInterpolate(_ctx.member.name)}</h1>`);
      if (_ctx.member.title || _ctx.member.org) {
        _push(`<p class="affiliation" data-v-acff304e>`);
        if (_ctx.member.title) {
          _push(`<span class="title" data-v-acff304e>${ssrInterpolate(_ctx.member.title)}</span>`);
        } else {
          _push(`<!---->`);
        }
        if (_ctx.member.title && _ctx.member.org) {
          _push(`<span class="at" data-v-acff304e> @ </span>`);
        } else {
          _push(`<!---->`);
        }
        if (_ctx.member.org) {
          _push(ssrRenderComponent(_sfc_main$18, {
            class: ["org", { link: _ctx.member.orgLink }],
            href: _ctx.member.orgLink,
            "no-icon": ""
          }, {
            default: withCtx((_, _push2, _parent2, _scopeId) => {
              if (_push2) {
                _push2(`${ssrInterpolate(_ctx.member.org)}`);
              } else {
                return [
                  createTextVNode(toDisplayString(_ctx.member.org), 1)
                ];
              }
            }),
            _: 1
          }, _parent));
        } else {
          _push(`<!---->`);
        }
        _push(`</p>`);
      } else {
        _push(`<!---->`);
      }
      if (_ctx.member.desc) {
        _push(`<p class="desc" data-v-acff304e>${_ctx.member.desc ?? ""}</p>`);
      } else {
        _push(`<!---->`);
      }
      if (_ctx.member.links) {
        _push(`<div class="links" data-v-acff304e>`);
        _push(ssrRenderComponent(VPSocialLinks, {
          links: _ctx.member.links
        }, null, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
      if (_ctx.member.sponsor) {
        _push(`<div class="sp" data-v-acff304e>`);
        _push(ssrRenderComponent(_sfc_main$18, {
          class: "sp-link",
          href: _ctx.member.sponsor,
          "no-icon": ""
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<span class="vpi-heart sp-icon" data-v-acff304e${_scopeId}></span> ${ssrInterpolate(_ctx.member.actionText || "Sponsor")}`);
            } else {
              return [
                createVNode("span", { class: "vpi-heart sp-icon" }),
                createTextVNode(" " + toDisplayString(_ctx.member.actionText || "Sponsor"), 1)
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</article>`);
    };
  }
});
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPTeamMembersItem.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const VPTeamMembersItem = /* @__PURE__ */ _export_sfc(_sfc_main$f, [["__scopeId", "data-v-acff304e"]]);
const _sfc_main$e = /* @__PURE__ */ defineComponent({
  __name: "VPTeamMembers",
  __ssrInlineRender: true,
  props: {
    size: { default: "medium" },
    members: {}
  },
  setup(__props) {
    const props = __props;
    const classes = computed(() => [props.size, `count-${props.members.length}`]);
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: ["VPTeamMembers", classes.value]
      }, _attrs))} data-v-bf782009><div class="container" data-v-bf782009><!--[-->`);
      ssrRenderList(_ctx.members, (member) => {
        _push(`<div class="item" data-v-bf782009>`);
        _push(ssrRenderComponent(VPTeamMembersItem, {
          size: _ctx.size,
          member
        }, null, _parent));
        _push(`</div>`);
      });
      _push(`<!--]--></div></div>`);
    };
  }
});
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPTeamMembers.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const _sfc_main$d = {};
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPTeamPage.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const _sfc_main$c = {};
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPTeamPageSection.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const _sfc_main$b = {};
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("node_modules/vitepress/dist/client/theme-default/components/VPTeamPageTitle.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
const theme = {
  Layout: Layout$1,
  enhanceApp: ({ app }) => {
    app.component("Badge", _sfc_main$1f);
  }
};
const _sfc_main$a = /* @__PURE__ */ defineComponent({
  __name: "BilibiliOutsidePlayer",
  __ssrInlineRender: true,
  props: {
    id: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<iframe${ssrRenderAttrs(mergeProps({
        style: { "width": "100%", "aspect-ratio": "16/9", "margin": "1rem 0" },
        src: "//player.bilibili.com/player.html?isOutside=true&bvid=" + __props.id,
        scrolling: "no",
        border: "0",
        frameborder: "no",
        framespacing: "0",
        allowfullscreen: "true"
      }, _attrs))}></iframe>`);
    };
  }
});
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/BilibiliOutsidePlayer/BilibiliOutsidePlayer.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const GISCUS_DARK_THEME = "noborder_dark";
const GISCUS_LIGHT_THEME = "noborder_light";
const _sfc_main$9 = /* @__PURE__ */ defineComponent({
  __name: "Discussions",
  __ssrInlineRender: true,
  props: {
    /**
     * 留言版 ID
     * 格式规范：repoName.noteId
     * eg.
     *    TNotes.electron.0001
     *    TNotes.react.0032
     *    TNotes.react.0040
     */
    id: {
      type: String,
      required: true
    }
  },
  setup(__props) {
    const props = __props;
    const { isDark } = useData$1();
    const loadGiscusScript = () => {
      var _a;
      const oldScript = document.getElementById("giscus-script");
      const oldIframe = document.querySelector("iframe.giscus-frame");
      if (oldScript) oldScript.remove();
      if (oldIframe) oldIframe.remove();
      const giscusScript = document.createElement("script");
      giscusScript.src = "https://giscus.app/client.js";
      giscusScript.setAttribute("data-repo", "Tdahuyou/TNotes.discussions");
      giscusScript.setAttribute("data-repo-id", "R_kgDON-A6tg");
      giscusScript.setAttribute("data-category", "Announcements");
      giscusScript.setAttribute("data-category-id", "DIC_kwDON-A6ts4CnPI3");
      giscusScript.setAttribute("data-mapping", "specific");
      giscusScript.setAttribute("data-term", props.id);
      giscusScript.setAttribute("data-strict", "0");
      giscusScript.setAttribute("data-reactions-enabled", "1");
      giscusScript.setAttribute("data-emit-metadata", "0");
      giscusScript.setAttribute("data-input-position", "top");
      giscusScript.setAttribute("data-lang", "zh-CN");
      giscusScript.setAttribute("data-loading", "lazy");
      giscusScript.setAttribute("data-theme", isDark.value ? GISCUS_DARK_THEME : GISCUS_LIGHT_THEME);
      giscusScript.setAttribute("crossorigin", "anonymous");
      giscusScript.async = true;
      giscusScript.id = "giscus-script";
      (_a = document.getElementById("giscus-comments")) == null ? void 0 : _a.appendChild(giscusScript);
    };
    onMounted(() => {
      loadGiscusScript();
    });
    watch([() => props.id], ([newId]) => {
      loadGiscusScript();
    });
    watch(isDark, (newVal) => {
      var _a;
      const iframe = document.querySelector("iframe.giscus-frame");
      if (iframe) {
        (_a = iframe.contentWindow) == null ? void 0 : _a.postMessage(
          {
            giscus: {
              setConfig: {
                theme: newVal ? GISCUS_DARK_THEME : GISCUS_LIGHT_THEME
              }
            }
          },
          "https://giscus.app"
        );
      }
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><h2 data-v-0e01c106>🫧 Discussions</h2><div id="giscus-comments" data-v-0e01c106></div><p class="id-box" title="留言版 ID" data-v-0e01c106>${ssrInterpolate(__props.id)}</p><!--]-->`);
    };
  }
});
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/Discussions/Discussions.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const Discussions = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["__scopeId", "data-v-0e01c106"]]);
const repoName = "TNotes.leetcode";
const root_item = {
  icon: {
    src: "https://cdn.jsdelivr.net/gh/Tdahuyou/imgs@main/assets/icon--leetcode.svg"
  },
  title: "leetcode",
  completed_notes_count: 55,
  details: "Leetcode 刷题笔记",
  link: "https://tdahuyou.github.io/TNotes.leetcode/",
  created_at: 1741793958e3,
  updated_at: 1755751215959,
  days_since_birth: 9389
};
const ROOT_ITEM = root_item;
const NOTES_DIR_KEY = "NOTES_DIR_KEY__" + repoName;
const NOTES_VIEW_KEY = "NOTES_VIEW_KEY__" + repoName;
const TOC = "TOC";
const TOC_MD = TOC + ".md";
const EN_WORDS_REPO_BASE_URL = "https://github.com/Tdahuyou/TNotes.en-words/blob/main/";
const EN_WORDS_REPO_BASE_RAW_URL = "https://raw.githubusercontent.com/Tdahuyou/TNotes.en-words/refs/heads/main/";
const _sfc_main$8 = {
  __name: "RightClickMenu",
  __ssrInlineRender: true,
  props: {
    show: Boolean,
    isAutoShowCard: Boolean,
    x: Number,
    y: Number
  },
  emits: ["pin", "pronounce"],
  setup(__props, { emit: __emit }) {
    return (_ctx, _push, _parent, _attrs) => {
      if (__props.show) {
        _push(`<div${ssrRenderAttrs(mergeProps({
          class: "right-click-menu",
          style: { left: __props.x + "px", top: __props.y + "px" }
        }, _attrs))} data-v-1483340a><div class="menu-item" data-v-1483340a>📌 Pin</div><div class="menu-item" data-v-1483340a> 📢 Pronounce（英） </div><div class="menu-item" data-v-1483340a> 📢 Pronounce（美） </div><div class="menu-item" data-v-1483340a> 📢 Pronounce All（英） </div><div class="menu-item" data-v-1483340a> 📢 Pronounce All（美） </div><div class="menu-item" data-v-1483340a> 🔍 Auto Show Card（${ssrInterpolate(__props.isAutoShowCard ? "关" : "开")}） </div><div class="menu-item" data-v-1483340a>✅ Check All</div><div class="menu-item" data-v-1483340a>❌ Reset</div></div>`);
      } else {
        _push(`<!---->`);
      }
    };
  }
};
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/EnWordList/RightClickMenu.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const RightClickMenu = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["__scopeId", "data-v-1483340a"]]);
const _sfc_main$7 = {
  __name: "EnWordList",
  __ssrInlineRender: true,
  props: {
    words: {
      type: Array,
      default: () => []
    },
    needSort: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const isMobile = computed(() => {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
      );
    });
    const pathname = window.location.pathname;
    const sortedWords = props.needSort ? computed(
      () => [...new Set(props.words)].sort(
        (a, b) => a.toLowerCase()[0].charCodeAt() - b.toLowerCase()[0].charCodeAt()
      )
    ) : computed(() => [...new Set(props.words)]);
    const checkedStates = ref({});
    const updateCheckedState = (word, isChecked) => {
      const key = `${pathname}-${word}`;
      checkedStates.value[word] = isChecked;
      localStorage.setItem(key, isChecked);
    };
    const checkAll = () => {
      Object.keys(checkedStates.value).forEach((word) => {
        updateCheckedState(word, true);
      });
      hideContextMenu();
    };
    const reset = () => {
      sortedWords.value.forEach((word) => {
        const key = `${pathname}-${word}`;
        localStorage.removeItem(key);
        checkedStates.value[word] = false;
      });
      hideContextMenu();
    };
    ref(1e4);
    const isAutoShowCard = ref(false);
    const showCard = ref(false);
    const cardX = ref(0);
    const cardY = ref(0);
    const cardContent = ref("");
    const wordCache = ref({});
    const failedWords = ref({});
    const pinnedCards = ref([]);
    let draggingCard = null;
    let offsetX = 0;
    let offsetY = 0;
    const contextMenuVisible = ref(false);
    const contextMenuX = ref(0);
    const contextMenuY = ref(0);
    let currentWordForContextMenu = null;
    let hoverTimer = null;
    const preloadWords = async () => {
      const wordsToPreload = sortedWords.value;
      if (!wordsToPreload.length) return;
      for (let i = 0; i < wordsToPreload.length; i++) {
        const word = wordsToPreload[i];
        if (wordCache.value[word]) continue;
        const url = `${EN_WORDS_REPO_BASE_RAW_URL}${encodeURIComponent(
          word.toLowerCase().replaceAll(/\s/g, "_")
        )}.md`;
        try {
          const res = await fetch(url);
          if (res.ok) {
            let text = await res.text();
            text = marked.parse(text);
            wordCache.value[word] = text;
            console.log(`✅ 预加载完成: ${word}`);
          } else {
            wordCache.value[word] = `<em>无法加载单词内容</em>`;
            failedWords.value[word] = true;
          }
        } catch (err) {
          console.error(`❌ 加载失败: ${word}`, err);
          wordCache.value[word] = `<em>加载失败</em>`;
          failedWords.value[word] = true;
        }
        await new Promise((resolve) => setTimeout(resolve, 200));
      }
    };
    const onDragging = (e) => {
      if (!draggingCard) return;
      draggingCard.x = e.clientX - offsetX;
      draggingCard.y = e.clientY - offsetY;
    };
    const stopDrag = () => {
      draggingCard = null;
      document.removeEventListener("mousemove", onDragging);
      document.removeEventListener("mouseup", stopDrag);
    };
    const hideContextMenu = () => {
      contextMenuVisible.value = false;
    };
    document.body.addEventListener("click", hideContextMenu);
    const handleContextMenuPin = () => {
    };
    let currentPronounceAllIndex = ref(0);
    let isPronouncingAll = ref(false);
    let pronounceAllInterval = null;
    const handlePronounceAll = (lang) => {
      if (isPronouncingAll.value) {
        stopPronounceAll();
        return;
      }
      const wordsToSpeak = sortedWords.value;
      if (!wordsToSpeak.length) return;
      currentPronounceAllIndex.value = 0;
      isPronouncingAll.value = true;
      const speakNext = async () => {
        if (!isPronouncingAll.value || currentPronounceAllIndex.value >= wordsToSpeak.length) {
          stopPronounceAll();
          return;
        }
        const word = wordsToSpeak[currentPronounceAllIndex.value];
        const utterance = new SpeechSynthesisUtterance(word);
        utterance.lang = lang;
        speechSynthesis.speak(utterance);
        await nextTick();
        currentPronounceAllIndex.value++;
      };
      speakNext();
      pronounceAllInterval = setInterval(speakNext, 1500);
      hideContextMenu();
    };
    const stopPronounceAll = () => {
      isPronouncingAll.value = false;
      if (pronounceAllInterval) {
        clearInterval(pronounceAllInterval);
        pronounceAllInterval = null;
      }
      speechSynthesis.cancel();
    };
    const handlePronounce = (word, lang = "en-GB") => {
      if ("speechSynthesis" in window) {
        stopPronounceAll();
        const utterance = new SpeechSynthesisUtterance(word);
        utterance.lang = lang;
        speechSynthesis.speak(utterance);
        hideContextMenu();
      } else {
        alert("您的浏览器不支持语音功能，请尝试使用 Chrome 或 Edge 浏览器。");
      }
    };
    onMounted(() => {
      sortedWords.value.forEach((word) => {
        const key = `${pathname}-${word}`;
        const storedState = localStorage.getItem(key);
        checkedStates.value[word] = storedState === "true";
      });
      if (!isMobile.value) preloadWords();
    });
    onUnmounted(() => {
      clearTimeout(hoverTimer);
      document.removeEventListener("mousemove", onDragging);
      document.removeEventListener("mouseup", stopDrag);
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><div class="__EnWordList__" data-v-14bba87a><ol data-v-14bba87a><!--[-->`);
      ssrRenderList(unref(sortedWords), (word, index) => {
        _push(`<li class="${ssrRenderClass({
          pronounced: unref(isPronouncingAll) && unref(currentPronounceAllIndex) === index + 1
        })}" data-v-14bba87a><span class="index" data-v-14bba87a>${ssrInterpolate(index + 1)}.</span><input type="checkbox"${ssrRenderAttr("id", word)}${ssrIncludeBooleanAttr(checkedStates.value[word]) ? " checked" : ""} data-v-14bba87a><label${ssrRenderAttr("for", word)} data-v-14bba87a><a${ssrRenderAttr("href", `${unref(EN_WORDS_REPO_BASE_URL)}${encodeURIComponent(
          word.toLowerCase().replaceAll(/\s/g, "_")
        )}.md`)} class="${ssrRenderClass({
          "line-through": checkedStates.value[word],
          "text-red": failedWords.value[word]
        })}" data-v-14bba87a>${ssrInterpolate(word)}</a></label></li>`);
      });
      _push(`<!--]--></ol>`);
      if (showCard.value) {
        _push(`<div class="word-card" style="${ssrRenderStyle({ left: cardX.value + "px", top: cardY.value + "px" })}" data-v-14bba87a><div class="word-card-content" data-v-14bba87a>${cardContent.value ?? ""}</div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<!--[-->`);
      ssrRenderList(pinnedCards.value, (card) => {
        _push(`<div class="word-card pinned" style="${ssrRenderStyle({
          left: card.x + "px",
          top: card.y + "px",
          width: card.width + "px",
          height: card.height + "px",
          zIndex: card.zIndex
        })}" data-v-14bba87a><div class="word-card-content-wrapper" data-v-14bba87a><div class="word-card-content" data-v-14bba87a>${card.content ?? ""}</div></div><button class="close-btn" data-v-14bba87a>✖</button><div class="resize-handle" data-v-14bba87a></div></div>`);
      });
      _push(`<!--]--></div>`);
      if (!isMobile.value) {
        _push(ssrRenderComponent(RightClickMenu, {
          show: contextMenuVisible.value,
          x: contextMenuX.value,
          y: contextMenuY.value,
          isAutoShowCard: isAutoShowCard.value,
          onPin: handleContextMenuPin,
          onPronounce: (lang) => handlePronounce(unref(currentWordForContextMenu), lang),
          onPronounceAll: (lang) => handlePronounceAll(lang),
          onAutoShowCard: () => {
            isAutoShowCard.value = !isAutoShowCard.value;
            hideContextMenu();
          },
          onCheckAll: checkAll,
          onReset: reset
        }, null, _parent));
      } else {
        _push(`<!---->`);
      }
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/EnWordList/EnWordList.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const EnWordList = /* @__PURE__ */ _export_sfc(_sfc_main$7, [["__scopeId", "data-v-14bba87a"]]);
const _sfc_main$6 = {
  __name: "Footprints",
  __ssrInlineRender: true,
  props: {
    times: {
      type: Array,
      default: () => [],
      validator: (value) => {
        return value.length >= 2 && value.length <= 6 && value.every((item, index) => {
          if (index === 0) return typeof item === "number" && item >= 0;
          if (index === 1) return typeof item === "number" && item >= 1 && item <= 12;
          if (index === 2) return typeof item === "number" && item >= 1 && item <= 31;
          if (index === 3) return typeof item === "number" && item >= 0 && item <= 23;
          if (index === 4) return typeof item === "number" && item >= 0 && item <= 59;
          if (index === 5) return typeof item === "number" && item >= 0 && item <= 59;
          return false;
        });
      }
    }
  },
  setup(__props) {
    const imageContainer = ref(null);
    const images = ref([]);
    const isModalVisible = ref(false);
    const currentIndex = ref(0);
    const currentImage = computed(() => images.value[currentIndex.value]);
    const instanceId = Math.random().toString(36).substr(2, 9);
    const openModal = (index) => {
      currentIndex.value = index;
      isModalVisible.value = true;
    };
    const closeModal = () => isModalVisible.value = false;
    const handleKeyDown = (event2) => {
      if (!isModalVisible.value) return;
      switch (event2.key) {
        case "ArrowLeft":
          if (currentIndex.value > 0) currentIndex.value -= 1;
          break;
        case "ArrowRight":
          if (currentIndex.value < images.value.length - 1) currentIndex.value += 1;
          break;
        case "Escape":
          closeModal();
          break;
      }
    };
    let touchStartX = 0;
    let touchEndX = 0;
    const handleTouchStart = (event2) => {
      event2.preventDefault();
      touchStartX = event2.touches[0].clientX;
    };
    const handleTouchMove = (event2) => {
      event2.preventDefault();
      event2.touches[0].clientX;
    };
    const handleTouchEnd = () => {
      const swipeThreshold = 50;
      const swipeDistance = touchEndX - touchStartX;
      console.log(`Touch end at: ${touchEndX}, Distance: ${swipeDistance}`);
      if (swipeDistance > swipeThreshold && currentIndex.value > 0) {
        currentIndex.value--;
      } else if (swipeDistance < -50 && currentIndex.value < images.value.length - 1) {
        currentIndex.value++;
      }
    };
    let mouseStartX = 0;
    const handleMouseDown = (event2) => {
      event2.preventDefault();
      mouseStartX = event2.clientX;
      window.addEventListener("mousemove", handleMouseMove);
      window.addEventListener("mouseup", handleMouseUp);
    };
    const handleMouseMove = (event2) => {
      event2.preventDefault();
      event2.clientX;
    };
    const handleMouseUp = () => {
      const swipeThreshold = 50;
      const modalContent = document.querySelector(".__dynamic__modal-content");
      if (!modalContent) return;
      const currentX = event.clientX;
      const moveDistance = currentX - mouseStartX;
      if (moveDistance > swipeThreshold && currentIndex.value > 0) {
        currentIndex.value--;
      } else if (moveDistance < -50 && currentIndex.value < images.value.length - 1) {
        currentIndex.value++;
      }
      mouseStartX = 0;
      window.removeEventListener("mousemove", handleMouseMove);
      window.removeEventListener("mouseup", handleMouseUp);
    };
    onMounted(() => {
      const imgElements = imageContainer.value.querySelectorAll("img");
      images.value = Array.from(imgElements).map((img) => img.src);
      window.addEventListener("keydown", handleKeyDown);
      const modalContent = document.querySelector(`.__dynamic__modal-content-${instanceId}`);
      if (modalContent) {
        modalContent.addEventListener("touchstart", handleTouchStart);
        modalContent.addEventListener("touchmove", handleTouchMove);
        modalContent.addEventListener("touchend", (event2) => {
          touchEndX = event2.changedTouches[0].clientX;
          handleTouchEnd();
        });
        modalContent.addEventListener("mousedown", handleMouseDown);
      }
    });
    onBeforeUnmount(() => {
      window.removeEventListener("keydown", handleKeyDown);
      const modalContent = document.querySelector(`.__dynamic__modal-content-${instanceId}`);
      if (modalContent) {
        modalContent.removeEventListener("touchstart", handleTouchStart);
        modalContent.removeEventListener("touchmove", handleTouchMove);
        modalContent.removeEventListener("touchend", handleTouchEnd);
        modalContent.removeEventListener("mousedown", handleMouseDown);
      }
    });
    const textContainer = ref(null);
    const isCollapsed = ref(true);
    const isExpandable = ref(false);
    const checkChildElementCount = () => {
      if (textContainer.value) {
        const childElements = textContainer.value.children;
        isExpandable.value = childElements.length > 2;
      }
    };
    onMounted(() => {
      nextTick(checkChildElementCount);
    });
    const props = __props;
    const formattedTime = computed(() => {
      if (props.times.length < 2) return "";
      const [year, month, day, hour, minute, second] = props.times;
      const datePart = `${String(year).padStart(4, "0")}-${String(month).padStart(2, "0")}`;
      const dayPart = day !== void 0 ? `-${String(day).padStart(2, "0")}` : "";
      let timePart = "";
      if (hour !== void 0 && minute !== void 0 && second !== void 0) {
        timePart = ` ${String(hour).padStart(2, "0")}:${String(minute).padStart(2, "0")}:${String(second).padStart(2, "0")}`;
      } else if (hour !== void 0 && minute !== void 0) {
        timePart = ` ${String(hour).padStart(2, "0")}:${String(minute).padStart(2, "0")}`;
      }
      let daysSinceBirthday = "";
      if (day !== void 0) {
        const birthday = new Date(Date.UTC(1999, 5, 29));
        const currentDate = new Date(Date.UTC(year, month - 1, day));
        const diffInMilliseconds = currentDate - birthday;
        const diffInDays = Math.floor(diffInMilliseconds / (1e3 * 60 * 60 * 24)) + 1;
        daysSinceBirthday = `👣 ${diffInDays} | `;
      }
      return daysSinceBirthday + datePart + dayPart + timePart;
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><div class="__dynamic__text-container"><div class="${ssrRenderClass([{ collapsed: isCollapsed.value }, "__dynamic__text-content"])}">`);
      ssrRenderSlot(_ctx.$slots, "text-area", {}, null, _push, _parent);
      _push(`</div>`);
      if (isExpandable.value) {
        _push(`<button class="__dynamic__toggle-button">${ssrInterpolate(isCollapsed.value ? "全文" : "收起")}</button>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="__dynamic__image-container">`);
      ssrRenderSlot(_ctx.$slots, "image-list", {
        openModal,
        closeModal,
        currentImage: currentImage.value,
        isModalVisible: isModalVisible.value
      }, null, _push, _parent);
      _push(`</div><div class="__dynamic__modal" style="${ssrRenderStyle(isModalVisible.value ? null : { display: "none" })}"><span class="__dynamic__close">×</span><img class="${ssrRenderClass([`__dynamic__modal-content-${unref(instanceId)}`, "__dynamic__modal-content"])}"${ssrRenderAttr("src", currentImage.value)} alt="Preview"></div><div class="__dynamic__time-container"><p>${ssrInterpolate(formattedTime.value)}</p></div><div class="__dynamic__other-info-container">`);
      ssrRenderSlot(_ctx.$slots, "other-info", {}, null, _push, _parent);
      _push(`</div><!--]-->`);
    };
  }
};
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/Footprints/Footprints.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const icon__close = "/TNotes.leetcode/icon__close.svg";
const icon__next = "/TNotes.leetcode/icon__next.svg";
const icon__prev = "/TNotes.leetcode/icon__prev.svg";
const icon__restore = "/TNotes.leetcode/icon__restore.svg";
const icon__zoom_in = "/TNotes.leetcode/icon__zoom_in.svg";
const icon__zoom_out = "/TNotes.leetcode/icon__zoom_out.svg";
const _sfc_main$5 = {
  __name: "ImagePreview",
  __ssrInlineRender: true,
  setup(__props) {
    const preview = ref({
      visible: false,
      src: "",
      scale: 1,
      tx: 0,
      ty: 0,
      images: [],
      // 当前文档里的所有图片 src
      index: -1
      // 当前打开的索引
    });
    ref(null);
    const previewStyle = computed(() => ({
      transform: `translate(${preview.value.tx}px, ${preview.value.ty}px) scale(${preview.value.scale})`,
      cursor: "grab"
    }));
    function openPreview(src) {
      const imgs = Array.from(document.querySelectorAll(".vp-doc img")).filter(
        (img) => {
          var _a;
          return !(((_a = img.dataset) == null ? void 0 : _a.preview) === "false" || img.closest(".tn-preview-ignore"));
        }
      ).map((img) => img.currentSrc || img.src);
      preview.value.images = imgs;
      preview.value.index = imgs.indexOf(src);
      preview.value.visible = true;
      preview.value.src = src;
      preview.value.scale = 1;
      preview.value.tx = 0;
      preview.value.ty = 0;
      document.documentElement.style.overflow = "hidden";
    }
    function prevImage() {
      if (preview.value.images.length <= 1) return;
      preview.value.index = (preview.value.index - 1 + preview.value.images.length) % preview.value.images.length;
      preview.value.src = preview.value.images[preview.value.index];
      resetTransform();
    }
    function nextImage() {
      if (preview.value.images.length <= 1) return;
      preview.value.index = (preview.value.index + 1) % preview.value.images.length;
      preview.value.src = preview.value.images[preview.value.index];
      resetTransform();
    }
    function closePreview() {
      preview.value.visible = false;
      document.documentElement.style.overflow = "";
    }
    function zoomIn() {
      preview.value.scale = Math.min(3, preview.value.scale + 0.1);
    }
    function zoomOut() {
      preview.value.scale = Math.max(0.2, preview.value.scale - 0.1);
    }
    function resetTransform() {
      preview.value.scale = 1;
      preview.value.tx = 0;
      preview.value.ty = 0;
    }
    function onKeydown(e) {
      if (!preview.value.visible) return;
      if (e.key === "Escape") closePreview();
      else if (e.key === "ArrowLeft") prevImage();
      else if (e.key === "ArrowRight") nextImage();
      else if (e.key === "Enter") toggleZoom();
      else if (e.key === "ArrowUp") zoomIn();
      else if (e.key === "ArrowDown") zoomOut();
    }
    function onDocClick(e) {
      var _a, _b;
      if (preview.value.visible) return;
      const target = e.target;
      if (!target) return;
      const img = (_a = target.closest) == null ? void 0 : _a.call(target, "img");
      if (!img) return;
      const inDoc = img.closest(".vp-doc") || img.closest(".VPDoc") || img.closest(".main");
      if (!inDoc) return;
      if (((_b = img.dataset) == null ? void 0 : _b.preview) === "false" || img.closest(".tn-preview-ignore"))
        return;
      const a = img.closest("a");
      if (a) {
        e.preventDefault();
        e.stopPropagation();
      }
      const src = img.currentSrc || img.src;
      if (src) openPreview(src);
    }
    onMounted(() => {
      document.addEventListener("click", onDocClick, true);
      document.addEventListener("keydown", onKeydown);
    });
    onBeforeUnmount(() => {
      document.removeEventListener("click", onDocClick, true);
      document.removeEventListener("keydown", onKeydown);
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        style: preview.value.visible ? null : { display: "none" },
        class: "tn-preview"
      }, _attrs))} data-v-0a6473b7>`);
      if (preview.value.images.length > 1) {
        _push(`<button class="tn-preview__nav tn-preview__nav--left" data-v-0a6473b7><img${ssrRenderAttr("src", unref(icon__prev))} alt="prev" data-v-0a6473b7></button>`);
      } else {
        _push(`<!---->`);
      }
      if (preview.value.images.length > 1) {
        _push(`<button class="tn-preview__nav tn-preview__nav--right" data-v-0a6473b7><img${ssrRenderAttr("src", unref(icon__next))} alt="next" data-v-0a6473b7></button>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="tn-preview__toolbar" data-v-0a6473b7><button title="缩小" data-v-0a6473b7><img${ssrRenderAttr("src", unref(icon__zoom_out))} alt="zoom out" data-v-0a6473b7></button><button title="还原" data-v-0a6473b7><img${ssrRenderAttr("src", unref(icon__restore))} alt="restore" data-v-0a6473b7></button><button title="放大" data-v-0a6473b7><img${ssrRenderAttr("src", unref(icon__zoom_in))} alt="zoom in" data-v-0a6473b7></button><button class="tn-preview__close" title="关闭" data-v-0a6473b7><img${ssrRenderAttr("src", unref(icon__close))} alt="close" data-v-0a6473b7></button></div><img class="tn-preview__img"${ssrRenderAttr("src", preview.value.src)} style="${ssrRenderStyle(previewStyle.value)}" draggable="false" data-v-0a6473b7>`);
      if (preview.value.images.length > 1) {
        _push(`<div class="tn-preview__counter" data-v-0a6473b7>${ssrInterpolate(preview.value.index + 1)} / ${ssrInterpolate(preview.value.images.length)}</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    };
  }
};
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/Layout/ImagePreview.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const ImagePreview = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["__scopeId", "data-v-0a6473b7"]]);
const _sfc_main$4 = {
  __name: "Swiper",
  __ssrInlineRender: true,
  setup(__props) {
    const vpData = useData$1();
    const swiperInstances = ref([]);
    const initSwiper = () => {
      destroySwiper();
      import("swiper").then(({ default: Swiper }) => {
        import("swiper/modules").then(({ Navigation, Pagination }) => {
          const wrappers = document.querySelectorAll(".tn-swiper");
          wrappers.forEach((wrap) => {
            const container = wrap.querySelector(".swiper-container");
            const tabsEl = wrap.querySelector(".tn-swiper-tabs");
            if (!container || !tabsEl) return;
            const instance = new Swiper(container, {
              // modules: [Navigation, Pagination],
              // slidesPerView: 1,
              // spaceBetween: 30,
              loop: false,
              // tab 与索引一一对应，更直观
              // pagination: paginationEl
              //   ? { el: paginationEl, clickable: true }
              //   : undefined,
              // navigation: nextEl && prevEl ? { nextEl, prevEl } : undefined,
              on: {
                slideChange: () => updateActiveTab(wrap, instance.activeIndex)
              }
            });
            const slides = wrap.querySelectorAll(".swiper-slide");
            tabsEl.innerHTML = "";
            slides.forEach((slide, i) => {
              const label = slide.getAttribute("data-title") || "img";
              const btn = document.createElement("button");
              btn.type = "button";
              btn.className = "tn-tab" + (i === 0 ? " active" : "");
              btn.textContent = label;
              btn.addEventListener("click", () => instance.slideTo(i));
              tabsEl.appendChild(btn);
            });
            swiperInstances.value.push(instance);
          });
        });
      });
    };
    function updateActiveTab(wrap, activeIndex) {
      const btns = wrap.querySelectorAll(".tn-swiper-tabs .tn-tab");
      btns.forEach((b, i) => b.classList.toggle("active", i === activeIndex));
    }
    function destroySwiper() {
      swiperInstances.value.forEach((inst) => {
        try {
          inst.destroy(true, true);
        } catch {
        }
      });
      swiperInstances.value = [];
    }
    onBeforeUnmount(destroySwiper);
    onMounted(() => {
      initSwiper();
    });
    watch(
      () => vpData.page.value.relativePath,
      () => {
        initSwiper();
      }
    );
    return (_ctx, _push, _parent, _attrs) => {
    };
  }
};
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/Layout/Swiper.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const icon__vscode$1 = "/TNotes.leetcode/icon__vscode.svg";
const icon__totop = "/TNotes.leetcode/icon__totop.svg";
const icon__github$1 = "/TNotes.leetcode/icon__github.svg";
const m2mm = "/TNotes.leetcode/m2mm.png";
const data$1 = JSON.parse('{"fileContent":"# leetcode\\n\\n\\n## 1. 其他\\n\\n- [x] [9996. hello-algo](https://tdahuyou.github.io/TNotes.leetcode/notes/9996.%20hello-algo/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/9996.%20hello-algo/README#1--概述)\\n- [x] [9999. 油猴脚本 - LeetCode 题目描述爬取](https://tdahuyou.github.io/TNotes.leetcode/notes/9999.%20%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%20-%20LeetCode%20%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%E7%88%AC%E5%8F%96/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/9999.%20%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%20-%20LeetCode%20%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%E7%88%AC%E5%8F%96/README#1--概述)\\n  - [2. 💻 demo](https://tdahuyou.github.io/TNotes.leetcode/notes/9999.%20%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%20-%20LeetCode%20%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%E7%88%AC%E5%8F%96/README#2--demo)\\n- [ ] [9997. GitHub 技术社区 Doocs 开源项目 leetcode](https://tdahuyou.github.io/TNotes.leetcode/notes/9997.%20GitHub%20%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%20Doocs%20%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%20leetcode/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/9997.%20GitHub%20%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%20Doocs%20%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%20leetcode/README#1--概述)\\n- [ ] [9998. leetcode 刷题指南 - 新手快速入门 - 数据结构、算法](https://tdahuyou.github.io/TNotes.leetcode/notes/9998.%20leetcode%20%E5%88%B7%E9%A2%98%E6%8C%87%E5%8D%97%20-%20%E6%96%B0%E6%89%8B%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%81%E7%AE%97%E6%B3%95/README)\\n  - [1. 📒 LeetCode 刷题指南 - 新手快速入门](https://tdahuyou.github.io/TNotes.leetcode/notes/9998.%20leetcode%20%E5%88%B7%E9%A2%98%E6%8C%87%E5%8D%97%20-%20%E6%96%B0%E6%89%8B%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%20-%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%81%E7%AE%97%E6%B3%95/README#1--leetcode-刷题指南---新手快速入门)\\n  - 通过思维导图的形式，记录了一些适合入门刷的数据结构、算法例题。\\n\\n## 2. 0001~0100\\n\\n- [x] [0001. 两数之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0001.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [📂 TNotes.yuque](https://www.yuque.com/tdahuyou/tnotes.yuque/)\\n    - [TNotes.yuque.leetcode.0001](https://www.yuque.com/tdahuyou/tnotes.yuque/leetcode.0001)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0001.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 双指针暴力求解](https://tdahuyou.github.io/TNotes.leetcode/notes/0001.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---双指针暴力求解)\\n  - [3. 🎯 Solutions.2 - 静态哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/0001.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---静态哈希表)\\n  - [4. 🎯 Solutions.3 - 动态哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/0001.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---动态哈希表)\\n- [x] [0002. 两数相加【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0002.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0002.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 💻 solutions.1 - 模拟法](https://tdahuyou.github.io/TNotes.leetcode/notes/0002.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---模拟法)\\n- [x] [0003. 无重复字符的最长子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0003.%20%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [📂 TNotes.yuque](https://www.yuque.com/tdahuyou/tnotes.yuque/)\\n    - [TNotes.yuque.leetcode.0003](https://www.yuque.com/tdahuyou/tnotes.yuque/leetcode.0003)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0003.%20%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 💻 solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0003.%20%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 💻 solutions.2 - 滑动窗口](https://tdahuyou.github.io/TNotes.leetcode/notes/0003.%20%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---滑动窗口)\\n- [ ] [0004. 寻找两个正序数组的中位数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0004.%20%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0004.%20%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions](https://tdahuyou.github.io/TNotes.leetcode/notes/0004.%20%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions)\\n- [ ] [0005. 最长回文子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0005.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0005.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 中心扩散](https://tdahuyou.github.io/TNotes.leetcode/notes/0005.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---中心扩散)\\n- [ ] [0006. Z 字形变换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0006.%20Z%20%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0006.%20Z%20%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 利用二维矩阵模拟](https://tdahuyou.github.io/TNotes.leetcode/notes/0006.%20Z%20%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---利用二维矩阵模拟)\\n  - [3. 🎯 Solutions.2 - 压缩矩阵空间](https://tdahuyou.github.io/TNotes.leetcode/notes/0006.%20Z%20%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---压缩矩阵空间)\\n  - [4. 🎯 Solutions.3 - 直接构造](https://tdahuyou.github.io/TNotes.leetcode/notes/0006.%20Z%20%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions3---直接构造)\\n- [ ] [0007. 整数反转【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法（转为字符串求解）](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法转为字符串求解)\\n  - [3. 🎯 Solutions.2 - 数学方法](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---数学方法)\\n  - [4. 📒 Math.trunc 的基本用法](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--mathtrunc-的基本用法)\\n  - [5. 🤖 markdown 书写数学公式的语法](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--markdown-书写数学公式的语法)\\n    - [5.1. 内联公式](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#51-内联公式)\\n    - [5.2. 独立行公式（块级公式）](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#52-独立行公式块级公式)\\n    - [5.3. 常见的 LaTeX 数学符号](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#53-常见的-latex-数学符号)\\n    - [5.4. 示例](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#54-示例)\\n  - [6. 🤖 整数位数和它的大小之间对数关系](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#6--整数位数和它的大小之间对数关系)\\n  - [7. 🤖 对比 $O(log_{10} N)$ 和 $O(log N)$](https://tdahuyou.github.io/TNotes.leetcode/notes/0007.%20%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#7--对比-olog_10-n-和-olog-n)\\n- [ ] [0008. 字符串转换整数 (atoi)【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0008.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0%20(atoi)%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0008.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0%20(atoi)%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0009. 回文数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0009.%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0009.%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法（转为字符串来比较）](https://tdahuyou.github.io/TNotes.leetcode/notes/0009.%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法转为字符串来比较)\\n  - [3. 🎯 Solutions.2 - 先反转再比较](https://tdahuyou.github.io/TNotes.leetcode/notes/0009.%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---先反转再比较)\\n  - [4. 🎯 Solutions.3 - 二分对比](https://tdahuyou.github.io/TNotes.leetcode/notes/0009.%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---二分对比)\\n- [ ] [0010. 正则表达式匹配【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0010.%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0010.%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0011. 盛最多水的容器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [📂 TNotes.yuque](https://www.yuque.com/tdahuyou/tnotes.yuque/)\\n    - [TNotes.yuque.leetcode.0011](https://www.yuque.com/tdahuyou/tnotes.yuque/leetcode.0011)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 暴力枚举](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1---暴力枚举)\\n  - [4. 🎯 Solutions.2 - 碰撞指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions2---碰撞指针)\\n  - [5. ❌ 问题解法 - 栈溢出](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--问题解法---栈溢出)\\n  - [6. ❌ 问题解法 - 超时](https://tdahuyou.github.io/TNotes.leetcode/notes/0011.%20%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#6--问题解法---超时)\\n- [ ] [0012. 整数转罗马数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0012.%20%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0012.%20%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0013. 罗马数字转整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0013.%20%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0013.%20%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 基于哈希表的逐字符解析法（1）](https://tdahuyou.github.io/TNotes.leetcode/notes/0013.%20%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---基于哈希表的逐字符解析法1)\\n  - [3. 🎯 Solutions.2 - 基于哈希表的逐字符解析法（2）](https://tdahuyou.github.io/TNotes.leetcode/notes/0013.%20%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---基于哈希表的逐字符解析法2)\\n  - 备注：本文介绍的两种题解，都是基于哈希表来实现的。\\n- [ ] [0014. 最长公共前缀【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0014.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0014.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0014.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 横向扫描](https://tdahuyou.github.io/TNotes.leetcode/notes/0014.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---横向扫描)\\n  - [4. 🎯 Solutions.3 - 纵向扫描](https://tdahuyou.github.io/TNotes.leetcode/notes/0014.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---纵向扫描)\\n- [x] [0015. 三数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0015.%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [📂 TNotes.yuque](https://www.yuque.com/tdahuyou/tnotes.yuque/)\\n    - [TNotes.yuque.leetcode.0015](https://www.yuque.com/tdahuyou/tnotes.yuque/leetcode.0015)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0015.%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 💻 solutions.1 - 排序 + 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0015.%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---排序--双指针)\\n- [ ] [0016. 最接近的三数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0016.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0016.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0017. 电话号码的字母组合【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0017.%20%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0017.%20%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0018. 四数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0018.%20%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0018.%20%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0019. 删除链表的倒数第 N 个结点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0019.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%20N%20%E4%B8%AA%E7%BB%93%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0019.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%20N%20%E4%B8%AA%E7%BB%93%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 三指针暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0019.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%AC%20N%20%E4%B8%AA%E7%BB%93%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---三指针暴力解法)\\n  - 本文的题解中提到了一个概念【哑节点（dummy node）、哨兵节点（sentinel node）】这个东西在处理链表中还是蛮常用的，如果不清楚什么是【哑节点（dummy node）、哨兵节点（sentinel node）】，可以结合这道题来了解一下。\\n- [ ] [0020. 有效的括号【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0020.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0020.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 栈](https://tdahuyou.github.io/TNotes.leetcode/notes/0020.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---栈)\\n  - ⏰ TODO：本节的 gif 图看起来很不直观，重新制作。\\n- [ ] [0021. 合并两个有序链表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0021.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0021.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 📒 测试代码](https://tdahuyou.github.io/TNotes.leetcode/notes/0021.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--测试代码)\\n  - [3. 🎯 Solutions.1 - 迭代](https://tdahuyou.github.io/TNotes.leetcode/notes/0021.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1---迭代)\\n  - [4. 🎯 Solutions.2 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0021.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions2---递归)\\n- [ ] [0022. 括号生成【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0022.%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0022.%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0022.%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 回溯算法](https://tdahuyou.github.io/TNotes.leetcode/notes/0022.%20%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1---回溯算法)\\n- [ ] [0023. 合并 K 个升序链表【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0023.%20%E5%90%88%E5%B9%B6%20K%20%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0023.%20%E5%90%88%E5%B9%B6%20K%20%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0024. 两两交换链表中的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0024.%20%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0024.%20%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0025. K 个一组翻转链表【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0025.%20K%20%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0025.%20K%20%E4%B8%AA%E4%B8%80%E7%BB%84%E7%BF%BB%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0026. 删除有序数组中的重复项【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0026.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [📂 TNotes.yuque](https://www.yuque.com/tdahuyou/tnotes.yuque/)\\n    - [TNotes.yuque.leetcode.0026](https://www.yuque.com/tdahuyou/tnotes.yuque/leetcode.0026)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0026.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 快慢指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0026.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---快慢指针)\\n- [ ] [0027. 移除元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 双指针-1](https://tdahuyou.github.io/TNotes.leetcode/notes/0027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---双指针-1)\\n  - [3. 🎯 Solutions.2 - 双指针-2](https://tdahuyou.github.io/TNotes.leetcode/notes/0027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---双指针-2)\\n  - [4. 🎯 Solutions.3 - 调用系统函数](https://tdahuyou.github.io/TNotes.leetcode/notes/0027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---调用系统函数)\\n  - [5. 🔗 References](https://tdahuyou.github.io/TNotes.leetcode/notes/0027.%20%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#5--references)\\n- [ ] [0028. 找出字符串中第一个匹配项的下标【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 📒 学习一个短语 - Find needle in haystack](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--学习一个短语---find-needle-in-haystack)\\n  - [4. 🎯 Solutions.1 - 暴力解法 - 调用原生 API - indexOf](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions1---暴力解法---调用原生-api---indexof)\\n  - [5. 📒 KMP 算法简介](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#5--kmp-算法简介)\\n  - [6. 🎯 Solutions.2 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#6--solutions2---暴力解法)\\n  - [7. 🎯 Solutions.3 - KMP](https://tdahuyou.github.io/TNotes.leetcode/notes/0028.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#7--solutions3---kmp)\\n  - 本节介绍了 KMP 算法，代码量不多，但理解起来比较费劲儿，不应该是简单题的难度。在查阅资料的过程中，了解到这貌似是考研、竞赛题。\\n- [ ] [0029. 两数相除【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0029.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0029.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E9%99%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0030. 串联所有单词的子串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0030.%20%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0030.%20%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0031. 下一个排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0031.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0031.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0032. 最长有效括号【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0032.%20%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0032.%20%E6%9C%80%E9%95%BF%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0033. 搜索旋转排序数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0033.%20%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0033.%20%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0034. 在排序数组中查找元素的第一个和最后一个位置【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0034.%20%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0034.%20%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0035. 搜索插入位置【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0035.%20%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0035.%20%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 二分查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0035.%20%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---二分查找)\\n  - [3. 🎯 Solutions.2 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0035.%20%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---暴力解法)\\n- [ ] [0036. 有效的数独【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0036.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0036.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0037. 解数独【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0037.%20%E8%A7%A3%E6%95%B0%E7%8B%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0037.%20%E8%A7%A3%E6%95%B0%E7%8B%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0038. 外观数列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0038.%20%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0038.%20%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0039. 组合总和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0039.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0039.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0040. 组合总和 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0040.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0040.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0041. 缺失的第一个正数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0041.%20%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0041.%20%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0042. 接雨水【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0042.%20%E6%8E%A5%E9%9B%A8%E6%B0%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0042.%20%E6%8E%A5%E9%9B%A8%E6%B0%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0043. 字符串相乘【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0043.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0043.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0044. 通配符匹配【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0044.%20%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0044.%20%E9%80%9A%E9%85%8D%E7%AC%A6%E5%8C%B9%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0045. 跳跃游戏 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0045.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0045.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0046. 全排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0046.%20%E5%85%A8%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0046.%20%E5%85%A8%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 回溯](https://tdahuyou.github.io/TNotes.leetcode/notes/0046.%20%E5%85%A8%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---回溯)\\n- [ ] [0047. 全排列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0047.%20%E5%85%A8%E6%8E%92%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0047.%20%E5%85%A8%E6%8E%92%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0048. 旋转图像【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0048.%20%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0048.%20%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0048.%20%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 翻转](https://tdahuyou.github.io/TNotes.leetcode/notes/0048.%20%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---翻转)\\n- [ ] [0049. 字母异位词分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0049.%20%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0049.%20%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0050. Pow(x, n)【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0050.%20Pow(x%2C%20n)%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0050.%20Pow(x%2C%20n)%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0051. N 皇后【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0051.%20N%20%E7%9A%87%E5%90%8E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0051.%20N%20%E7%9A%87%E5%90%8E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0052. N 皇后 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0052.%20N%20%E7%9A%87%E5%90%8E%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0052.%20N%20%E7%9A%87%E5%90%8E%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0053. 最大子数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0053.%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0053.%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0053.%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 动态规划](https://tdahuyou.github.io/TNotes.leetcode/notes/0053.%20%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---动态规划)\\n- [ ] [0054. 螺旋矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0054.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0054.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0055. 跳跃游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0055.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0055.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0056. 合并区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0056.%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0056.%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 1](https://tdahuyou.github.io/TNotes.leetcode/notes/0056.%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法-1)\\n  - [3. 🎯 Solutions.2 - 暴力解法 2](https://tdahuyou.github.io/TNotes.leetcode/notes/0056.%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---暴力解法-2)\\n  - [4. 📒 手写 reduce](https://tdahuyou.github.io/TNotes.leetcode/notes/0056.%20%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--手写-reduce)\\n- [ ] [0057. 插入区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0057.%20%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0057.%20%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0058. 最后一个单词的长度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0058.%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0058.%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 - 直接调用原生 API - trim、split、pop](https://tdahuyou.github.io/TNotes.leetcode/notes/0058.%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法---直接调用原生-api---trimsplitpop)\\n- [ ] [0059. 螺旋矩阵 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0059.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0059.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0060. 排列序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0060.%20%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0060.%20%E6%8E%92%E5%88%97%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0061. 旋转链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0061.%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0061.%20%E6%97%8B%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0062. 不同路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0062.%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0062.%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0063. 不同路径 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0063.%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0063.%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0064. 最小路径和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0064.%20%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0064.%20%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0065. 有效数字【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0065.%20%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0065.%20%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0066. 加一【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0066.%20%E5%8A%A0%E4%B8%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0066.%20%E5%8A%A0%E4%B8%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 逆序循环](https://tdahuyou.github.io/TNotes.leetcode/notes/0066.%20%E5%8A%A0%E4%B8%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---逆序循环)\\n- [ ] [0067. 二进制求和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0067.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0067.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0068. 文本左右对齐【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0068.%20%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0068.%20%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0069. x 的平方根【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0069.%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0069.%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 二分查找法](https://tdahuyou.github.io/TNotes.leetcode/notes/0069.%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---二分查找法)\\n  - [3. 🎯 Solutions.2 - 牛顿法](https://tdahuyou.github.io/TNotes.leetcode/notes/0069.%20x%20%E7%9A%84%E5%B9%B3%E6%96%B9%E6%A0%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---牛顿法)\\n- [x] [0070. 爬楼梯【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0070.%20%E7%88%AC%E6%A5%BC%E6%A2%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0070.%20%E7%88%AC%E6%A5%BC%E6%A2%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 动态规划](https://tdahuyou.github.io/TNotes.leetcode/notes/0070.%20%E7%88%AC%E6%A5%BC%E6%A2%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---动态规划)\\n- [ ] [0071. 简化路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0071.%20%E7%AE%80%E5%8C%96%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0071.%20%E7%AE%80%E5%8C%96%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0072. 编辑距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0072.%20%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0072.%20%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0073. 矩阵置零【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0073.%20%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0073.%20%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0074. 搜索二维矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0074.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0074.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0074.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - flat](https://tdahuyou.github.io/TNotes.leetcode/notes/0074.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1---flat)\\n  - [4. 🎯 Solutions.1 - 循环二维数组](https://tdahuyou.github.io/TNotes.leetcode/notes/0074.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions1---循环二维数组)\\n  - [5. 🎯 Solutions.1 - 二分查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0074.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--solutions1---二分查找)\\n  - [leetcode](https://leetcode.cn/problems/search-a-2d-matrix/)\\n- [ ] [0075. 颜色分类【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 调用自带的 sort 函数](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---调用自带的-sort-函数)\\n  - [3. 🎯 Solutions.2 - 冒泡排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---冒泡排序)\\n  - [4. 🎯 Solutions.3 - 三路快速排序方法](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions3---三路快速排序方法)\\n  - [5. 🎯 Solutions.4 - 基排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--solutions4---基排序)\\n  - [6. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/0075.%20%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#6--评价)\\n- [ ] [0076. 最小覆盖子串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0076.%20%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0076.%20%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0077. 组合【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0077.%20%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0077.%20%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 回溯](https://tdahuyou.github.io/TNotes.leetcode/notes/0077.%20%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---回溯)\\n- [ ] [0078. 子集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0078.%20%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0078.%20%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0078.%20%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 循环遍历](https://tdahuyou.github.io/TNotes.leetcode/notes/0078.%20%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1---循环遍历)\\n  - [4. 🎯 Solutions.2 - 回溯](https://tdahuyou.github.io/TNotes.leetcode/notes/0078.%20%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions2---回溯)\\n  - [leetcode](https://leetcode.cn/problems/subsets/)\\n  - **⏰ TODO**\\n    - 合并 keynote-2.key、keynote.key。\\n- [ ] [0079. 单词搜索【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0079.%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0079.%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0080. 删除有序数组中的重复项 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0080.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0080.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0080.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 快慢指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0080.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---快慢指针)\\n  - [4. 📒 尝试正则解法失败](https://tdahuyou.github.io/TNotes.leetcode/notes/0080.%20%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--尝试正则解法失败)\\n- [ ] [0081. 搜索旋转排序数组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0081.%20%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0081.%20%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0082. 删除排序链表中的重复元素 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0082.%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0082.%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0083. 删除排序链表中的重复元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0083.%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0083.%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0083.%20%E5%88%A0%E9%99%A4%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0084. 柱状图中最大的矩形【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0084.%20%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0084.%20%E6%9F%B1%E7%8A%B6%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0085. 最大矩形【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0085.%20%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0085.%20%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0086. 分隔链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0086.%20%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0086.%20%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0087. 扰乱字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0087.%20%E6%89%B0%E4%B9%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0087.%20%E6%89%B0%E4%B9%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0088. 合并两个有序数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0088.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0088.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0088.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 尾插法](https://tdahuyou.github.io/TNotes.leetcode/notes/0088.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---尾插法)\\n- [ ] [0089. 格雷编码【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0089.%20%E6%A0%BC%E9%9B%B7%E7%BC%96%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0089.%20%E6%A0%BC%E9%9B%B7%E7%BC%96%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0090. 子集 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0090.%20%E5%AD%90%E9%9B%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0090.%20%E5%AD%90%E9%9B%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0091. 解码方法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0091.%20%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0091.%20%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0092. 反转链表 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0092.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0092.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0093. 复原 IP 地址【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0093.%20%E5%A4%8D%E5%8E%9F%20IP%20%E5%9C%B0%E5%9D%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0093.%20%E5%A4%8D%E5%8E%9F%20IP%20%E5%9C%B0%E5%9D%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0094. 二叉树的中序遍历【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0094.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0094.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0094.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0094.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1---递归)\\n  - [4. 📒 二叉树的遍历](https://tdahuyou.github.io/TNotes.leetcode/notes/0094.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--二叉树的遍历)\\n  - [leetcode](https://leetcode.cn/problems/binary-tree-inorder-traversal)\\n- [ ] [0095. 不同的二叉搜索树 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0095.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0095.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0096. 不同的二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0096.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0096.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0097. 交错字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0097.%20%E4%BA%A4%E9%94%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0097.%20%E4%BA%A4%E9%94%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0098. 验证二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0098.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0098.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0099. 恢复二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0099.%20%E6%81%A2%E5%A4%8D%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0099.%20%E6%81%A2%E5%A4%8D%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0100. 相同的树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0100.%20%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0100.%20%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0100.%20%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n\\n## 3. 0101~0200\\n\\n- [x] [0101. 对称二叉树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0101.%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0101.%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0101.%20%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0102. 二叉树的层序遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0102.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0102.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0103. 二叉树的锯齿形层序遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0103.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%94%AF%E9%BD%BF%E5%BD%A2%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0103.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%94%AF%E9%BD%BF%E5%BD%A2%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0104. 二叉树的最大深度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0104.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0104.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0104.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---递归)\\n  - [3. 🎯 Solutions.2 - 迭代](https://tdahuyou.github.io/TNotes.leetcode/notes/0104.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---迭代)\\n- [ ] [0105. 从前序与中序遍历序列构造二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0105.%20%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0105.%20%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0105.%20%E4%BB%8E%E5%89%8D%E5%BA%8F%E4%B8%8E%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [0106. 从中序与后序遍历序列构造二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0106.%20%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0106.%20%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0106.%20%E4%BB%8E%E4%B8%AD%E5%BA%8F%E4%B8%8E%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [0107. 二叉树的层序遍历 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0107.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0107.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0108. 将有序数组转换为二叉搜索树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0108.%20%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0108.%20%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0108.%20%E5%B0%86%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0109. 有序链表转换二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0109.%20%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0109.%20%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0110. 平衡二叉树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0110.%20%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0110.%20%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0111. 二叉树的最小深度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0111.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0111.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0112. 路径总和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0112.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0112.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0113. 路径总和 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0113.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0113.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0114. 二叉树展开为链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0114.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0114.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%95%E5%BC%80%E4%B8%BA%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0115. 不同的子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0115.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0115.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0116. 填充每个节点的下一个右侧节点指针【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0116.%20%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0116.%20%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0117. 填充每个节点的下一个右侧节点指针 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0117.%20%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0117.%20%E5%A1%AB%E5%85%85%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E6%8C%87%E9%92%88%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0118. 杨辉三角【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0118.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0118.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0118.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0119. 杨辉三角 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0119.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0119.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0119.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 暴力解法优化](https://tdahuyou.github.io/TNotes.leetcode/notes/0119.%20%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---暴力解法优化)\\n- [ ] [0120. 三角形最小路径和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0120.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0120.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0121. 买卖股票的最佳时机【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0121.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0121.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions - 一次遍历法](https://tdahuyou.github.io/TNotes.leetcode/notes/0121.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions---一次遍历法)\\n- [ ] [0122. 买卖股票的最佳时机 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0122.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0122.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0123. 买卖股票的最佳时机 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0123.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0123.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0124. 二叉树中的最大路径和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0124.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0124.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0125. 验证回文串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0125.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0125.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0125.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0125.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---双指针)\\n  - [4. 📒 正则 `\\\\w`、`\\\\W`](https://tdahuyou.github.io/TNotes.leetcode/notes/0125.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--正则-ww)\\n- [ ] [0126. 单词接龙 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0126.%20%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0126.%20%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0127. 单词接龙【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0127.%20%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0127.%20%E5%8D%95%E8%AF%8D%E6%8E%A5%E9%BE%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0128. 最长连续序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0128.%20%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0128.%20%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0129. 求根节点到叶节点数字之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0129.%20%E6%B1%82%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0129.%20%E6%B1%82%E6%A0%B9%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%B6%E8%8A%82%E7%82%B9%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0130. 被围绕的区域【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0130.%20%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0130.%20%E8%A2%AB%E5%9B%B4%E7%BB%95%E7%9A%84%E5%8C%BA%E5%9F%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0131. 分割回文串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0131.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0131.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0132. 分割回文串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0132.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0132.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0133. 克隆图【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0133.%20%E5%85%8B%E9%9A%86%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0133.%20%E5%85%8B%E9%9A%86%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0134. 加油站【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0134.%20%E5%8A%A0%E6%B2%B9%E7%AB%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0134.%20%E5%8A%A0%E6%B2%B9%E7%AB%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0135. 分发糖果【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0135.%20%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0135.%20%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0136. 只出现一次的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 异或运算](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---异或运算)\\n  - [3. 🎯 Solutions.2 - 使用 Map 计数](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---使用-map-计数)\\n  - [4. 🎯 Solutions.3 - 使用 Set](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---使用-set)\\n  - [5. 🎯 Solutions.4 - 数学求和](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#5--solutions4---数学求和)\\n  - [6. 🎯 Solutions.5 - 排序 ➕ 双指针查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0136.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#6--solutions5---排序--双指针查找)\\n- [ ] [0137. 只出现一次的数字 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0137.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0137.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0138. 随机链表的复制【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0138.%20%E9%9A%8F%E6%9C%BA%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0138.%20%E9%9A%8F%E6%9C%BA%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0139. 单词拆分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0139.%20%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0139.%20%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0140. 单词拆分 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0140.%20%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0140.%20%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0141. 环形链表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0141.%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0141.%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0142. 环形链表 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0142.%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0142.%20%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0143. 重排链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0143.%20%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0143.%20%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0144. 二叉树的前序遍历【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0144.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0144.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0144.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0144.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1---递归)\\n  - [4. 📒 二叉树的遍历](https://tdahuyou.github.io/TNotes.leetcode/notes/0144.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--二叉树的遍历)\\n  - [leetcode](https://leetcode.cn/problems/binary-tree-preorder-traversal)\\n- [ ] [0145. 二叉树的后序遍历【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1---递归)\\n  - [4. 📒 二叉树的遍历](https://tdahuyou.github.io/TNotes.leetcode/notes/0145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--二叉树的遍历)\\n- [ ] [0146. LRU 缓存【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0146.%20LRU%20%E7%BC%93%E5%AD%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0146.%20LRU%20%E7%BC%93%E5%AD%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0147. 对链表进行插入排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0147.%20%E5%AF%B9%E9%93%BE%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0147.%20%E5%AF%B9%E9%93%BE%E8%A1%A8%E8%BF%9B%E8%A1%8C%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0148. 排序链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0148.%20%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0148.%20%E6%8E%92%E5%BA%8F%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0149. 直线上最多的点数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0149.%20%E7%9B%B4%E7%BA%BF%E4%B8%8A%E6%9C%80%E5%A4%9A%E7%9A%84%E7%82%B9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0149.%20%E7%9B%B4%E7%BA%BF%E4%B8%8A%E6%9C%80%E5%A4%9A%E7%9A%84%E7%82%B9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0150. 逆波兰表达式求值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0150.%20%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0150.%20%E9%80%86%E6%B3%A2%E5%85%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0151. 反转字符串中的单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0151.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0151.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 字符串分割](https://tdahuyou.github.io/TNotes.leetcode/notes/0151.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---字符串分割)\\n  - [3. 🎯 Solutions.2 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0151.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---双指针)\\n- [ ] [0152. 乘积最大子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0152.%20%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0152.%20%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0153. 寻找旋转排序数组中的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 双指针 1](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1---双指针-1)\\n  - [4. 🎯 Solutions.2 - 二分查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions2---二分查找)\\n  - [5. 🤖 AI - `pivot = low + ((high - low) >> 1)`、`pivot = (high + low) >> 1` 这两种写法等效吗？](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--ai---pivot--low--high---low--1pivot--high--low--1-这两种写法等效吗)\\n    - [5.1. `pivot = low + ((high - low) >> 1)`](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#51-pivot--low--high---low--1)\\n      - [5.1.1. 优点](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#511-优点)\\n      - [5.1.2. 缺点](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#512-缺点)\\n    - [5.2. `pivot = (high + low) >> 1`](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#52-pivot--high--low--1)\\n      - [5.2.1. 优点](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#521-优点)\\n      - [5.2.2. 缺点](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#522-缺点)\\n    - [5.3. 等效性分析](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#53-等效性分析)\\n    - [5.4. 示例](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#54-示例)\\n    - [5.5. 结论](https://tdahuyou.github.io/TNotes.leetcode/notes/0153.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#55-结论)\\n  - [leetcode](https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array)\\n- [ ] [0154. 寻找旋转排序数组中的最小值 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0154.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0154.%20%E5%AF%BB%E6%89%BE%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0155. 最小栈【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0155.%20%E6%9C%80%E5%B0%8F%E6%A0%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0155.%20%E6%9C%80%E5%B0%8F%E6%A0%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0156. 上下翻转二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0156.%20%E4%B8%8A%E4%B8%8B%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0156.%20%E4%B8%8A%E4%B8%8B%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0157. 用 Read4 读取 N 个字符【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0157.%20%E7%94%A8%20Read4%20%E8%AF%BB%E5%8F%96%20N%20%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0157.%20%E7%94%A8%20Read4%20%E8%AF%BB%E5%8F%96%20N%20%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0158. 用 Read4 读取 N 个字符 II - 多次调用【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0158.%20%E7%94%A8%20Read4%20%E8%AF%BB%E5%8F%96%20N%20%E4%B8%AA%E5%AD%97%E7%AC%A6%20II%20-%20%E5%A4%9A%E6%AC%A1%E8%B0%83%E7%94%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0158.%20%E7%94%A8%20Read4%20%E8%AF%BB%E5%8F%96%20N%20%E4%B8%AA%E5%AD%97%E7%AC%A6%20II%20-%20%E5%A4%9A%E6%AC%A1%E8%B0%83%E7%94%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0159. 至多包含两个不同字符的最长子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0159.%20%E8%87%B3%E5%A4%9A%E5%8C%85%E5%90%AB%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0159.%20%E8%87%B3%E5%A4%9A%E5%8C%85%E5%90%AB%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0160. 相交链表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0160.%20%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0160.%20%E7%9B%B8%E4%BA%A4%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0161. 相隔为 1 的编辑距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0161.%20%E7%9B%B8%E9%9A%94%E4%B8%BA%201%20%E7%9A%84%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0161.%20%E7%9B%B8%E9%9A%94%E4%B8%BA%201%20%E7%9A%84%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0162. 寻找峰值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0162.%20%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0162.%20%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 二分查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0162.%20%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---二分查找)\\n- [ ] [0163. 缺失的区间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0163.%20%E7%BC%BA%E5%A4%B1%E7%9A%84%E5%8C%BA%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0163.%20%E7%BC%BA%E5%A4%B1%E7%9A%84%E5%8C%BA%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0164. 最大间距【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0164.%20%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0164.%20%E6%9C%80%E5%A4%A7%E9%97%B4%E8%B7%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0165. 比较版本号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0165.%20%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0165.%20%E6%AF%94%E8%BE%83%E7%89%88%E6%9C%AC%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0166. 分数到小数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0166.%20%E5%88%86%E6%95%B0%E5%88%B0%E5%B0%8F%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0166.%20%E5%88%86%E6%95%B0%E5%88%B0%E5%B0%8F%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0167. 两数之和 II - 输入有序数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0167.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20II%20-%20%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0167.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20II%20-%20%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0167.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20II%20-%20%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [0168. Excel 表列名称【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0168.%20Excel%20%E8%A1%A8%E5%88%97%E5%90%8D%E7%A7%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0168.%20Excel%20%E8%A1%A8%E5%88%97%E5%90%8D%E7%A7%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0169. 多数元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0169.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0169.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0169.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---排序)\\n  - [3. 🎯 Solutions.2 - hash-table](https://tdahuyou.github.io/TNotes.leetcode/notes/0169.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---hash-table)\\n  - [4. 🎯 Solutions.3 - 分治](https://tdahuyou.github.io/TNotes.leetcode/notes/0169.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---分治)\\n- [ ] [0170. 两数之和 III - 数据结构设计【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0170.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20III%20-%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0170.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20III%20-%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0171. Excel 表列序号【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0171.%20Excel%20%E8%A1%A8%E5%88%97%E5%BA%8F%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0171.%20Excel%20%E8%A1%A8%E5%88%97%E5%BA%8F%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0172. 阶乘后的零【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0172.%20%E9%98%B6%E4%B9%98%E5%90%8E%E7%9A%84%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0172.%20%E9%98%B6%E4%B9%98%E5%90%8E%E7%9A%84%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0173. 二叉搜索树迭代器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0173.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0173.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0174. 地下城游戏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0174.%20%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0174.%20%E5%9C%B0%E4%B8%8B%E5%9F%8E%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0175. 组合两个表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0175.%20%E7%BB%84%E5%90%88%E4%B8%A4%E4%B8%AA%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0175.%20%E7%BB%84%E5%90%88%E4%B8%A4%E4%B8%AA%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 使用 `outer join`](https://tdahuyou.github.io/TNotes.leetcode/notes/0175.%20%E7%BB%84%E5%90%88%E4%B8%A4%E4%B8%AA%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---使用-outer-join)\\n- [ ] [0176. 第二高的薪水【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0176.%20%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0176.%20%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions](https://tdahuyou.github.io/TNotes.leetcode/notes/0176.%20%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions)\\n- [ ] [0177. 第N高的薪水【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0177.%20%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0177.%20%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions](https://tdahuyou.github.io/TNotes.leetcode/notes/0177.%20%E7%AC%ACN%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions)\\n- [ ] [0178. 分数排名【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0178.%20%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0178.%20%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - DENSE_RANK](https://tdahuyou.github.io/TNotes.leetcode/notes/0178.%20%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---dense_rank)\\n  - [3. 🎯 Solutions.2 - 使用 `COUNT(DISTINCT ...)` 的相关子查询](https://tdahuyou.github.io/TNotes.leetcode/notes/0178.%20%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---使用-countdistinct--的相关子查询)\\n  - [4. 🎯 Solutions.3 - 使用 `INNER JOIN` 和 `COUNT(DISTINCT...)`](https://tdahuyou.github.io/TNotes.leetcode/notes/0178.%20%E5%88%86%E6%95%B0%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions3---使用-inner-join-和-countdistinct)\\n- [ ] [0179. 最大数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0179.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0179.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0180. 连续出现的数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0180.%20%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0180.%20%E8%BF%9E%E7%BB%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0181. 超过经理收入的员工【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0181.%20%E8%B6%85%E8%BF%87%E7%BB%8F%E7%90%86%E6%94%B6%E5%85%A5%E7%9A%84%E5%91%98%E5%B7%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0181.%20%E8%B6%85%E8%BF%87%E7%BB%8F%E7%90%86%E6%94%B6%E5%85%A5%E7%9A%84%E5%91%98%E5%B7%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0182. 查找重复的电子邮箱【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0182.%20%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0182.%20%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0183. 从不订购的客户【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0183.%20%E4%BB%8E%E4%B8%8D%E8%AE%A2%E8%B4%AD%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0183.%20%E4%BB%8E%E4%B8%8D%E8%AE%A2%E8%B4%AD%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0184. 部门工资最高的员工【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0184.%20%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E6%9C%80%E9%AB%98%E7%9A%84%E5%91%98%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0184.%20%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E6%9C%80%E9%AB%98%E7%9A%84%E5%91%98%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0185. 部门工资前三高的所有员工【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0185.%20%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E5%89%8D%E4%B8%89%E9%AB%98%E7%9A%84%E6%89%80%E6%9C%89%E5%91%98%E5%B7%A5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0185.%20%E9%83%A8%E9%97%A8%E5%B7%A5%E8%B5%84%E5%89%8D%E4%B8%89%E9%AB%98%E7%9A%84%E6%89%80%E6%9C%89%E5%91%98%E5%B7%A5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0186. 反转字符串中的单词 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0186.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0186.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0187. 重复的DNA序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0187.%20%E9%87%8D%E5%A4%8D%E7%9A%84DNA%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0187.%20%E9%87%8D%E5%A4%8D%E7%9A%84DNA%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0188. 买卖股票的最佳时机 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0188.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0188.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0189. 轮转数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 1 - 使用原生 API - unshift、pop](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法-1---使用原生-api---unshiftpop)\\n  - [3. 🎯 Solutions.2 - 暴力解法 2](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions2---暴力解法-2)\\n  - [4. 🎯 Solutions.3 - 暴力解法 3 - 使用原生 API - splice、reverse](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions3---暴力解法-3---使用原生-api---splicereverse)\\n  - [5. 🎯 Solutions.4 - 暴力解法 4](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--solutions4---暴力解法-4)\\n  - [6. 🎯 Solutions.5 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0189.%20%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#6--solutions5---双指针)\\n- [ ] [0190. 颠倒二进制位【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0190.%20%E9%A2%A0%E5%80%92%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0190.%20%E9%A2%A0%E5%80%92%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0191. 位1的个数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0191.%20%E4%BD%8D1%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0191.%20%E4%BD%8D1%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0192. 统计词频【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0192.%20%E7%BB%9F%E8%AE%A1%E8%AF%8D%E9%A2%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0192.%20%E7%BB%9F%E8%AE%A1%E8%AF%8D%E9%A2%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0193. 有效电话号码【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0193.%20%E6%9C%89%E6%95%88%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0193.%20%E6%9C%89%E6%95%88%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0194. 转置文件【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0194.%20%E8%BD%AC%E7%BD%AE%E6%96%87%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0194.%20%E8%BD%AC%E7%BD%AE%E6%96%87%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0195. 第十行【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0195.%20%E7%AC%AC%E5%8D%81%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0195.%20%E7%AC%AC%E5%8D%81%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0196. 删除重复的电子邮箱【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0196.%20%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0196.%20%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E7%AE%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0197. 上升的温度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0197.%20%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B8%A9%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0197.%20%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B8%A9%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0198. 打家劫舍【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0198.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0198.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0199. 二叉树的右视图【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0199.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0199.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B3%E8%A7%86%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0200. 岛屿数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0200.%20%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0200.%20%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 4. 0201~0300\\n\\n- [ ] [0201. 数字范围按位与【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0201.%20%E6%95%B0%E5%AD%97%E8%8C%83%E5%9B%B4%E6%8C%89%E4%BD%8D%E4%B8%8E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0201.%20%E6%95%B0%E5%AD%97%E8%8C%83%E5%9B%B4%E6%8C%89%E4%BD%8D%E4%B8%8E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0202. 快乐数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0202.%20%E5%BF%AB%E4%B9%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0202.%20%E5%BF%AB%E4%B9%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0203. 移除链表元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0203.%20%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0203.%20%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 遍历](https://tdahuyou.github.io/TNotes.leetcode/notes/0203.%20%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---遍历)\\n  - [3. 🎯 Solutions.2 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0203.%20%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---递归)\\n- [ ] [0204. 计数质数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0204.%20%E8%AE%A1%E6%95%B0%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0204.%20%E8%AE%A1%E6%95%B0%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0205. 同构字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0205.%20%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0205.%20%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0206. 反转链表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0206.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0206.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0206.%20%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---递归)\\n- [ ] [0207. 课程表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0207.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0207.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0208. 实现 Trie (前缀树)【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0208.%20%E5%AE%9E%E7%8E%B0%20Trie%20(%E5%89%8D%E7%BC%80%E6%A0%91)%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0208.%20%E5%AE%9E%E7%8E%B0%20Trie%20(%E5%89%8D%E7%BC%80%E6%A0%91)%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0209. 长度最小的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0209.%20%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0209.%20%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0209.%20%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [0210. 课程表 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0210.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0210.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0211. 添加与搜索单词 - 数据结构设计【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0211.%20%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D%20-%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0211.%20%E6%B7%BB%E5%8A%A0%E4%B8%8E%E6%90%9C%E7%B4%A2%E5%8D%95%E8%AF%8D%20-%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0212. 单词搜索 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0212.%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0212.%20%E5%8D%95%E8%AF%8D%E6%90%9C%E7%B4%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0213. 打家劫舍 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0213.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0213.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0214. 最短回文串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0214.%20%E6%9C%80%E7%9F%AD%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0214.%20%E6%9C%80%E7%9F%AD%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0215. 数组中的第K个最大元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0215.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACK%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0215.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%ACK%E4%B8%AA%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0216. 组合总和 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0216.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0216.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0217. 存在重复元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0217.%20%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0217.%20%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0218. 天际线问题【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0218.%20%E5%A4%A9%E9%99%85%E7%BA%BF%E9%97%AE%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0218.%20%E5%A4%A9%E9%99%85%E7%BA%BF%E9%97%AE%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0219. 存在重复元素 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0219.%20%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0219.%20%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0220. 存在重复元素 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0220.%20%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0220.%20%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0221. 最大正方形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0221.%20%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0221.%20%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0222. 完全二叉树的节点个数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0222.%20%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0222.%20%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%8A%82%E7%82%B9%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0223. 矩形面积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0223.%20%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0223.%20%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0224. 基本计算器【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0224.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0224.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0225. 用队列实现栈【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0225.%20%E7%94%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0225.%20%E7%94%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0226. 翻转二叉树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0226.%20%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0226.%20%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0227. 基本计算器 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0227.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0227.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0228. 汇总区间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions](https://tdahuyou.github.io/TNotes.leetcode/notes/0228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions)\\n- [ ] [0229. 多数元素 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0229.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0229.%20%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0230. 二叉搜索树中第 K 小的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0230.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0230.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0231. 2 的幂【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0231.%202%20%E7%9A%84%E5%B9%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0231.%202%20%E7%9A%84%E5%B9%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0232. 用栈实现队列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0232.%20%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0232.%20%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0233. 数字 1 的个数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0233.%20%E6%95%B0%E5%AD%97%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0233.%20%E6%95%B0%E5%AD%97%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0234. 回文链表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0234.%20%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0234.%20%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0235. 二叉搜索树的最近公共祖先【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0235.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0235.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0236. 二叉树的最近公共祖先【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0236.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0236.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0237. 删除链表中的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0237.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0237.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0238. 除自身以外数组的乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0238.%20%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0238.%20%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0239. 滑动窗口最大值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - Deque](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions1---deque)\\n  - [3. 🤖 什么是双端队列？](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#3--什么是双端队列)\\n    - [3.1. 特性](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#31-特性)\\n    - [3.2. 常见操作](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#32-常见操作)\\n    - [3.3. 用途](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#33-用途)\\n    - [3.4. 示例](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#34-示例)\\n    - [3.5. 关键点](https://tdahuyou.github.io/TNotes.leetcode/notes/0239.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#35-关键点)\\n- [ ] [0240. 搜索二维矩阵 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0240.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0240.%20%E6%90%9C%E7%B4%A2%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0241. 为运算表达式设计优先级【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0241.%20%E4%B8%BA%E8%BF%90%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%BE%E8%AE%A1%E4%BC%98%E5%85%88%E7%BA%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0241.%20%E4%B8%BA%E8%BF%90%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%BE%E8%AE%A1%E4%BC%98%E5%85%88%E7%BA%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0242. 有效的字母异位词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0242.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0242.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0243. 最短单词距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0243.%20%E6%9C%80%E7%9F%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0243.%20%E6%9C%80%E7%9F%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0244. 最短单词距离 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0244.%20%E6%9C%80%E7%9F%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0244.%20%E6%9C%80%E7%9F%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0245. 最短单词距离 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0245.%20%E6%9C%80%E7%9F%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0245.%20%E6%9C%80%E7%9F%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0246. 中心对称数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0246.%20%E4%B8%AD%E5%BF%83%E5%AF%B9%E7%A7%B0%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0246.%20%E4%B8%AD%E5%BF%83%E5%AF%B9%E7%A7%B0%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0247. 中心对称数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0247.%20%E4%B8%AD%E5%BF%83%E5%AF%B9%E7%A7%B0%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0247.%20%E4%B8%AD%E5%BF%83%E5%AF%B9%E7%A7%B0%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0248. 中心对称数 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0248.%20%E4%B8%AD%E5%BF%83%E5%AF%B9%E7%A7%B0%E6%95%B0%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0248.%20%E4%B8%AD%E5%BF%83%E5%AF%B9%E7%A7%B0%E6%95%B0%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0249. 移位字符串分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0249.%20%E7%A7%BB%E4%BD%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0249.%20%E7%A7%BB%E4%BD%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0250. 统计同值子树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0250.%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E5%80%BC%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0250.%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E5%80%BC%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0251. 展开二维向量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0251.%20%E5%B1%95%E5%BC%80%E4%BA%8C%E7%BB%B4%E5%90%91%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0251.%20%E5%B1%95%E5%BC%80%E4%BA%8C%E7%BB%B4%E5%90%91%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0252. 会议室【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0252.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0252.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0253. 会议室 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0253.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0253.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0254. 因子的组合【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0254.%20%E5%9B%A0%E5%AD%90%E7%9A%84%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0254.%20%E5%9B%A0%E5%AD%90%E7%9A%84%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0255. 验证二叉搜索树的前序遍历序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0255.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0255.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0256. 粉刷房子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0256.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0256.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0257. 二叉树的所有路径【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0257.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0257.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0258. 各位相加【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0258.%20%E5%90%84%E4%BD%8D%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0258.%20%E5%90%84%E4%BD%8D%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0259. 较小的三数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0259.%20%E8%BE%83%E5%B0%8F%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0259.%20%E8%BE%83%E5%B0%8F%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0260. 只出现一次的数字 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0260.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0260.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0261. 以图判树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0261.%20%E4%BB%A5%E5%9B%BE%E5%88%A4%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0261.%20%E4%BB%A5%E5%9B%BE%E5%88%A4%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0262. 行程和用户【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0262.%20%E8%A1%8C%E7%A8%8B%E5%92%8C%E7%94%A8%E6%88%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0262.%20%E8%A1%8C%E7%A8%8B%E5%92%8C%E7%94%A8%E6%88%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0263. 丑数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0263.%20%E4%B8%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0263.%20%E4%B8%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0264. 丑数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0264.%20%E4%B8%91%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0264.%20%E4%B8%91%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0265. 粉刷房子 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0265.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0265.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0266. 回文排列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0266.%20%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0266.%20%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0267. 回文排列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0267.%20%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0267.%20%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0268. 丢失的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0268.%20%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0268.%20%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 数学求和法](https://tdahuyou.github.io/TNotes.leetcode/notes/0268.%20%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---数学求和法)\\n  - [3. 🎯 Solutions.2 - 异或 - 消消乐](https://tdahuyou.github.io/TNotes.leetcode/notes/0268.%20%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---异或---消消乐)\\n  - [4. 🎯 Solutions.3 - 排序法](https://tdahuyou.github.io/TNotes.leetcode/notes/0268.%20%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---排序法)\\n- [ ] [0269. 火星词典【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0269.%20%E7%81%AB%E6%98%9F%E8%AF%8D%E5%85%B8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0269.%20%E7%81%AB%E6%98%9F%E8%AF%8D%E5%85%B8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0270. 最接近的二叉搜索树值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0270.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0270.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0271. 字符串的编码与解码【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0271.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0271.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8E%E8%A7%A3%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0272. 最接近的二叉搜索树值 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0272.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0272.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0273. 整数转换英文表示【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0273.%20%E6%95%B4%E6%95%B0%E8%BD%AC%E6%8D%A2%E8%8B%B1%E6%96%87%E8%A1%A8%E7%A4%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0273.%20%E6%95%B4%E6%95%B0%E8%BD%AC%E6%8D%A2%E8%8B%B1%E6%96%87%E8%A1%A8%E7%A4%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0274. H 指数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0274.%20H%20%E6%8C%87%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0274.%20H%20%E6%8C%87%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0275. H 指数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0275.%20H%20%E6%8C%87%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0275.%20H%20%E6%8C%87%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0276. 栅栏涂色【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0276.%20%E6%A0%85%E6%A0%8F%E6%B6%82%E8%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0276.%20%E6%A0%85%E6%A0%8F%E6%B6%82%E8%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0277. 搜寻名人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0277.%20%E6%90%9C%E5%AF%BB%E5%90%8D%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0277.%20%E6%90%9C%E5%AF%BB%E5%90%8D%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0278. 第一个错误的版本【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0278.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0278.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0278.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 二分查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0278.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%94%99%E8%AF%AF%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---二分查找)\\n- [ ] [0279. 完全平方数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0279.%20%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0279.%20%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0280. 摆动排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0280.%20%E6%91%86%E5%8A%A8%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0280.%20%E6%91%86%E5%8A%A8%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0281. 锯齿迭代器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0281.%20%E9%94%AF%E9%BD%BF%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0281.%20%E9%94%AF%E9%BD%BF%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0282. 给表达式添加运算符【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0282.%20%E7%BB%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B7%BB%E5%8A%A0%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0282.%20%E7%BB%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B7%BB%E5%8A%A0%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0283. 移动零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0283.%20%E7%A7%BB%E5%8A%A8%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0283.%20%E7%A7%BB%E5%8A%A8%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0283.%20%E7%A7%BB%E5%8A%A8%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---双指针)\\n- [ ] [0284. 窥视迭代器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0284.%20%E7%AA%A5%E8%A7%86%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0284.%20%E7%AA%A5%E8%A7%86%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0285. 二叉搜索树中的中序后继【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0285.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%B8%AD%E5%BA%8F%E5%90%8E%E7%BB%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0285.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%B8%AD%E5%BA%8F%E5%90%8E%E7%BB%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0286. 墙与门【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0286.%20%E5%A2%99%E4%B8%8E%E9%97%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0286.%20%E5%A2%99%E4%B8%8E%E9%97%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0287. 寻找重复数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0287.%20%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0287.%20%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0288. 单词的唯一缩写【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0288.%20%E5%8D%95%E8%AF%8D%E7%9A%84%E5%94%AF%E4%B8%80%E7%BC%A9%E5%86%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0288.%20%E5%8D%95%E8%AF%8D%E7%9A%84%E5%94%AF%E4%B8%80%E7%BC%A9%E5%86%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0289. 生命游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0289.%20%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0289.%20%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0290. 单词规律【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0290.%20%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0290.%20%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0291. 单词规律 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0291.%20%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0291.%20%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0292. Nim 游戏【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0292.%20Nim%20%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0292.%20Nim%20%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0293. 翻转游戏【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0293.%20%E7%BF%BB%E8%BD%AC%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0293.%20%E7%BF%BB%E8%BD%AC%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0294. 翻转游戏 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0294.%20%E7%BF%BB%E8%BD%AC%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0294.%20%E7%BF%BB%E8%BD%AC%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0295. 数据流的中位数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0295.%20%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0295.%20%E6%95%B0%E6%8D%AE%E6%B5%81%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0296. 最佳的碰头地点【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0296.%20%E6%9C%80%E4%BD%B3%E7%9A%84%E7%A2%B0%E5%A4%B4%E5%9C%B0%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0296.%20%E6%9C%80%E4%BD%B3%E7%9A%84%E7%A2%B0%E5%A4%B4%E5%9C%B0%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0297. 二叉树的序列化与反序列化【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0297.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0297.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0298. 二叉树最长连续序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0298.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0298.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0299. 猜数字游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0299.%20%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0299.%20%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0300. 最长递增子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0300.%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0300.%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 5. 0301~0400\\n\\n- [ ] [0301. 删除无效的括号【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0301.%20%E5%88%A0%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0301.%20%E5%88%A0%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0302. 包含全部黑色像素的最小矩形【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0302.%20%E5%8C%85%E5%90%AB%E5%85%A8%E9%83%A8%E9%BB%91%E8%89%B2%E5%83%8F%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0302.%20%E5%8C%85%E5%90%AB%E5%85%A8%E9%83%A8%E9%BB%91%E8%89%B2%E5%83%8F%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0303. 区域和检索 - 数组不可变【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0303.%20%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E6%95%B0%E7%BB%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0303.%20%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E6%95%B0%E7%BB%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 前缀和数组](https://tdahuyou.github.io/TNotes.leetcode/notes/0303.%20%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E6%95%B0%E7%BB%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---前缀和数组)\\n- [ ] [0304. 二维区域和检索 - 矩阵不可变【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0304.%20%E4%BA%8C%E7%BB%B4%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E7%9F%A9%E9%98%B5%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0304.%20%E4%BA%8C%E7%BB%B4%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E7%9F%A9%E9%98%B5%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0305. 岛屿数量 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0305.%20%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0305.%20%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0306. 累加数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0306.%20%E7%B4%AF%E5%8A%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0306.%20%E7%B4%AF%E5%8A%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0307. 区域和检索 - 数组可修改【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0307.%20%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BF%AE%E6%94%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0307.%20%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BF%AE%E6%94%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0308. 二维区域和检索 - 矩阵可修改【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0308.%20%E4%BA%8C%E7%BB%B4%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E7%9F%A9%E9%98%B5%E5%8F%AF%E4%BF%AE%E6%94%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0308.%20%E4%BA%8C%E7%BB%B4%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2%20-%20%E7%9F%A9%E9%98%B5%E5%8F%AF%E4%BF%AE%E6%94%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0309. 买卖股票的最佳时机含冷冻期【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0309.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0309.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0310. 最小高度树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0310.%20%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0310.%20%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0311. 稀疏矩阵的乘法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0311.%20%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E7%9A%84%E4%B9%98%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0311.%20%E7%A8%80%E7%96%8F%E7%9F%A9%E9%98%B5%E7%9A%84%E4%B9%98%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0312. 戳气球【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0312.%20%E6%88%B3%E6%B0%94%E7%90%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0312.%20%E6%88%B3%E6%B0%94%E7%90%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0313. 超级丑数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0313.%20%E8%B6%85%E7%BA%A7%E4%B8%91%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0313.%20%E8%B6%85%E7%BA%A7%E4%B8%91%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0314. 二叉树的垂直遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0314.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9E%82%E7%9B%B4%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0314.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9E%82%E7%9B%B4%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0315. 计算右侧小于当前元素的个数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0315.%20%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0315.%20%E8%AE%A1%E7%AE%97%E5%8F%B3%E4%BE%A7%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E5%85%83%E7%B4%A0%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0316. 去除重复字母【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0316.%20%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0316.%20%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0317. 离建筑物最近的距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0317.%20%E7%A6%BB%E5%BB%BA%E7%AD%91%E7%89%A9%E6%9C%80%E8%BF%91%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0317.%20%E7%A6%BB%E5%BB%BA%E7%AD%91%E7%89%A9%E6%9C%80%E8%BF%91%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0318. 最大单词长度乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0318.%20%E6%9C%80%E5%A4%A7%E5%8D%95%E8%AF%8D%E9%95%BF%E5%BA%A6%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0318.%20%E6%9C%80%E5%A4%A7%E5%8D%95%E8%AF%8D%E9%95%BF%E5%BA%A6%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0319. 灯泡开关【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0319.%20%E7%81%AF%E6%B3%A1%E5%BC%80%E5%85%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0319.%20%E7%81%AF%E6%B3%A1%E5%BC%80%E5%85%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0320. 列举单词的全部缩写【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0320.%20%E5%88%97%E4%B8%BE%E5%8D%95%E8%AF%8D%E7%9A%84%E5%85%A8%E9%83%A8%E7%BC%A9%E5%86%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0320.%20%E5%88%97%E4%B8%BE%E5%8D%95%E8%AF%8D%E7%9A%84%E5%85%A8%E9%83%A8%E7%BC%A9%E5%86%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0321. 拼接最大数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0321.%20%E6%8B%BC%E6%8E%A5%E6%9C%80%E5%A4%A7%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0321.%20%E6%8B%BC%E6%8E%A5%E6%9C%80%E5%A4%A7%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0322. 零钱兑换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0322.%20%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0322.%20%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0323. 无向图中连通分量的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0323.%20%E6%97%A0%E5%90%91%E5%9B%BE%E4%B8%AD%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0323.%20%E6%97%A0%E5%90%91%E5%9B%BE%E4%B8%AD%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0324. 摆动排序 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0324.%20%E6%91%86%E5%8A%A8%E6%8E%92%E5%BA%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0324.%20%E6%91%86%E5%8A%A8%E6%8E%92%E5%BA%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0325. 和等于 k 的最长子数组长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0325.%20%E5%92%8C%E7%AD%89%E4%BA%8E%20k%20%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0325.%20%E5%92%8C%E7%AD%89%E4%BA%8E%20k%20%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0326. 3 的幂【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0326.%203%20%E7%9A%84%E5%B9%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0326.%203%20%E7%9A%84%E5%B9%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0327. 区间和的个数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0327.%20%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0327.%20%E5%8C%BA%E9%97%B4%E5%92%8C%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0328. 奇偶链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0328.%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0328.%20%E5%A5%87%E5%81%B6%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0329. 矩阵中的最长递增路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0329.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0329.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0330. 按要求补齐数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0330.%20%E6%8C%89%E8%A6%81%E6%B1%82%E8%A1%A5%E9%BD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0330.%20%E6%8C%89%E8%A6%81%E6%B1%82%E8%A1%A5%E9%BD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0331. 验证二叉树的前序序列化【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0331.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0331.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E5%BA%8F%E5%88%97%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0332. 重新安排行程【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0332.%20%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E8%A1%8C%E7%A8%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0332.%20%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E8%A1%8C%E7%A8%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0333. 最大二叉搜索子树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0333.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0333.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0334. 递增的三元子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0334.%20%E9%80%92%E5%A2%9E%E7%9A%84%E4%B8%89%E5%85%83%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0334.%20%E9%80%92%E5%A2%9E%E7%9A%84%E4%B8%89%E5%85%83%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0335. 路径交叉【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0335.%20%E8%B7%AF%E5%BE%84%E4%BA%A4%E5%8F%89%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0335.%20%E8%B7%AF%E5%BE%84%E4%BA%A4%E5%8F%89%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0336. 回文对【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0336.%20%E5%9B%9E%E6%96%87%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0336.%20%E5%9B%9E%E6%96%87%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0337. 打家劫舍 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0337.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0337.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0338. 比特位计数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0338.%20%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0338.%20%E6%AF%94%E7%89%B9%E4%BD%8D%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0339. 嵌套列表加权和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0339.%20%E5%B5%8C%E5%A5%97%E5%88%97%E8%A1%A8%E5%8A%A0%E6%9D%83%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0339.%20%E5%B5%8C%E5%A5%97%E5%88%97%E8%A1%A8%E5%8A%A0%E6%9D%83%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0340. 至多包含 K 个不同字符的最长子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0340.%20%E8%87%B3%E5%A4%9A%E5%8C%85%E5%90%AB%20K%20%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0340.%20%E8%87%B3%E5%A4%9A%E5%8C%85%E5%90%AB%20K%20%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0341. 扁平化嵌套列表迭代器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0341.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E5%88%97%E8%A1%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0341.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E5%88%97%E8%A1%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0342. 4的幂【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0342.%204%E7%9A%84%E5%B9%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0342.%204%E7%9A%84%E5%B9%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0343. 整数拆分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0343.%20%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0343.%20%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0344. 反转字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0344.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0344.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 - 直接调用原生 API](https://tdahuyou.github.io/TNotes.leetcode/notes/0344.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法---直接调用原生-api)\\n  - [3. 🎯 Solutions.2 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0344.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---双指针)\\n  - [4. 🎯 Solutions.3 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0344.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---递归)\\n  - [5. 🔗 References](https://tdahuyou.github.io/TNotes.leetcode/notes/0344.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#5--references)\\n- [ ] [0345. 反转字符串中的元音字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0345.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0345.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0346. 数据流中的移动平均值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0346.%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0346.%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0347. 前 K 个高频元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0347.%20%E5%89%8D%20K%20%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0347.%20%E5%89%8D%20K%20%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0348. 设计井字棋【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0348.%20%E8%AE%BE%E8%AE%A1%E4%BA%95%E5%AD%97%E6%A3%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0348.%20%E8%AE%BE%E8%AE%A1%E4%BA%95%E5%AD%97%E6%A3%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0349. 两个数组的交集【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0349.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0349.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0349.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [x] [0350. 两个数组的交集 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0350.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0350.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0350.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0351. 安卓系统手势解锁【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0351.%20%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0351.%20%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E6%89%8B%E5%8A%BF%E8%A7%A3%E9%94%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0352. 将数据流变为多个不相交区间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0352.%20%E5%B0%86%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8F%98%E4%B8%BA%E5%A4%9A%E4%B8%AA%E4%B8%8D%E7%9B%B8%E4%BA%A4%E5%8C%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0352.%20%E5%B0%86%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8F%98%E4%B8%BA%E5%A4%9A%E4%B8%AA%E4%B8%8D%E7%9B%B8%E4%BA%A4%E5%8C%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0353. 贪吃蛇【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0353.%20%E8%B4%AA%E5%90%83%E8%9B%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0353.%20%E8%B4%AA%E5%90%83%E8%9B%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0354. 俄罗斯套娃信封问题【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0354.%20%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0354.%20%E4%BF%84%E7%BD%97%E6%96%AF%E5%A5%97%E5%A8%83%E4%BF%A1%E5%B0%81%E9%97%AE%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0355. 设计推特【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0355.%20%E8%AE%BE%E8%AE%A1%E6%8E%A8%E7%89%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0355.%20%E8%AE%BE%E8%AE%A1%E6%8E%A8%E7%89%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0355.%20%E8%AE%BE%E8%AE%A1%E6%8E%A8%E7%89%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [0356. 直线镜像【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0356.%20%E7%9B%B4%E7%BA%BF%E9%95%9C%E5%83%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0356.%20%E7%9B%B4%E7%BA%BF%E9%95%9C%E5%83%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0357. 统计各位数字都不同的数字个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0357.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E9%83%BD%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E5%AD%97%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0357.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E9%83%BD%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E5%AD%97%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0358. K 距离间隔重排字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0358.%20K%20%E8%B7%9D%E7%A6%BB%E9%97%B4%E9%9A%94%E9%87%8D%E6%8E%92%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0358.%20K%20%E8%B7%9D%E7%A6%BB%E9%97%B4%E9%9A%94%E9%87%8D%E6%8E%92%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0359. 日志速率限制器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0359.%20%E6%97%A5%E5%BF%97%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0359.%20%E6%97%A5%E5%BF%97%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0360. 有序转化数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0360.%20%E6%9C%89%E5%BA%8F%E8%BD%AC%E5%8C%96%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0360.%20%E6%9C%89%E5%BA%8F%E8%BD%AC%E5%8C%96%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0361. 轰炸敌人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0361.%20%E8%BD%B0%E7%82%B8%E6%95%8C%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0361.%20%E8%BD%B0%E7%82%B8%E6%95%8C%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0362. 敲击计数器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0362.%20%E6%95%B2%E5%87%BB%E8%AE%A1%E6%95%B0%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0362.%20%E6%95%B2%E5%87%BB%E8%AE%A1%E6%95%B0%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0363. 矩形区域不超过 K 的最大数值和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0363.%20%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0363.%20%E7%9F%A9%E5%BD%A2%E5%8C%BA%E5%9F%9F%E4%B8%8D%E8%B6%85%E8%BF%87%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0364. 嵌套列表加权和 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0364.%20%E5%B5%8C%E5%A5%97%E5%88%97%E8%A1%A8%E5%8A%A0%E6%9D%83%E5%92%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0364.%20%E5%B5%8C%E5%A5%97%E5%88%97%E8%A1%A8%E5%8A%A0%E6%9D%83%E5%92%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0365. 水壶问题【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0365.%20%E6%B0%B4%E5%A3%B6%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0365.%20%E6%B0%B4%E5%A3%B6%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0366. 寻找二叉树的叶子节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0366.%20%E5%AF%BB%E6%89%BE%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0366.%20%E5%AF%BB%E6%89%BE%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0367. 有效的完全平方数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0367.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0367.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0368. 最大整除子集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0368.%20%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0368.%20%E6%9C%80%E5%A4%A7%E6%95%B4%E9%99%A4%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0369. 给单链表加一【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0369.%20%E7%BB%99%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8A%A0%E4%B8%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0369.%20%E7%BB%99%E5%8D%95%E9%93%BE%E8%A1%A8%E5%8A%A0%E4%B8%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0370. 区间加法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0370.%20%E5%8C%BA%E9%97%B4%E5%8A%A0%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0370.%20%E5%8C%BA%E9%97%B4%E5%8A%A0%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0371. 两整数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0371.%20%E4%B8%A4%E6%95%B4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0371.%20%E4%B8%A4%E6%95%B4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0372. 超级次方【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0372.%20%E8%B6%85%E7%BA%A7%E6%AC%A1%E6%96%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0372.%20%E8%B6%85%E7%BA%A7%E6%AC%A1%E6%96%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0373. 查找和最小的 K 对数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0373.%20%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84%20K%20%E5%AF%B9%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0373.%20%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84%20K%20%E5%AF%B9%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0374. 猜数字大小【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0374.%20%E7%8C%9C%E6%95%B0%E5%AD%97%E5%A4%A7%E5%B0%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0374.%20%E7%8C%9C%E6%95%B0%E5%AD%97%E5%A4%A7%E5%B0%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0375. 猜数字大小 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0375.%20%E7%8C%9C%E6%95%B0%E5%AD%97%E5%A4%A7%E5%B0%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0375.%20%E7%8C%9C%E6%95%B0%E5%AD%97%E5%A4%A7%E5%B0%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0376. 摆动序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0376.%20%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0376.%20%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0377. 组合总和 Ⅳ【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0377.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%20%E2%85%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0377.%20%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C%20%E2%85%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0378. 有序矩阵中第 K 小的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0378.%20%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0378.%20%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0379. 电话目录管理系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0379.%20%E7%94%B5%E8%AF%9D%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0379.%20%E7%94%B5%E8%AF%9D%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0380. O(1) 时间插入、删除和获取随机元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0380.%20O(1)%20%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0380.%20O(1)%20%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0381. O(1) 时间插入、删除和获取随机元素 - 允许重复【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0381.%20O(1)%20%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0%20-%20%E5%85%81%E8%AE%B8%E9%87%8D%E5%A4%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0381.%20O(1)%20%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0%20-%20%E5%85%81%E8%AE%B8%E9%87%8D%E5%A4%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0382. 链表随机节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0382.%20%E9%93%BE%E8%A1%A8%E9%9A%8F%E6%9C%BA%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0382.%20%E9%93%BE%E8%A1%A8%E9%9A%8F%E6%9C%BA%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0383. 赎金信【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0383.%20%E8%B5%8E%E9%87%91%E4%BF%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0383.%20%E8%B5%8E%E9%87%91%E4%BF%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0384. 打乱数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0384.%20%E6%89%93%E4%B9%B1%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0384.%20%E6%89%93%E4%B9%B1%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0385. 迷你语法分析器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0385.%20%E8%BF%B7%E4%BD%A0%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0385.%20%E8%BF%B7%E4%BD%A0%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0386. 字典序排数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0386.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0386.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0387. 字符串中的第一个唯一字符【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0387.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0387.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0388. 文件的最长绝对路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0388.%20%E6%96%87%E4%BB%B6%E7%9A%84%E6%9C%80%E9%95%BF%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0388.%20%E6%96%87%E4%BB%B6%E7%9A%84%E6%9C%80%E9%95%BF%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0389. 找不同【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0389.%20%E6%89%BE%E4%B8%8D%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0389.%20%E6%89%BE%E4%B8%8D%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0390. 消除游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0390.%20%E6%B6%88%E9%99%A4%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0390.%20%E6%B6%88%E9%99%A4%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0391. 完美矩形【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0391.%20%E5%AE%8C%E7%BE%8E%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0391.%20%E5%AE%8C%E7%BE%8E%E7%9F%A9%E5%BD%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0392. 判断子序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0392.%20%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0392.%20%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0393. UTF-8 编码验证【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0393.%20UTF-8%20%E7%BC%96%E7%A0%81%E9%AA%8C%E8%AF%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0393.%20UTF-8%20%E7%BC%96%E7%A0%81%E9%AA%8C%E8%AF%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0394. 字符串解码【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0394.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0394.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0395. 至少有 K 个重复字符的最长子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0395.%20%E8%87%B3%E5%B0%91%E6%9C%89%20K%20%E4%B8%AA%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0395.%20%E8%87%B3%E5%B0%91%E6%9C%89%20K%20%E4%B8%AA%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0396. 旋转函数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0396.%20%E6%97%8B%E8%BD%AC%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0396.%20%E6%97%8B%E8%BD%AC%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0397. 整数替换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0397.%20%E6%95%B4%E6%95%B0%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0397.%20%E6%95%B4%E6%95%B0%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0398. 随机数索引【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0398.%20%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%B4%A2%E5%BC%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0398.%20%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%B4%A2%E5%BC%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0399. 除法求值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0399.%20%E9%99%A4%E6%B3%95%E6%B1%82%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0399.%20%E9%99%A4%E6%B3%95%E6%B1%82%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0400. 第 N 位数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0400.%20%E7%AC%AC%20N%20%E4%BD%8D%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0400.%20%E7%AC%AC%20N%20%E4%BD%8D%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 6. 0401~0500\\n\\n- [ ] [0401. 二进制手表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0401.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%8B%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0401.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%89%8B%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0402. 移掉 K 位数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0402.%20%E7%A7%BB%E6%8E%89%20K%20%E4%BD%8D%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0402.%20%E7%A7%BB%E6%8E%89%20K%20%E4%BD%8D%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0403. 青蛙过河【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0403.%20%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0403.%20%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0404. 左叶子之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0404.%20%E5%B7%A6%E5%8F%B6%E5%AD%90%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0404.%20%E5%B7%A6%E5%8F%B6%E5%AD%90%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0405. 数字转换为十六进制数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0405.%20%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0405.%20%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0406. 根据身高重建队列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0406.%20%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0406.%20%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0407. 接雨水 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0407.%20%E6%8E%A5%E9%9B%A8%E6%B0%B4%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0407.%20%E6%8E%A5%E9%9B%A8%E6%B0%B4%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0408. 有效单词缩写【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0408.%20%E6%9C%89%E6%95%88%E5%8D%95%E8%AF%8D%E7%BC%A9%E5%86%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0408.%20%E6%9C%89%E6%95%88%E5%8D%95%E8%AF%8D%E7%BC%A9%E5%86%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0409. 最长回文串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0409.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0409.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0410. 分割数组的最大值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0410.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0410.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0411. 最短独占单词缩写【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0411.%20%E6%9C%80%E7%9F%AD%E7%8B%AC%E5%8D%A0%E5%8D%95%E8%AF%8D%E7%BC%A9%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0411.%20%E6%9C%80%E7%9F%AD%E7%8B%AC%E5%8D%A0%E5%8D%95%E8%AF%8D%E7%BC%A9%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0412. Fizz Buzz【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0412.%20Fizz%20Buzz%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0412.%20Fizz%20Buzz%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0413. 等差数列划分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0413.%20%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0413.%20%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0414. 第三大的数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0414.%20%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0414.%20%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 一次遍历维护三个变量](https://tdahuyou.github.io/TNotes.leetcode/notes/0414.%20%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---一次遍历维护三个变量)\\n  - [3. 🎯 Solutions.2 - 使用 Set 去重 + 排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0414.%20%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---使用-set-去重--排序)\\n  - [4. 🎯 Solutions.3 - 使用数组维护前三大的数](https://tdahuyou.github.io/TNotes.leetcode/notes/0414.%20%E7%AC%AC%E4%B8%89%E5%A4%A7%E7%9A%84%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---使用数组维护前三大的数)\\n- [ ] [0415. 字符串相加【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0415.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0415.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0416. 分割等和子集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0416.%20%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0416.%20%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0417. 太平洋大西洋水流问题【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0417.%20%E5%A4%AA%E5%B9%B3%E6%B4%8B%E5%A4%A7%E8%A5%BF%E6%B4%8B%E6%B0%B4%E6%B5%81%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0417.%20%E5%A4%AA%E5%B9%B3%E6%B4%8B%E5%A4%A7%E8%A5%BF%E6%B4%8B%E6%B0%B4%E6%B5%81%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0418. 屏幕可显示句子的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0418.%20%E5%B1%8F%E5%B9%95%E5%8F%AF%E6%98%BE%E7%A4%BA%E5%8F%A5%E5%AD%90%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0418.%20%E5%B1%8F%E5%B9%95%E5%8F%AF%E6%98%BE%E7%A4%BA%E5%8F%A5%E5%AD%90%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0419. 棋盘上的战舰【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0419.%20%E6%A3%8B%E7%9B%98%E4%B8%8A%E7%9A%84%E6%88%98%E8%88%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0419.%20%E6%A3%8B%E7%9B%98%E4%B8%8A%E7%9A%84%E6%88%98%E8%88%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0420. 强密码检验器【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0420.%20%E5%BC%BA%E5%AF%86%E7%A0%81%E6%A3%80%E9%AA%8C%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0420.%20%E5%BC%BA%E5%AF%86%E7%A0%81%E6%A3%80%E9%AA%8C%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0421. 数组中两个数的最大异或值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0421.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0421.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0422. 有效的单词方块【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0422.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%8D%95%E8%AF%8D%E6%96%B9%E5%9D%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0422.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%8D%95%E8%AF%8D%E6%96%B9%E5%9D%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0423. 从英文中重建数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0423.%20%E4%BB%8E%E8%8B%B1%E6%96%87%E4%B8%AD%E9%87%8D%E5%BB%BA%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0423.%20%E4%BB%8E%E8%8B%B1%E6%96%87%E4%B8%AD%E9%87%8D%E5%BB%BA%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0424. 替换后的最长重复字符【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0424.%20%E6%9B%BF%E6%8D%A2%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0424.%20%E6%9B%BF%E6%8D%A2%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0425. 单词方块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0425.%20%E5%8D%95%E8%AF%8D%E6%96%B9%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0425.%20%E5%8D%95%E8%AF%8D%E6%96%B9%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0426. 将二叉搜索树转化为排序的双向链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0426.%20%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0426.%20%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0427. 建立四叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0427.%20%E5%BB%BA%E7%AB%8B%E5%9B%9B%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0427.%20%E5%BB%BA%E7%AB%8B%E5%9B%9B%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0428. 序列化和反序列化 N 叉树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0428.%20%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20N%20%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0428.%20%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%20N%20%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0429. N 叉树的层序遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0429.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0429.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0430. 扁平化多级双向链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0430.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%A4%9A%E7%BA%A7%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0430.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%A4%9A%E7%BA%A7%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0431. 将 N 叉树编码为二叉树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0431.%20%E5%B0%86%20N%20%E5%8F%89%E6%A0%91%E7%BC%96%E7%A0%81%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0431.%20%E5%B0%86%20N%20%E5%8F%89%E6%A0%91%E7%BC%96%E7%A0%81%E4%B8%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0432. 全 O(1) 的数据结构【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0432.%20%E5%85%A8%20O(1)%20%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0432.%20%E5%85%A8%20O(1)%20%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0433. 最小基因变化【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0433.%20%E6%9C%80%E5%B0%8F%E5%9F%BA%E5%9B%A0%E5%8F%98%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0433.%20%E6%9C%80%E5%B0%8F%E5%9F%BA%E5%9B%A0%E5%8F%98%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0434. 字符串中的单词数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0434.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0434.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0435. 无重叠区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0435.%20%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0435.%20%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0436. 寻找右区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0436.%20%E5%AF%BB%E6%89%BE%E5%8F%B3%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0436.%20%E5%AF%BB%E6%89%BE%E5%8F%B3%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0437. 路径总和 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0437.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0437.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0438. 找到字符串中所有字母异位词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0438.%20%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0438.%20%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0439. 三元表达式解析器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0439.%20%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%A3%E6%9E%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0439.%20%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%A7%A3%E6%9E%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0440. 字典序的第K小数字【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0440.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E7%9A%84%E7%AC%ACK%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0440.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E7%9A%84%E7%AC%ACK%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0441. 排列硬币【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0441.%20%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0441.%20%E6%8E%92%E5%88%97%E7%A1%AC%E5%B8%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0442. 数组中重复的数据【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0442.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0442.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0443. 压缩字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0443.%20%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0443.%20%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0444. 序列重建【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0444.%20%E5%BA%8F%E5%88%97%E9%87%8D%E5%BB%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0444.%20%E5%BA%8F%E5%88%97%E9%87%8D%E5%BB%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0445. 两数相加 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0445.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0445.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0446. 等差数列划分 II - 子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0446.%20%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86%20II%20-%20%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0446.%20%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E5%88%92%E5%88%86%20II%20-%20%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0447. 回旋镖的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0447.%20%E5%9B%9E%E6%97%8B%E9%95%96%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0447.%20%E5%9B%9E%E6%97%8B%E9%95%96%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0448. 找到所有数组中消失的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0448.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0448.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 使用 Set](https://tdahuyou.github.io/TNotes.leetcode/notes/0448.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---使用-set)\\n  - [3. 🎯 Solutions.2 - 原地修改](https://tdahuyou.github.io/TNotes.leetcode/notes/0448.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---原地修改)\\n- [ ] [0449. 序列化和反序列化二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0449.%20%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0449.%20%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0450. 删除二叉搜索树中的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0450.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0450.%20%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0451. 根据字符出现频率排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0451.%20%E6%A0%B9%E6%8D%AE%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0451.%20%E6%A0%B9%E6%8D%AE%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0452. 用最少数量的箭引爆气球【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0452.%20%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0452.%20%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0453. 最小操作次数使数组元素相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0453.%20%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0453.%20%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0454. 四数相加 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0454.%20%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0454.%20%E5%9B%9B%E6%95%B0%E7%9B%B8%E5%8A%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0455. 分发饼干【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0455.%20%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0455.%20%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0455.%20%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0456. 132 模式【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0456.%20132%20%E6%A8%A1%E5%BC%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0456.%20132%20%E6%A8%A1%E5%BC%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0457. 环形数组是否存在循环【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0457.%20%E7%8E%AF%E5%BD%A2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0457.%20%E7%8E%AF%E5%BD%A2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%BE%AA%E7%8E%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0458. 可怜的小猪【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0458.%20%E5%8F%AF%E6%80%9C%E7%9A%84%E5%B0%8F%E7%8C%AA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0458.%20%E5%8F%AF%E6%80%9C%E7%9A%84%E5%B0%8F%E7%8C%AA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0459. 重复的子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0459.%20%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0459.%20%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0460. LFU 缓存【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0460.%20LFU%20%E7%BC%93%E5%AD%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0460.%20LFU%20%E7%BC%93%E5%AD%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0461. 汉明距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0461.%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0461.%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0462. 最小操作次数使数组元素相等 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0462.%20%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0462.%20%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0463. 岛屿的周长【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0463.%20%E5%B2%9B%E5%B1%BF%E7%9A%84%E5%91%A8%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0463.%20%E5%B2%9B%E5%B1%BF%E7%9A%84%E5%91%A8%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0464. 我能赢吗【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0464.%20%E6%88%91%E8%83%BD%E8%B5%A2%E5%90%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0464.%20%E6%88%91%E8%83%BD%E8%B5%A2%E5%90%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0465. 最优账单平衡【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0465.%20%E6%9C%80%E4%BC%98%E8%B4%A6%E5%8D%95%E5%B9%B3%E8%A1%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0465.%20%E6%9C%80%E4%BC%98%E8%B4%A6%E5%8D%95%E5%B9%B3%E8%A1%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0466. 统计重复个数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0466.%20%E7%BB%9F%E8%AE%A1%E9%87%8D%E5%A4%8D%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0466.%20%E7%BB%9F%E8%AE%A1%E9%87%8D%E5%A4%8D%E4%B8%AA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0467. 环绕字符串中唯一的子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0467.%20%E7%8E%AF%E7%BB%95%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%94%AF%E4%B8%80%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0467.%20%E7%8E%AF%E7%BB%95%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%94%AF%E4%B8%80%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0468. 验证IP地址【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0468.%20%E9%AA%8C%E8%AF%81IP%E5%9C%B0%E5%9D%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0468.%20%E9%AA%8C%E8%AF%81IP%E5%9C%B0%E5%9D%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0469. 凸多边形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0469.%20%E5%87%B8%E5%A4%9A%E8%BE%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0469.%20%E5%87%B8%E5%A4%9A%E8%BE%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0470. 用 Rand7() 实现 Rand10()【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0470.%20%E7%94%A8%20Rand7()%20%E5%AE%9E%E7%8E%B0%20Rand10()%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0470.%20%E7%94%A8%20Rand7()%20%E5%AE%9E%E7%8E%B0%20Rand10()%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0471. 编码最短长度的字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0471.%20%E7%BC%96%E7%A0%81%E6%9C%80%E7%9F%AD%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0471.%20%E7%BC%96%E7%A0%81%E6%9C%80%E7%9F%AD%E9%95%BF%E5%BA%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0472. 连接词【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0472.%20%E8%BF%9E%E6%8E%A5%E8%AF%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0472.%20%E8%BF%9E%E6%8E%A5%E8%AF%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0473. 火柴拼正方形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0473.%20%E7%81%AB%E6%9F%B4%E6%8B%BC%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0473.%20%E7%81%AB%E6%9F%B4%E6%8B%BC%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0474. 一和零【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0474.%20%E4%B8%80%E5%92%8C%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0474.%20%E4%B8%80%E5%92%8C%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0475. 供暖器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0475.%20%E4%BE%9B%E6%9A%96%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0475.%20%E4%BE%9B%E6%9A%96%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0476. 数字的补数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0476.%20%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A5%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0476.%20%E6%95%B0%E5%AD%97%E7%9A%84%E8%A1%A5%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0477. 汉明距离总和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0477.%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0477.%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0478. 在圆内随机生成点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0478.%20%E5%9C%A8%E5%9C%86%E5%86%85%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0478.%20%E5%9C%A8%E5%9C%86%E5%86%85%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0479. 最大回文数乘积【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0479.%20%E6%9C%80%E5%A4%A7%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0479.%20%E6%9C%80%E5%A4%A7%E5%9B%9E%E6%96%87%E6%95%B0%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0480. 滑动窗口中位数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0480.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0480.%20%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0481. 神奇字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0481.%20%E7%A5%9E%E5%A5%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0481.%20%E7%A5%9E%E5%A5%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0482. 密钥格式化【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0482.%20%E5%AF%86%E9%92%A5%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0482.%20%E5%AF%86%E9%92%A5%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0483. 最小好进制【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0483.%20%E6%9C%80%E5%B0%8F%E5%A5%BD%E8%BF%9B%E5%88%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0483.%20%E6%9C%80%E5%B0%8F%E5%A5%BD%E8%BF%9B%E5%88%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0484. 寻找排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0484.%20%E5%AF%BB%E6%89%BE%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0484.%20%E5%AF%BB%E6%89%BE%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0485. 最大连续 1 的个数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0485.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0485.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 📒 性能比较](https://tdahuyou.github.io/TNotes.leetcode/notes/0485.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--性能比较)\\n  - [3. 🎯 Solutions.1 - 暴力解法 - 遍历](https://tdahuyou.github.io/TNotes.leetcode/notes/0485.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1---暴力解法---遍历)\\n  - [4. 🎯 Solutions.2 - 暴力解法 - 字符串切片](https://tdahuyou.github.io/TNotes.leetcode/notes/0485.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions2---暴力解法---字符串切片)\\n  - [5. 🎯 Solutions.3 - 暴力解法 - 正则](https://tdahuyou.github.io/TNotes.leetcode/notes/0485.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#5--solutions3---暴力解法---正则)\\n- [ ] [0486. 预测赢家【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0486.%20%E9%A2%84%E6%B5%8B%E8%B5%A2%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0486.%20%E9%A2%84%E6%B5%8B%E8%B5%A2%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0487. 最大连续1的个数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0487.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0487.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0488. 祖玛游戏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0488.%20%E7%A5%96%E7%8E%9B%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0488.%20%E7%A5%96%E7%8E%9B%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0489. 扫地机器人【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0489.%20%E6%89%AB%E5%9C%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0489.%20%E6%89%AB%E5%9C%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0490. 迷宫【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0490.%20%E8%BF%B7%E5%AE%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0490.%20%E8%BF%B7%E5%AE%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0491. 非递减子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0491.%20%E9%9D%9E%E9%80%92%E5%87%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0491.%20%E9%9D%9E%E9%80%92%E5%87%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0492. 构造矩形【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0492.%20%E6%9E%84%E9%80%A0%E7%9F%A9%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0492.%20%E6%9E%84%E9%80%A0%E7%9F%A9%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0493. 翻转对【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0493.%20%E7%BF%BB%E8%BD%AC%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0493.%20%E7%BF%BB%E8%BD%AC%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0494. 目标和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0494.%20%E7%9B%AE%E6%A0%87%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0494.%20%E7%9B%AE%E6%A0%87%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0495. 提莫攻击【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0495.%20%E6%8F%90%E8%8E%AB%E6%94%BB%E5%87%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0495.%20%E6%8F%90%E8%8E%AB%E6%94%BB%E5%87%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0495.%20%E6%8F%90%E8%8E%AB%E6%94%BB%E5%87%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 使用 Set 记录所有中毒时间点](https://tdahuyou.github.io/TNotes.leetcode/notes/0495.%20%E6%8F%90%E8%8E%AB%E6%94%BB%E5%87%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---使用-set-记录所有中毒时间点)\\n  - [4. 🎯 Solutions.3 - 区间合并法](https://tdahuyou.github.io/TNotes.leetcode/notes/0495.%20%E6%8F%90%E8%8E%AB%E6%94%BB%E5%87%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---区间合并法)\\n- [ ] [0496. 下一个更大元素 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0496.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0496.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0496.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [0497. 非重叠矩形中的随机点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0497.%20%E9%9D%9E%E9%87%8D%E5%8F%A0%E7%9F%A9%E5%BD%A2%E4%B8%AD%E7%9A%84%E9%9A%8F%E6%9C%BA%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0497.%20%E9%9D%9E%E9%87%8D%E5%8F%A0%E7%9F%A9%E5%BD%A2%E4%B8%AD%E7%9A%84%E9%9A%8F%E6%9C%BA%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0498. 对角线遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0498.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0498.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0499. 迷宫 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0499.%20%E8%BF%B7%E5%AE%AB%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0499.%20%E8%BF%B7%E5%AE%AB%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0500. 键盘行【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0500.%20%E9%94%AE%E7%9B%98%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0500.%20%E9%94%AE%E7%9B%98%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0500.%20%E9%94%AE%E7%9B%98%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n\\n## 7. 0501~0600\\n\\n- [ ] [0501. 二叉搜索树中的众数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0501.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%97%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0501.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%97%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0502. IPO【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0502.%20IPO%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0502.%20IPO%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0503. 下一个更大元素 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0503.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0503.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0504. 七进制数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0504.%20%E4%B8%83%E8%BF%9B%E5%88%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0504.%20%E4%B8%83%E8%BF%9B%E5%88%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0505. 迷宫 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0505.%20%E8%BF%B7%E5%AE%AB%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0505.%20%E8%BF%B7%E5%AE%AB%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0506. 相对名次【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0506.%20%E7%9B%B8%E5%AF%B9%E5%90%8D%E6%AC%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0506.%20%E7%9B%B8%E5%AF%B9%E5%90%8D%E6%AC%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0507. 完美数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0507.%20%E5%AE%8C%E7%BE%8E%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0507.%20%E5%AE%8C%E7%BE%8E%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0508. 出现次数最多的子树元素和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0508.%20%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AD%90%E6%A0%91%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0508.%20%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AD%90%E6%A0%91%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0509. 斐波那契数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0509.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0509.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0509.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---递归)\\n  - [3. 🎯 Solutions.2 - 迭代 + 空间优化（推荐）](https://tdahuyou.github.io/TNotes.leetcode/notes/0509.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---迭代--空间优化推荐)\\n  - [4. 📒 斐波那契数列](https://tdahuyou.github.io/TNotes.leetcode/notes/0509.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--斐波那契数列)\\n- [ ] [0510. 二叉搜索树中的中序后继 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0510.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%B8%AD%E5%BA%8F%E5%90%8E%E7%BB%A7%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0510.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E4%B8%AD%E5%BA%8F%E5%90%8E%E7%BB%A7%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0511. 游戏玩法分析 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0511.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0511.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0512. 游戏玩法分析 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0512.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0512.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0513. 找树左下角的值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0513.%20%E6%89%BE%E6%A0%91%E5%B7%A6%E4%B8%8B%E8%A7%92%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0513.%20%E6%89%BE%E6%A0%91%E5%B7%A6%E4%B8%8B%E8%A7%92%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0514. 自由之路【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0514.%20%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0514.%20%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0515. 在每个树行中找最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0515.%20%E5%9C%A8%E6%AF%8F%E4%B8%AA%E6%A0%91%E8%A1%8C%E4%B8%AD%E6%89%BE%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0515.%20%E5%9C%A8%E6%AF%8F%E4%B8%AA%E6%A0%91%E8%A1%8C%E4%B8%AD%E6%89%BE%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0516. 最长回文子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0516.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0516.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0517. 超级洗衣机【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0517.%20%E8%B6%85%E7%BA%A7%E6%B4%97%E8%A1%A3%E6%9C%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0517.%20%E8%B6%85%E7%BA%A7%E6%B4%97%E8%A1%A3%E6%9C%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0518. 零钱兑换 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0518.%20%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0518.%20%E9%9B%B6%E9%92%B1%E5%85%91%E6%8D%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0519. 随机翻转矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0519.%20%E9%9A%8F%E6%9C%BA%E7%BF%BB%E8%BD%AC%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0519.%20%E9%9A%8F%E6%9C%BA%E7%BF%BB%E8%BD%AC%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0520. 检测大写字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0520.%20%E6%A3%80%E6%B5%8B%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0520.%20%E6%A3%80%E6%B5%8B%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0520.%20%E6%A3%80%E6%B5%8B%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [0521. 最长特殊序列 Ⅰ【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0521.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%BA%8F%E5%88%97%20%E2%85%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0521.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%BA%8F%E5%88%97%20%E2%85%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0522. 最长特殊序列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0522.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0522.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0523. 连续的子数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0523.%20%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0523.%20%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0524. 通过删除字母匹配到字典里最长单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0524.%20%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4%E5%AD%97%E6%AF%8D%E5%8C%B9%E9%85%8D%E5%88%B0%E5%AD%97%E5%85%B8%E9%87%8C%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0524.%20%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4%E5%AD%97%E6%AF%8D%E5%8C%B9%E9%85%8D%E5%88%B0%E5%AD%97%E5%85%B8%E9%87%8C%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0525. 连续数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0525.%20%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0525.%20%E8%BF%9E%E7%BB%AD%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0526. 优美的排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0526.%20%E4%BC%98%E7%BE%8E%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0526.%20%E4%BC%98%E7%BE%8E%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0527. 单词缩写【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0527.%20%E5%8D%95%E8%AF%8D%E7%BC%A9%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0527.%20%E5%8D%95%E8%AF%8D%E7%BC%A9%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0528. 按权重随机选择【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0528.%20%E6%8C%89%E6%9D%83%E9%87%8D%E9%9A%8F%E6%9C%BA%E9%80%89%E6%8B%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0528.%20%E6%8C%89%E6%9D%83%E9%87%8D%E9%9A%8F%E6%9C%BA%E9%80%89%E6%8B%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0529. 扫雷游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0529.%20%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0529.%20%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0530. 二叉搜索树的最小绝对差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0530.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0530.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0531. 孤独像素 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0531.%20%E5%AD%A4%E7%8B%AC%E5%83%8F%E7%B4%A0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0531.%20%E5%AD%A4%E7%8B%AC%E5%83%8F%E7%B4%A0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0532. 数组中的 k-diff 数对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0532.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%20k-diff%20%E6%95%B0%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0532.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%20k-diff%20%E6%95%B0%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0533. 孤独像素 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0533.%20%E5%AD%A4%E7%8B%AC%E5%83%8F%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0533.%20%E5%AD%A4%E7%8B%AC%E5%83%8F%E7%B4%A0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0534. 游戏玩法分析 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0534.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0534.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0535. TinyURL 的加密与解密【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0535.%20TinyURL%20%E7%9A%84%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0535.%20TinyURL%20%E7%9A%84%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0536. 从字符串生成二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0536.%20%E4%BB%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%9F%E6%88%90%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0536.%20%E4%BB%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%94%9F%E6%88%90%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0537. 复数乘法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0537.%20%E5%A4%8D%E6%95%B0%E4%B9%98%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0537.%20%E5%A4%8D%E6%95%B0%E4%B9%98%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0538. 把二叉搜索树转换为累加树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0538.%20%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0538.%20%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%AF%E5%8A%A0%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0539. 最小时间差【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0539.%20%E6%9C%80%E5%B0%8F%E6%97%B6%E9%97%B4%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0539.%20%E6%9C%80%E5%B0%8F%E6%97%B6%E9%97%B4%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0540. 有序数组中的单一元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0540.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%8D%95%E4%B8%80%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0540.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%8D%95%E4%B8%80%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0541. 反转字符串 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0541.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0541.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0542. 01 矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0542.%2001%20%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0542.%2001%20%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0543. 二叉树的直径【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0543.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0543.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0544. 输出比赛匹配对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0544.%20%E8%BE%93%E5%87%BA%E6%AF%94%E8%B5%9B%E5%8C%B9%E9%85%8D%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0544.%20%E8%BE%93%E5%87%BA%E6%AF%94%E8%B5%9B%E5%8C%B9%E9%85%8D%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0545. 二叉树的边界【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0545.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%BE%B9%E7%95%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0545.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E8%BE%B9%E7%95%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0546. 移除盒子【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0546.%20%E7%A7%BB%E9%99%A4%E7%9B%92%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0546.%20%E7%A7%BB%E9%99%A4%E7%9B%92%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0547. 省份数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0547.%20%E7%9C%81%E4%BB%BD%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0547.%20%E7%9C%81%E4%BB%BD%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0548. 将数组分割成和相等的子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0548.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2%E6%88%90%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0548.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2%E6%88%90%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0549. 二叉树最长连续序列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0549.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0549.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0550. 游戏玩法分析 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0550.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0550.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0551. 学生出勤记录 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0551.%20%E5%AD%A6%E7%94%9F%E5%87%BA%E5%8B%A4%E8%AE%B0%E5%BD%95%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0551.%20%E5%AD%A6%E7%94%9F%E5%87%BA%E5%8B%A4%E8%AE%B0%E5%BD%95%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0552. 学生出勤记录 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0552.%20%E5%AD%A6%E7%94%9F%E5%87%BA%E5%8B%A4%E8%AE%B0%E5%BD%95%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0552.%20%E5%AD%A6%E7%94%9F%E5%87%BA%E5%8B%A4%E8%AE%B0%E5%BD%95%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0553. 最优除法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0553.%20%E6%9C%80%E4%BC%98%E9%99%A4%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0553.%20%E6%9C%80%E4%BC%98%E9%99%A4%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0554. 砖墙【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0554.%20%E7%A0%96%E5%A2%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0554.%20%E7%A0%96%E5%A2%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0555. 分割连接字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0555.%20%E5%88%86%E5%89%B2%E8%BF%9E%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0555.%20%E5%88%86%E5%89%B2%E8%BF%9E%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0556. 下一个更大元素 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0556.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0556.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0557. 反转字符串中的单词 III【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0557.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%20III%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0557.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%20III%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 - 使用原生 API](https://tdahuyou.github.io/TNotes.leetcode/notes/0557.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%20III%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法---使用原生-api)\\n  - [3. 🎯 Solutions.2 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0557.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%20III%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---双指针)\\n- [ ] [0558. 四叉树交集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0558.%20%E5%9B%9B%E5%8F%89%E6%A0%91%E4%BA%A4%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0558.%20%E5%9B%9B%E5%8F%89%E6%A0%91%E4%BA%A4%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0559. N 叉树的最大深度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0559.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0559.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0560. 和为 K 的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0560.%20%E5%92%8C%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0560.%20%E5%92%8C%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0561. 数组拆分【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0561.%20%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0561.%20%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0561.%20%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0562. 矩阵中最长的连续1线段【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0562.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%9C%80%E9%95%BF%E7%9A%84%E8%BF%9E%E7%BB%AD1%E7%BA%BF%E6%AE%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0562.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%9C%80%E9%95%BF%E7%9A%84%E8%BF%9E%E7%BB%AD1%E7%BA%BF%E6%AE%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0563. 二叉树的坡度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0563.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9D%A1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0563.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9D%A1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0564. 寻找最近的回文数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0564.%20%E5%AF%BB%E6%89%BE%E6%9C%80%E8%BF%91%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0564.%20%E5%AF%BB%E6%89%BE%E6%9C%80%E8%BF%91%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0565. 数组嵌套【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0565.%20%E6%95%B0%E7%BB%84%E5%B5%8C%E5%A5%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0565.%20%E6%95%B0%E7%BB%84%E5%B5%8C%E5%A5%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [0566. 重塑矩阵【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0566.%20%E9%87%8D%E5%A1%91%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0566.%20%E9%87%8D%E5%A1%91%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0566.%20%E9%87%8D%E5%A1%91%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0567. 字符串的排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0567.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0567.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0568. 最大休假天数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0568.%20%E6%9C%80%E5%A4%A7%E4%BC%91%E5%81%87%E5%A4%A9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0568.%20%E6%9C%80%E5%A4%A7%E4%BC%91%E5%81%87%E5%A4%A9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0569. 员工薪水中位数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0569.%20%E5%91%98%E5%B7%A5%E8%96%AA%E6%B0%B4%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0569.%20%E5%91%98%E5%B7%A5%E8%96%AA%E6%B0%B4%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0570. 至少有5名直接下属的经理【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0570.%20%E8%87%B3%E5%B0%91%E6%9C%895%E5%90%8D%E7%9B%B4%E6%8E%A5%E4%B8%8B%E5%B1%9E%E7%9A%84%E7%BB%8F%E7%90%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0570.%20%E8%87%B3%E5%B0%91%E6%9C%895%E5%90%8D%E7%9B%B4%E6%8E%A5%E4%B8%8B%E5%B1%9E%E7%9A%84%E7%BB%8F%E7%90%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0571. 给定数字的频率查询中位数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0571.%20%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E7%9A%84%E9%A2%91%E7%8E%87%E6%9F%A5%E8%AF%A2%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0571.%20%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E7%9A%84%E9%A2%91%E7%8E%87%E6%9F%A5%E8%AF%A2%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0572. 另一棵树的子树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0572.%20%E5%8F%A6%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0572.%20%E5%8F%A6%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0573. 松鼠模拟【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0573.%20%E6%9D%BE%E9%BC%A0%E6%A8%A1%E6%8B%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0573.%20%E6%9D%BE%E9%BC%A0%E6%A8%A1%E6%8B%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0574. 当选者【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0574.%20%E5%BD%93%E9%80%89%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0574.%20%E5%BD%93%E9%80%89%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0575. 分糖果【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0575.%20%E5%88%86%E7%B3%96%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0575.%20%E5%88%86%E7%B3%96%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0576. 出界的路径数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0576.%20%E5%87%BA%E7%95%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0576.%20%E5%87%BA%E7%95%8C%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0577. 员工奖金【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0577.%20%E5%91%98%E5%B7%A5%E5%A5%96%E9%87%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0577.%20%E5%91%98%E5%B7%A5%E5%A5%96%E9%87%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0578. 查询回答率最高的问题【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0578.%20%E6%9F%A5%E8%AF%A2%E5%9B%9E%E7%AD%94%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0578.%20%E6%9F%A5%E8%AF%A2%E5%9B%9E%E7%AD%94%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0579. 查询员工的累计薪水【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0579.%20%E6%9F%A5%E8%AF%A2%E5%91%98%E5%B7%A5%E7%9A%84%E7%B4%AF%E8%AE%A1%E8%96%AA%E6%B0%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0579.%20%E6%9F%A5%E8%AF%A2%E5%91%98%E5%B7%A5%E7%9A%84%E7%B4%AF%E8%AE%A1%E8%96%AA%E6%B0%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0580. 统计各专业学生人数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0580.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%B8%93%E4%B8%9A%E5%AD%A6%E7%94%9F%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0580.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%B8%93%E4%B8%9A%E5%AD%A6%E7%94%9F%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0581. 最短无序连续子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0581.%20%E6%9C%80%E7%9F%AD%E6%97%A0%E5%BA%8F%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0581.%20%E6%9C%80%E7%9F%AD%E6%97%A0%E5%BA%8F%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0582. 杀掉进程【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0582.%20%E6%9D%80%E6%8E%89%E8%BF%9B%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0582.%20%E6%9D%80%E6%8E%89%E8%BF%9B%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0583. 两个字符串的删除操作【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0583.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0583.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0584. 寻找用户推荐人【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0584.%20%E5%AF%BB%E6%89%BE%E7%94%A8%E6%88%B7%E6%8E%A8%E8%8D%90%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0584.%20%E5%AF%BB%E6%89%BE%E7%94%A8%E6%88%B7%E6%8E%A8%E8%8D%90%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0585. 2016年的投资【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0585.%202016%E5%B9%B4%E7%9A%84%E6%8A%95%E8%B5%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0585.%202016%E5%B9%B4%E7%9A%84%E6%8A%95%E8%B5%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0586. 订单最多的客户【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0586.%20%E8%AE%A2%E5%8D%95%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0586.%20%E8%AE%A2%E5%8D%95%E6%9C%80%E5%A4%9A%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0587. 安装栅栏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0587.%20%E5%AE%89%E8%A3%85%E6%A0%85%E6%A0%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0587.%20%E5%AE%89%E8%A3%85%E6%A0%85%E6%A0%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0588. 设计内存文件系统【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0588.%20%E8%AE%BE%E8%AE%A1%E5%86%85%E5%AD%98%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0588.%20%E8%AE%BE%E8%AE%A1%E5%86%85%E5%AD%98%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0589. N 叉树的前序遍历【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0589.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0589.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0590. N 叉树的后序遍历【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0590.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0590.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0591. 标签验证器【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0591.%20%E6%A0%87%E7%AD%BE%E9%AA%8C%E8%AF%81%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0591.%20%E6%A0%87%E7%AD%BE%E9%AA%8C%E8%AF%81%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0592. 分数加减运算【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0592.%20%E5%88%86%E6%95%B0%E5%8A%A0%E5%87%8F%E8%BF%90%E7%AE%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0592.%20%E5%88%86%E6%95%B0%E5%8A%A0%E5%87%8F%E8%BF%90%E7%AE%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0593. 有效的正方形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0593.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0593.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0594. 最长和谐子序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0594.%20%E6%9C%80%E9%95%BF%E5%92%8C%E8%B0%90%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0594.%20%E6%9C%80%E9%95%BF%E5%92%8C%E8%B0%90%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0595. 大的国家【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0595.%20%E5%A4%A7%E7%9A%84%E5%9B%BD%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0595.%20%E5%A4%A7%E7%9A%84%E5%9B%BD%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0596. 超过 5 名学生的课【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0596.%20%E8%B6%85%E8%BF%87%205%20%E5%90%8D%E5%AD%A6%E7%94%9F%E7%9A%84%E8%AF%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0596.%20%E8%B6%85%E8%BF%87%205%20%E5%90%8D%E5%AD%A6%E7%94%9F%E7%9A%84%E8%AF%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0597. 好友申请 I：总体通过率【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0597.%20%E5%A5%BD%E5%8F%8B%E7%94%B3%E8%AF%B7%20I%EF%BC%9A%E6%80%BB%E4%BD%93%E9%80%9A%E8%BF%87%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0597.%20%E5%A5%BD%E5%8F%8B%E7%94%B3%E8%AF%B7%20I%EF%BC%9A%E6%80%BB%E4%BD%93%E9%80%9A%E8%BF%87%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0598. 区间加法 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0598.%20%E5%8C%BA%E9%97%B4%E5%8A%A0%E6%B3%95%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0598.%20%E5%8C%BA%E9%97%B4%E5%8A%A0%E6%B3%95%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [0599. 两个列表的最小索引总和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0599.%20%E4%B8%A4%E4%B8%AA%E5%88%97%E8%A1%A8%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A2%E5%BC%95%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0599.%20%E4%B8%A4%E4%B8%AA%E5%88%97%E8%A1%A8%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A2%E5%BC%95%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0599.%20%E4%B8%A4%E4%B8%AA%E5%88%97%E8%A1%A8%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A2%E5%BC%95%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0600. 不含连续1的非负整数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0600.%20%E4%B8%8D%E5%90%AB%E8%BF%9E%E7%BB%AD1%E7%9A%84%E9%9D%9E%E8%B4%9F%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0600.%20%E4%B8%8D%E5%90%AB%E8%BF%9E%E7%BB%AD1%E7%9A%84%E9%9D%9E%E8%B4%9F%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n\\n## 8. 0601~0700\\n\\n- [ ] [0601. 体育馆的人流量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0601.%20%E4%BD%93%E8%82%B2%E9%A6%86%E7%9A%84%E4%BA%BA%E6%B5%81%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0601.%20%E4%BD%93%E8%82%B2%E9%A6%86%E7%9A%84%E4%BA%BA%E6%B5%81%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0602. 好友申请 II ：谁有最多的好友【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0602.%20%E5%A5%BD%E5%8F%8B%E7%94%B3%E8%AF%B7%20II%20%EF%BC%9A%E8%B0%81%E6%9C%89%E6%9C%80%E5%A4%9A%E7%9A%84%E5%A5%BD%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0602.%20%E5%A5%BD%E5%8F%8B%E7%94%B3%E8%AF%B7%20II%20%EF%BC%9A%E8%B0%81%E6%9C%89%E6%9C%80%E5%A4%9A%E7%9A%84%E5%A5%BD%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0603. 连续空余座位【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0603.%20%E8%BF%9E%E7%BB%AD%E7%A9%BA%E4%BD%99%E5%BA%A7%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0603.%20%E8%BF%9E%E7%BB%AD%E7%A9%BA%E4%BD%99%E5%BA%A7%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0604. 迭代压缩字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0604.%20%E8%BF%AD%E4%BB%A3%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0604.%20%E8%BF%AD%E4%BB%A3%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [0605. 种花问题【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0605.%20%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0605.%20%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0605.%20%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0606. 根据二叉树创建字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0606.%20%E6%A0%B9%E6%8D%AE%E4%BA%8C%E5%8F%89%E6%A0%91%E5%88%9B%E5%BB%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0606.%20%E6%A0%B9%E6%8D%AE%E4%BA%8C%E5%8F%89%E6%A0%91%E5%88%9B%E5%BB%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0607. 销售员【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0607.%20%E9%94%80%E5%94%AE%E5%91%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0607.%20%E9%94%80%E5%94%AE%E5%91%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0608. 树节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0608.%20%E6%A0%91%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0608.%20%E6%A0%91%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0609. 在系统中查找重复文件【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0609.%20%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0609.%20%E5%9C%A8%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%9F%A5%E6%89%BE%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0610. 判断三角形【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0610.%20%E5%88%A4%E6%96%AD%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0610.%20%E5%88%A4%E6%96%AD%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0611. 有效三角形的个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0611.%20%E6%9C%89%E6%95%88%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0611.%20%E6%9C%89%E6%95%88%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0612. 平面上的最近距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0612.%20%E5%B9%B3%E9%9D%A2%E4%B8%8A%E7%9A%84%E6%9C%80%E8%BF%91%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0612.%20%E5%B9%B3%E9%9D%A2%E4%B8%8A%E7%9A%84%E6%9C%80%E8%BF%91%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0613. 直线上的最近距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0613.%20%E7%9B%B4%E7%BA%BF%E4%B8%8A%E7%9A%84%E6%9C%80%E8%BF%91%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0613.%20%E7%9B%B4%E7%BA%BF%E4%B8%8A%E7%9A%84%E6%9C%80%E8%BF%91%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0614. 二级关注者【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0614.%20%E4%BA%8C%E7%BA%A7%E5%85%B3%E6%B3%A8%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0614.%20%E4%BA%8C%E7%BA%A7%E5%85%B3%E6%B3%A8%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0615. 平均工资：部门与公司比较【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0615.%20%E5%B9%B3%E5%9D%87%E5%B7%A5%E8%B5%84%EF%BC%9A%E9%83%A8%E9%97%A8%E4%B8%8E%E5%85%AC%E5%8F%B8%E6%AF%94%E8%BE%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0615.%20%E5%B9%B3%E5%9D%87%E5%B7%A5%E8%B5%84%EF%BC%9A%E9%83%A8%E9%97%A8%E4%B8%8E%E5%85%AC%E5%8F%B8%E6%AF%94%E8%BE%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0616. 给字符串添加加粗标签【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0616.%20%E7%BB%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%BB%E5%8A%A0%E5%8A%A0%E7%B2%97%E6%A0%87%E7%AD%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0616.%20%E7%BB%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%BB%E5%8A%A0%E5%8A%A0%E7%B2%97%E6%A0%87%E7%AD%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0617. 合并二叉树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0617.%20%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0617.%20%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 📒 在 js 中，null 参与加法运算的时候自动被视作 0 处理](https://tdahuyou.github.io/TNotes.leetcode/notes/0617.%20%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--在-js-中null-参与加法运算的时候自动被视作-0-处理)\\n  - [3. 🎯 Solutions.1 - DFS + 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0617.%20%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1---dfs--递归)\\n- [ ] [0618. 学生地理信息报告【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0618.%20%E5%AD%A6%E7%94%9F%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%8A%A5%E5%91%8A%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0618.%20%E5%AD%A6%E7%94%9F%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E6%8A%A5%E5%91%8A%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0619. 只出现一次的最大数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0619.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0619.%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0620. 有趣的电影【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0620.%20%E6%9C%89%E8%B6%A3%E7%9A%84%E7%94%B5%E5%BD%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0620.%20%E6%9C%89%E8%B6%A3%E7%9A%84%E7%94%B5%E5%BD%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0621. 任务调度器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0621.%20%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0621.%20%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0622. 设计循环队列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0622.%20%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [📂 TNotes.yuque](https://www.yuque.com/tdahuyou/tnotes.yuque/)\\n    - [TNotes.yuque.leetcode.0622](https://www.yuque.com/tdahuyou/tnotes.yuque/leetcode.0622)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0622.%20%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 设计循环队列](https://tdahuyou.github.io/TNotes.leetcode/notes/0622.%20%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---设计循环队列)\\n- [ ] [0623. 在二叉树中增加一行【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0623.%20%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A1%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0623.%20%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A2%9E%E5%8A%A0%E4%B8%80%E8%A1%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0624. 数组列表中的最大距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0624.%20%E6%95%B0%E7%BB%84%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0624.%20%E6%95%B0%E7%BB%84%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0625. 最小因式分解【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0625.%20%E6%9C%80%E5%B0%8F%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0625.%20%E6%9C%80%E5%B0%8F%E5%9B%A0%E5%BC%8F%E5%88%86%E8%A7%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0626. 换座位【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0626.%20%E6%8D%A2%E5%BA%A7%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0626.%20%E6%8D%A2%E5%BA%A7%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0627. 变更性别【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0627.%20%E5%8F%98%E6%9B%B4%E6%80%A7%E5%88%AB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0627.%20%E5%8F%98%E6%9B%B4%E6%80%A7%E5%88%AB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [0628. 三个数的最大乘积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0628.%20%E4%B8%89%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0628.%20%E4%B8%89%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0628.%20%E4%B8%89%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0629. K 个逆序对数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0629.%20K%20%E4%B8%AA%E9%80%86%E5%BA%8F%E5%AF%B9%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0629.%20K%20%E4%B8%AA%E9%80%86%E5%BA%8F%E5%AF%B9%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0630. 课程表 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0630.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0630.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0631. 设计 Excel 求和公式【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0631.%20%E8%AE%BE%E8%AE%A1%20Excel%20%E6%B1%82%E5%92%8C%E5%85%AC%E5%BC%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0631.%20%E8%AE%BE%E8%AE%A1%20Excel%20%E6%B1%82%E5%92%8C%E5%85%AC%E5%BC%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0632. 最小区间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0632.%20%E6%9C%80%E5%B0%8F%E5%8C%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0632.%20%E6%9C%80%E5%B0%8F%E5%8C%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0633. 平方数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0633.%20%E5%B9%B3%E6%96%B9%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0633.%20%E5%B9%B3%E6%96%B9%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0634. 寻找数组的错位排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0634.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E9%94%99%E4%BD%8D%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0634.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E9%94%99%E4%BD%8D%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0635. 设计日志存储系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0635.%20%E8%AE%BE%E8%AE%A1%E6%97%A5%E5%BF%97%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0635.%20%E8%AE%BE%E8%AE%A1%E6%97%A5%E5%BF%97%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0636. 函数的独占时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0636.%20%E5%87%BD%E6%95%B0%E7%9A%84%E7%8B%AC%E5%8D%A0%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0636.%20%E5%87%BD%E6%95%B0%E7%9A%84%E7%8B%AC%E5%8D%A0%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0637. 二叉树的层平均值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0637.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0637.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0638. 大礼包【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0638.%20%E5%A4%A7%E7%A4%BC%E5%8C%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0638.%20%E5%A4%A7%E7%A4%BC%E5%8C%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0639. 解码方法 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0639.%20%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0639.%20%E8%A7%A3%E7%A0%81%E6%96%B9%E6%B3%95%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0640. 求解方程【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0640.%20%E6%B1%82%E8%A7%A3%E6%96%B9%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0640.%20%E6%B1%82%E8%A7%A3%E6%96%B9%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0641. 设计循环双端队列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0641.%20%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0641.%20%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0641.%20%E8%AE%BE%E8%AE%A1%E5%BE%AA%E7%8E%AF%E5%8F%8C%E7%AB%AF%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [0642. 设计搜索自动补全系统【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0642.%20%E8%AE%BE%E8%AE%A1%E6%90%9C%E7%B4%A2%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E7%B3%BB%E7%BB%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0642.%20%E8%AE%BE%E8%AE%A1%E6%90%9C%E7%B4%A2%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E7%B3%BB%E7%BB%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0643. 子数组最大平均数 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0643.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0643.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/0643.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [0644. 子数组最大平均数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0644.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0644.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0645. 错误的集合【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0645.%20%E9%94%99%E8%AF%AF%E7%9A%84%E9%9B%86%E5%90%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0645.%20%E9%94%99%E8%AF%AF%E7%9A%84%E9%9B%86%E5%90%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0646. 最长数对链【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0646.%20%E6%9C%80%E9%95%BF%E6%95%B0%E5%AF%B9%E9%93%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0646.%20%E6%9C%80%E9%95%BF%E6%95%B0%E5%AF%B9%E9%93%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0647. 回文子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0647.%20%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0647.%20%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0648. 单词替换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0648.%20%E5%8D%95%E8%AF%8D%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0648.%20%E5%8D%95%E8%AF%8D%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0649. Dota2 参议院【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0649.%20Dota2%20%E5%8F%82%E8%AE%AE%E9%99%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0649.%20Dota2%20%E5%8F%82%E8%AE%AE%E9%99%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0650. 两个键的键盘【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0650.%20%E4%B8%A4%E4%B8%AA%E9%94%AE%E7%9A%84%E9%94%AE%E7%9B%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0650.%20%E4%B8%A4%E4%B8%AA%E9%94%AE%E7%9A%84%E9%94%AE%E7%9B%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0651. 四个键的键盘【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0651.%20%E5%9B%9B%E4%B8%AA%E9%94%AE%E7%9A%84%E9%94%AE%E7%9B%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0651.%20%E5%9B%9B%E4%B8%AA%E9%94%AE%E7%9A%84%E9%94%AE%E7%9B%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0652. 寻找重复的子树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0652.%20%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0652.%20%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0653. 两数之和 IV - 输入二叉搜索树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0653.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20IV%20-%20%E8%BE%93%E5%85%A5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0653.%20%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%20IV%20-%20%E8%BE%93%E5%85%A5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0654. 最大二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0654.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0654.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0655. 输出二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0655.%20%E8%BE%93%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0655.%20%E8%BE%93%E5%87%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0656. 成本最小路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0656.%20%E6%88%90%E6%9C%AC%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0656.%20%E6%88%90%E6%9C%AC%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0657. 机器人能否返回原点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0657.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%BD%E5%90%A6%E8%BF%94%E5%9B%9E%E5%8E%9F%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0657.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E8%83%BD%E5%90%A6%E8%BF%94%E5%9B%9E%E5%8E%9F%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0658. 找到 K 个最接近的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0658.%20%E6%89%BE%E5%88%B0%20K%20%E4%B8%AA%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0658.%20%E6%89%BE%E5%88%B0%20K%20%E4%B8%AA%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0659. 分割数组为连续子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0659.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E4%B8%BA%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0659.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E4%B8%BA%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0660. 移除 9【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0660.%20%E7%A7%BB%E9%99%A4%209%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0660.%20%E7%A7%BB%E9%99%A4%209%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0661. 图片平滑器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0661.%20%E5%9B%BE%E7%89%87%E5%B9%B3%E6%BB%91%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0661.%20%E5%9B%BE%E7%89%87%E5%B9%B3%E6%BB%91%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0662. 二叉树最大宽度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0662.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0662.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0663. 均匀树划分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0663.%20%E5%9D%87%E5%8C%80%E6%A0%91%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0663.%20%E5%9D%87%E5%8C%80%E6%A0%91%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0664. 奇怪的打印机【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0664.%20%E5%A5%87%E6%80%AA%E7%9A%84%E6%89%93%E5%8D%B0%E6%9C%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0664.%20%E5%A5%87%E6%80%AA%E7%9A%84%E6%89%93%E5%8D%B0%E6%9C%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0665. 非递减数列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0665.%20%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0665.%20%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0666. 路径总和 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0666.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0666.%20%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0667. 优美的排列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0667.%20%E4%BC%98%E7%BE%8E%E7%9A%84%E6%8E%92%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0667.%20%E4%BC%98%E7%BE%8E%E7%9A%84%E6%8E%92%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0668. 乘法表中第k小的数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0668.%20%E4%B9%98%E6%B3%95%E8%A1%A8%E4%B8%AD%E7%AC%ACk%E5%B0%8F%E7%9A%84%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0668.%20%E4%B9%98%E6%B3%95%E8%A1%A8%E4%B8%AD%E7%AC%ACk%E5%B0%8F%E7%9A%84%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0669. 修剪二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0669.%20%E4%BF%AE%E5%89%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0669.%20%E4%BF%AE%E5%89%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0670. 最大交换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0670.%20%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0670.%20%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0671. 二叉树中第二小的节点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0671.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%AC%AC%E4%BA%8C%E5%B0%8F%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0671.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%AC%AC%E4%BA%8C%E5%B0%8F%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0672. 灯泡开关 Ⅱ【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0672.%20%E7%81%AF%E6%B3%A1%E5%BC%80%E5%85%B3%20%E2%85%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0672.%20%E7%81%AF%E6%B3%A1%E5%BC%80%E5%85%B3%20%E2%85%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0673. 最长递增子序列的个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0673.%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0673.%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0674. 最长连续递增序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0674.%20%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0674.%20%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0675. 为高尔夫比赛砍树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0675.%20%E4%B8%BA%E9%AB%98%E5%B0%94%E5%A4%AB%E6%AF%94%E8%B5%9B%E7%A0%8D%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0675.%20%E4%B8%BA%E9%AB%98%E5%B0%94%E5%A4%AB%E6%AF%94%E8%B5%9B%E7%A0%8D%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0676. 实现一个魔法字典【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0676.%20%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%AD%94%E6%B3%95%E5%AD%97%E5%85%B8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0676.%20%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%AD%94%E6%B3%95%E5%AD%97%E5%85%B8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0677. 键值映射【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0677.%20%E9%94%AE%E5%80%BC%E6%98%A0%E5%B0%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0677.%20%E9%94%AE%E5%80%BC%E6%98%A0%E5%B0%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0678. 有效的括号字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0678.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0678.%20%E6%9C%89%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0679. 24 点游戏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0679.%2024%20%E7%82%B9%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0679.%2024%20%E7%82%B9%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0680. 验证回文串 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0680.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0680.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0681. 最近时刻【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0681.%20%E6%9C%80%E8%BF%91%E6%97%B6%E5%88%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0681.%20%E6%9C%80%E8%BF%91%E6%97%B6%E5%88%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0682. 棒球比赛【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0682.%20%E6%A3%92%E7%90%83%E6%AF%94%E8%B5%9B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0682.%20%E6%A3%92%E7%90%83%E6%AF%94%E8%B5%9B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0683. K 个关闭的灯泡【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0683.%20K%20%E4%B8%AA%E5%85%B3%E9%97%AD%E7%9A%84%E7%81%AF%E6%B3%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0683.%20K%20%E4%B8%AA%E5%85%B3%E9%97%AD%E7%9A%84%E7%81%AF%E6%B3%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0684. 冗余连接【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0684.%20%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0684.%20%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0685. 冗余连接 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0685.%20%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0685.%20%E5%86%97%E4%BD%99%E8%BF%9E%E6%8E%A5%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0686. 重复叠加字符串匹配【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0686.%20%E9%87%8D%E5%A4%8D%E5%8F%A0%E5%8A%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0686.%20%E9%87%8D%E5%A4%8D%E5%8F%A0%E5%8A%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0687. 最长同值路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0687.%20%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0687.%20%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - DFS](https://tdahuyou.github.io/TNotes.leetcode/notes/0687.%20%E6%9C%80%E9%95%BF%E5%90%8C%E5%80%BC%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---dfs)\\n- [ ] [0688. 骑士在棋盘上的概率【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0688.%20%E9%AA%91%E5%A3%AB%E5%9C%A8%E6%A3%8B%E7%9B%98%E4%B8%8A%E7%9A%84%E6%A6%82%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0688.%20%E9%AA%91%E5%A3%AB%E5%9C%A8%E6%A3%8B%E7%9B%98%E4%B8%8A%E7%9A%84%E6%A6%82%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0689. 三个无重叠子数组的最大和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0689.%20%E4%B8%89%E4%B8%AA%E6%97%A0%E9%87%8D%E5%8F%A0%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0689.%20%E4%B8%89%E4%B8%AA%E6%97%A0%E9%87%8D%E5%8F%A0%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0690. 员工的重要性【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0690.%20%E5%91%98%E5%B7%A5%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0690.%20%E5%91%98%E5%B7%A5%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0691. 贴纸拼词【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0691.%20%E8%B4%B4%E7%BA%B8%E6%8B%BC%E8%AF%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0691.%20%E8%B4%B4%E7%BA%B8%E6%8B%BC%E8%AF%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0692. 前K个高频单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0692.%20%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0692.%20%E5%89%8DK%E4%B8%AA%E9%AB%98%E9%A2%91%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0693. 交替位二进制数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0693.%20%E4%BA%A4%E6%9B%BF%E4%BD%8D%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0693.%20%E4%BA%A4%E6%9B%BF%E4%BD%8D%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0694. 不同岛屿的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0694.%20%E4%B8%8D%E5%90%8C%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0694.%20%E4%B8%8D%E5%90%8C%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0695. 岛屿的最大面积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0695.%20%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0695.%20%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.DFS + 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/0695.%20%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutionsdfs--递归)\\n- [ ] [0696. 计数二进制子串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0696.%20%E8%AE%A1%E6%95%B0%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%90%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0696.%20%E8%AE%A1%E6%95%B0%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%90%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0697. 数组的度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0697.%20%E6%95%B0%E7%BB%84%E7%9A%84%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0697.%20%E6%95%B0%E7%BB%84%E7%9A%84%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0698. 划分为k个相等的子集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0698.%20%E5%88%92%E5%88%86%E4%B8%BAk%E4%B8%AA%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0698.%20%E5%88%92%E5%88%86%E4%B8%BAk%E4%B8%AA%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0699. 掉落的方块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0699.%20%E6%8E%89%E8%90%BD%E7%9A%84%E6%96%B9%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0699.%20%E6%8E%89%E8%90%BD%E7%9A%84%E6%96%B9%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0700. 二叉搜索树中的搜索【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0700.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0700.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%90%9C%E7%B4%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 9. 0701~0800\\n\\n- [ ] [0701. 二叉搜索树中的插入操作【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0701.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0701.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0702. 搜索长度未知的有序数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0702.%20%E6%90%9C%E7%B4%A2%E9%95%BF%E5%BA%A6%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0702.%20%E6%90%9C%E7%B4%A2%E9%95%BF%E5%BA%A6%E6%9C%AA%E7%9F%A5%E7%9A%84%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0703. 数据流中的第 K 大元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0703.%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0703.%20%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0704. 二分查找【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0704.%20%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0704.%20%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0704.%20%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n  - [3. 🎯 Solutions.2 - 二分查找](https://tdahuyou.github.io/TNotes.leetcode/notes/0704.%20%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---二分查找)\\n  - [4. 🎯 Solutions.3 - 暴力解法 - 使用原生 API - indexOf](https://tdahuyou.github.io/TNotes.leetcode/notes/0704.%20%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---暴力解法---使用原生-api---indexof)\\n- [ ] [0705. 设计哈希集合【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0705.%20%E8%AE%BE%E8%AE%A1%E5%93%88%E5%B8%8C%E9%9B%86%E5%90%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0705.%20%E8%AE%BE%E8%AE%A1%E5%93%88%E5%B8%8C%E9%9B%86%E5%90%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n- [ ] [0706. 设计哈希映射【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0706.%20%E8%AE%BE%E8%AE%A1%E5%93%88%E5%B8%8C%E6%98%A0%E5%B0%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0706.%20%E8%AE%BE%E8%AE%A1%E5%93%88%E5%B8%8C%E6%98%A0%E5%B0%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0707. 设计链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0707.%20%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0707.%20%E8%AE%BE%E8%AE%A1%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0708. 循环有序列表的插入【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0708.%20%E5%BE%AA%E7%8E%AF%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8%E7%9A%84%E6%8F%92%E5%85%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0708.%20%E5%BE%AA%E7%8E%AF%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8%E7%9A%84%E6%8F%92%E5%85%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0709. 转换成小写字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0709.%20%E8%BD%AC%E6%8D%A2%E6%88%90%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0709.%20%E8%BD%AC%E6%8D%A2%E6%88%90%E5%B0%8F%E5%86%99%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0710. 黑名单中的随机数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0710.%20%E9%BB%91%E5%90%8D%E5%8D%95%E4%B8%AD%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0710.%20%E9%BB%91%E5%90%8D%E5%8D%95%E4%B8%AD%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0711. 不同岛屿的数量 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0711.%20%E4%B8%8D%E5%90%8C%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0711.%20%E4%B8%8D%E5%90%8C%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0712. 两个字符串的最小ASCII删除和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0712.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8FASCII%E5%88%A0%E9%99%A4%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0712.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8FASCII%E5%88%A0%E9%99%A4%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0713. 乘积小于 K 的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0713.%20%E4%B9%98%E7%A7%AF%E5%B0%8F%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0713.%20%E4%B9%98%E7%A7%AF%E5%B0%8F%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0714. 买卖股票的最佳时机含手续费【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0714.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0714.%20%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0715. Range 模块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0715.%20Range%20%E6%A8%A1%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0715.%20Range%20%E6%A8%A1%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0716. 最大栈【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0716.%20%E6%9C%80%E5%A4%A7%E6%A0%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0716.%20%E6%9C%80%E5%A4%A7%E6%A0%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0717. 1 比特与 2 比特字符【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0717.%201%20%E6%AF%94%E7%89%B9%E4%B8%8E%202%20%E6%AF%94%E7%89%B9%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0717.%201%20%E6%AF%94%E7%89%B9%E4%B8%8E%202%20%E6%AF%94%E7%89%B9%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0718. 最长重复子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0718.%20%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0718.%20%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0719. 找出第 K 小的数对距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0719.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E6%95%B0%E5%AF%B9%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0719.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E6%95%B0%E5%AF%B9%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0720. 词典中最长的单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0720.%20%E8%AF%8D%E5%85%B8%E4%B8%AD%E6%9C%80%E9%95%BF%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0720.%20%E8%AF%8D%E5%85%B8%E4%B8%AD%E6%9C%80%E9%95%BF%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0721. 账户合并【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0721.%20%E8%B4%A6%E6%88%B7%E5%90%88%E5%B9%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0721.%20%E8%B4%A6%E6%88%B7%E5%90%88%E5%B9%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0722. 删除注释【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0722.%20%E5%88%A0%E9%99%A4%E6%B3%A8%E9%87%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0722.%20%E5%88%A0%E9%99%A4%E6%B3%A8%E9%87%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0723. 粉碎糖果【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0723.%20%E7%B2%89%E7%A2%8E%E7%B3%96%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0723.%20%E7%B2%89%E7%A2%8E%E7%B3%96%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0724. 寻找数组的中心下标【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0724.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E5%BF%83%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0724.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E5%BF%83%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0725. 分隔链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0725.%20%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0725.%20%E5%88%86%E9%9A%94%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0726. 原子的数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0726.%20%E5%8E%9F%E5%AD%90%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0726.%20%E5%8E%9F%E5%AD%90%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0727. 最小窗口子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0727.%20%E6%9C%80%E5%B0%8F%E7%AA%97%E5%8F%A3%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0727.%20%E6%9C%80%E5%B0%8F%E7%AA%97%E5%8F%A3%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0728. 自除数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0728.%20%E8%87%AA%E9%99%A4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0728.%20%E8%87%AA%E9%99%A4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0729. 我的日程安排表 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0729.%20%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0729.%20%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0730. 统计不同回文子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0730.%20%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%90%8C%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0730.%20%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%90%8C%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0731. 我的日程安排表 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0731.%20%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0731.%20%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0732. 我的日程安排表 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0732.%20%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0732.%20%E6%88%91%E7%9A%84%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92%E8%A1%A8%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0733. 图像渲染【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0733.%20%E5%9B%BE%E5%83%8F%E6%B8%B2%E6%9F%93%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0733.%20%E5%9B%BE%E5%83%8F%E6%B8%B2%E6%9F%93%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - DFS](https://tdahuyou.github.io/TNotes.leetcode/notes/0733.%20%E5%9B%BE%E5%83%8F%E6%B8%B2%E6%9F%93%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---dfs)\\n- [ ] [0734. 句子相似性【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0734.%20%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E6%80%A7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0734.%20%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E6%80%A7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0735. 小行星碰撞【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0735.%20%E5%B0%8F%E8%A1%8C%E6%98%9F%E7%A2%B0%E6%92%9E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0735.%20%E5%B0%8F%E8%A1%8C%E6%98%9F%E7%A2%B0%E6%92%9E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0736. Lisp 语法解析【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0736.%20Lisp%20%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0736.%20Lisp%20%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0737. 句子相似性 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0737.%20%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E6%80%A7%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0737.%20%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E6%80%A7%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0738. 单调递增的数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0738.%20%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0738.%20%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0739. 每日温度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0739.%20%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0739.%20%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0740. 删除并获得点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0740.%20%E5%88%A0%E9%99%A4%E5%B9%B6%E8%8E%B7%E5%BE%97%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0740.%20%E5%88%A0%E9%99%A4%E5%B9%B6%E8%8E%B7%E5%BE%97%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0741. 摘樱桃【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0741.%20%E6%91%98%E6%A8%B1%E6%A1%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0741.%20%E6%91%98%E6%A8%B1%E6%A1%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0742. 二叉树最近的叶节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0742.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B6%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0742.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B6%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0743. 网络延迟时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0743.%20%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0743.%20%E7%BD%91%E7%BB%9C%E5%BB%B6%E8%BF%9F%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0744. 寻找比目标字母大的最小字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0744.%20%E5%AF%BB%E6%89%BE%E6%AF%94%E7%9B%AE%E6%A0%87%E5%AD%97%E6%AF%8D%E5%A4%A7%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0744.%20%E5%AF%BB%E6%89%BE%E6%AF%94%E7%9B%AE%E6%A0%87%E5%AD%97%E6%AF%8D%E5%A4%A7%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0745. 前缀和后缀搜索【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0745.%20%E5%89%8D%E7%BC%80%E5%92%8C%E5%90%8E%E7%BC%80%E6%90%9C%E7%B4%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0745.%20%E5%89%8D%E7%BC%80%E5%92%8C%E5%90%8E%E7%BC%80%E6%90%9C%E7%B4%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0746. 使用最小花费爬楼梯【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0746.%20%E4%BD%BF%E7%94%A8%E6%9C%80%E5%B0%8F%E8%8A%B1%E8%B4%B9%E7%88%AC%E6%A5%BC%E6%A2%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0746.%20%E4%BD%BF%E7%94%A8%E6%9C%80%E5%B0%8F%E8%8A%B1%E8%B4%B9%E7%88%AC%E6%A5%BC%E6%A2%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0747. 至少是其他数字两倍的最大数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0747.%20%E8%87%B3%E5%B0%91%E6%98%AF%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E4%B8%A4%E5%80%8D%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0747.%20%E8%87%B3%E5%B0%91%E6%98%AF%E5%85%B6%E4%BB%96%E6%95%B0%E5%AD%97%E4%B8%A4%E5%80%8D%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [0748. 最短补全词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0748.%20%E6%9C%80%E7%9F%AD%E8%A1%A5%E5%85%A8%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0748.%20%E6%9C%80%E7%9F%AD%E8%A1%A5%E5%85%A8%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0748.%20%E6%9C%80%E7%9F%AD%E8%A1%A5%E5%85%A8%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0749. 隔离病毒【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0749.%20%E9%9A%94%E7%A6%BB%E7%97%85%E6%AF%92%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0749.%20%E9%9A%94%E7%A6%BB%E7%97%85%E6%AF%92%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0750. 角矩形的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0750.%20%E8%A7%92%E7%9F%A9%E5%BD%A2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0750.%20%E8%A7%92%E7%9F%A9%E5%BD%A2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0751. IP 到 CIDR【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0751.%20IP%20%E5%88%B0%20CIDR%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0751.%20IP%20%E5%88%B0%20CIDR%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0752. 打开转盘锁【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0752.%20%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0752.%20%E6%89%93%E5%BC%80%E8%BD%AC%E7%9B%98%E9%94%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0753. 破解保险箱【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0753.%20%E7%A0%B4%E8%A7%A3%E4%BF%9D%E9%99%A9%E7%AE%B1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0753.%20%E7%A0%B4%E8%A7%A3%E4%BF%9D%E9%99%A9%E7%AE%B1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0754. 到达终点数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0754.%20%E5%88%B0%E8%BE%BE%E7%BB%88%E7%82%B9%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0754.%20%E5%88%B0%E8%BE%BE%E7%BB%88%E7%82%B9%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0755. 倒水【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0755.%20%E5%80%92%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0755.%20%E5%80%92%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0756. 金字塔转换矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0756.%20%E9%87%91%E5%AD%97%E5%A1%94%E8%BD%AC%E6%8D%A2%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0756.%20%E9%87%91%E5%AD%97%E5%A1%94%E8%BD%AC%E6%8D%A2%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0757. 设置交集大小至少为2【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0757.%20%E8%AE%BE%E7%BD%AE%E4%BA%A4%E9%9B%86%E5%A4%A7%E5%B0%8F%E8%87%B3%E5%B0%91%E4%B8%BA2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0757.%20%E8%AE%BE%E7%BD%AE%E4%BA%A4%E9%9B%86%E5%A4%A7%E5%B0%8F%E8%87%B3%E5%B0%91%E4%B8%BA2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0758. 字符串中的加粗单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0758.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8A%A0%E7%B2%97%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0758.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8A%A0%E7%B2%97%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0759. 员工空闲时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0759.%20%E5%91%98%E5%B7%A5%E7%A9%BA%E9%97%B2%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0759.%20%E5%91%98%E5%B7%A5%E7%A9%BA%E9%97%B2%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0760. 找出变位映射【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0760.%20%E6%89%BE%E5%87%BA%E5%8F%98%E4%BD%8D%E6%98%A0%E5%B0%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0760.%20%E6%89%BE%E5%87%BA%E5%8F%98%E4%BD%8D%E6%98%A0%E5%B0%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0761. 特殊的二进制序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0761.%20%E7%89%B9%E6%AE%8A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0761.%20%E7%89%B9%E6%AE%8A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0762. 二进制表示中质数个计算置位【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0762.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E4%B8%AD%E8%B4%A8%E6%95%B0%E4%B8%AA%E8%AE%A1%E7%AE%97%E7%BD%AE%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0762.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E4%B8%AD%E8%B4%A8%E6%95%B0%E4%B8%AA%E8%AE%A1%E7%AE%97%E7%BD%AE%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0763. 划分字母区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0763.%20%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0763.%20%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0764. 最大加号标志【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0764.%20%E6%9C%80%E5%A4%A7%E5%8A%A0%E5%8F%B7%E6%A0%87%E5%BF%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0764.%20%E6%9C%80%E5%A4%A7%E5%8A%A0%E5%8F%B7%E6%A0%87%E5%BF%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0765. 情侣牵手【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0765.%20%E6%83%85%E4%BE%A3%E7%89%B5%E6%89%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0765.%20%E6%83%85%E4%BE%A3%E7%89%B5%E6%89%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0766. 托普利茨矩阵【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0766.%20%E6%89%98%E6%99%AE%E5%88%A9%E8%8C%A8%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0766.%20%E6%89%98%E6%99%AE%E5%88%A9%E8%8C%A8%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0767. 重构字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0767.%20%E9%87%8D%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0767.%20%E9%87%8D%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0768. 最多能完成排序的块 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0768.%20%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0768.%20%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0769. 最多能完成排序的块【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0769.%20%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0769.%20%E6%9C%80%E5%A4%9A%E8%83%BD%E5%AE%8C%E6%88%90%E6%8E%92%E5%BA%8F%E7%9A%84%E5%9D%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0770. 基本计算器 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0770.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0770.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0771. 宝石与石头【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0771.%20%E5%AE%9D%E7%9F%B3%E4%B8%8E%E7%9F%B3%E5%A4%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0771.%20%E5%AE%9D%E7%9F%B3%E4%B8%8E%E7%9F%B3%E5%A4%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0772. 基本计算器 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0772.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0772.%20%E5%9F%BA%E6%9C%AC%E8%AE%A1%E7%AE%97%E5%99%A8%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0773. 滑动谜题【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0773.%20%E6%BB%91%E5%8A%A8%E8%B0%9C%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0773.%20%E6%BB%91%E5%8A%A8%E8%B0%9C%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0774. 最小化去加油站的最大距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0774.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E5%8E%BB%E5%8A%A0%E6%B2%B9%E7%AB%99%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0774.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E5%8E%BB%E5%8A%A0%E6%B2%B9%E7%AB%99%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0775. 全局倒置与局部倒置【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0775.%20%E5%85%A8%E5%B1%80%E5%80%92%E7%BD%AE%E4%B8%8E%E5%B1%80%E9%83%A8%E5%80%92%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0775.%20%E5%85%A8%E5%B1%80%E5%80%92%E7%BD%AE%E4%B8%8E%E5%B1%80%E9%83%A8%E5%80%92%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0776. 拆分二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0776.%20%E6%8B%86%E5%88%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0776.%20%E6%8B%86%E5%88%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0777. 在 LR 字符串中交换相邻字符【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0777.%20%E5%9C%A8%20LR%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%BA%A4%E6%8D%A2%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0777.%20%E5%9C%A8%20LR%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%BA%A4%E6%8D%A2%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0778. 水位上升的泳池中游泳【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0778.%20%E6%B0%B4%E4%BD%8D%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B3%B3%E6%B1%A0%E4%B8%AD%E6%B8%B8%E6%B3%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0778.%20%E6%B0%B4%E4%BD%8D%E4%B8%8A%E5%8D%87%E7%9A%84%E6%B3%B3%E6%B1%A0%E4%B8%AD%E6%B8%B8%E6%B3%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0779. 第K个语法符号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0779.%20%E7%AC%ACK%E4%B8%AA%E8%AF%AD%E6%B3%95%E7%AC%A6%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0779.%20%E7%AC%ACK%E4%B8%AA%E8%AF%AD%E6%B3%95%E7%AC%A6%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0780. 到达终点【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0780.%20%E5%88%B0%E8%BE%BE%E7%BB%88%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0780.%20%E5%88%B0%E8%BE%BE%E7%BB%88%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0781. 森林中的兔子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0781.%20%E6%A3%AE%E6%9E%97%E4%B8%AD%E7%9A%84%E5%85%94%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0781.%20%E6%A3%AE%E6%9E%97%E4%B8%AD%E7%9A%84%E5%85%94%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0782. 变为棋盘【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0782.%20%E5%8F%98%E4%B8%BA%E6%A3%8B%E7%9B%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0782.%20%E5%8F%98%E4%B8%BA%E6%A3%8B%E7%9B%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0783. 二叉搜索树节点最小距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0783.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%8A%82%E7%82%B9%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0783.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%8A%82%E7%82%B9%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0784. 字母大小写全排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0784.%20%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%85%A8%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0784.%20%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%85%A8%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0785. 判断二分图【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0785.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E5%88%86%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0785.%20%E5%88%A4%E6%96%AD%E4%BA%8C%E5%88%86%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0786. 第 K 个最小的质数分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0786.%20%E7%AC%AC%20K%20%E4%B8%AA%E6%9C%80%E5%B0%8F%E7%9A%84%E8%B4%A8%E6%95%B0%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0786.%20%E7%AC%AC%20K%20%E4%B8%AA%E6%9C%80%E5%B0%8F%E7%9A%84%E8%B4%A8%E6%95%B0%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0787. K 站中转内最便宜的航班【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0787.%20K%20%E7%AB%99%E4%B8%AD%E8%BD%AC%E5%86%85%E6%9C%80%E4%BE%BF%E5%AE%9C%E7%9A%84%E8%88%AA%E7%8F%AD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0787.%20K%20%E7%AB%99%E4%B8%AD%E8%BD%AC%E5%86%85%E6%9C%80%E4%BE%BF%E5%AE%9C%E7%9A%84%E8%88%AA%E7%8F%AD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0788. 旋转数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0788.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0788.%20%E6%97%8B%E8%BD%AC%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0789. 逃脱阻碍者【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0789.%20%E9%80%83%E8%84%B1%E9%98%BB%E7%A2%8D%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0789.%20%E9%80%83%E8%84%B1%E9%98%BB%E7%A2%8D%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0790. 多米诺和托米诺平铺【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0790.%20%E5%A4%9A%E7%B1%B3%E8%AF%BA%E5%92%8C%E6%89%98%E7%B1%B3%E8%AF%BA%E5%B9%B3%E9%93%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0790.%20%E5%A4%9A%E7%B1%B3%E8%AF%BA%E5%92%8C%E6%89%98%E7%B1%B3%E8%AF%BA%E5%B9%B3%E9%93%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0791. 自定义字符串排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0791.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0791.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0792. 匹配子序列的单词数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0792.%20%E5%8C%B9%E9%85%8D%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0792.%20%E5%8C%B9%E9%85%8D%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0793. 阶乘函数后 K 个零【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0793.%20%E9%98%B6%E4%B9%98%E5%87%BD%E6%95%B0%E5%90%8E%20K%20%E4%B8%AA%E9%9B%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0793.%20%E9%98%B6%E4%B9%98%E5%87%BD%E6%95%B0%E5%90%8E%20K%20%E4%B8%AA%E9%9B%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0794. 有效的井字游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0794.%20%E6%9C%89%E6%95%88%E7%9A%84%E4%BA%95%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0794.%20%E6%9C%89%E6%95%88%E7%9A%84%E4%BA%95%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0795. 区间子数组个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0795.%20%E5%8C%BA%E9%97%B4%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0795.%20%E5%8C%BA%E9%97%B4%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0796. 旋转字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0796.%20%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0796.%20%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0797. 所有可能的路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0797.%20%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0797.%20%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0798. 得分最高的最小轮调【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0798.%20%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E6%9C%80%E5%B0%8F%E8%BD%AE%E8%B0%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0798.%20%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E6%9C%80%E5%B0%8F%E8%BD%AE%E8%B0%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0799. 香槟塔【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0799.%20%E9%A6%99%E6%A7%9F%E5%A1%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0799.%20%E9%A6%99%E6%A7%9F%E5%A1%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0800. 相似 RGB 颜色【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0800.%20%E7%9B%B8%E4%BC%BC%20RGB%20%E9%A2%9C%E8%89%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0800.%20%E7%9B%B8%E4%BC%BC%20RGB%20%E9%A2%9C%E8%89%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 10. 0801~0900\\n\\n- [ ] [0801. 使序列递增的最小交换次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0801.%20%E4%BD%BF%E5%BA%8F%E5%88%97%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0801.%20%E4%BD%BF%E5%BA%8F%E5%88%97%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0802. 找到最终的安全状态【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0802.%20%E6%89%BE%E5%88%B0%E6%9C%80%E7%BB%88%E7%9A%84%E5%AE%89%E5%85%A8%E7%8A%B6%E6%80%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0802.%20%E6%89%BE%E5%88%B0%E6%9C%80%E7%BB%88%E7%9A%84%E5%AE%89%E5%85%A8%E7%8A%B6%E6%80%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0803. 打砖块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0803.%20%E6%89%93%E7%A0%96%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0803.%20%E6%89%93%E7%A0%96%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0804. 唯一摩尔斯密码词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0804.%20%E5%94%AF%E4%B8%80%E6%91%A9%E5%B0%94%E6%96%AF%E5%AF%86%E7%A0%81%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0804.%20%E5%94%AF%E4%B8%80%E6%91%A9%E5%B0%94%E6%96%AF%E5%AF%86%E7%A0%81%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0804.%20%E5%94%AF%E4%B8%80%E6%91%A9%E5%B0%94%E6%96%AF%E5%AF%86%E7%A0%81%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0805. 数组的均值分割【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0805.%20%E6%95%B0%E7%BB%84%E7%9A%84%E5%9D%87%E5%80%BC%E5%88%86%E5%89%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0805.%20%E6%95%B0%E7%BB%84%E7%9A%84%E5%9D%87%E5%80%BC%E5%88%86%E5%89%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0806. 写字符串需要的行数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0806.%20%E5%86%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E8%A1%8C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0806.%20%E5%86%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E8%A1%8C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0807. 保持城市天际线【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0807.%20%E4%BF%9D%E6%8C%81%E5%9F%8E%E5%B8%82%E5%A4%A9%E9%99%85%E7%BA%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0807.%20%E4%BF%9D%E6%8C%81%E5%9F%8E%E5%B8%82%E5%A4%A9%E9%99%85%E7%BA%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0808. 分汤【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0808.%20%E5%88%86%E6%B1%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0808.%20%E5%88%86%E6%B1%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0809. 情感丰富的文字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0809.%20%E6%83%85%E6%84%9F%E4%B8%B0%E5%AF%8C%E7%9A%84%E6%96%87%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0809.%20%E6%83%85%E6%84%9F%E4%B8%B0%E5%AF%8C%E7%9A%84%E6%96%87%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0810. 黑板异或游戏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0810.%20%E9%BB%91%E6%9D%BF%E5%BC%82%E6%88%96%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0810.%20%E9%BB%91%E6%9D%BF%E5%BC%82%E6%88%96%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0811. 子域名访问计数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0811.%20%E5%AD%90%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0811.%20%E5%AD%90%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0812. 最大三角形面积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0812.%20%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0812.%20%E6%9C%80%E5%A4%A7%E4%B8%89%E8%A7%92%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0813. 最大平均值和的分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0813.%20%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E5%80%BC%E5%92%8C%E7%9A%84%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0813.%20%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E5%80%BC%E5%92%8C%E7%9A%84%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0814. 二叉树剪枝【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0814.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%89%AA%E6%9E%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0814.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%89%AA%E6%9E%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0815. 公交路线【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0815.%20%E5%85%AC%E4%BA%A4%E8%B7%AF%E7%BA%BF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0815.%20%E5%85%AC%E4%BA%A4%E8%B7%AF%E7%BA%BF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0816. 模糊坐标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0816.%20%E6%A8%A1%E7%B3%8A%E5%9D%90%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0816.%20%E6%A8%A1%E7%B3%8A%E5%9D%90%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0817. 链表组件【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0817.%20%E9%93%BE%E8%A1%A8%E7%BB%84%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0817.%20%E9%93%BE%E8%A1%A8%E7%BB%84%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0818. 赛车【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0818.%20%E8%B5%9B%E8%BD%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0818.%20%E8%B5%9B%E8%BD%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0819. 最常见的单词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0819.%20%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0819.%20%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0819.%20%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0820. 单词的压缩编码【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0820.%20%E5%8D%95%E8%AF%8D%E7%9A%84%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0820.%20%E5%8D%95%E8%AF%8D%E7%9A%84%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0821. 字符的最短距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0821.%20%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0821.%20%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0822. 翻转卡片游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0822.%20%E7%BF%BB%E8%BD%AC%E5%8D%A1%E7%89%87%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0822.%20%E7%BF%BB%E8%BD%AC%E5%8D%A1%E7%89%87%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0823. 带因子的二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0823.%20%E5%B8%A6%E5%9B%A0%E5%AD%90%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0823.%20%E5%B8%A6%E5%9B%A0%E5%AD%90%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0824. 山羊拉丁文【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0824.%20%E5%B1%B1%E7%BE%8A%E6%8B%89%E4%B8%81%E6%96%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0824.%20%E5%B1%B1%E7%BE%8A%E6%8B%89%E4%B8%81%E6%96%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0825. 适龄的朋友【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0825.%20%E9%80%82%E9%BE%84%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0825.%20%E9%80%82%E9%BE%84%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0826. 安排工作以达到最大收益【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0826.%20%E5%AE%89%E6%8E%92%E5%B7%A5%E4%BD%9C%E4%BB%A5%E8%BE%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E6%94%B6%E7%9B%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0826.%20%E5%AE%89%E6%8E%92%E5%B7%A5%E4%BD%9C%E4%BB%A5%E8%BE%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E6%94%B6%E7%9B%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0827. 最大人工岛【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0827.%20%E6%9C%80%E5%A4%A7%E4%BA%BA%E5%B7%A5%E5%B2%9B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0827.%20%E6%9C%80%E5%A4%A7%E4%BA%BA%E5%B7%A5%E5%B2%9B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0828. 统计子串中的唯一字符【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0828.%20%E7%BB%9F%E8%AE%A1%E5%AD%90%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0828.%20%E7%BB%9F%E8%AE%A1%E5%AD%90%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%94%AF%E4%B8%80%E5%AD%97%E7%AC%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0829. 连续整数求和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0829.%20%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E6%B1%82%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0829.%20%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E6%B1%82%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0830. 较大分组的位置【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0830.%20%E8%BE%83%E5%A4%A7%E5%88%86%E7%BB%84%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0830.%20%E8%BE%83%E5%A4%A7%E5%88%86%E7%BB%84%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0831. 隐藏个人信息【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0831.%20%E9%9A%90%E8%97%8F%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0831.%20%E9%9A%90%E8%97%8F%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0832. 翻转图像【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0832.%20%E7%BF%BB%E8%BD%AC%E5%9B%BE%E5%83%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0832.%20%E7%BF%BB%E8%BD%AC%E5%9B%BE%E5%83%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0833. 字符串中的查找与替换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0833.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0833.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0834. 树中距离之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0834.%20%E6%A0%91%E4%B8%AD%E8%B7%9D%E7%A6%BB%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0834.%20%E6%A0%91%E4%B8%AD%E8%B7%9D%E7%A6%BB%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0835. 图像重叠【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0835.%20%E5%9B%BE%E5%83%8F%E9%87%8D%E5%8F%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0835.%20%E5%9B%BE%E5%83%8F%E9%87%8D%E5%8F%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0836. 矩形重叠【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0836.%20%E7%9F%A9%E5%BD%A2%E9%87%8D%E5%8F%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0836.%20%E7%9F%A9%E5%BD%A2%E9%87%8D%E5%8F%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0837. 新 21 点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0837.%20%E6%96%B0%2021%20%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0837.%20%E6%96%B0%2021%20%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0838. 推多米诺【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0838.%20%E6%8E%A8%E5%A4%9A%E7%B1%B3%E8%AF%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0838.%20%E6%8E%A8%E5%A4%9A%E7%B1%B3%E8%AF%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0839. 相似字符串组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0839.%20%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0839.%20%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0840. 矩阵中的幻方【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0840.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B9%BB%E6%96%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0840.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B9%BB%E6%96%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0841. 钥匙和房间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0841.%20%E9%92%A5%E5%8C%99%E5%92%8C%E6%88%BF%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0841.%20%E9%92%A5%E5%8C%99%E5%92%8C%E6%88%BF%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0842. 将数组拆分成斐波那契序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0842.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%86%E6%88%90%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0842.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%8B%86%E5%88%86%E6%88%90%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0843. 猜猜这个单词【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0843.%20%E7%8C%9C%E7%8C%9C%E8%BF%99%E4%B8%AA%E5%8D%95%E8%AF%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0843.%20%E7%8C%9C%E7%8C%9C%E8%BF%99%E4%B8%AA%E5%8D%95%E8%AF%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0844. 比较含退格的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0844.%20%E6%AF%94%E8%BE%83%E5%90%AB%E9%80%80%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0844.%20%E6%AF%94%E8%BE%83%E5%90%AB%E9%80%80%E6%A0%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0845. 数组中的最长山脉【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0845.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E5%B1%B1%E8%84%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0845.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E5%B1%B1%E8%84%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0846. 一手顺子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0846.%20%E4%B8%80%E6%89%8B%E9%A1%BA%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0846.%20%E4%B8%80%E6%89%8B%E9%A1%BA%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0847. 访问所有节点的最短路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0847.%20%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0847.%20%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0848. 字母移位【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0848.%20%E5%AD%97%E6%AF%8D%E7%A7%BB%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0848.%20%E5%AD%97%E6%AF%8D%E7%A7%BB%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0849. 到最近的人的最大距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0849.%20%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E4%BA%BA%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0849.%20%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E4%BA%BA%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0850. 矩形面积 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0850.%20%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0850.%20%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0851. 喧闹和富有【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0851.%20%E5%96%A7%E9%97%B9%E5%92%8C%E5%AF%8C%E6%9C%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0851.%20%E5%96%A7%E9%97%B9%E5%92%8C%E5%AF%8C%E6%9C%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0852. 山脉数组的峰顶索引【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0852.%20%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E7%9A%84%E5%B3%B0%E9%A1%B6%E7%B4%A2%E5%BC%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0852.%20%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E7%9A%84%E5%B3%B0%E9%A1%B6%E7%B4%A2%E5%BC%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0853. 车队【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0853.%20%E8%BD%A6%E9%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0853.%20%E8%BD%A6%E9%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0854. 相似度为 K 的字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0854.%20%E7%9B%B8%E4%BC%BC%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0854.%20%E7%9B%B8%E4%BC%BC%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0855. 考场就座【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0855.%20%E8%80%83%E5%9C%BA%E5%B0%B1%E5%BA%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0855.%20%E8%80%83%E5%9C%BA%E5%B0%B1%E5%BA%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0856. 括号的分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0856.%20%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0856.%20%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0857. 雇佣 K 名工人的最低成本【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0857.%20%E9%9B%87%E4%BD%A3%20K%20%E5%90%8D%E5%B7%A5%E4%BA%BA%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0857.%20%E9%9B%87%E4%BD%A3%20K%20%E5%90%8D%E5%B7%A5%E4%BA%BA%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0858. 镜面反射【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0858.%20%E9%95%9C%E9%9D%A2%E5%8F%8D%E5%B0%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0858.%20%E9%95%9C%E9%9D%A2%E5%8F%8D%E5%B0%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0859. 亲密字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0859.%20%E4%BA%B2%E5%AF%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0859.%20%E4%BA%B2%E5%AF%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0860. 柠檬水找零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0860.%20%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0860.%20%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0861. 翻转矩阵后的得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0861.%20%E7%BF%BB%E8%BD%AC%E7%9F%A9%E9%98%B5%E5%90%8E%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0861.%20%E7%BF%BB%E8%BD%AC%E7%9F%A9%E9%98%B5%E5%90%8E%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0862. 和至少为 K 的最短子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0862.%20%E5%92%8C%E8%87%B3%E5%B0%91%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0862.%20%E5%92%8C%E8%87%B3%E5%B0%91%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0863. 二叉树中所有距离为 K 的结点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0863.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%89%80%E6%9C%89%E8%B7%9D%E7%A6%BB%E4%B8%BA%20K%20%E7%9A%84%E7%BB%93%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0863.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%89%80%E6%9C%89%E8%B7%9D%E7%A6%BB%E4%B8%BA%20K%20%E7%9A%84%E7%BB%93%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0864. 获取所有钥匙的最短路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0864.%20%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E9%92%A5%E5%8C%99%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0864.%20%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E9%92%A5%E5%8C%99%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0865. 具有所有最深节点的最小子树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0865.%20%E5%85%B7%E6%9C%89%E6%89%80%E6%9C%89%E6%9C%80%E6%B7%B1%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0865.%20%E5%85%B7%E6%9C%89%E6%89%80%E6%9C%89%E6%9C%80%E6%B7%B1%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0866. 回文质数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0866.%20%E5%9B%9E%E6%96%87%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0866.%20%E5%9B%9E%E6%96%87%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0867. 转置矩阵【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0867.%20%E8%BD%AC%E7%BD%AE%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0867.%20%E8%BD%AC%E7%BD%AE%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0868. 二进制间距【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0868.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%97%B4%E8%B7%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0868.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%97%B4%E8%B7%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0869. 重新排序得到 2 的幂【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0869.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%BA%8F%E5%BE%97%E5%88%B0%202%20%E7%9A%84%E5%B9%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0869.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%BA%8F%E5%BE%97%E5%88%B0%202%20%E7%9A%84%E5%B9%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0870. 优势洗牌【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0870.%20%E4%BC%98%E5%8A%BF%E6%B4%97%E7%89%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0870.%20%E4%BC%98%E5%8A%BF%E6%B4%97%E7%89%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0871. 最低加油次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0871.%20%E6%9C%80%E4%BD%8E%E5%8A%A0%E6%B2%B9%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0871.%20%E6%9C%80%E4%BD%8E%E5%8A%A0%E6%B2%B9%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0872. 叶子相似的树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0872.%20%E5%8F%B6%E5%AD%90%E7%9B%B8%E4%BC%BC%E7%9A%84%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0872.%20%E5%8F%B6%E5%AD%90%E7%9B%B8%E4%BC%BC%E7%9A%84%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [0873. 最长的斐波那契子序列的长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0873.%20%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0873.%20%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0873.%20%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0874. 模拟行走机器人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0874.%20%E6%A8%A1%E6%8B%9F%E8%A1%8C%E8%B5%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0874.%20%E6%A8%A1%E6%8B%9F%E8%A1%8C%E8%B5%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0875. 爱吃香蕉的珂珂【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0875.%20%E7%88%B1%E5%90%83%E9%A6%99%E8%95%89%E7%9A%84%E7%8F%82%E7%8F%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0875.%20%E7%88%B1%E5%90%83%E9%A6%99%E8%95%89%E7%9A%84%E7%8F%82%E7%8F%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0876. 链表的中间结点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0876.%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0876.%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 - 先找长度，再找中间](https://tdahuyou.github.io/TNotes.leetcode/notes/0876.%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法---先找长度再找中间)\\n  - [3. 🎯 Solutions.2 - 快慢指针 - 一步两步](https://tdahuyou.github.io/TNotes.leetcode/notes/0876.%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---快慢指针---一步两步)\\n  - [4. 🔗 References](https://tdahuyou.github.io/TNotes.leetcode/notes/0876.%20%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E7%BB%93%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--references)\\n- [ ] [0877. 石子游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0877.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0877.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0878. 第 N 个神奇数字【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0878.%20%E7%AC%AC%20N%20%E4%B8%AA%E7%A5%9E%E5%A5%87%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0878.%20%E7%AC%AC%20N%20%E4%B8%AA%E7%A5%9E%E5%A5%87%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0879. 盈利计划【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0879.%20%E7%9B%88%E5%88%A9%E8%AE%A1%E5%88%92%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0879.%20%E7%9B%88%E5%88%A9%E8%AE%A1%E5%88%92%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0880. 索引处的解码字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0880.%20%E7%B4%A2%E5%BC%95%E5%A4%84%E7%9A%84%E8%A7%A3%E7%A0%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0880.%20%E7%B4%A2%E5%BC%95%E5%A4%84%E7%9A%84%E8%A7%A3%E7%A0%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0881. 救生艇【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0881.%20%E6%95%91%E7%94%9F%E8%89%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0881.%20%E6%95%91%E7%94%9F%E8%89%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 贪心](https://tdahuyou.github.io/TNotes.leetcode/notes/0881.%20%E6%95%91%E7%94%9F%E8%89%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---贪心)\\n- [ ] [0882. 细分图中的可到达节点【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0882.%20%E7%BB%86%E5%88%86%E5%9B%BE%E4%B8%AD%E7%9A%84%E5%8F%AF%E5%88%B0%E8%BE%BE%E8%8A%82%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0882.%20%E7%BB%86%E5%88%86%E5%9B%BE%E4%B8%AD%E7%9A%84%E5%8F%AF%E5%88%B0%E8%BE%BE%E8%8A%82%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0883. 三维形体投影面积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0883.%20%E4%B8%89%E7%BB%B4%E5%BD%A2%E4%BD%93%E6%8A%95%E5%BD%B1%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0883.%20%E4%B8%89%E7%BB%B4%E5%BD%A2%E4%BD%93%E6%8A%95%E5%BD%B1%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0884. 两句话中的不常见单词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0884.%20%E4%B8%A4%E5%8F%A5%E8%AF%9D%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%B8%B8%E8%A7%81%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0884.%20%E4%B8%A4%E5%8F%A5%E8%AF%9D%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%B8%B8%E8%A7%81%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0885. 螺旋矩阵 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0885.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0885.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0886. 可能的二分法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0886.%20%E5%8F%AF%E8%83%BD%E7%9A%84%E4%BA%8C%E5%88%86%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0886.%20%E5%8F%AF%E8%83%BD%E7%9A%84%E4%BA%8C%E5%88%86%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0887. 鸡蛋掉落【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0887.%20%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0887.%20%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0888. 公平的糖果交换【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0888.%20%E5%85%AC%E5%B9%B3%E7%9A%84%E7%B3%96%E6%9E%9C%E4%BA%A4%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0888.%20%E5%85%AC%E5%B9%B3%E7%9A%84%E7%B3%96%E6%9E%9C%E4%BA%A4%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0889. 根据前序和后序遍历构造二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0889.%20%E6%A0%B9%E6%8D%AE%E5%89%8D%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0889.%20%E6%A0%B9%E6%8D%AE%E5%89%8D%E5%BA%8F%E5%92%8C%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0890. 查找和替换模式【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0890.%20%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E6%A8%A1%E5%BC%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0890.%20%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2%E6%A8%A1%E5%BC%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0891. 子序列宽度之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0891.%20%E5%AD%90%E5%BA%8F%E5%88%97%E5%AE%BD%E5%BA%A6%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0891.%20%E5%AD%90%E5%BA%8F%E5%88%97%E5%AE%BD%E5%BA%A6%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0892. 三维形体的表面积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0892.%20%E4%B8%89%E7%BB%B4%E5%BD%A2%E4%BD%93%E7%9A%84%E8%A1%A8%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0892.%20%E4%B8%89%E7%BB%B4%E5%BD%A2%E4%BD%93%E7%9A%84%E8%A1%A8%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0893. 特殊等价字符串组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0893.%20%E7%89%B9%E6%AE%8A%E7%AD%89%E4%BB%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0893.%20%E7%89%B9%E6%AE%8A%E7%AD%89%E4%BB%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0894. 所有可能的真二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0894.%20%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E7%9C%9F%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0894.%20%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E7%9C%9F%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0895. 最大频率栈【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0895.%20%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E6%A0%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0895.%20%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E6%A0%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0896. 单调数列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0896.%20%E5%8D%95%E8%B0%83%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0896.%20%E5%8D%95%E8%B0%83%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0897. 递增顺序搜索树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0897.%20%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0897.%20%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0898. 子数组按位或操作【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0898.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%8C%89%E4%BD%8D%E6%88%96%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0898.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%8C%89%E4%BD%8D%E6%88%96%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0899. 有序队列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0899.%20%E6%9C%89%E5%BA%8F%E9%98%9F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0899.%20%E6%9C%89%E5%BA%8F%E9%98%9F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0900. RLE 迭代器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0900.%20RLE%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0900.%20RLE%20%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 11. 0901~1000\\n\\n- [ ] [0901. 股票价格跨度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0901.%20%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E8%B7%A8%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0901.%20%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E8%B7%A8%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0902. 最大为 N 的数字组合【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0902.%20%E6%9C%80%E5%A4%A7%E4%B8%BA%20N%20%E7%9A%84%E6%95%B0%E5%AD%97%E7%BB%84%E5%90%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0902.%20%E6%9C%80%E5%A4%A7%E4%B8%BA%20N%20%E7%9A%84%E6%95%B0%E5%AD%97%E7%BB%84%E5%90%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0903. DI 序列的有效排列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0903.%20DI%20%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%89%E6%95%88%E6%8E%92%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0903.%20DI%20%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%89%E6%95%88%E6%8E%92%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0904. 水果成篮【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0904.%20%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0904.%20%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0905. 按奇偶排序数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0905.%20%E6%8C%89%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0905.%20%E6%8C%89%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0906. 超级回文数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0906.%20%E8%B6%85%E7%BA%A7%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0906.%20%E8%B6%85%E7%BA%A7%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0907. 子数组的最小值之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0907.%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0907.%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0908. 最小差值 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0908.%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0908.%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0909. 蛇梯棋【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0909.%20%E8%9B%87%E6%A2%AF%E6%A3%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0909.%20%E8%9B%87%E6%A2%AF%E6%A3%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0910. 最小差值 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0910.%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0910.%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0911. 在线选举【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0911.%20%E5%9C%A8%E7%BA%BF%E9%80%89%E4%B8%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0911.%20%E5%9C%A8%E7%BA%BF%E9%80%89%E4%B8%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0912. 排序数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1 - 原生排序方法](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1---原生排序方法)\\n  - [4. 🎯 Solutions.2 - 冒泡排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions2---冒泡排序)\\n    - [4.1. 冒泡排序 - 标准版](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#41-冒泡排序---标准版)\\n    - [4.2. 冒泡排序 - 加入提前终止标志](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#42-冒泡排序---加入提前终止标志)\\n    - [4.3. 冒泡排序 - 鸡尾酒排序 Cocktail Shaker Sort](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#43-冒泡排序---鸡尾酒排序-cocktail-shaker-sort)\\n  - [5. 🎯 Solutions.3 - 选择排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#5--solutions3---选择排序)\\n  - [6. 🎯 Solutions.4 - 快速排序](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#6--solutions4---快速排序)\\n  - [7. 📒 排序的本质](https://tdahuyou.github.io/TNotes.leetcode/notes/0912.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#7--排序的本质)\\n  - [leetcode](https://leetcode.cn/problems/sort-an-array)\\n- [ ] [0913. 猫和老鼠【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0913.%20%E7%8C%AB%E5%92%8C%E8%80%81%E9%BC%A0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0913.%20%E7%8C%AB%E5%92%8C%E8%80%81%E9%BC%A0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0914. 卡牌分组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0914.%20%E5%8D%A1%E7%89%8C%E5%88%86%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0914.%20%E5%8D%A1%E7%89%8C%E5%88%86%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0915. 分割数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0915.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0915.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0916. 单词子集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0916.%20%E5%8D%95%E8%AF%8D%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0916.%20%E5%8D%95%E8%AF%8D%E5%AD%90%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0917. 仅仅反转字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0917.%20%E4%BB%85%E4%BB%85%E5%8F%8D%E8%BD%AC%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0917.%20%E4%BB%85%E4%BB%85%E5%8F%8D%E8%BD%AC%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0918. 环形子数组的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0918.%20%E7%8E%AF%E5%BD%A2%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0918.%20%E7%8E%AF%E5%BD%A2%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0919. 完全二叉树插入器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0919.%20%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E6%8F%92%E5%85%A5%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0919.%20%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E6%8F%92%E5%85%A5%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0920. 播放列表的数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0920.%20%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0920.%20%E6%92%AD%E6%94%BE%E5%88%97%E8%A1%A8%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0921. 使括号有效的最少添加【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0921.%20%E4%BD%BF%E6%8B%AC%E5%8F%B7%E6%9C%89%E6%95%88%E7%9A%84%E6%9C%80%E5%B0%91%E6%B7%BB%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0921.%20%E4%BD%BF%E6%8B%AC%E5%8F%B7%E6%9C%89%E6%95%88%E7%9A%84%E6%9C%80%E5%B0%91%E6%B7%BB%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0922. 按奇偶排序数组 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0922.%20%E6%8C%89%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0922.%20%E6%8C%89%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0923. 三数之和的多种可能【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0923.%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0923.%20%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C%E7%9A%84%E5%A4%9A%E7%A7%8D%E5%8F%AF%E8%83%BD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0924. 尽量减少恶意软件的传播【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0924.%20%E5%B0%BD%E9%87%8F%E5%87%8F%E5%B0%91%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BC%A0%E6%92%AD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0924.%20%E5%B0%BD%E9%87%8F%E5%87%8F%E5%B0%91%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BC%A0%E6%92%AD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0925. 长按键入【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0925.%20%E9%95%BF%E6%8C%89%E9%94%AE%E5%85%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0925.%20%E9%95%BF%E6%8C%89%E9%94%AE%E5%85%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0926. 将字符串翻转到单调递增【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0926.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BF%BB%E8%BD%AC%E5%88%B0%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0926.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BF%BB%E8%BD%AC%E5%88%B0%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0927. 三等分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0927.%20%E4%B8%89%E7%AD%89%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0927.%20%E4%B8%89%E7%AD%89%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0928. 尽量减少恶意软件的传播 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0928.%20%E5%B0%BD%E9%87%8F%E5%87%8F%E5%B0%91%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BC%A0%E6%92%AD%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0928.%20%E5%B0%BD%E9%87%8F%E5%87%8F%E5%B0%91%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BC%A0%E6%92%AD%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0929. 独特的电子邮件地址【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0929.%20%E7%8B%AC%E7%89%B9%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%9C%B0%E5%9D%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0929.%20%E7%8B%AC%E7%89%B9%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%9C%B0%E5%9D%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0929.%20%E7%8B%AC%E7%89%B9%E7%9A%84%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%9C%B0%E5%9D%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0930. 和相同的二元子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0930.%20%E5%92%8C%E7%9B%B8%E5%90%8C%E7%9A%84%E4%BA%8C%E5%85%83%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0930.%20%E5%92%8C%E7%9B%B8%E5%90%8C%E7%9A%84%E4%BA%8C%E5%85%83%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0931. 下降路径最小和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0931.%20%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0931.%20%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0932. 漂亮数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0932.%20%E6%BC%82%E4%BA%AE%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0932.%20%E6%BC%82%E4%BA%AE%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0933. 最近的请求次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0933.%20%E6%9C%80%E8%BF%91%E7%9A%84%E8%AF%B7%E6%B1%82%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0933.%20%E6%9C%80%E8%BF%91%E7%9A%84%E8%AF%B7%E6%B1%82%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 - 使用队列 queue](https://tdahuyou.github.io/TNotes.leetcode/notes/0933.%20%E6%9C%80%E8%BF%91%E7%9A%84%E8%AF%B7%E6%B1%82%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法---使用队列-queue)\\n- [ ] [0934. 最短的桥【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0934.%20%E6%9C%80%E7%9F%AD%E7%9A%84%E6%A1%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0934.%20%E6%9C%80%E7%9F%AD%E7%9A%84%E6%A1%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0935. 骑士拨号器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0935.%20%E9%AA%91%E5%A3%AB%E6%8B%A8%E5%8F%B7%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0935.%20%E9%AA%91%E5%A3%AB%E6%8B%A8%E5%8F%B7%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0936. 戳印序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0936.%20%E6%88%B3%E5%8D%B0%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0936.%20%E6%88%B3%E5%8D%B0%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0937. 重新排列日志文件【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0937.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0937.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0938. 二叉搜索树的范围和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0938.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E8%8C%83%E5%9B%B4%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0938.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E8%8C%83%E5%9B%B4%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0939. 最小面积矩形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0939.%20%E6%9C%80%E5%B0%8F%E9%9D%A2%E7%A7%AF%E7%9F%A9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0939.%20%E6%9C%80%E5%B0%8F%E9%9D%A2%E7%A7%AF%E7%9F%A9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0940. 不同的子序列 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0940.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0940.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0941. 有效的山脉数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0941.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0941.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0942. 增减字符串匹配【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0942.%20%E5%A2%9E%E5%87%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0942.%20%E5%A2%9E%E5%87%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0943. 最短超级串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0943.%20%E6%9C%80%E7%9F%AD%E8%B6%85%E7%BA%A7%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0943.%20%E6%9C%80%E7%9F%AD%E8%B6%85%E7%BA%A7%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0944. 删列造序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0944.%20%E5%88%A0%E5%88%97%E9%80%A0%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0944.%20%E5%88%A0%E5%88%97%E9%80%A0%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0945. 使数组唯一的最小增量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0945.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%94%AF%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A2%9E%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0945.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%94%AF%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A2%9E%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0946. 验证栈序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0946.%20%E9%AA%8C%E8%AF%81%E6%A0%88%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0946.%20%E9%AA%8C%E8%AF%81%E6%A0%88%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0947. 移除最多的同行或同列石头【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0947.%20%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0947.%20%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%9A%E7%9A%84%E5%90%8C%E8%A1%8C%E6%88%96%E5%90%8C%E5%88%97%E7%9F%B3%E5%A4%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0948. 令牌放置【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0948.%20%E4%BB%A4%E7%89%8C%E6%94%BE%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0948.%20%E4%BB%A4%E7%89%8C%E6%94%BE%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0949. 给定数字能组成的最大时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0949.%20%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E8%83%BD%E7%BB%84%E6%88%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0949.%20%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E8%83%BD%E7%BB%84%E6%88%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0950. 按递增顺序显示卡牌【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0950.%20%E6%8C%89%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%98%BE%E7%A4%BA%E5%8D%A1%E7%89%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0950.%20%E6%8C%89%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E6%98%BE%E7%A4%BA%E5%8D%A1%E7%89%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0951. 翻转等价二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0951.%20%E7%BF%BB%E8%BD%AC%E7%AD%89%E4%BB%B7%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0951.%20%E7%BF%BB%E8%BD%AC%E7%AD%89%E4%BB%B7%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0952. 按公因数计算最大组件大小【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0952.%20%E6%8C%89%E5%85%AC%E5%9B%A0%E6%95%B0%E8%AE%A1%E7%AE%97%E6%9C%80%E5%A4%A7%E7%BB%84%E4%BB%B6%E5%A4%A7%E5%B0%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0952.%20%E6%8C%89%E5%85%AC%E5%9B%A0%E6%95%B0%E8%AE%A1%E7%AE%97%E6%9C%80%E5%A4%A7%E7%BB%84%E4%BB%B6%E5%A4%A7%E5%B0%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [0953. 验证外星语词典【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0953.%20%E9%AA%8C%E8%AF%81%E5%A4%96%E6%98%9F%E8%AF%AD%E8%AF%8D%E5%85%B8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0953.%20%E9%AA%8C%E8%AF%81%E5%A4%96%E6%98%9F%E8%AF%AD%E8%AF%8D%E5%85%B8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/0953.%20%E9%AA%8C%E8%AF%81%E5%A4%96%E6%98%9F%E8%AF%AD%E8%AF%8D%E5%85%B8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [0954. 二倍数对数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0954.%20%E4%BA%8C%E5%80%8D%E6%95%B0%E5%AF%B9%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0954.%20%E4%BA%8C%E5%80%8D%E6%95%B0%E5%AF%B9%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0955. 删列造序 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0955.%20%E5%88%A0%E5%88%97%E9%80%A0%E5%BA%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0955.%20%E5%88%A0%E5%88%97%E9%80%A0%E5%BA%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0956. 最高的广告牌【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0956.%20%E6%9C%80%E9%AB%98%E7%9A%84%E5%B9%BF%E5%91%8A%E7%89%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0956.%20%E6%9C%80%E9%AB%98%E7%9A%84%E5%B9%BF%E5%91%8A%E7%89%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0957. N 天后的牢房【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0957.%20N%20%E5%A4%A9%E5%90%8E%E7%9A%84%E7%89%A2%E6%88%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0957.%20N%20%E5%A4%A9%E5%90%8E%E7%9A%84%E7%89%A2%E6%88%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0958. 二叉树的完全性检验【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0958.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%8C%E5%85%A8%E6%80%A7%E6%A3%80%E9%AA%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0958.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%8C%E5%85%A8%E6%80%A7%E6%A3%80%E9%AA%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0959. 由斜杠划分区域【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0959.%20%E7%94%B1%E6%96%9C%E6%9D%A0%E5%88%92%E5%88%86%E5%8C%BA%E5%9F%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0959.%20%E7%94%B1%E6%96%9C%E6%9D%A0%E5%88%92%E5%88%86%E5%8C%BA%E5%9F%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0960. 删列造序 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0960.%20%E5%88%A0%E5%88%97%E9%80%A0%E5%BA%8F%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0960.%20%E5%88%A0%E5%88%97%E9%80%A0%E5%BA%8F%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0961. 在长度 2N 的数组中找出重复 N 次的元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0961.%20%E5%9C%A8%E9%95%BF%E5%BA%A6%202N%20%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%BE%E5%87%BA%E9%87%8D%E5%A4%8D%20N%20%E6%AC%A1%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0961.%20%E5%9C%A8%E9%95%BF%E5%BA%A6%202N%20%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%BE%E5%87%BA%E9%87%8D%E5%A4%8D%20N%20%E6%AC%A1%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0962. 最大宽度坡【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0962.%20%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6%E5%9D%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0962.%20%E6%9C%80%E5%A4%A7%E5%AE%BD%E5%BA%A6%E5%9D%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0963. 最小面积矩形 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0963.%20%E6%9C%80%E5%B0%8F%E9%9D%A2%E7%A7%AF%E7%9F%A9%E5%BD%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0963.%20%E6%9C%80%E5%B0%8F%E9%9D%A2%E7%A7%AF%E7%9F%A9%E5%BD%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0964. 表示数字的最少运算符【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0964.%20%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%91%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0964.%20%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%91%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0965. 单值二叉树【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0965.%20%E5%8D%95%E5%80%BC%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0965.%20%E5%8D%95%E5%80%BC%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0966. 元音拼写检查器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0966.%20%E5%85%83%E9%9F%B3%E6%8B%BC%E5%86%99%E6%A3%80%E6%9F%A5%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0966.%20%E5%85%83%E9%9F%B3%E6%8B%BC%E5%86%99%E6%A3%80%E6%9F%A5%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0967. 连续差相同的数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0967.%20%E8%BF%9E%E7%BB%AD%E5%B7%AE%E7%9B%B8%E5%90%8C%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0967.%20%E8%BF%9E%E7%BB%AD%E5%B7%AE%E7%9B%B8%E5%90%8C%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0968. 监控二叉树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0968.%20%E7%9B%91%E6%8E%A7%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0968.%20%E7%9B%91%E6%8E%A7%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0969. 煎饼排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0969.%20%E7%85%8E%E9%A5%BC%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0969.%20%E7%85%8E%E9%A5%BC%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0970. 强整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0970.%20%E5%BC%BA%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0970.%20%E5%BC%BA%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0971. 翻转二叉树以匹配先序遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0971.%20%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E4%BB%A5%E5%8C%B9%E9%85%8D%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0971.%20%E7%BF%BB%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E4%BB%A5%E5%8C%B9%E9%85%8D%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0972. 相等的有理数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0972.%20%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%89%E7%90%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0972.%20%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%89%E7%90%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0973. 最接近原点的 K 个点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0973.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E5%8E%9F%E7%82%B9%E7%9A%84%20K%20%E4%B8%AA%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0973.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E5%8E%9F%E7%82%B9%E7%9A%84%20K%20%E4%B8%AA%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0974. 和可被 K 整除的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0974.%20%E5%92%8C%E5%8F%AF%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0974.%20%E5%92%8C%E5%8F%AF%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0975. 奇偶跳【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0975.%20%E5%A5%87%E5%81%B6%E8%B7%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0975.%20%E5%A5%87%E5%81%B6%E8%B7%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0976. 三角形的最大周长【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0976.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%91%A8%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0976.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%91%A8%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0977. 有序数组的平方【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0977.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/0977.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法 - 调用原生 API - map、sort](https://tdahuyou.github.io/TNotes.leetcode/notes/0977.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法---调用原生-api---mapsort)\\n  - [3. 🎯 Solutions.2 - 双指针](https://tdahuyou.github.io/TNotes.leetcode/notes/0977.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%B9%B3%E6%96%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---双指针)\\n- [ ] [0978. 最长湍流子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0978.%20%E6%9C%80%E9%95%BF%E6%B9%8D%E6%B5%81%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0978.%20%E6%9C%80%E9%95%BF%E6%B9%8D%E6%B5%81%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0979. 在二叉树中分配硬币【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0979.%20%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%88%86%E9%85%8D%E7%A1%AC%E5%B8%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0979.%20%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%88%86%E9%85%8D%E7%A1%AC%E5%B8%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0980. 不同路径 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0980.%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0980.%20%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0981. 基于时间的键值存储【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0981.%20%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9A%84%E9%94%AE%E5%80%BC%E5%AD%98%E5%82%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0981.%20%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9A%84%E9%94%AE%E5%80%BC%E5%AD%98%E5%82%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0982. 按位与为零的三元组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0982.%20%E6%8C%89%E4%BD%8D%E4%B8%8E%E4%B8%BA%E9%9B%B6%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0982.%20%E6%8C%89%E4%BD%8D%E4%B8%8E%E4%B8%BA%E9%9B%B6%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0983. 最低票价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0983.%20%E6%9C%80%E4%BD%8E%E7%A5%A8%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0983.%20%E6%9C%80%E4%BD%8E%E7%A5%A8%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0984. 不含 AAA 或 BBB 的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0984.%20%E4%B8%8D%E5%90%AB%20AAA%20%E6%88%96%20BBB%20%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0984.%20%E4%B8%8D%E5%90%AB%20AAA%20%E6%88%96%20BBB%20%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0985. 查询后的偶数和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0985.%20%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9A%84%E5%81%B6%E6%95%B0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0985.%20%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9A%84%E5%81%B6%E6%95%B0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0986. 区间列表的交集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0986.%20%E5%8C%BA%E9%97%B4%E5%88%97%E8%A1%A8%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0986.%20%E5%8C%BA%E9%97%B4%E5%88%97%E8%A1%A8%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0987. 二叉树的垂序遍历【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0987.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9E%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0987.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%9E%82%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0988. 从叶结点开始的最小字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0988.%20%E4%BB%8E%E5%8F%B6%E7%BB%93%E7%82%B9%E5%BC%80%E5%A7%8B%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0988.%20%E4%BB%8E%E5%8F%B6%E7%BB%93%E7%82%B9%E5%BC%80%E5%A7%8B%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0989. 数组形式的整数加法【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0989.%20%E6%95%B0%E7%BB%84%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B4%E6%95%B0%E5%8A%A0%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0989.%20%E6%95%B0%E7%BB%84%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%95%B4%E6%95%B0%E5%8A%A0%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0990. 等式方程的可满足性【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0990.%20%E7%AD%89%E5%BC%8F%E6%96%B9%E7%A8%8B%E7%9A%84%E5%8F%AF%E6%BB%A1%E8%B6%B3%E6%80%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0990.%20%E7%AD%89%E5%BC%8F%E6%96%B9%E7%A8%8B%E7%9A%84%E5%8F%AF%E6%BB%A1%E8%B6%B3%E6%80%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0991. 坏了的计算器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0991.%20%E5%9D%8F%E4%BA%86%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0991.%20%E5%9D%8F%E4%BA%86%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0992. K 个不同整数的子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0992.%20K%20%E4%B8%AA%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0992.%20K%20%E4%B8%AA%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0993. 二叉树的堂兄弟节点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0993.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%A0%82%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0993.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%A0%82%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0994. 腐烂的橘子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0994.%20%E8%85%90%E7%83%82%E7%9A%84%E6%A9%98%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0994.%20%E8%85%90%E7%83%82%E7%9A%84%E6%A9%98%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0995. K 连续位的最小翻转次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0995.%20K%20%E8%BF%9E%E7%BB%AD%E4%BD%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0995.%20K%20%E8%BF%9E%E7%BB%AD%E4%BD%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0996. 平方数组的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/0996.%20%E5%B9%B3%E6%96%B9%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0996.%20%E5%B9%B3%E6%96%B9%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [0997. 找到小镇的法官【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0997.%20%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0997.%20%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [0998. 最大二叉树 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/0998.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0998.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E5%8F%89%E6%A0%91%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [0999. 可以被一步捕获的棋子数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/0999.%20%E5%8F%AF%E4%BB%A5%E8%A2%AB%E4%B8%80%E6%AD%A5%E6%8D%95%E8%8E%B7%E7%9A%84%E6%A3%8B%E5%AD%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/0999.%20%E5%8F%AF%E4%BB%A5%E8%A2%AB%E4%B8%80%E6%AD%A5%E6%8D%95%E8%8E%B7%E7%9A%84%E6%A3%8B%E5%AD%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1000. 合并石头的最低成本【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1000.%20%E5%90%88%E5%B9%B6%E7%9F%B3%E5%A4%B4%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1000.%20%E5%90%88%E5%B9%B6%E7%9F%B3%E5%A4%B4%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n\\n## 12. 1001~1100\\n\\n- [ ] [1001. 网格照明【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1001.%20%E7%BD%91%E6%A0%BC%E7%85%A7%E6%98%8E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1001.%20%E7%BD%91%E6%A0%BC%E7%85%A7%E6%98%8E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [1002. 查找共用字符【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1002.%20%E6%9F%A5%E6%89%BE%E5%85%B1%E7%94%A8%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/1002.%20%E6%9F%A5%E6%89%BE%E5%85%B1%E7%94%A8%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/1002.%20%E6%9F%A5%E6%89%BE%E5%85%B1%E7%94%A8%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [1003. 检查替换后的词是否有效【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1003.%20%E6%A3%80%E6%9F%A5%E6%9B%BF%E6%8D%A2%E5%90%8E%E7%9A%84%E8%AF%8D%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1003.%20%E6%A3%80%E6%9F%A5%E6%9B%BF%E6%8D%A2%E5%90%8E%E7%9A%84%E8%AF%8D%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1004. 最大连续1的个数 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1004.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1004.%20%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD1%E7%9A%84%E4%B8%AA%E6%95%B0%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1005. K 次取反后最大化的数组和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1005.%20K%20%E6%AC%A1%E5%8F%96%E5%8F%8D%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1005.%20K%20%E6%AC%A1%E5%8F%96%E5%8F%8D%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1006. 笨阶乘【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1006.%20%E7%AC%A8%E9%98%B6%E4%B9%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1006.%20%E7%AC%A8%E9%98%B6%E4%B9%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1007. 行相等的最少多米诺旋转【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1007.%20%E8%A1%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%9A%E7%B1%B3%E8%AF%BA%E6%97%8B%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1007.%20%E8%A1%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%9A%E7%B1%B3%E8%AF%BA%E6%97%8B%E8%BD%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1008. 前序遍历构造二叉搜索树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1008.%20%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1008.%20%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1009. 十进制整数的反码【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1009.%20%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B4%E6%95%B0%E7%9A%84%E5%8F%8D%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1009.%20%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B4%E6%95%B0%E7%9A%84%E5%8F%8D%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1010. 总持续时间可被 60 整除的歌曲【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1010.%20%E6%80%BB%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E5%8F%AF%E8%A2%AB%2060%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%AD%8C%E6%9B%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1010.%20%E6%80%BB%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E5%8F%AF%E8%A2%AB%2060%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%AD%8C%E6%9B%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1011. 在 D 天内送达包裹的能力【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1011.%20%E5%9C%A8%20D%20%E5%A4%A9%E5%86%85%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1011.%20%E5%9C%A8%20D%20%E5%A4%A9%E5%86%85%E9%80%81%E8%BE%BE%E5%8C%85%E8%A3%B9%E7%9A%84%E8%83%BD%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1012. 至少有 1 位重复的数字【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1012.%20%E8%87%B3%E5%B0%91%E6%9C%89%201%20%E4%BD%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1012.%20%E8%87%B3%E5%B0%91%E6%9C%89%201%20%E4%BD%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1013. 将数组分成和相等的三个部分【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1013.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E4%B8%89%E4%B8%AA%E9%83%A8%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1013.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E4%B8%89%E4%B8%AA%E9%83%A8%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1014. 最佳观光组合【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1014.%20%E6%9C%80%E4%BD%B3%E8%A7%82%E5%85%89%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1014.%20%E6%9C%80%E4%BD%B3%E8%A7%82%E5%85%89%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1015. 可被 K 整除的最小整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1015.%20%E5%8F%AF%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1015.%20%E5%8F%AF%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1016. 子串能表示从 1 到 N 数字的二进制串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1016.%20%E5%AD%90%E4%B8%B2%E8%83%BD%E8%A1%A8%E7%A4%BA%E4%BB%8E%201%20%E5%88%B0%20N%20%E6%95%B0%E5%AD%97%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1016.%20%E5%AD%90%E4%B8%B2%E8%83%BD%E8%A1%A8%E7%A4%BA%E4%BB%8E%201%20%E5%88%B0%20N%20%E6%95%B0%E5%AD%97%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1017. 负二进制转换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1017.%20%E8%B4%9F%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1017.%20%E8%B4%9F%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1018. 可被 5 整除的二进制前缀【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1018.%20%E5%8F%AF%E8%A2%AB%205%20%E6%95%B4%E9%99%A4%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1018.%20%E5%8F%AF%E8%A2%AB%205%20%E6%95%B4%E9%99%A4%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1019. 链表中的下一个更大节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1019.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1019.%20%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1020. 飞地的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1020.%20%E9%A3%9E%E5%9C%B0%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1020.%20%E9%A3%9E%E5%9C%B0%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1021. 删除最外层的括号【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1021.%20%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1021.%20%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%96%E5%B1%82%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1022. 从根到叶的二进制数之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1022.%20%E4%BB%8E%E6%A0%B9%E5%88%B0%E5%8F%B6%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1022.%20%E4%BB%8E%E6%A0%B9%E5%88%B0%E5%8F%B6%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1023. 驼峰式匹配【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1023.%20%E9%A9%BC%E5%B3%B0%E5%BC%8F%E5%8C%B9%E9%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1023.%20%E9%A9%BC%E5%B3%B0%E5%BC%8F%E5%8C%B9%E9%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1024. 视频拼接【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1024.%20%E8%A7%86%E9%A2%91%E6%8B%BC%E6%8E%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1024.%20%E8%A7%86%E9%A2%91%E6%8B%BC%E6%8E%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1025. 除数博弈【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1025.%20%E9%99%A4%E6%95%B0%E5%8D%9A%E5%BC%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1025.%20%E9%99%A4%E6%95%B0%E5%8D%9A%E5%BC%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1026. 节点与其祖先之间的最大差值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1026.%20%E8%8A%82%E7%82%B9%E4%B8%8E%E5%85%B6%E7%A5%96%E5%85%88%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1026.%20%E8%8A%82%E7%82%B9%E4%B8%8E%E5%85%B6%E7%A5%96%E5%85%88%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1027. 最长等差数列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1027.%20%E6%9C%80%E9%95%BF%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1027.%20%E6%9C%80%E9%95%BF%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1028. 从先序遍历还原二叉树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1028.%20%E4%BB%8E%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%E8%BF%98%E5%8E%9F%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1028.%20%E4%BB%8E%E5%85%88%E5%BA%8F%E9%81%8D%E5%8E%86%E8%BF%98%E5%8E%9F%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1029. 两地调度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1029.%20%E4%B8%A4%E5%9C%B0%E8%B0%83%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1029.%20%E4%B8%A4%E5%9C%B0%E8%B0%83%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1030. 距离顺序排列矩阵单元格【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1030.%20%E8%B7%9D%E7%A6%BB%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97%E7%9F%A9%E9%98%B5%E5%8D%95%E5%85%83%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1030.%20%E8%B7%9D%E7%A6%BB%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97%E7%9F%A9%E9%98%B5%E5%8D%95%E5%85%83%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1031. 两个非重叠子数组的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1031.%20%E4%B8%A4%E4%B8%AA%E9%9D%9E%E9%87%8D%E5%8F%A0%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1031.%20%E4%B8%A4%E4%B8%AA%E9%9D%9E%E9%87%8D%E5%8F%A0%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1032. 字符流【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1032.%20%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1032.%20%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1033. 移动石子直到连续【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1033.%20%E7%A7%BB%E5%8A%A8%E7%9F%B3%E5%AD%90%E7%9B%B4%E5%88%B0%E8%BF%9E%E7%BB%AD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1033.%20%E7%A7%BB%E5%8A%A8%E7%9F%B3%E5%AD%90%E7%9B%B4%E5%88%B0%E8%BF%9E%E7%BB%AD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1034. 边界着色【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1034.%20%E8%BE%B9%E7%95%8C%E7%9D%80%E8%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1034.%20%E8%BE%B9%E7%95%8C%E7%9D%80%E8%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1035. 不相交的线【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1035.%20%E4%B8%8D%E7%9B%B8%E4%BA%A4%E7%9A%84%E7%BA%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1035.%20%E4%B8%8D%E7%9B%B8%E4%BA%A4%E7%9A%84%E7%BA%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1036. 逃离大迷宫【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1036.%20%E9%80%83%E7%A6%BB%E5%A4%A7%E8%BF%B7%E5%AE%AB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1036.%20%E9%80%83%E7%A6%BB%E5%A4%A7%E8%BF%B7%E5%AE%AB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1037. 有效的回旋镖【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1037.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%9B%9E%E6%97%8B%E9%95%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1037.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%9B%9E%E6%97%8B%E9%95%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1038. 从二叉搜索树到更大和树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1038.%20%E4%BB%8E%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%88%B0%E6%9B%B4%E5%A4%A7%E5%92%8C%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1038.%20%E4%BB%8E%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%88%B0%E6%9B%B4%E5%A4%A7%E5%92%8C%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1039. 多边形三角剖分的最低得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1039.%20%E5%A4%9A%E8%BE%B9%E5%BD%A2%E4%B8%89%E8%A7%92%E5%89%96%E5%88%86%E7%9A%84%E6%9C%80%E4%BD%8E%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1039.%20%E5%A4%9A%E8%BE%B9%E5%BD%A2%E4%B8%89%E8%A7%92%E5%89%96%E5%88%86%E7%9A%84%E6%9C%80%E4%BD%8E%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1040. 移动石子直到连续 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1040.%20%E7%A7%BB%E5%8A%A8%E7%9F%B3%E5%AD%90%E7%9B%B4%E5%88%B0%E8%BF%9E%E7%BB%AD%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1040.%20%E7%A7%BB%E5%8A%A8%E7%9F%B3%E5%AD%90%E7%9B%B4%E5%88%B0%E8%BF%9E%E7%BB%AD%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1041. 困于环中的机器人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1041.%20%E5%9B%B0%E4%BA%8E%E7%8E%AF%E4%B8%AD%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1041.%20%E5%9B%B0%E4%BA%8E%E7%8E%AF%E4%B8%AD%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1042. 不邻接植花【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1042.%20%E4%B8%8D%E9%82%BB%E6%8E%A5%E6%A4%8D%E8%8A%B1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1042.%20%E4%B8%8D%E9%82%BB%E6%8E%A5%E6%A4%8D%E8%8A%B1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1043. 分隔数组以得到最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1043.%20%E5%88%86%E9%9A%94%E6%95%B0%E7%BB%84%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1043.%20%E5%88%86%E9%9A%94%E6%95%B0%E7%BB%84%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1044. 最长重复子串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1044.%20%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1044.%20%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1045. 买下所有产品的客户【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1045.%20%E4%B9%B0%E4%B8%8B%E6%89%80%E6%9C%89%E4%BA%A7%E5%93%81%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1045.%20%E4%B9%B0%E4%B8%8B%E6%89%80%E6%9C%89%E4%BA%A7%E5%93%81%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1046. 最后一块石头的重量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1046.%20%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1046.%20%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1047. 删除字符串中的所有相邻重复项【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1047.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E7%9B%B8%E9%82%BB%E9%87%8D%E5%A4%8D%E9%A1%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1047.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E7%9B%B8%E9%82%BB%E9%87%8D%E5%A4%8D%E9%A1%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1048. 最长字符串链【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1048.%20%E6%9C%80%E9%95%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1048.%20%E6%9C%80%E9%95%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%93%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1049. 最后一块石头的重量 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1049.%20%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1049.%20%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E7%9A%84%E9%87%8D%E9%87%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1050. 合作过至少三次的演员和导演【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1050.%20%E5%90%88%E4%BD%9C%E8%BF%87%E8%87%B3%E5%B0%91%E4%B8%89%E6%AC%A1%E7%9A%84%E6%BC%94%E5%91%98%E5%92%8C%E5%AF%BC%E6%BC%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1050.%20%E5%90%88%E4%BD%9C%E8%BF%87%E8%87%B3%E5%B0%91%E4%B8%89%E6%AC%A1%E7%9A%84%E6%BC%94%E5%91%98%E5%92%8C%E5%AF%BC%E6%BC%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1051. 高度检查器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1051.%20%E9%AB%98%E5%BA%A6%E6%A3%80%E6%9F%A5%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1051.%20%E9%AB%98%E5%BA%A6%E6%A3%80%E6%9F%A5%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1052. 爱生气的书店老板【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1052.%20%E7%88%B1%E7%94%9F%E6%B0%94%E7%9A%84%E4%B9%A6%E5%BA%97%E8%80%81%E6%9D%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1052.%20%E7%88%B1%E7%94%9F%E6%B0%94%E7%9A%84%E4%B9%A6%E5%BA%97%E8%80%81%E6%9D%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1053. 交换一次的先前排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1053.%20%E4%BA%A4%E6%8D%A2%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%88%E5%89%8D%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1053.%20%E4%BA%A4%E6%8D%A2%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%88%E5%89%8D%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1054. 距离相等的条形码【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1054.%20%E8%B7%9D%E7%A6%BB%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9D%A1%E5%BD%A2%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1054.%20%E8%B7%9D%E7%A6%BB%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9D%A1%E5%BD%A2%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1055. 形成字符串的最短路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1055.%20%E5%BD%A2%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1055.%20%E5%BD%A2%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1056. 易混淆数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1056.%20%E6%98%93%E6%B7%B7%E6%B7%86%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1056.%20%E6%98%93%E6%B7%B7%E6%B7%86%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1057. 校园自行车分配【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1057.%20%E6%A0%A1%E5%9B%AD%E8%87%AA%E8%A1%8C%E8%BD%A6%E5%88%86%E9%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1057.%20%E6%A0%A1%E5%9B%AD%E8%87%AA%E8%A1%8C%E8%BD%A6%E5%88%86%E9%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1058. 最小化舍入误差以满足目标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1058.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E8%88%8D%E5%85%A5%E8%AF%AF%E5%B7%AE%E4%BB%A5%E6%BB%A1%E8%B6%B3%E7%9B%AE%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1058.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E8%88%8D%E5%85%A5%E8%AF%AF%E5%B7%AE%E4%BB%A5%E6%BB%A1%E8%B6%B3%E7%9B%AE%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1059. 从始点到终点的所有路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1059.%20%E4%BB%8E%E5%A7%8B%E7%82%B9%E5%88%B0%E7%BB%88%E7%82%B9%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1059.%20%E4%BB%8E%E5%A7%8B%E7%82%B9%E5%88%B0%E7%BB%88%E7%82%B9%E7%9A%84%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1060. 有序数组中的缺失元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1060.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BC%BA%E5%A4%B1%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1060.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BC%BA%E5%A4%B1%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1061. 按字典序排列最小的等效字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1061.%20%E6%8C%89%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E5%88%97%E6%9C%80%E5%B0%8F%E7%9A%84%E7%AD%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1061.%20%E6%8C%89%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E5%88%97%E6%9C%80%E5%B0%8F%E7%9A%84%E7%AD%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1062. 最长重复子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1062.%20%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1062.%20%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1063. 有效子数组的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1063.%20%E6%9C%89%E6%95%88%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1063.%20%E6%9C%89%E6%95%88%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1064. 不动点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1064.%20%E4%B8%8D%E5%8A%A8%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1064.%20%E4%B8%8D%E5%8A%A8%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1065. 字符串的索引对【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1065.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%B4%A2%E5%BC%95%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1065.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E7%B4%A2%E5%BC%95%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1066. 校园自行车分配 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1066.%20%E6%A0%A1%E5%9B%AD%E8%87%AA%E8%A1%8C%E8%BD%A6%E5%88%86%E9%85%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1066.%20%E6%A0%A1%E5%9B%AD%E8%87%AA%E8%A1%8C%E8%BD%A6%E5%88%86%E9%85%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1067. 范围内的数字计数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1067.%20%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%95%B0%E5%AD%97%E8%AE%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1067.%20%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%95%B0%E5%AD%97%E8%AE%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1068. 产品销售分析 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1068.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1068.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1069. 产品销售分析 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1069.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1069.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1070. 产品销售分析 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1070.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1070.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1071. 字符串的最大公因子【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1071.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1071.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1072. 按列翻转得到最大值等行数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1072.%20%E6%8C%89%E5%88%97%E7%BF%BB%E8%BD%AC%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%80%BC%E7%AD%89%E8%A1%8C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1072.%20%E6%8C%89%E5%88%97%E7%BF%BB%E8%BD%AC%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%80%BC%E7%AD%89%E8%A1%8C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1073. 负二进制数相加【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1073.%20%E8%B4%9F%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1073.%20%E8%B4%9F%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1074. 元素和为目标值的子矩阵数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1074.%20%E5%85%83%E7%B4%A0%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E5%AD%90%E7%9F%A9%E9%98%B5%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1074.%20%E5%85%83%E7%B4%A0%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E5%AD%90%E7%9F%A9%E9%98%B5%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1075. 项目员工 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1075.%20%E9%A1%B9%E7%9B%AE%E5%91%98%E5%B7%A5%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1075.%20%E9%A1%B9%E7%9B%AE%E5%91%98%E5%B7%A5%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1076. 项目员工II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1076.%20%E9%A1%B9%E7%9B%AE%E5%91%98%E5%B7%A5II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1076.%20%E9%A1%B9%E7%9B%AE%E5%91%98%E5%B7%A5II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1077. 项目员工 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1077.%20%E9%A1%B9%E7%9B%AE%E5%91%98%E5%B7%A5%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1077.%20%E9%A1%B9%E7%9B%AE%E5%91%98%E5%B7%A5%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1078. Bigram 分词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1078.%20Bigram%20%E5%88%86%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1078.%20Bigram%20%E5%88%86%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1079. 活字印刷【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1079.%20%E6%B4%BB%E5%AD%97%E5%8D%B0%E5%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1079.%20%E6%B4%BB%E5%AD%97%E5%8D%B0%E5%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1080. 根到叶路径上的不足节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1080.%20%E6%A0%B9%E5%88%B0%E5%8F%B6%E8%B7%AF%E5%BE%84%E4%B8%8A%E7%9A%84%E4%B8%8D%E8%B6%B3%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1080.%20%E6%A0%B9%E5%88%B0%E5%8F%B6%E8%B7%AF%E5%BE%84%E4%B8%8A%E7%9A%84%E4%B8%8D%E8%B6%B3%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1081. 不同字符的最小子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1081.%20%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1081.%20%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1082. 销售分析 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1082.%20%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1082.%20%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1083. 销售分析 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1083.%20%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1083.%20%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1084. 销售分析 III【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1084.%20%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20III%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1084.%20%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20III%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1085. 最小元素各数位之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1085.%20%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0%E5%90%84%E6%95%B0%E4%BD%8D%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1085.%20%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0%E5%90%84%E6%95%B0%E4%BD%8D%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1086. 前五科的均分【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1086.%20%E5%89%8D%E4%BA%94%E7%A7%91%E7%9A%84%E5%9D%87%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1086.%20%E5%89%8D%E4%BA%94%E7%A7%91%E7%9A%84%E5%9D%87%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1087. 花括号展开【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1087.%20%E8%8A%B1%E6%8B%AC%E5%8F%B7%E5%B1%95%E5%BC%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1087.%20%E8%8A%B1%E6%8B%AC%E5%8F%B7%E5%B1%95%E5%BC%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1088. 易混淆数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1088.%20%E6%98%93%E6%B7%B7%E6%B7%86%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1088.%20%E6%98%93%E6%B7%B7%E6%B7%86%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1089. 复写零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1089.%20%E5%A4%8D%E5%86%99%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1089.%20%E5%A4%8D%E5%86%99%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1090. 受标签影响的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1090.%20%E5%8F%97%E6%A0%87%E7%AD%BE%E5%BD%B1%E5%93%8D%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1090.%20%E5%8F%97%E6%A0%87%E7%AD%BE%E5%BD%B1%E5%93%8D%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1091. 二进制矩阵中的最短路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1091.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1091.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1092. 最短公共超序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1092.%20%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E8%B6%85%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1092.%20%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E8%B6%85%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1093. 大样本统计【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1093.%20%E5%A4%A7%E6%A0%B7%E6%9C%AC%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1093.%20%E5%A4%A7%E6%A0%B7%E6%9C%AC%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1094. 拼车【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1094.%20%E6%8B%BC%E8%BD%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1094.%20%E6%8B%BC%E8%BD%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1095. 山脉数组中查找目标值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1095.%20%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E7%9B%AE%E6%A0%87%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1095.%20%E5%B1%B1%E8%84%89%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E7%9B%AE%E6%A0%87%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1096. 花括号展开 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1096.%20%E8%8A%B1%E6%8B%AC%E5%8F%B7%E5%B1%95%E5%BC%80%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1096.%20%E8%8A%B1%E6%8B%AC%E5%8F%B7%E5%B1%95%E5%BC%80%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1097. 游戏玩法分析 V【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1097.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20V%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1097.%20%E6%B8%B8%E6%88%8F%E7%8E%A9%E6%B3%95%E5%88%86%E6%9E%90%20V%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1098. 小众书籍【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1098.%20%E5%B0%8F%E4%BC%97%E4%B9%A6%E7%B1%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1098.%20%E5%B0%8F%E4%BC%97%E4%B9%A6%E7%B1%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1099. 小于 K 的两数之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1099.%20%E5%B0%8F%E4%BA%8E%20K%20%E7%9A%84%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1099.%20%E5%B0%8F%E4%BA%8E%20K%20%E7%9A%84%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1100. 长度为 K 的无重复字符子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1100.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1100.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 13. 1101~1200\\n\\n- [ ] [1101. 彼此熟识的最早时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1101.%20%E5%BD%BC%E6%AD%A4%E7%86%9F%E8%AF%86%E7%9A%84%E6%9C%80%E6%97%A9%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1101.%20%E5%BD%BC%E6%AD%A4%E7%86%9F%E8%AF%86%E7%9A%84%E6%9C%80%E6%97%A9%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1102. 得分最高的路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1102.%20%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1102.%20%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1103. 分糖果 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1103.%20%E5%88%86%E7%B3%96%E6%9E%9C%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1103.%20%E5%88%86%E7%B3%96%E6%9E%9C%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1104. 二叉树寻路【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1104.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AF%BB%E8%B7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1104.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E5%AF%BB%E8%B7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1105. 填充书架【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1105.%20%E5%A1%AB%E5%85%85%E4%B9%A6%E6%9E%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1105.%20%E5%A1%AB%E5%85%85%E4%B9%A6%E6%9E%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1106. 解析布尔表达式【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1106.%20%E8%A7%A3%E6%9E%90%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1106.%20%E8%A7%A3%E6%9E%90%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1107. 每日新用户统计【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1107.%20%E6%AF%8F%E6%97%A5%E6%96%B0%E7%94%A8%E6%88%B7%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1107.%20%E6%AF%8F%E6%97%A5%E6%96%B0%E7%94%A8%E6%88%B7%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1108. IP 地址无效化【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1108.%20IP%20%E5%9C%B0%E5%9D%80%E6%97%A0%E6%95%88%E5%8C%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1108.%20IP%20%E5%9C%B0%E5%9D%80%E6%97%A0%E6%95%88%E5%8C%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1109. 航班预订统计【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1109.%20%E8%88%AA%E7%8F%AD%E9%A2%84%E8%AE%A2%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1109.%20%E8%88%AA%E7%8F%AD%E9%A2%84%E8%AE%A2%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1110. 删点成林【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1110.%20%E5%88%A0%E7%82%B9%E6%88%90%E6%9E%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1110.%20%E5%88%A0%E7%82%B9%E6%88%90%E6%9E%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1111. 有效括号的嵌套深度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1111.%20%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%B5%8C%E5%A5%97%E6%B7%B1%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1111.%20%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7%E7%9A%84%E5%B5%8C%E5%A5%97%E6%B7%B1%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1112. 每位学生的最高成绩【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1112.%20%E6%AF%8F%E4%BD%8D%E5%AD%A6%E7%94%9F%E7%9A%84%E6%9C%80%E9%AB%98%E6%88%90%E7%BB%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1112.%20%E6%AF%8F%E4%BD%8D%E5%AD%A6%E7%94%9F%E7%9A%84%E6%9C%80%E9%AB%98%E6%88%90%E7%BB%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1113. 报告的记录【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1113.%20%E6%8A%A5%E5%91%8A%E7%9A%84%E8%AE%B0%E5%BD%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1113.%20%E6%8A%A5%E5%91%8A%E7%9A%84%E8%AE%B0%E5%BD%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1114. 按序打印【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1114.%20%E6%8C%89%E5%BA%8F%E6%89%93%E5%8D%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1114.%20%E6%8C%89%E5%BA%8F%E6%89%93%E5%8D%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1115. 交替打印 FooBar【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1115.%20%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%20FooBar%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1115.%20%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%20FooBar%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1116. 打印零与奇偶数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1116.%20%E6%89%93%E5%8D%B0%E9%9B%B6%E4%B8%8E%E5%A5%87%E5%81%B6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1116.%20%E6%89%93%E5%8D%B0%E9%9B%B6%E4%B8%8E%E5%A5%87%E5%81%B6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1117. H2O 生成【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1117.%20H2O%20%E7%94%9F%E6%88%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1117.%20H2O%20%E7%94%9F%E6%88%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1118. 一月有多少天【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1118.%20%E4%B8%80%E6%9C%88%E6%9C%89%E5%A4%9A%E5%B0%91%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1118.%20%E4%B8%80%E6%9C%88%E6%9C%89%E5%A4%9A%E5%B0%91%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1119. 删去字符串中的元音【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1119.%20%E5%88%A0%E5%8E%BB%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1119.%20%E5%88%A0%E5%8E%BB%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1120. 子树的最大平均值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1120.%20%E5%AD%90%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1120.%20%E5%AD%90%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1121. 将数组分成几个递增序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1121.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E5%87%A0%E4%B8%AA%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1121.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E5%87%A0%E4%B8%AA%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1122. 数组的相对排序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1122.%20%E6%95%B0%E7%BB%84%E7%9A%84%E7%9B%B8%E5%AF%B9%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1122.%20%E6%95%B0%E7%BB%84%E7%9A%84%E7%9B%B8%E5%AF%B9%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1123. 最深叶节点的最近公共祖先【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1123.%20%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1123.%20%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1124. 表现良好的最长时间段【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1124.%20%E8%A1%A8%E7%8E%B0%E8%89%AF%E5%A5%BD%E7%9A%84%E6%9C%80%E9%95%BF%E6%97%B6%E9%97%B4%E6%AE%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1124.%20%E8%A1%A8%E7%8E%B0%E8%89%AF%E5%A5%BD%E7%9A%84%E6%9C%80%E9%95%BF%E6%97%B6%E9%97%B4%E6%AE%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1125. 最小的必要团队【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1125.%20%E6%9C%80%E5%B0%8F%E7%9A%84%E5%BF%85%E8%A6%81%E5%9B%A2%E9%98%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1125.%20%E6%9C%80%E5%B0%8F%E7%9A%84%E5%BF%85%E8%A6%81%E5%9B%A2%E9%98%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1126. 查询活跃业务【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1126.%20%E6%9F%A5%E8%AF%A2%E6%B4%BB%E8%B7%83%E4%B8%9A%E5%8A%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1126.%20%E6%9F%A5%E8%AF%A2%E6%B4%BB%E8%B7%83%E4%B8%9A%E5%8A%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1127. 用户购买平台【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1127.%20%E7%94%A8%E6%88%B7%E8%B4%AD%E4%B9%B0%E5%B9%B3%E5%8F%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1127.%20%E7%94%A8%E6%88%B7%E8%B4%AD%E4%B9%B0%E5%B9%B3%E5%8F%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1128. 等价多米诺骨牌对的数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1128.%20%E7%AD%89%E4%BB%B7%E5%A4%9A%E7%B1%B3%E8%AF%BA%E9%AA%A8%E7%89%8C%E5%AF%B9%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1128.%20%E7%AD%89%E4%BB%B7%E5%A4%9A%E7%B1%B3%E8%AF%BA%E9%AA%A8%E7%89%8C%E5%AF%B9%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1129. 颜色交替的最短路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1129.%20%E9%A2%9C%E8%89%B2%E4%BA%A4%E6%9B%BF%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1129.%20%E9%A2%9C%E8%89%B2%E4%BA%A4%E6%9B%BF%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1130. 叶值的最小代价生成树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1130.%20%E5%8F%B6%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E7%94%9F%E6%88%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1130.%20%E5%8F%B6%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E7%94%9F%E6%88%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1131. 绝对值表达式的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1131.%20%E7%BB%9D%E5%AF%B9%E5%80%BC%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1131.%20%E7%BB%9D%E5%AF%B9%E5%80%BC%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1132. 报告的记录 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1132.%20%E6%8A%A5%E5%91%8A%E7%9A%84%E8%AE%B0%E5%BD%95%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1132.%20%E6%8A%A5%E5%91%8A%E7%9A%84%E8%AE%B0%E5%BD%95%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1133. 最大唯一数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1133.%20%E6%9C%80%E5%A4%A7%E5%94%AF%E4%B8%80%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1133.%20%E6%9C%80%E5%A4%A7%E5%94%AF%E4%B8%80%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1134. 阿姆斯特朗数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1134.%20%E9%98%BF%E5%A7%86%E6%96%AF%E7%89%B9%E6%9C%97%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1134.%20%E9%98%BF%E5%A7%86%E6%96%AF%E7%89%B9%E6%9C%97%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1135. 最低成本连通所有城市【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1135.%20%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E8%BF%9E%E9%80%9A%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1135.%20%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E8%BF%9E%E9%80%9A%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1136. 并行课程【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1136.%20%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1136.%20%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1137. 第 N 个泰波那契数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1137.%20%E7%AC%AC%20N%20%E4%B8%AA%E6%B3%B0%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1137.%20%E7%AC%AC%20N%20%E4%B8%AA%E6%B3%B0%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1138. 字母板上的路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1138.%20%E5%AD%97%E6%AF%8D%E6%9D%BF%E4%B8%8A%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1138.%20%E5%AD%97%E6%AF%8D%E6%9D%BF%E4%B8%8A%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1139. 最大的以 1 为边界的正方形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1139.%20%E6%9C%80%E5%A4%A7%E7%9A%84%E4%BB%A5%201%20%E4%B8%BA%E8%BE%B9%E7%95%8C%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1139.%20%E6%9C%80%E5%A4%A7%E7%9A%84%E4%BB%A5%201%20%E4%B8%BA%E8%BE%B9%E7%95%8C%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1140. 石子游戏 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1140.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1140.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1141. 查询近30天活跃用户数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1141.%20%E6%9F%A5%E8%AF%A2%E8%BF%9130%E5%A4%A9%E6%B4%BB%E8%B7%83%E7%94%A8%E6%88%B7%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1141.%20%E6%9F%A5%E8%AF%A2%E8%BF%9130%E5%A4%A9%E6%B4%BB%E8%B7%83%E7%94%A8%E6%88%B7%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1142. 过去30天的用户活动 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1142.%20%E8%BF%87%E5%8E%BB30%E5%A4%A9%E7%9A%84%E7%94%A8%E6%88%B7%E6%B4%BB%E5%8A%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1142.%20%E8%BF%87%E5%8E%BB30%E5%A4%A9%E7%9A%84%E7%94%A8%E6%88%B7%E6%B4%BB%E5%8A%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1143. 最长公共子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1143.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1143.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1144. 递减元素使数组呈锯齿状【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1144.%20%E9%80%92%E5%87%8F%E5%85%83%E7%B4%A0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%91%88%E9%94%AF%E9%BD%BF%E7%8A%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1144.%20%E9%80%92%E5%87%8F%E5%85%83%E7%B4%A0%E4%BD%BF%E6%95%B0%E7%BB%84%E5%91%88%E9%94%AF%E9%BD%BF%E7%8A%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1145. 二叉树着色游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9D%80%E8%89%B2%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1145.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9D%80%E8%89%B2%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1146. 快照数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1146.%20%E5%BF%AB%E7%85%A7%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1146.%20%E5%BF%AB%E7%85%A7%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1147. 段式回文【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1147.%20%E6%AE%B5%E5%BC%8F%E5%9B%9E%E6%96%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1147.%20%E6%AE%B5%E5%BC%8F%E5%9B%9E%E6%96%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1148. 文章浏览 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1148.%20%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1148.%20%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1149. 文章浏览 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1149.%20%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1149.%20%E6%96%87%E7%AB%A0%E6%B5%8F%E8%A7%88%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1150. 检查一个数是否在数组中占绝大多数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1150.%20%E6%A3%80%E6%9F%A5%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E5%90%A6%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8D%A0%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1150.%20%E6%A3%80%E6%9F%A5%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E5%90%A6%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8D%A0%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1151. 最少交换次数来组合所有的 1【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1151.%20%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E6%9D%A5%E7%BB%84%E5%90%88%E6%89%80%E6%9C%89%E7%9A%84%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1151.%20%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E6%9D%A5%E7%BB%84%E5%90%88%E6%89%80%E6%9C%89%E7%9A%84%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1152. 用户网站访问行为分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1152.%20%E7%94%A8%E6%88%B7%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1152.%20%E7%94%A8%E6%88%B7%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1153. 字符串转化【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1153.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1153.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1154. 一年中的第几天【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1154.%20%E4%B8%80%E5%B9%B4%E4%B8%AD%E7%9A%84%E7%AC%AC%E5%87%A0%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1154.%20%E4%B8%80%E5%B9%B4%E4%B8%AD%E7%9A%84%E7%AC%AC%E5%87%A0%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1155. 掷骰子等于目标和的方法数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1155.%20%E6%8E%B7%E9%AA%B0%E5%AD%90%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%92%8C%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1155.%20%E6%8E%B7%E9%AA%B0%E5%AD%90%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%92%8C%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1156. 单字符重复子串的最大长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1156.%20%E5%8D%95%E5%AD%97%E7%AC%A6%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1156.%20%E5%8D%95%E5%AD%97%E7%AC%A6%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1157. 子数组中占绝大多数的元素【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1157.%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8D%A0%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1157.%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8D%A0%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1158. 市场分析 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1158.%20%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1158.%20%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1159. 市场分析 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1159.%20%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1159.%20%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1160. 拼写单词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1160.%20%E6%8B%BC%E5%86%99%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/1160.%20%E6%8B%BC%E5%86%99%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/1160.%20%E6%8B%BC%E5%86%99%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [1161. 最大层内元素和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1161.%20%E6%9C%80%E5%A4%A7%E5%B1%82%E5%86%85%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1161.%20%E6%9C%80%E5%A4%A7%E5%B1%82%E5%86%85%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1162. 地图分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1162.%20%E5%9C%B0%E5%9B%BE%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1162.%20%E5%9C%B0%E5%9B%BE%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1163. 按字典序排在最后的子串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1163.%20%E6%8C%89%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E5%9C%A8%E6%9C%80%E5%90%8E%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1163.%20%E6%8C%89%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E5%9C%A8%E6%9C%80%E5%90%8E%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1164. 指定日期的产品价格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1164.%20%E6%8C%87%E5%AE%9A%E6%97%A5%E6%9C%9F%E7%9A%84%E4%BA%A7%E5%93%81%E4%BB%B7%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1164.%20%E6%8C%87%E5%AE%9A%E6%97%A5%E6%9C%9F%E7%9A%84%E4%BA%A7%E5%93%81%E4%BB%B7%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1165. 单行键盘【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1165.%20%E5%8D%95%E8%A1%8C%E9%94%AE%E7%9B%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1165.%20%E5%8D%95%E8%A1%8C%E9%94%AE%E7%9B%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1166. 设计文件系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1166.%20%E8%AE%BE%E8%AE%A1%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1166.%20%E8%AE%BE%E8%AE%A1%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1167. 连接木棍的最低费用【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1167.%20%E8%BF%9E%E6%8E%A5%E6%9C%A8%E6%A3%8D%E7%9A%84%E6%9C%80%E4%BD%8E%E8%B4%B9%E7%94%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1167.%20%E8%BF%9E%E6%8E%A5%E6%9C%A8%E6%A3%8D%E7%9A%84%E6%9C%80%E4%BD%8E%E8%B4%B9%E7%94%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1168. 水资源分配优化【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1168.%20%E6%B0%B4%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E4%BC%98%E5%8C%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1168.%20%E6%B0%B4%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E4%BC%98%E5%8C%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1169. 查询无效交易【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1169.%20%E6%9F%A5%E8%AF%A2%E6%97%A0%E6%95%88%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1169.%20%E6%9F%A5%E8%AF%A2%E6%97%A0%E6%95%88%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1170. 比较字符串最小字母出现频次【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1170.%20%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%B0%8F%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E9%A2%91%E6%AC%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1170.%20%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%B0%8F%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E9%A2%91%E6%AC%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1171. 从链表中删去总和值为零的连续节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1171.%20%E4%BB%8E%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%88%A0%E5%8E%BB%E6%80%BB%E5%92%8C%E5%80%BC%E4%B8%BA%E9%9B%B6%E7%9A%84%E8%BF%9E%E7%BB%AD%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1171.%20%E4%BB%8E%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%88%A0%E5%8E%BB%E6%80%BB%E5%92%8C%E5%80%BC%E4%B8%BA%E9%9B%B6%E7%9A%84%E8%BF%9E%E7%BB%AD%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1172. 餐盘栈【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1172.%20%E9%A4%90%E7%9B%98%E6%A0%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1172.%20%E9%A4%90%E7%9B%98%E6%A0%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1173. 即时食物配送 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1173.%20%E5%8D%B3%E6%97%B6%E9%A3%9F%E7%89%A9%E9%85%8D%E9%80%81%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1173.%20%E5%8D%B3%E6%97%B6%E9%A3%9F%E7%89%A9%E9%85%8D%E9%80%81%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1174. 即时食物配送 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1174.%20%E5%8D%B3%E6%97%B6%E9%A3%9F%E7%89%A9%E9%85%8D%E9%80%81%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1174.%20%E5%8D%B3%E6%97%B6%E9%A3%9F%E7%89%A9%E9%85%8D%E9%80%81%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1175. 质数排列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1175.%20%E8%B4%A8%E6%95%B0%E6%8E%92%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1175.%20%E8%B4%A8%E6%95%B0%E6%8E%92%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1176. 健身计划评估【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1176.%20%E5%81%A5%E8%BA%AB%E8%AE%A1%E5%88%92%E8%AF%84%E4%BC%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1176.%20%E5%81%A5%E8%BA%AB%E8%AE%A1%E5%88%92%E8%AF%84%E4%BC%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1177. 构建回文串检测【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1177.%20%E6%9E%84%E5%BB%BA%E5%9B%9E%E6%96%87%E4%B8%B2%E6%A3%80%E6%B5%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1177.%20%E6%9E%84%E5%BB%BA%E5%9B%9E%E6%96%87%E4%B8%B2%E6%A3%80%E6%B5%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1178. 猜字谜【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1178.%20%E7%8C%9C%E5%AD%97%E8%B0%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1178.%20%E7%8C%9C%E5%AD%97%E8%B0%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1179. 重新格式化部门表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1179.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%83%A8%E9%97%A8%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1179.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%83%A8%E9%97%A8%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1180. 统计只含单一字母的子串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1180.%20%E7%BB%9F%E8%AE%A1%E5%8F%AA%E5%90%AB%E5%8D%95%E4%B8%80%E5%AD%97%E6%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1180.%20%E7%BB%9F%E8%AE%A1%E5%8F%AA%E5%90%AB%E5%8D%95%E4%B8%80%E5%AD%97%E6%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1181. 前后拼接【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1181.%20%E5%89%8D%E5%90%8E%E6%8B%BC%E6%8E%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1181.%20%E5%89%8D%E5%90%8E%E6%8B%BC%E6%8E%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1182. 与目标颜色间的最短距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1182.%20%E4%B8%8E%E7%9B%AE%E6%A0%87%E9%A2%9C%E8%89%B2%E9%97%B4%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1182.%20%E4%B8%8E%E7%9B%AE%E6%A0%87%E9%A2%9C%E8%89%B2%E9%97%B4%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1183. 矩阵中 1 的最大数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1183.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%201%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1183.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%201%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1184. 公交站间的距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1184.%20%E5%85%AC%E4%BA%A4%E7%AB%99%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1184.%20%E5%85%AC%E4%BA%A4%E7%AB%99%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1185. 一周中的第几天【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1185.%20%E4%B8%80%E5%91%A8%E4%B8%AD%E7%9A%84%E7%AC%AC%E5%87%A0%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1185.%20%E4%B8%80%E5%91%A8%E4%B8%AD%E7%9A%84%E7%AC%AC%E5%87%A0%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1186. 删除一次得到子数组最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1186.%20%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%BE%97%E5%88%B0%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1186.%20%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%BE%97%E5%88%B0%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1187. 使数组严格递增【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1187.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1187.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1188. 设计有限阻塞队列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1188.%20%E8%AE%BE%E8%AE%A1%E6%9C%89%E9%99%90%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1188.%20%E8%AE%BE%E8%AE%A1%E6%9C%89%E9%99%90%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1189. “气球” 的最大数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1189.%20%E2%80%9C%E6%B0%94%E7%90%83%E2%80%9D%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1189.%20%E2%80%9C%E6%B0%94%E7%90%83%E2%80%9D%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1190. 反转每对括号间的子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1190.%20%E5%8F%8D%E8%BD%AC%E6%AF%8F%E5%AF%B9%E6%8B%AC%E5%8F%B7%E9%97%B4%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1190.%20%E5%8F%8D%E8%BD%AC%E6%AF%8F%E5%AF%B9%E6%8B%AC%E5%8F%B7%E9%97%B4%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1191. K 次串联后最大子数组之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1191.%20K%20%E6%AC%A1%E4%B8%B2%E8%81%94%E5%90%8E%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1191.%20K%20%E6%AC%A1%E4%B8%B2%E8%81%94%E5%90%8E%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1192. 查找集群内的关键连接【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1192.%20%E6%9F%A5%E6%89%BE%E9%9B%86%E7%BE%A4%E5%86%85%E7%9A%84%E5%85%B3%E9%94%AE%E8%BF%9E%E6%8E%A5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1192.%20%E6%9F%A5%E6%89%BE%E9%9B%86%E7%BE%A4%E5%86%85%E7%9A%84%E5%85%B3%E9%94%AE%E8%BF%9E%E6%8E%A5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1193. 每月交易 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1193.%20%E6%AF%8F%E6%9C%88%E4%BA%A4%E6%98%93%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1193.%20%E6%AF%8F%E6%9C%88%E4%BA%A4%E6%98%93%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1194. 锦标赛优胜者【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1194.%20%E9%94%A6%E6%A0%87%E8%B5%9B%E4%BC%98%E8%83%9C%E8%80%85%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1194.%20%E9%94%A6%E6%A0%87%E8%B5%9B%E4%BC%98%E8%83%9C%E8%80%85%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1195. 交替打印字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1195.%20%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1195.%20%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1196. 最多可以买到的苹果数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1196.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E4%B9%B0%E5%88%B0%E7%9A%84%E8%8B%B9%E6%9E%9C%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1196.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E4%B9%B0%E5%88%B0%E7%9A%84%E8%8B%B9%E6%9E%9C%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1197. 进击的骑士【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1197.%20%E8%BF%9B%E5%87%BB%E7%9A%84%E9%AA%91%E5%A3%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1197.%20%E8%BF%9B%E5%87%BB%E7%9A%84%E9%AA%91%E5%A3%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1198. 找出所有行中最小公共元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1198.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E8%A1%8C%E4%B8%AD%E6%9C%80%E5%B0%8F%E5%85%AC%E5%85%B1%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1198.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E8%A1%8C%E4%B8%AD%E6%9C%80%E5%B0%8F%E5%85%AC%E5%85%B1%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1199. 建造街区的最短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1199.%20%E5%BB%BA%E9%80%A0%E8%A1%97%E5%8C%BA%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1199.%20%E5%BB%BA%E9%80%A0%E8%A1%97%E5%8C%BA%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1200. 最小绝对差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1200.%20%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1200.%20%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 14. 1201~1300\\n\\n- [ ] [1201. 丑数 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1201.%20%E4%B8%91%E6%95%B0%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1201.%20%E4%B8%91%E6%95%B0%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1202. 交换字符串中的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1202.%20%E4%BA%A4%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1202.%20%E4%BA%A4%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1203. 项目管理【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1203.%20%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1203.%20%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1204. 最后一个能进入巴士的人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1204.%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%83%BD%E8%BF%9B%E5%85%A5%E5%B7%B4%E5%A3%AB%E7%9A%84%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1204.%20%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%83%BD%E8%BF%9B%E5%85%A5%E5%B7%B4%E5%A3%AB%E7%9A%84%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1205. 每月交易 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1205.%20%E6%AF%8F%E6%9C%88%E4%BA%A4%E6%98%93%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1205.%20%E6%AF%8F%E6%9C%88%E4%BA%A4%E6%98%93%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1206. 设计跳表【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1206.%20%E8%AE%BE%E8%AE%A1%E8%B7%B3%E8%A1%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1206.%20%E8%AE%BE%E8%AE%A1%E8%B7%B3%E8%A1%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1207. 独一无二的出现次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1207.%20%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1207.%20%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1208. 尽可能使字符串相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1208.%20%E5%B0%BD%E5%8F%AF%E8%83%BD%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1208.%20%E5%B0%BD%E5%8F%AF%E8%83%BD%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1209. 删除字符串中的所有相邻重复项 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1209.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E7%9B%B8%E9%82%BB%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1209.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E7%9B%B8%E9%82%BB%E9%87%8D%E5%A4%8D%E9%A1%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1210. 穿过迷宫的最少移动次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1210.%20%E7%A9%BF%E8%BF%87%E8%BF%B7%E5%AE%AB%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1210.%20%E7%A9%BF%E8%BF%87%E8%BF%B7%E5%AE%AB%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1211. 查询结果的质量和占比【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1211.%20%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E7%9A%84%E8%B4%A8%E9%87%8F%E5%92%8C%E5%8D%A0%E6%AF%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1211.%20%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E7%9A%84%E8%B4%A8%E9%87%8F%E5%92%8C%E5%8D%A0%E6%AF%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1212. 查询球队积分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1212.%20%E6%9F%A5%E8%AF%A2%E7%90%83%E9%98%9F%E7%A7%AF%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1212.%20%E6%9F%A5%E8%AF%A2%E7%90%83%E9%98%9F%E7%A7%AF%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1213. 三个有序数组的交集【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1213.%20%E4%B8%89%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1213.%20%E4%B8%89%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1214. 查找两棵二叉搜索树之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1214.%20%E6%9F%A5%E6%89%BE%E4%B8%A4%E6%A3%B5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1214.%20%E6%9F%A5%E6%89%BE%E4%B8%A4%E6%A3%B5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1215. 步进数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1215.%20%E6%AD%A5%E8%BF%9B%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1215.%20%E6%AD%A5%E8%BF%9B%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1216. 验证回文串 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1216.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1216.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1217. 玩筹码【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1217.%20%E7%8E%A9%E7%AD%B9%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1217.%20%E7%8E%A9%E7%AD%B9%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1218. 最长定差子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1218.%20%E6%9C%80%E9%95%BF%E5%AE%9A%E5%B7%AE%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1218.%20%E6%9C%80%E9%95%BF%E5%AE%9A%E5%B7%AE%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1219. 黄金矿工【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1219.%20%E9%BB%84%E9%87%91%E7%9F%BF%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1219.%20%E9%BB%84%E9%87%91%E7%9F%BF%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1220. 统计元音字母序列的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1220.%20%E7%BB%9F%E8%AE%A1%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1220.%20%E7%BB%9F%E8%AE%A1%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1221. 分割平衡字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1221.%20%E5%88%86%E5%89%B2%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1221.%20%E5%88%86%E5%89%B2%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1222. 可以攻击国王的皇后【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1222.%20%E5%8F%AF%E4%BB%A5%E6%94%BB%E5%87%BB%E5%9B%BD%E7%8E%8B%E7%9A%84%E7%9A%87%E5%90%8E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1222.%20%E5%8F%AF%E4%BB%A5%E6%94%BB%E5%87%BB%E5%9B%BD%E7%8E%8B%E7%9A%84%E7%9A%87%E5%90%8E%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1223. 掷骰子模拟【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1223.%20%E6%8E%B7%E9%AA%B0%E5%AD%90%E6%A8%A1%E6%8B%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1223.%20%E6%8E%B7%E9%AA%B0%E5%AD%90%E6%A8%A1%E6%8B%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1224. 最大相等频率【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1224.%20%E6%9C%80%E5%A4%A7%E7%9B%B8%E7%AD%89%E9%A2%91%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1224.%20%E6%9C%80%E5%A4%A7%E7%9B%B8%E7%AD%89%E9%A2%91%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1225. 报告系统状态的连续日期【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1225.%20%E6%8A%A5%E5%91%8A%E7%B3%BB%E7%BB%9F%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%97%A5%E6%9C%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1225.%20%E6%8A%A5%E5%91%8A%E7%B3%BB%E7%BB%9F%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%97%A5%E6%9C%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1226. 哲学家进餐【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1226.%20%E5%93%B2%E5%AD%A6%E5%AE%B6%E8%BF%9B%E9%A4%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1226.%20%E5%93%B2%E5%AD%A6%E5%AE%B6%E8%BF%9B%E9%A4%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1227. 飞机座位分配概率【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1227.%20%E9%A3%9E%E6%9C%BA%E5%BA%A7%E4%BD%8D%E5%88%86%E9%85%8D%E6%A6%82%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1227.%20%E9%A3%9E%E6%9C%BA%E5%BA%A7%E4%BD%8D%E5%88%86%E9%85%8D%E6%A6%82%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1228. 等差数列中缺失的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1228.%20%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E4%B8%AD%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1228.%20%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E4%B8%AD%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1229. 安排会议日程【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1229.%20%E5%AE%89%E6%8E%92%E4%BC%9A%E8%AE%AE%E6%97%A5%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1229.%20%E5%AE%89%E6%8E%92%E4%BC%9A%E8%AE%AE%E6%97%A5%E7%A8%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1230. 抛掷硬币【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1230.%20%E6%8A%9B%E6%8E%B7%E7%A1%AC%E5%B8%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1230.%20%E6%8A%9B%E6%8E%B7%E7%A1%AC%E5%B8%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1231. 分享巧克力【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1231.%20%E5%88%86%E4%BA%AB%E5%B7%A7%E5%85%8B%E5%8A%9B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1231.%20%E5%88%86%E4%BA%AB%E5%B7%A7%E5%85%8B%E5%8A%9B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1232. 缀点成线【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1232.%20%E7%BC%80%E7%82%B9%E6%88%90%E7%BA%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1232.%20%E7%BC%80%E7%82%B9%E6%88%90%E7%BA%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1233. 删除子文件夹【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1233.%20%E5%88%A0%E9%99%A4%E5%AD%90%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1233.%20%E5%88%A0%E9%99%A4%E5%AD%90%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1234. 替换子串得到平衡字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1234.%20%E6%9B%BF%E6%8D%A2%E5%AD%90%E4%B8%B2%E5%BE%97%E5%88%B0%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1234.%20%E6%9B%BF%E6%8D%A2%E5%AD%90%E4%B8%B2%E5%BE%97%E5%88%B0%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1235. 规划兼职工作【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1235.%20%E8%A7%84%E5%88%92%E5%85%BC%E8%81%8C%E5%B7%A5%E4%BD%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1235.%20%E8%A7%84%E5%88%92%E5%85%BC%E8%81%8C%E5%B7%A5%E4%BD%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1236. 网络爬虫【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1236.%20%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1236.%20%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1237. 找出给定方程的正整数解【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1237.%20%E6%89%BE%E5%87%BA%E7%BB%99%E5%AE%9A%E6%96%B9%E7%A8%8B%E7%9A%84%E6%AD%A3%E6%95%B4%E6%95%B0%E8%A7%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1237.%20%E6%89%BE%E5%87%BA%E7%BB%99%E5%AE%9A%E6%96%B9%E7%A8%8B%E7%9A%84%E6%AD%A3%E6%95%B4%E6%95%B0%E8%A7%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1238. 循环码排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1238.%20%E5%BE%AA%E7%8E%AF%E7%A0%81%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1238.%20%E5%BE%AA%E7%8E%AF%E7%A0%81%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1239. 串联字符串的最大长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1239.%20%E4%B8%B2%E8%81%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1239.%20%E4%B8%B2%E8%81%94%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1240. 铺瓷砖【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1240.%20%E9%93%BA%E7%93%B7%E7%A0%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1240.%20%E9%93%BA%E7%93%B7%E7%A0%96%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1241. 每个帖子的评论数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1241.%20%E6%AF%8F%E4%B8%AA%E5%B8%96%E5%AD%90%E7%9A%84%E8%AF%84%E8%AE%BA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1241.%20%E6%AF%8F%E4%B8%AA%E5%B8%96%E5%AD%90%E7%9A%84%E8%AF%84%E8%AE%BA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1242. 多线程网页爬虫【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1242.%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BD%91%E9%A1%B5%E7%88%AC%E8%99%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1242.%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BD%91%E9%A1%B5%E7%88%AC%E8%99%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1243. 数组变换【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1243.%20%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1243.%20%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1244. 力扣排行榜【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1244.%20%E5%8A%9B%E6%89%A3%E6%8E%92%E8%A1%8C%E6%A6%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1244.%20%E5%8A%9B%E6%89%A3%E6%8E%92%E8%A1%8C%E6%A6%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1245. 树的直径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1245.%20%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1245.%20%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1246. 删除回文子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1246.%20%E5%88%A0%E9%99%A4%E5%9B%9E%E6%96%87%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1246.%20%E5%88%A0%E9%99%A4%E5%9B%9E%E6%96%87%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1247. 交换字符使得字符串相同【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1247.%20%E4%BA%A4%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%BD%BF%E5%BE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%90%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1247.%20%E4%BA%A4%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%BD%BF%E5%BE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%90%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1248. 统计「优美子数组」【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1248.%20%E7%BB%9F%E8%AE%A1%E3%80%8C%E4%BC%98%E7%BE%8E%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1248.%20%E7%BB%9F%E8%AE%A1%E3%80%8C%E4%BC%98%E7%BE%8E%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1249. 移除无效的括号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1249.%20%E7%A7%BB%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1249.%20%E7%A7%BB%E9%99%A4%E6%97%A0%E6%95%88%E7%9A%84%E6%8B%AC%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1250. 检查「好数组」【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1250.%20%E6%A3%80%E6%9F%A5%E3%80%8C%E5%A5%BD%E6%95%B0%E7%BB%84%E3%80%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1250.%20%E6%A3%80%E6%9F%A5%E3%80%8C%E5%A5%BD%E6%95%B0%E7%BB%84%E3%80%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1251. 平均售价【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1251.%20%E5%B9%B3%E5%9D%87%E5%94%AE%E4%BB%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1251.%20%E5%B9%B3%E5%9D%87%E5%94%AE%E4%BB%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1252. 奇数值单元格的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1252.%20%E5%A5%87%E6%95%B0%E5%80%BC%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1252.%20%E5%A5%87%E6%95%B0%E5%80%BC%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1253. 重构 2 行二进制矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1253.%20%E9%87%8D%E6%9E%84%202%20%E8%A1%8C%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1253.%20%E9%87%8D%E6%9E%84%202%20%E8%A1%8C%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1254. 统计封闭岛屿的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1254.%20%E7%BB%9F%E8%AE%A1%E5%B0%81%E9%97%AD%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1254.%20%E7%BB%9F%E8%AE%A1%E5%B0%81%E9%97%AD%E5%B2%9B%E5%B1%BF%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1255. 得分最高的单词集合【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1255.%20%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E5%8D%95%E8%AF%8D%E9%9B%86%E5%90%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1255.%20%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E5%8D%95%E8%AF%8D%E9%9B%86%E5%90%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1256. 加密数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1256.%20%E5%8A%A0%E5%AF%86%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1256.%20%E5%8A%A0%E5%AF%86%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1257. 最小公共区域【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1257.%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%85%B1%E5%8C%BA%E5%9F%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1257.%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%85%B1%E5%8C%BA%E5%9F%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1258. 近义词句子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1258.%20%E8%BF%91%E4%B9%89%E8%AF%8D%E5%8F%A5%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1258.%20%E8%BF%91%E4%B9%89%E8%AF%8D%E5%8F%A5%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1259. 不相交的握手【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1259.%20%E4%B8%8D%E7%9B%B8%E4%BA%A4%E7%9A%84%E6%8F%A1%E6%89%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1259.%20%E4%B8%8D%E7%9B%B8%E4%BA%A4%E7%9A%84%E6%8F%A1%E6%89%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1260. 二维网格迁移【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1260.%20%E4%BA%8C%E7%BB%B4%E7%BD%91%E6%A0%BC%E8%BF%81%E7%A7%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1260.%20%E4%BA%8C%E7%BB%B4%E7%BD%91%E6%A0%BC%E8%BF%81%E7%A7%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1261. 在受污染的二叉树中查找元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1261.%20%E5%9C%A8%E5%8F%97%E6%B1%A1%E6%9F%93%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1261.%20%E5%9C%A8%E5%8F%97%E6%B1%A1%E6%9F%93%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1262. 可被三整除的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1262.%20%E5%8F%AF%E8%A2%AB%E4%B8%89%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1262.%20%E5%8F%AF%E8%A2%AB%E4%B8%89%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1263. 推箱子【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1263.%20%E6%8E%A8%E7%AE%B1%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1263.%20%E6%8E%A8%E7%AE%B1%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1264. 页面推荐【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1264.%20%E9%A1%B5%E9%9D%A2%E6%8E%A8%E8%8D%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1264.%20%E9%A1%B5%E9%9D%A2%E6%8E%A8%E8%8D%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1265. 逆序打印不可变链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1265.%20%E9%80%86%E5%BA%8F%E6%89%93%E5%8D%B0%E4%B8%8D%E5%8F%AF%E5%8F%98%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1265.%20%E9%80%86%E5%BA%8F%E6%89%93%E5%8D%B0%E4%B8%8D%E5%8F%AF%E5%8F%98%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1266. 访问所有点的最小时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1266.%20%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1266.%20%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1267. 统计参与通信的服务器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1267.%20%E7%BB%9F%E8%AE%A1%E5%8F%82%E4%B8%8E%E9%80%9A%E4%BF%A1%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1267.%20%E7%BB%9F%E8%AE%A1%E5%8F%82%E4%B8%8E%E9%80%9A%E4%BF%A1%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1268. 搜索推荐系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1268.%20%E6%90%9C%E7%B4%A2%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1268.%20%E6%90%9C%E7%B4%A2%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1269. 停在原地的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1269.%20%E5%81%9C%E5%9C%A8%E5%8E%9F%E5%9C%B0%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1269.%20%E5%81%9C%E5%9C%A8%E5%8E%9F%E5%9C%B0%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1270. 向公司 CEO 汇报工作的所有人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1270.%20%E5%90%91%E5%85%AC%E5%8F%B8%20CEO%20%E6%B1%87%E6%8A%A5%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%89%80%E6%9C%89%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1270.%20%E5%90%91%E5%85%AC%E5%8F%B8%20CEO%20%E6%B1%87%E6%8A%A5%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%89%80%E6%9C%89%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1271. 十六进制魔术数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1271.%20%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E9%AD%94%E6%9C%AF%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1271.%20%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E9%AD%94%E6%9C%AF%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1272. 删除区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1272.%20%E5%88%A0%E9%99%A4%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1272.%20%E5%88%A0%E9%99%A4%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1273. 删除树节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1273.%20%E5%88%A0%E9%99%A4%E6%A0%91%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1273.%20%E5%88%A0%E9%99%A4%E6%A0%91%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1274. 矩形内船只的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1274.%20%E7%9F%A9%E5%BD%A2%E5%86%85%E8%88%B9%E5%8F%AA%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1274.%20%E7%9F%A9%E5%BD%A2%E5%86%85%E8%88%B9%E5%8F%AA%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1275. 找出井字棋的获胜者【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1275.%20%E6%89%BE%E5%87%BA%E4%BA%95%E5%AD%97%E6%A3%8B%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1275.%20%E6%89%BE%E5%87%BA%E4%BA%95%E5%AD%97%E6%A3%8B%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1276. 不浪费原料的汉堡制作方案【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1276.%20%E4%B8%8D%E6%B5%AA%E8%B4%B9%E5%8E%9F%E6%96%99%E7%9A%84%E6%B1%89%E5%A0%A1%E5%88%B6%E4%BD%9C%E6%96%B9%E6%A1%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1276.%20%E4%B8%8D%E6%B5%AA%E8%B4%B9%E5%8E%9F%E6%96%99%E7%9A%84%E6%B1%89%E5%A0%A1%E5%88%B6%E4%BD%9C%E6%96%B9%E6%A1%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1277. 统计全为 1 的正方形子矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1277.%20%E7%BB%9F%E8%AE%A1%E5%85%A8%E4%B8%BA%201%20%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E5%AD%90%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1277.%20%E7%BB%9F%E8%AE%A1%E5%85%A8%E4%B8%BA%201%20%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E5%AD%90%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1278. 分割回文串 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1278.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1278.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1279. 红绿灯路口【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1279.%20%E7%BA%A2%E7%BB%BF%E7%81%AF%E8%B7%AF%E5%8F%A3%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1279.%20%E7%BA%A2%E7%BB%BF%E7%81%AF%E8%B7%AF%E5%8F%A3%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1280. 学生们参加各科测试的次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1280.%20%E5%AD%A6%E7%94%9F%E4%BB%AC%E5%8F%82%E5%8A%A0%E5%90%84%E7%A7%91%E6%B5%8B%E8%AF%95%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1280.%20%E5%AD%A6%E7%94%9F%E4%BB%AC%E5%8F%82%E5%8A%A0%E5%90%84%E7%A7%91%E6%B5%8B%E8%AF%95%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1281. 整数的各位积和之差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1281.%20%E6%95%B4%E6%95%B0%E7%9A%84%E5%90%84%E4%BD%8D%E7%A7%AF%E5%92%8C%E4%B9%8B%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1281.%20%E6%95%B4%E6%95%B0%E7%9A%84%E5%90%84%E4%BD%8D%E7%A7%AF%E5%92%8C%E4%B9%8B%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1282. 用户分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1282.%20%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1282.%20%E7%94%A8%E6%88%B7%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1283. 使结果不超过阈值的最小除数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1283.%20%E4%BD%BF%E7%BB%93%E6%9E%9C%E4%B8%8D%E8%B6%85%E8%BF%87%E9%98%88%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E9%99%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1283.%20%E4%BD%BF%E7%BB%93%E6%9E%9C%E4%B8%8D%E8%B6%85%E8%BF%87%E9%98%88%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E9%99%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1284. 转化为全零矩阵的最少反转次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1284.%20%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%85%A8%E9%9B%B6%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%8D%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1284.%20%E8%BD%AC%E5%8C%96%E4%B8%BA%E5%85%A8%E9%9B%B6%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%8D%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1285. 找到连续区间的开始和结束数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1285.%20%E6%89%BE%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%E7%9A%84%E5%BC%80%E5%A7%8B%E5%92%8C%E7%BB%93%E6%9D%9F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1285.%20%E6%89%BE%E5%88%B0%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4%E7%9A%84%E5%BC%80%E5%A7%8B%E5%92%8C%E7%BB%93%E6%9D%9F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1286. 字母组合迭代器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1286.%20%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1286.%20%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88%E8%BF%AD%E4%BB%A3%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1287. 有序数组中出现次数超过百分之25的元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1287.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E7%99%BE%E5%88%86%E4%B9%8B25%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1287.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E7%99%BE%E5%88%86%E4%B9%8B25%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1288. 删除被覆盖区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1288.%20%E5%88%A0%E9%99%A4%E8%A2%AB%E8%A6%86%E7%9B%96%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1288.%20%E5%88%A0%E9%99%A4%E8%A2%AB%E8%A6%86%E7%9B%96%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1289. 下降路径最小和 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1289.%20%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1289.%20%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1290. 二进制链表转整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1290.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1290.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1291. 顺次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1291.%20%E9%A1%BA%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1291.%20%E9%A1%BA%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1292. 元素和小于等于阈值的正方形的最大边长【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1292.%20%E5%85%83%E7%B4%A0%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%E9%98%88%E5%80%BC%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BE%B9%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1292.%20%E5%85%83%E7%B4%A0%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%E9%98%88%E5%80%BC%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BE%B9%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1293. 网格中的最短路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1293.%20%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1293.%20%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1294. 不同国家的天气类型【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1294.%20%E4%B8%8D%E5%90%8C%E5%9B%BD%E5%AE%B6%E7%9A%84%E5%A4%A9%E6%B0%94%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1294.%20%E4%B8%8D%E5%90%8C%E5%9B%BD%E5%AE%B6%E7%9A%84%E5%A4%A9%E6%B0%94%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1295. 统计位数为偶数的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1295.%20%E7%BB%9F%E8%AE%A1%E4%BD%8D%E6%95%B0%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1295.%20%E7%BB%9F%E8%AE%A1%E4%BD%8D%E6%95%B0%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1296. 划分数组为连续数字的集合【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1296.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E4%B8%BA%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%AD%97%E7%9A%84%E9%9B%86%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1296.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E4%B8%BA%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%AD%97%E7%9A%84%E9%9B%86%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1297. 子串的最大出现次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1297.%20%E5%AD%90%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1297.%20%E5%AD%90%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1298. 你能从盒子里获得的最大糖果数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1298.%20%E4%BD%A0%E8%83%BD%E4%BB%8E%E7%9B%92%E5%AD%90%E9%87%8C%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%B3%96%E6%9E%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1298.%20%E4%BD%A0%E8%83%BD%E4%BB%8E%E7%9B%92%E5%AD%90%E9%87%8C%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%B3%96%E6%9E%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1299. 将每个元素替换为右侧最大元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1299.%20%E5%B0%86%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E6%9B%BF%E6%8D%A2%E4%B8%BA%E5%8F%B3%E4%BE%A7%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1299.%20%E5%B0%86%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E6%9B%BF%E6%8D%A2%E4%B8%BA%E5%8F%B3%E4%BE%A7%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1300. 转变数组后最接近目标值的数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1300.%20%E8%BD%AC%E5%8F%98%E6%95%B0%E7%BB%84%E5%90%8E%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1300.%20%E8%BD%AC%E5%8F%98%E6%95%B0%E7%BB%84%E5%90%8E%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 15. 1301~1400\\n\\n- [ ] [1301. 最大得分的路径数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1301.%20%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1301.%20%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1302. 层数最深叶子节点的和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1302.%20%E5%B1%82%E6%95%B0%E6%9C%80%E6%B7%B1%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1302.%20%E5%B1%82%E6%95%B0%E6%9C%80%E6%B7%B1%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1303. 求团队人数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1303.%20%E6%B1%82%E5%9B%A2%E9%98%9F%E4%BA%BA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1303.%20%E6%B1%82%E5%9B%A2%E9%98%9F%E4%BA%BA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1304. 和为零的 N 个不同整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1304.%20%E5%92%8C%E4%B8%BA%E9%9B%B6%E7%9A%84%20N%20%E4%B8%AA%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1304.%20%E5%92%8C%E4%B8%BA%E9%9B%B6%E7%9A%84%20N%20%E4%B8%AA%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1305. 两棵二叉搜索树中的所有元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1305.%20%E4%B8%A4%E6%A3%B5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1305.%20%E4%B8%A4%E6%A3%B5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1306. 跳跃游戏 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1306.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1306.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1307. 口算难题【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1307.%20%E5%8F%A3%E7%AE%97%E9%9A%BE%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1307.%20%E5%8F%A3%E7%AE%97%E9%9A%BE%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1308. 不同性别每日分数总计【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1308.%20%E4%B8%8D%E5%90%8C%E6%80%A7%E5%88%AB%E6%AF%8F%E6%97%A5%E5%88%86%E6%95%B0%E6%80%BB%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1308.%20%E4%B8%8D%E5%90%8C%E6%80%A7%E5%88%AB%E6%AF%8F%E6%97%A5%E5%88%86%E6%95%B0%E6%80%BB%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1309. 解码字母到整数映射【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1309.%20%E8%A7%A3%E7%A0%81%E5%AD%97%E6%AF%8D%E5%88%B0%E6%95%B4%E6%95%B0%E6%98%A0%E5%B0%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1309.%20%E8%A7%A3%E7%A0%81%E5%AD%97%E6%AF%8D%E5%88%B0%E6%95%B4%E6%95%B0%E6%98%A0%E5%B0%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1310. 子数组异或查询【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1310.%20%E5%AD%90%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1310.%20%E5%AD%90%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1311. 获取你好友已观看的视频【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1311.%20%E8%8E%B7%E5%8F%96%E4%BD%A0%E5%A5%BD%E5%8F%8B%E5%B7%B2%E8%A7%82%E7%9C%8B%E7%9A%84%E8%A7%86%E9%A2%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1311.%20%E8%8E%B7%E5%8F%96%E4%BD%A0%E5%A5%BD%E5%8F%8B%E5%B7%B2%E8%A7%82%E7%9C%8B%E7%9A%84%E8%A7%86%E9%A2%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1312. 让字符串成为回文串的最少插入次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1312.%20%E8%AE%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%90%E4%B8%BA%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1312.%20%E8%AE%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%88%90%E4%B8%BA%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1313. 解压缩编码列表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1313.%20%E8%A7%A3%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81%E5%88%97%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1313.%20%E8%A7%A3%E5%8E%8B%E7%BC%A9%E7%BC%96%E7%A0%81%E5%88%97%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1314. 矩阵区域和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1314.%20%E7%9F%A9%E9%98%B5%E5%8C%BA%E5%9F%9F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1314.%20%E7%9F%A9%E9%98%B5%E5%8C%BA%E5%9F%9F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1315. 祖父节点值为偶数的节点和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1315.%20%E7%A5%96%E7%88%B6%E8%8A%82%E7%82%B9%E5%80%BC%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E8%8A%82%E7%82%B9%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1315.%20%E7%A5%96%E7%88%B6%E8%8A%82%E7%82%B9%E5%80%BC%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E8%8A%82%E7%82%B9%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1316. 不同的循环子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1316.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1316.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%BE%AA%E7%8E%AF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1317. 将整数转换为两个无零整数的和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1317.%20%E5%B0%86%E6%95%B4%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%A4%E4%B8%AA%E6%97%A0%E9%9B%B6%E6%95%B4%E6%95%B0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1317.%20%E5%B0%86%E6%95%B4%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%B8%A4%E4%B8%AA%E6%97%A0%E9%9B%B6%E6%95%B4%E6%95%B0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1318. 或运算的最小翻转次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1318.%20%E6%88%96%E8%BF%90%E7%AE%97%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1318.%20%E6%88%96%E8%BF%90%E7%AE%97%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1319. 连通网络的操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1319.%20%E8%BF%9E%E9%80%9A%E7%BD%91%E7%BB%9C%E7%9A%84%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1319.%20%E8%BF%9E%E9%80%9A%E7%BD%91%E7%BB%9C%E7%9A%84%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1320. 二指输入的的最小距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1320.%20%E4%BA%8C%E6%8C%87%E8%BE%93%E5%85%A5%E7%9A%84%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1320.%20%E4%BA%8C%E6%8C%87%E8%BE%93%E5%85%A5%E7%9A%84%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1321. 餐馆营业额变化增长【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1321.%20%E9%A4%90%E9%A6%86%E8%90%A5%E4%B8%9A%E9%A2%9D%E5%8F%98%E5%8C%96%E5%A2%9E%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1321.%20%E9%A4%90%E9%A6%86%E8%90%A5%E4%B8%9A%E9%A2%9D%E5%8F%98%E5%8C%96%E5%A2%9E%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1322. 广告效果【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1322.%20%E5%B9%BF%E5%91%8A%E6%95%88%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1322.%20%E5%B9%BF%E5%91%8A%E6%95%88%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1323. 6 和 9 组成的最大数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1323.%206%20%E5%92%8C%209%20%E7%BB%84%E6%88%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1323.%206%20%E5%92%8C%209%20%E7%BB%84%E6%88%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1324. 竖直打印单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1324.%20%E7%AB%96%E7%9B%B4%E6%89%93%E5%8D%B0%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1324.%20%E7%AB%96%E7%9B%B4%E6%89%93%E5%8D%B0%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1325. 删除给定值的叶子节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1325.%20%E5%88%A0%E9%99%A4%E7%BB%99%E5%AE%9A%E5%80%BC%E7%9A%84%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1325.%20%E5%88%A0%E9%99%A4%E7%BB%99%E5%AE%9A%E5%80%BC%E7%9A%84%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1326. 灌溉花园的最少水龙头数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1326.%20%E7%81%8C%E6%BA%89%E8%8A%B1%E5%9B%AD%E7%9A%84%E6%9C%80%E5%B0%91%E6%B0%B4%E9%BE%99%E5%A4%B4%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1326.%20%E7%81%8C%E6%BA%89%E8%8A%B1%E5%9B%AD%E7%9A%84%E6%9C%80%E5%B0%91%E6%B0%B4%E9%BE%99%E5%A4%B4%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1327. 列出指定时间段内所有的下单产品【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1327.%20%E5%88%97%E5%87%BA%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%AE%B5%E5%86%85%E6%89%80%E6%9C%89%E7%9A%84%E4%B8%8B%E5%8D%95%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1327.%20%E5%88%97%E5%87%BA%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%AE%B5%E5%86%85%E6%89%80%E6%9C%89%E7%9A%84%E4%B8%8B%E5%8D%95%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1328. 破坏回文串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1328.%20%E7%A0%B4%E5%9D%8F%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1328.%20%E7%A0%B4%E5%9D%8F%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1329. 将矩阵按对角线排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1329.%20%E5%B0%86%E7%9F%A9%E9%98%B5%E6%8C%89%E5%AF%B9%E8%A7%92%E7%BA%BF%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1329.%20%E5%B0%86%E7%9F%A9%E9%98%B5%E6%8C%89%E5%AF%B9%E8%A7%92%E7%BA%BF%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1330. 翻转子数组得到最大的数组值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1330.%20%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%E7%BB%84%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1330.%20%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%E7%BB%84%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1331. 数组序号转换【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1331.%20%E6%95%B0%E7%BB%84%E5%BA%8F%E5%8F%B7%E8%BD%AC%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1331.%20%E6%95%B0%E7%BB%84%E5%BA%8F%E5%8F%B7%E8%BD%AC%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1332. 删除回文子序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1332.%20%E5%88%A0%E9%99%A4%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1332.%20%E5%88%A0%E9%99%A4%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1333. 餐厅过滤器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1333.%20%E9%A4%90%E5%8E%85%E8%BF%87%E6%BB%A4%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1333.%20%E9%A4%90%E5%8E%85%E8%BF%87%E6%BB%A4%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1334. 阈值距离内邻居最少的城市【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1334.%20%E9%98%88%E5%80%BC%E8%B7%9D%E7%A6%BB%E5%86%85%E9%82%BB%E5%B1%85%E6%9C%80%E5%B0%91%E7%9A%84%E5%9F%8E%E5%B8%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1334.%20%E9%98%88%E5%80%BC%E8%B7%9D%E7%A6%BB%E5%86%85%E9%82%BB%E5%B1%85%E6%9C%80%E5%B0%91%E7%9A%84%E5%9F%8E%E5%B8%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1335. 工作计划的最低难度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1335.%20%E5%B7%A5%E4%BD%9C%E8%AE%A1%E5%88%92%E7%9A%84%E6%9C%80%E4%BD%8E%E9%9A%BE%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1335.%20%E5%B7%A5%E4%BD%9C%E8%AE%A1%E5%88%92%E7%9A%84%E6%9C%80%E4%BD%8E%E9%9A%BE%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1336. 每次访问的交易次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1336.%20%E6%AF%8F%E6%AC%A1%E8%AE%BF%E9%97%AE%E7%9A%84%E4%BA%A4%E6%98%93%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1336.%20%E6%AF%8F%E6%AC%A1%E8%AE%BF%E9%97%AE%E7%9A%84%E4%BA%A4%E6%98%93%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1337. 矩阵中战斗力最弱的 K 行【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1337.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%88%98%E6%96%97%E5%8A%9B%E6%9C%80%E5%BC%B1%E7%9A%84%20K%20%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1337.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%88%98%E6%96%97%E5%8A%9B%E6%9C%80%E5%BC%B1%E7%9A%84%20K%20%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1338. 数组大小减半【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1338.%20%E6%95%B0%E7%BB%84%E5%A4%A7%E5%B0%8F%E5%87%8F%E5%8D%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1338.%20%E6%95%B0%E7%BB%84%E5%A4%A7%E5%B0%8F%E5%87%8F%E5%8D%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1339. 分裂二叉树的最大乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1339.%20%E5%88%86%E8%A3%82%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1339.%20%E5%88%86%E8%A3%82%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1340. 跳跃游戏 V【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1340.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20V%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1340.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20V%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1341. 电影评分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1341.%20%E7%94%B5%E5%BD%B1%E8%AF%84%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1341.%20%E7%94%B5%E5%BD%B1%E8%AF%84%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1342. 将数字变成 0 的操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1342.%20%E5%B0%86%E6%95%B0%E5%AD%97%E5%8F%98%E6%88%90%200%20%E7%9A%84%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1342.%20%E5%B0%86%E6%95%B0%E5%AD%97%E5%8F%98%E6%88%90%200%20%E7%9A%84%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1343. 大小为 K 且平均值大于等于阈值的子数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1343.%20%E5%A4%A7%E5%B0%8F%E4%B8%BA%20K%20%E4%B8%94%E5%B9%B3%E5%9D%87%E5%80%BC%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E9%98%88%E5%80%BC%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1343.%20%E5%A4%A7%E5%B0%8F%E4%B8%BA%20K%20%E4%B8%94%E5%B9%B3%E5%9D%87%E5%80%BC%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E9%98%88%E5%80%BC%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1344. 时钟指针的夹角【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1344.%20%E6%97%B6%E9%92%9F%E6%8C%87%E9%92%88%E7%9A%84%E5%A4%B9%E8%A7%92%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1344.%20%E6%97%B6%E9%92%9F%E6%8C%87%E9%92%88%E7%9A%84%E5%A4%B9%E8%A7%92%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1345. 跳跃游戏 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1345.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1345.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1346. 检查整数及其两倍数是否存在【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1346.%20%E6%A3%80%E6%9F%A5%E6%95%B4%E6%95%B0%E5%8F%8A%E5%85%B6%E4%B8%A4%E5%80%8D%E6%95%B0%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1346.%20%E6%A3%80%E6%9F%A5%E6%95%B4%E6%95%B0%E5%8F%8A%E5%85%B6%E4%B8%A4%E5%80%8D%E6%95%B0%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1347. 制造字母异位词的最小步骤数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1347.%20%E5%88%B6%E9%80%A0%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AD%A5%E9%AA%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1347.%20%E5%88%B6%E9%80%A0%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AD%A5%E9%AA%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1348. 推文计数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1348.%20%E6%8E%A8%E6%96%87%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1348.%20%E6%8E%A8%E6%96%87%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1349. 参加考试的最大学生数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1349.%20%E5%8F%82%E5%8A%A0%E8%80%83%E8%AF%95%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1349.%20%E5%8F%82%E5%8A%A0%E8%80%83%E8%AF%95%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1350. 院系无效的学生【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1350.%20%E9%99%A2%E7%B3%BB%E6%97%A0%E6%95%88%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1350.%20%E9%99%A2%E7%B3%BB%E6%97%A0%E6%95%88%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1351. 统计有序矩阵中的负数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1351.%20%E7%BB%9F%E8%AE%A1%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B4%9F%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1351.%20%E7%BB%9F%E8%AE%A1%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B4%9F%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1352. 最后 K 个数的乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1352.%20%E6%9C%80%E5%90%8E%20K%20%E4%B8%AA%E6%95%B0%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1352.%20%E6%9C%80%E5%90%8E%20K%20%E4%B8%AA%E6%95%B0%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1353. 最多可以参加的会议数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1353.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E5%8F%82%E5%8A%A0%E7%9A%84%E4%BC%9A%E8%AE%AE%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1353.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E5%8F%82%E5%8A%A0%E7%9A%84%E4%BC%9A%E8%AE%AE%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1354. 多次求和构造目标数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1354.%20%E5%A4%9A%E6%AC%A1%E6%B1%82%E5%92%8C%E6%9E%84%E9%80%A0%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1354.%20%E5%A4%9A%E6%AC%A1%E6%B1%82%E5%92%8C%E6%9E%84%E9%80%A0%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1355. 活动参与者【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1355.%20%E6%B4%BB%E5%8A%A8%E5%8F%82%E4%B8%8E%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1355.%20%E6%B4%BB%E5%8A%A8%E5%8F%82%E4%B8%8E%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1356. 根据数字二进制下 1 的数目排序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1356.%20%E6%A0%B9%E6%8D%AE%E6%95%B0%E5%AD%97%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%8B%201%20%E7%9A%84%E6%95%B0%E7%9B%AE%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1356.%20%E6%A0%B9%E6%8D%AE%E6%95%B0%E5%AD%97%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%8B%201%20%E7%9A%84%E6%95%B0%E7%9B%AE%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1357. 每隔 n 个顾客打折【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1357.%20%E6%AF%8F%E9%9A%94%20n%20%E4%B8%AA%E9%A1%BE%E5%AE%A2%E6%89%93%E6%8A%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1357.%20%E6%AF%8F%E9%9A%94%20n%20%E4%B8%AA%E9%A1%BE%E5%AE%A2%E6%89%93%E6%8A%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1358. 包含所有三种字符的子字符串数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1358.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E4%B8%89%E7%A7%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1358.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E4%B8%89%E7%A7%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1359. 有效的快递序列数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1359.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%BF%AB%E9%80%92%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1359.%20%E6%9C%89%E6%95%88%E7%9A%84%E5%BF%AB%E9%80%92%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1360. 日期之间隔几天【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1360.%20%E6%97%A5%E6%9C%9F%E4%B9%8B%E9%97%B4%E9%9A%94%E5%87%A0%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1360.%20%E6%97%A5%E6%9C%9F%E4%B9%8B%E9%97%B4%E9%9A%94%E5%87%A0%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1361. 验证二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1361.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1361.%20%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1362. 最接近的因数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1362.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E5%9B%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1362.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E5%9B%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1363. 形成三的最大倍数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1363.%20%E5%BD%A2%E6%88%90%E4%B8%89%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1363.%20%E5%BD%A2%E6%88%90%E4%B8%89%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1364. 顾客的可信联系人数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1364.%20%E9%A1%BE%E5%AE%A2%E7%9A%84%E5%8F%AF%E4%BF%A1%E8%81%94%E7%B3%BB%E4%BA%BA%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1364.%20%E9%A1%BE%E5%AE%A2%E7%9A%84%E5%8F%AF%E4%BF%A1%E8%81%94%E7%B3%BB%E4%BA%BA%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1365. 有多少小于当前数字的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1365.%20%E6%9C%89%E5%A4%9A%E5%B0%91%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1365.%20%E6%9C%89%E5%A4%9A%E5%B0%91%E5%B0%8F%E4%BA%8E%E5%BD%93%E5%89%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1366. 通过投票对团队排名【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1366.%20%E9%80%9A%E8%BF%87%E6%8A%95%E7%A5%A8%E5%AF%B9%E5%9B%A2%E9%98%9F%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1366.%20%E9%80%9A%E8%BF%87%E6%8A%95%E7%A5%A8%E5%AF%B9%E5%9B%A2%E9%98%9F%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1367. 二叉树中的链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1367.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1367.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1368. 使网格图至少有一条有效路径的最小代价【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1368.%20%E4%BD%BF%E7%BD%91%E6%A0%BC%E5%9B%BE%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E6%9D%A1%E6%9C%89%E6%95%88%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1368.%20%E4%BD%BF%E7%BD%91%E6%A0%BC%E5%9B%BE%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E6%9D%A1%E6%9C%89%E6%95%88%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1369. 获取最近第二次的活动【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1369.%20%E8%8E%B7%E5%8F%96%E6%9C%80%E8%BF%91%E7%AC%AC%E4%BA%8C%E6%AC%A1%E7%9A%84%E6%B4%BB%E5%8A%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1369.%20%E8%8E%B7%E5%8F%96%E6%9C%80%E8%BF%91%E7%AC%AC%E4%BA%8C%E6%AC%A1%E7%9A%84%E6%B4%BB%E5%8A%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1370. 上升下降字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1370.%20%E4%B8%8A%E5%8D%87%E4%B8%8B%E9%99%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1370.%20%E4%B8%8A%E5%8D%87%E4%B8%8B%E9%99%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1371. 每个元音包含偶数次的最长子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1371.%20%E6%AF%8F%E4%B8%AA%E5%85%83%E9%9F%B3%E5%8C%85%E5%90%AB%E5%81%B6%E6%95%B0%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1371.%20%E6%AF%8F%E4%B8%AA%E5%85%83%E9%9F%B3%E5%8C%85%E5%90%AB%E5%81%B6%E6%95%B0%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1372. 二叉树中的最长交错路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1372.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E4%BA%A4%E9%94%99%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1372.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E4%BA%A4%E9%94%99%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1373. 二叉搜索子树的最大键值和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1373.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E5%AD%90%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E9%94%AE%E5%80%BC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1373.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E5%AD%90%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E9%94%AE%E5%80%BC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1374. 生成每种字符都是奇数个的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1374.%20%E7%94%9F%E6%88%90%E6%AF%8F%E7%A7%8D%E5%AD%97%E7%AC%A6%E9%83%BD%E6%98%AF%E5%A5%87%E6%95%B0%E4%B8%AA%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1374.%20%E7%94%9F%E6%88%90%E6%AF%8F%E7%A7%8D%E5%AD%97%E7%AC%A6%E9%83%BD%E6%98%AF%E5%A5%87%E6%95%B0%E4%B8%AA%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1375. 二进制字符串前缀一致的次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1375.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%89%8D%E7%BC%80%E4%B8%80%E8%87%B4%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1375.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%89%8D%E7%BC%80%E4%B8%80%E8%87%B4%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1376. 通知所有员工所需的时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1376.%20%E9%80%9A%E7%9F%A5%E6%89%80%E6%9C%89%E5%91%98%E5%B7%A5%E6%89%80%E9%9C%80%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1376.%20%E9%80%9A%E7%9F%A5%E6%89%80%E6%9C%89%E5%91%98%E5%B7%A5%E6%89%80%E9%9C%80%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1377. T 秒后青蛙的位置【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1377.%20T%20%E7%A7%92%E5%90%8E%E9%9D%92%E8%9B%99%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1377.%20T%20%E7%A7%92%E5%90%8E%E9%9D%92%E8%9B%99%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1378. 使用唯一标识码替换员工ID【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1378.%20%E4%BD%BF%E7%94%A8%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%A0%81%E6%9B%BF%E6%8D%A2%E5%91%98%E5%B7%A5ID%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1378.%20%E4%BD%BF%E7%94%A8%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86%E7%A0%81%E6%9B%BF%E6%8D%A2%E5%91%98%E5%B7%A5ID%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1379. 找出克隆二叉树中的相同节点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1379.%20%E6%89%BE%E5%87%BA%E5%85%8B%E9%9A%86%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E7%9B%B8%E5%90%8C%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1379.%20%E6%89%BE%E5%87%BA%E5%85%8B%E9%9A%86%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E7%9B%B8%E5%90%8C%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1380. 矩阵中的幸运数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1380.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B9%B8%E8%BF%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1380.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B9%B8%E8%BF%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1381. 设计一个支持增量操作的栈【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1381.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E5%A2%9E%E9%87%8F%E6%93%8D%E4%BD%9C%E7%9A%84%E6%A0%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1381.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E5%A2%9E%E9%87%8F%E6%93%8D%E4%BD%9C%E7%9A%84%E6%A0%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1382. 将二叉搜索树变平衡【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1382.%20%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%8F%98%E5%B9%B3%E8%A1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1382.%20%E5%B0%86%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%8F%98%E5%B9%B3%E8%A1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1383. 最大的团队表现值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1383.%20%E6%9C%80%E5%A4%A7%E7%9A%84%E5%9B%A2%E9%98%9F%E8%A1%A8%E7%8E%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1383.%20%E6%9C%80%E5%A4%A7%E7%9A%84%E5%9B%A2%E9%98%9F%E8%A1%A8%E7%8E%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1384. 按年度列出销售总额【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1384.%20%E6%8C%89%E5%B9%B4%E5%BA%A6%E5%88%97%E5%87%BA%E9%94%80%E5%94%AE%E6%80%BB%E9%A2%9D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1384.%20%E6%8C%89%E5%B9%B4%E5%BA%A6%E5%88%97%E5%87%BA%E9%94%80%E5%94%AE%E6%80%BB%E9%A2%9D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1385. 两个数组间的距离值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1385.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1385.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1386. 安排电影院座位【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1386.%20%E5%AE%89%E6%8E%92%E7%94%B5%E5%BD%B1%E9%99%A2%E5%BA%A7%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1386.%20%E5%AE%89%E6%8E%92%E7%94%B5%E5%BD%B1%E9%99%A2%E5%BA%A7%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1387. 将整数按权重排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1387.%20%E5%B0%86%E6%95%B4%E6%95%B0%E6%8C%89%E6%9D%83%E9%87%8D%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1387.%20%E5%B0%86%E6%95%B4%E6%95%B0%E6%8C%89%E6%9D%83%E9%87%8D%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1388. 3n 块披萨【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1388.%203n%20%E5%9D%97%E6%8A%AB%E8%90%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1388.%203n%20%E5%9D%97%E6%8A%AB%E8%90%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1389. 按既定顺序创建目标数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1389.%20%E6%8C%89%E6%97%A2%E5%AE%9A%E9%A1%BA%E5%BA%8F%E5%88%9B%E5%BB%BA%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1389.%20%E6%8C%89%E6%97%A2%E5%AE%9A%E9%A1%BA%E5%BA%8F%E5%88%9B%E5%BB%BA%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1390. 四因数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1390.%20%E5%9B%9B%E5%9B%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1390.%20%E5%9B%9B%E5%9B%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1391. 检查网格中是否存在有效路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1391.%20%E6%A3%80%E6%9F%A5%E7%BD%91%E6%A0%BC%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9C%89%E6%95%88%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1391.%20%E6%A3%80%E6%9F%A5%E7%BD%91%E6%A0%BC%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9C%89%E6%95%88%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1392. 最长快乐前缀【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1392.%20%E6%9C%80%E9%95%BF%E5%BF%AB%E4%B9%90%E5%89%8D%E7%BC%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1392.%20%E6%9C%80%E9%95%BF%E5%BF%AB%E4%B9%90%E5%89%8D%E7%BC%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1393. 股票的资本损益【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1393.%20%E8%82%A1%E7%A5%A8%E7%9A%84%E8%B5%84%E6%9C%AC%E6%8D%9F%E7%9B%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1393.%20%E8%82%A1%E7%A5%A8%E7%9A%84%E8%B5%84%E6%9C%AC%E6%8D%9F%E7%9B%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1394. 找出数组中的幸运数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1394.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%B9%B8%E8%BF%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1394.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%B9%B8%E8%BF%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1395. 统计作战单位数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1395.%20%E7%BB%9F%E8%AE%A1%E4%BD%9C%E6%88%98%E5%8D%95%E4%BD%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1395.%20%E7%BB%9F%E8%AE%A1%E4%BD%9C%E6%88%98%E5%8D%95%E4%BD%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1396. 设计地铁系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1396.%20%E8%AE%BE%E8%AE%A1%E5%9C%B0%E9%93%81%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1396.%20%E8%AE%BE%E8%AE%A1%E5%9C%B0%E9%93%81%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1397. 找到所有好字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1397.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E5%A5%BD%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1397.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E5%A5%BD%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1398. 购买了产品 A 和产品 B 却没有购买产品 C 的顾客【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1398.%20%E8%B4%AD%E4%B9%B0%E4%BA%86%E4%BA%A7%E5%93%81%20A%20%E5%92%8C%E4%BA%A7%E5%93%81%20B%20%E5%8D%B4%E6%B2%A1%E6%9C%89%E8%B4%AD%E4%B9%B0%E4%BA%A7%E5%93%81%20C%20%E7%9A%84%E9%A1%BE%E5%AE%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1398.%20%E8%B4%AD%E4%B9%B0%E4%BA%86%E4%BA%A7%E5%93%81%20A%20%E5%92%8C%E4%BA%A7%E5%93%81%20B%20%E5%8D%B4%E6%B2%A1%E6%9C%89%E8%B4%AD%E4%B9%B0%E4%BA%A7%E5%93%81%20C%20%E7%9A%84%E9%A1%BE%E5%AE%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1399. 统计最大组的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1399.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%A4%A7%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1399.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%A4%A7%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1400. 构造 K 个回文字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1400.%20%E6%9E%84%E9%80%A0%20K%20%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1400.%20%E6%9E%84%E9%80%A0%20K%20%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 16. 1401~1500\\n\\n- [ ] [1401. 圆和矩形是否有重叠【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1401.%20%E5%9C%86%E5%92%8C%E7%9F%A9%E5%BD%A2%E6%98%AF%E5%90%A6%E6%9C%89%E9%87%8D%E5%8F%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1401.%20%E5%9C%86%E5%92%8C%E7%9F%A9%E5%BD%A2%E6%98%AF%E5%90%A6%E6%9C%89%E9%87%8D%E5%8F%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1402. 做菜顺序【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1402.%20%E5%81%9A%E8%8F%9C%E9%A1%BA%E5%BA%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1402.%20%E5%81%9A%E8%8F%9C%E9%A1%BA%E5%BA%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1403. 非递增顺序的最小子序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1403.%20%E9%9D%9E%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1403.%20%E9%9D%9E%E9%80%92%E5%A2%9E%E9%A1%BA%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1404. 将二进制表示减到 1 的步骤数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1404.%20%E5%B0%86%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E5%87%8F%E5%88%B0%201%20%E7%9A%84%E6%AD%A5%E9%AA%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1404.%20%E5%B0%86%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E5%87%8F%E5%88%B0%201%20%E7%9A%84%E6%AD%A5%E9%AA%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1405. 最长快乐字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1405.%20%E6%9C%80%E9%95%BF%E5%BF%AB%E4%B9%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1405.%20%E6%9C%80%E9%95%BF%E5%BF%AB%E4%B9%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1406. 石子游戏 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1406.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1406.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1407. 排名靠前的旅行者【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1407.%20%E6%8E%92%E5%90%8D%E9%9D%A0%E5%89%8D%E7%9A%84%E6%97%85%E8%A1%8C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1407.%20%E6%8E%92%E5%90%8D%E9%9D%A0%E5%89%8D%E7%9A%84%E6%97%85%E8%A1%8C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1408. 数组中的字符串匹配【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1408.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1408.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1409. 查询带键的排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1409.%20%E6%9F%A5%E8%AF%A2%E5%B8%A6%E9%94%AE%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1409.%20%E6%9F%A5%E8%AF%A2%E5%B8%A6%E9%94%AE%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1410. HTML 实体解析器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1410.%20HTML%20%E5%AE%9E%E4%BD%93%E8%A7%A3%E6%9E%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1410.%20HTML%20%E5%AE%9E%E4%BD%93%E8%A7%A3%E6%9E%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1411. 给 N x 3 网格图涂色的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1411.%20%E7%BB%99%20N%20x%203%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E6%B6%82%E8%89%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1411.%20%E7%BB%99%20N%20x%203%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E6%B6%82%E8%89%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1412. 查找成绩处于中游的学生【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1412.%20%E6%9F%A5%E6%89%BE%E6%88%90%E7%BB%A9%E5%A4%84%E4%BA%8E%E4%B8%AD%E6%B8%B8%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1412.%20%E6%9F%A5%E6%89%BE%E6%88%90%E7%BB%A9%E5%A4%84%E4%BA%8E%E4%B8%AD%E6%B8%B8%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1413. 逐步求和得到正数的最小值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1413.%20%E9%80%90%E6%AD%A5%E6%B1%82%E5%92%8C%E5%BE%97%E5%88%B0%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1413.%20%E9%80%90%E6%AD%A5%E6%B1%82%E5%92%8C%E5%BE%97%E5%88%B0%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1414. 和为 K 的最少斐波那契数字数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1414.%20%E5%92%8C%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%AD%97%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1414.%20%E5%92%8C%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%AD%97%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1415. 长度为 n 的开心字符串中字典序第 k 小的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1415.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20n%20%E7%9A%84%E5%BC%80%E5%BF%83%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%AD%97%E5%85%B8%E5%BA%8F%E7%AC%AC%20k%20%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1415.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20n%20%E7%9A%84%E5%BC%80%E5%BF%83%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%AD%97%E5%85%B8%E5%BA%8F%E7%AC%AC%20k%20%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1416. 恢复数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1416.%20%E6%81%A2%E5%A4%8D%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1416.%20%E6%81%A2%E5%A4%8D%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1417. 重新格式化字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1417.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1417.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1418. 点菜展示表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1418.%20%E7%82%B9%E8%8F%9C%E5%B1%95%E7%A4%BA%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1418.%20%E7%82%B9%E8%8F%9C%E5%B1%95%E7%A4%BA%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1419. 数青蛙【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1419.%20%E6%95%B0%E9%9D%92%E8%9B%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1419.%20%E6%95%B0%E9%9D%92%E8%9B%99%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1420. 生成数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1420.%20%E7%94%9F%E6%88%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1420.%20%E7%94%9F%E6%88%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1421. 净现值查询【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1421.%20%E5%87%80%E7%8E%B0%E5%80%BC%E6%9F%A5%E8%AF%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1421.%20%E5%87%80%E7%8E%B0%E5%80%BC%E6%9F%A5%E8%AF%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1422. 分割字符串的最大得分【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1422.%20%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1422.%20%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1423. 可获得的最大点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1423.%20%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1423.%20%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1424. 对角线遍历 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1424.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E9%81%8D%E5%8E%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1424.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E9%81%8D%E5%8E%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1425. 带限制的子序列和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1425.%20%E5%B8%A6%E9%99%90%E5%88%B6%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1425.%20%E5%B8%A6%E9%99%90%E5%88%B6%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1426. 数元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1426.%20%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1426.%20%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1427. 字符串的左右移【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1427.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B7%A6%E5%8F%B3%E7%A7%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1427.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%B7%A6%E5%8F%B3%E7%A7%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1428. 至少有一个 1 的最左端列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1428.%20%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%B8%AA%201%20%E7%9A%84%E6%9C%80%E5%B7%A6%E7%AB%AF%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1428.%20%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%B8%AA%201%20%E7%9A%84%E6%9C%80%E5%B7%A6%E7%AB%AF%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1429. 第一个唯一数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1429.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1429.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%94%AF%E4%B8%80%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1430. 判断给定的序列是否是二叉树从根到叶的路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1430.%20%E5%88%A4%E6%96%AD%E7%BB%99%E5%AE%9A%E7%9A%84%E5%BA%8F%E5%88%97%E6%98%AF%E5%90%A6%E6%98%AF%E4%BA%8C%E5%8F%89%E6%A0%91%E4%BB%8E%E6%A0%B9%E5%88%B0%E5%8F%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1430.%20%E5%88%A4%E6%96%AD%E7%BB%99%E5%AE%9A%E7%9A%84%E5%BA%8F%E5%88%97%E6%98%AF%E5%90%A6%E6%98%AF%E4%BA%8C%E5%8F%89%E6%A0%91%E4%BB%8E%E6%A0%B9%E5%88%B0%E5%8F%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1431. 拥有最多糖果的孩子【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1431.%20%E6%8B%A5%E6%9C%89%E6%9C%80%E5%A4%9A%E7%B3%96%E6%9E%9C%E7%9A%84%E5%AD%A9%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1431.%20%E6%8B%A5%E6%9C%89%E6%9C%80%E5%A4%9A%E7%B3%96%E6%9E%9C%E7%9A%84%E5%AD%A9%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1432. 改变一个整数能得到的最大差值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1432.%20%E6%94%B9%E5%8F%98%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E8%83%BD%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1432.%20%E6%94%B9%E5%8F%98%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E8%83%BD%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1433. 检查一个字符串是否可以打破另一个字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1433.%20%E6%A3%80%E6%9F%A5%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E6%89%93%E7%A0%B4%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1433.%20%E6%A3%80%E6%9F%A5%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E6%89%93%E7%A0%B4%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1434. 每个人戴不同帽子的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1434.%20%E6%AF%8F%E4%B8%AA%E4%BA%BA%E6%88%B4%E4%B8%8D%E5%90%8C%E5%B8%BD%E5%AD%90%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1434.%20%E6%AF%8F%E4%B8%AA%E4%BA%BA%E6%88%B4%E4%B8%8D%E5%90%8C%E5%B8%BD%E5%AD%90%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1435. 制作会话柱状图【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1435.%20%E5%88%B6%E4%BD%9C%E4%BC%9A%E8%AF%9D%E6%9F%B1%E7%8A%B6%E5%9B%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1435.%20%E5%88%B6%E4%BD%9C%E4%BC%9A%E8%AF%9D%E6%9F%B1%E7%8A%B6%E5%9B%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [1436. 旅行终点站【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1436.%20%E6%97%85%E8%A1%8C%E7%BB%88%E7%82%B9%E7%AB%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/1436.%20%E6%97%85%E8%A1%8C%E7%BB%88%E7%82%B9%E7%AB%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/1436.%20%E6%97%85%E8%A1%8C%E7%BB%88%E7%82%B9%E7%AB%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [1437. 是否所有 1 都至少相隔 k 个元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1437.%20%E6%98%AF%E5%90%A6%E6%89%80%E6%9C%89%201%20%E9%83%BD%E8%87%B3%E5%B0%91%E7%9B%B8%E9%9A%94%20k%20%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1437.%20%E6%98%AF%E5%90%A6%E6%89%80%E6%9C%89%201%20%E9%83%BD%E8%87%B3%E5%B0%91%E7%9B%B8%E9%9A%94%20k%20%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1438. 绝对差不超过限制的最长连续子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1438.%20%E7%BB%9D%E5%AF%B9%E5%B7%AE%E4%B8%8D%E8%B6%85%E8%BF%87%E9%99%90%E5%88%B6%E7%9A%84%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1438.%20%E7%BB%9D%E5%AF%B9%E5%B7%AE%E4%B8%8D%E8%B6%85%E8%BF%87%E9%99%90%E5%88%B6%E7%9A%84%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1439. 有序矩阵中的第 k 个最小数组和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1439.%20%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%AC%AC%20k%20%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1439.%20%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%AC%AC%20k%20%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1440. 计算布尔表达式的值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1440.%20%E8%AE%A1%E7%AE%97%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1440.%20%E8%AE%A1%E7%AE%97%E5%B8%83%E5%B0%94%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1441. 用栈操作构建数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1441.%20%E7%94%A8%E6%A0%88%E6%93%8D%E4%BD%9C%E6%9E%84%E5%BB%BA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1441.%20%E7%94%A8%E6%A0%88%E6%93%8D%E4%BD%9C%E6%9E%84%E5%BB%BA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1442. 形成两个异或相等数组的三元组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1442.%20%E5%BD%A2%E6%88%90%E4%B8%A4%E4%B8%AA%E5%BC%82%E6%88%96%E7%9B%B8%E7%AD%89%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1442.%20%E5%BD%A2%E6%88%90%E4%B8%A4%E4%B8%AA%E5%BC%82%E6%88%96%E7%9B%B8%E7%AD%89%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1443. 收集树上所有苹果的最少时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1443.%20%E6%94%B6%E9%9B%86%E6%A0%91%E4%B8%8A%E6%89%80%E6%9C%89%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1443.%20%E6%94%B6%E9%9B%86%E6%A0%91%E4%B8%8A%E6%89%80%E6%9C%89%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1444. 切披萨的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1444.%20%E5%88%87%E6%8A%AB%E8%90%A8%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1444.%20%E5%88%87%E6%8A%AB%E8%90%A8%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1445. 苹果和桔子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1445.%20%E8%8B%B9%E6%9E%9C%E5%92%8C%E6%A1%94%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1445.%20%E8%8B%B9%E6%9E%9C%E5%92%8C%E6%A1%94%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1446. 连续字符【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1446.%20%E8%BF%9E%E7%BB%AD%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1446.%20%E8%BF%9E%E7%BB%AD%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1447. 最简分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1447.%20%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1447.%20%E6%9C%80%E7%AE%80%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1448. 统计二叉树中好节点的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1448.%20%E7%BB%9F%E8%AE%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1448.%20%E7%BB%9F%E8%AE%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1449. 数位成本和为目标值的最大数字【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1449.%20%E6%95%B0%E4%BD%8D%E6%88%90%E6%9C%AC%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1449.%20%E6%95%B0%E4%BD%8D%E6%88%90%E6%9C%AC%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1450. 在既定时间做作业的学生人数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1450.%20%E5%9C%A8%E6%97%A2%E5%AE%9A%E6%97%B6%E9%97%B4%E5%81%9A%E4%BD%9C%E4%B8%9A%E7%9A%84%E5%AD%A6%E7%94%9F%E4%BA%BA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1450.%20%E5%9C%A8%E6%97%A2%E5%AE%9A%E6%97%B6%E9%97%B4%E5%81%9A%E4%BD%9C%E4%B8%9A%E7%9A%84%E5%AD%A6%E7%94%9F%E4%BA%BA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1451. 重新排列句子中的单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1451.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1451.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1452. 收藏清单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1452.%20%E6%94%B6%E8%97%8F%E6%B8%85%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1452.%20%E6%94%B6%E8%97%8F%E6%B8%85%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1453. 圆形靶内的最大飞镖数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1453.%20%E5%9C%86%E5%BD%A2%E9%9D%B6%E5%86%85%E7%9A%84%E6%9C%80%E5%A4%A7%E9%A3%9E%E9%95%96%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1453.%20%E5%9C%86%E5%BD%A2%E9%9D%B6%E5%86%85%E7%9A%84%E6%9C%80%E5%A4%A7%E9%A3%9E%E9%95%96%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1454. 活跃用户【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1454.%20%E6%B4%BB%E8%B7%83%E7%94%A8%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1454.%20%E6%B4%BB%E8%B7%83%E7%94%A8%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1455. 检查单词是否为句中其他单词的前缀【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1455.%20%E6%A3%80%E6%9F%A5%E5%8D%95%E8%AF%8D%E6%98%AF%E5%90%A6%E4%B8%BA%E5%8F%A5%E4%B8%AD%E5%85%B6%E4%BB%96%E5%8D%95%E8%AF%8D%E7%9A%84%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1455.%20%E6%A3%80%E6%9F%A5%E5%8D%95%E8%AF%8D%E6%98%AF%E5%90%A6%E4%B8%BA%E5%8F%A5%E4%B8%AD%E5%85%B6%E4%BB%96%E5%8D%95%E8%AF%8D%E7%9A%84%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1456. 定长子串中元音的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1456.%20%E5%AE%9A%E9%95%BF%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%85%83%E9%9F%B3%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/1456.%20%E5%AE%9A%E9%95%BF%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%85%83%E9%9F%B3%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/1456.%20%E5%AE%9A%E9%95%BF%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%85%83%E9%9F%B3%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [1457. 二叉树中的伪回文路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1457.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%AA%E5%9B%9E%E6%96%87%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1457.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E4%BC%AA%E5%9B%9E%E6%96%87%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1458. 两个子序列的最大点积【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1458.%20%E4%B8%A4%E4%B8%AA%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%82%B9%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1458.%20%E4%B8%A4%E4%B8%AA%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%82%B9%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1459. 矩形面积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1459.%20%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1459.%20%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1460. 通过翻转子数组使两个数组相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1460.%20%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1460.%20%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1461. 检查一个字符串是否包含所有长度为 K 的二进制子串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1461.%20%E6%A3%80%E6%9F%A5%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1461.%20%E6%A3%80%E6%9F%A5%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%90%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1462. 课程表 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1462.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1462.%20%E8%AF%BE%E7%A8%8B%E8%A1%A8%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1463. 摘樱桃 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1463.%20%E6%91%98%E6%A8%B1%E6%A1%83%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1463.%20%E6%91%98%E6%A8%B1%E6%A1%83%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1464. 数组中两元素的最大乘积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1464.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1464.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1465. 切割后面积最大的蛋糕【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1465.%20%E5%88%87%E5%89%B2%E5%90%8E%E9%9D%A2%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E8%9B%8B%E7%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1465.%20%E5%88%87%E5%89%B2%E5%90%8E%E9%9D%A2%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E8%9B%8B%E7%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1466. 重新规划路线【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1466.%20%E9%87%8D%E6%96%B0%E8%A7%84%E5%88%92%E8%B7%AF%E7%BA%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1466.%20%E9%87%8D%E6%96%B0%E8%A7%84%E5%88%92%E8%B7%AF%E7%BA%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1467. 两个盒子中球的颜色数相同的概率【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1467.%20%E4%B8%A4%E4%B8%AA%E7%9B%92%E5%AD%90%E4%B8%AD%E7%90%83%E7%9A%84%E9%A2%9C%E8%89%B2%E6%95%B0%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A6%82%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1467.%20%E4%B8%A4%E4%B8%AA%E7%9B%92%E5%AD%90%E4%B8%AD%E7%90%83%E7%9A%84%E9%A2%9C%E8%89%B2%E6%95%B0%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A6%82%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1468. 计算税后工资【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1468.%20%E8%AE%A1%E7%AE%97%E7%A8%8E%E5%90%8E%E5%B7%A5%E8%B5%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1468.%20%E8%AE%A1%E7%AE%97%E7%A8%8E%E5%90%8E%E5%B7%A5%E8%B5%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1469. 寻找所有的独生节点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1469.%20%E5%AF%BB%E6%89%BE%E6%89%80%E6%9C%89%E7%9A%84%E7%8B%AC%E7%94%9F%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1469.%20%E5%AF%BB%E6%89%BE%E6%89%80%E6%9C%89%E7%9A%84%E7%8B%AC%E7%94%9F%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1470. 重新排列数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1470.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1470.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1471. 数组中的 k 个最强值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1471.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%20k%20%E4%B8%AA%E6%9C%80%E5%BC%BA%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1471.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%20k%20%E4%B8%AA%E6%9C%80%E5%BC%BA%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1472. 设计浏览器历史记录【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1472.%20%E8%AE%BE%E8%AE%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1472.%20%E8%AE%BE%E8%AE%A1%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1473. 粉刷房子 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1473.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1473.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1474. 删除链表 M 个节点之后的 N 个节点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1474.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%20M%20%E4%B8%AA%E8%8A%82%E7%82%B9%E4%B9%8B%E5%90%8E%E7%9A%84%20N%20%E4%B8%AA%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1474.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%20M%20%E4%B8%AA%E8%8A%82%E7%82%B9%E4%B9%8B%E5%90%8E%E7%9A%84%20N%20%E4%B8%AA%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1475. 商品折扣后的最终价格【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1475.%20%E5%95%86%E5%93%81%E6%8A%98%E6%89%A3%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1475.%20%E5%95%86%E5%93%81%E6%8A%98%E6%89%A3%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1476. 子矩形查询【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1476.%20%E5%AD%90%E7%9F%A9%E5%BD%A2%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1476.%20%E5%AD%90%E7%9F%A9%E5%BD%A2%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1477. 找两个和为目标值且不重叠的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1477.%20%E6%89%BE%E4%B8%A4%E4%B8%AA%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E4%B8%94%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1477.%20%E6%89%BE%E4%B8%A4%E4%B8%AA%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E4%B8%94%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1478. 安排邮筒【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1478.%20%E5%AE%89%E6%8E%92%E9%82%AE%E7%AD%92%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1478.%20%E5%AE%89%E6%8E%92%E9%82%AE%E7%AD%92%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1479. 周内每天的销售情况【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1479.%20%E5%91%A8%E5%86%85%E6%AF%8F%E5%A4%A9%E7%9A%84%E9%94%80%E5%94%AE%E6%83%85%E5%86%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1479.%20%E5%91%A8%E5%86%85%E6%AF%8F%E5%A4%A9%E7%9A%84%E9%94%80%E5%94%AE%E6%83%85%E5%86%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1480. 一维数组的动态和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1480.%20%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%8A%A8%E6%80%81%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1480.%20%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%8A%A8%E6%80%81%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1481. 不同整数的最少数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1481.%20%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1481.%20%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1482. 制作 m 束花所需的最少天数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1482.%20%E5%88%B6%E4%BD%9C%20m%20%E6%9D%9F%E8%8A%B1%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1482.%20%E5%88%B6%E4%BD%9C%20m%20%E6%9D%9F%E8%8A%B1%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1483. 树节点的第 K 个祖先【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1483.%20%E6%A0%91%E8%8A%82%E7%82%B9%E7%9A%84%E7%AC%AC%20K%20%E4%B8%AA%E7%A5%96%E5%85%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1483.%20%E6%A0%91%E8%8A%82%E7%82%B9%E7%9A%84%E7%AC%AC%20K%20%E4%B8%AA%E7%A5%96%E5%85%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1484. 按日期分组销售产品【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1484.%20%E6%8C%89%E6%97%A5%E6%9C%9F%E5%88%86%E7%BB%84%E9%94%80%E5%94%AE%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1484.%20%E6%8C%89%E6%97%A5%E6%9C%9F%E5%88%86%E7%BB%84%E9%94%80%E5%94%AE%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1485. 克隆含随机指针的二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1485.%20%E5%85%8B%E9%9A%86%E5%90%AB%E9%9A%8F%E6%9C%BA%E6%8C%87%E9%92%88%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1485.%20%E5%85%8B%E9%9A%86%E5%90%AB%E9%9A%8F%E6%9C%BA%E6%8C%87%E9%92%88%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1486. 数组异或操作【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1486.%20%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%93%8D%E4%BD%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1486.%20%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E6%93%8D%E4%BD%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1487. 保证文件名唯一【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1487.%20%E4%BF%9D%E8%AF%81%E6%96%87%E4%BB%B6%E5%90%8D%E5%94%AF%E4%B8%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1487.%20%E4%BF%9D%E8%AF%81%E6%96%87%E4%BB%B6%E5%90%8D%E5%94%AF%E4%B8%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1488. 避免洪水泛滥【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1488.%20%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1488.%20%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1489. 找到最小生成树里的关键边和伪关键边【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1489.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E9%87%8C%E7%9A%84%E5%85%B3%E9%94%AE%E8%BE%B9%E5%92%8C%E4%BC%AA%E5%85%B3%E9%94%AE%E8%BE%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1489.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%E9%87%8C%E7%9A%84%E5%85%B3%E9%94%AE%E8%BE%B9%E5%92%8C%E4%BC%AA%E5%85%B3%E9%94%AE%E8%BE%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1490. 克隆 N 叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1490.%20%E5%85%8B%E9%9A%86%20N%20%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1490.%20%E5%85%8B%E9%9A%86%20N%20%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1491. 去掉最低工资和最高工资后的工资平均值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1491.%20%E5%8E%BB%E6%8E%89%E6%9C%80%E4%BD%8E%E5%B7%A5%E8%B5%84%E5%92%8C%E6%9C%80%E9%AB%98%E5%B7%A5%E8%B5%84%E5%90%8E%E7%9A%84%E5%B7%A5%E8%B5%84%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1491.%20%E5%8E%BB%E6%8E%89%E6%9C%80%E4%BD%8E%E5%B7%A5%E8%B5%84%E5%92%8C%E6%9C%80%E9%AB%98%E5%B7%A5%E8%B5%84%E5%90%8E%E7%9A%84%E5%B7%A5%E8%B5%84%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1492. n 的第 k 个因子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1492.%20n%20%E7%9A%84%E7%AC%AC%20k%20%E4%B8%AA%E5%9B%A0%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1492.%20n%20%E7%9A%84%E7%AC%AC%20k%20%E4%B8%AA%E5%9B%A0%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1493. 删掉一个元素以后全为 1 的最长子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1493.%20%E5%88%A0%E6%8E%89%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BB%A5%E5%90%8E%E5%85%A8%E4%B8%BA%201%20%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1493.%20%E5%88%A0%E6%8E%89%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BB%A5%E5%90%8E%E5%85%A8%E4%B8%BA%201%20%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1494. 并行课程 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1494.%20%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8B%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1494.%20%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8B%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1495. 上月播放的儿童适宜电影【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1495.%20%E4%B8%8A%E6%9C%88%E6%92%AD%E6%94%BE%E7%9A%84%E5%84%BF%E7%AB%A5%E9%80%82%E5%AE%9C%E7%94%B5%E5%BD%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1495.%20%E4%B8%8A%E6%9C%88%E6%92%AD%E6%94%BE%E7%9A%84%E5%84%BF%E7%AB%A5%E9%80%82%E5%AE%9C%E7%94%B5%E5%BD%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1496. 判断路径是否相交【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1496.%20%E5%88%A4%E6%96%AD%E8%B7%AF%E5%BE%84%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1496.%20%E5%88%A4%E6%96%AD%E8%B7%AF%E5%BE%84%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1497. 检查数组对是否可以被 k 整除【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1497.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E5%AF%B9%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%A2%AB%20k%20%E6%95%B4%E9%99%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1497.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E5%AF%B9%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%A2%AB%20k%20%E6%95%B4%E9%99%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1498. 满足条件的子序列数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1498.%20%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1498.%20%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1499. 满足不等式的最大值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1499.%20%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1499.%20%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1500. 设计文件分享系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1500.%20%E8%AE%BE%E8%AE%A1%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1500.%20%E8%AE%BE%E8%AE%A1%E6%96%87%E4%BB%B6%E5%88%86%E4%BA%AB%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 17. 1501~1600\\n\\n- [ ] [1501. 可以放心投资的国家【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1501.%20%E5%8F%AF%E4%BB%A5%E6%94%BE%E5%BF%83%E6%8A%95%E8%B5%84%E7%9A%84%E5%9B%BD%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1501.%20%E5%8F%AF%E4%BB%A5%E6%94%BE%E5%BF%83%E6%8A%95%E8%B5%84%E7%9A%84%E5%9B%BD%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1502. 判断能否形成等差数列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1502.%20%E5%88%A4%E6%96%AD%E8%83%BD%E5%90%A6%E5%BD%A2%E6%88%90%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1502.%20%E5%88%A4%E6%96%AD%E8%83%BD%E5%90%A6%E5%BD%A2%E6%88%90%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1503. 所有蚂蚁掉下来前的最后一刻【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1503.%20%E6%89%80%E6%9C%89%E8%9A%82%E8%9A%81%E6%8E%89%E4%B8%8B%E6%9D%A5%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%88%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1503.%20%E6%89%80%E6%9C%89%E8%9A%82%E8%9A%81%E6%8E%89%E4%B8%8B%E6%9D%A5%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%88%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1504. 统计全 1 子矩形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1504.%20%E7%BB%9F%E8%AE%A1%E5%85%A8%201%20%E5%AD%90%E7%9F%A9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1504.%20%E7%BB%9F%E8%AE%A1%E5%85%A8%201%20%E5%AD%90%E7%9F%A9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1505. 最多 K 次交换相邻数位后得到的最小整数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1505.%20%E6%9C%80%E5%A4%9A%20K%20%E6%AC%A1%E4%BA%A4%E6%8D%A2%E7%9B%B8%E9%82%BB%E6%95%B0%E4%BD%8D%E5%90%8E%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1505.%20%E6%9C%80%E5%A4%9A%20K%20%E6%AC%A1%E4%BA%A4%E6%8D%A2%E7%9B%B8%E9%82%BB%E6%95%B0%E4%BD%8D%E5%90%8E%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1506. 找到 N 叉树的根节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1506.%20%E6%89%BE%E5%88%B0%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1506.%20%E6%89%BE%E5%88%B0%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1507. 转变日期格式【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1507.%20%E8%BD%AC%E5%8F%98%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1507.%20%E8%BD%AC%E5%8F%98%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1508. 子数组和排序后的区间和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1508.%20%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E6%8E%92%E5%BA%8F%E5%90%8E%E7%9A%84%E5%8C%BA%E9%97%B4%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1508.%20%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E6%8E%92%E5%BA%8F%E5%90%8E%E7%9A%84%E5%8C%BA%E9%97%B4%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1509. 三次操作后最大值与最小值的最小差【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1509.%20%E4%B8%89%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E5%80%BC%E4%B8%8E%E6%9C%80%E5%B0%8F%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1509.%20%E4%B8%89%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E5%80%BC%E4%B8%8E%E6%9C%80%E5%B0%8F%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1510. 石子游戏 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1510.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1510.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1511. 消费者下单频率【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1511.%20%E6%B6%88%E8%B4%B9%E8%80%85%E4%B8%8B%E5%8D%95%E9%A2%91%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1511.%20%E6%B6%88%E8%B4%B9%E8%80%85%E4%B8%8B%E5%8D%95%E9%A2%91%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1512. 好数对的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1512.%20%E5%A5%BD%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1512.%20%E5%A5%BD%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1513. 仅含 1 的子串数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1513.%20%E4%BB%85%E5%90%AB%201%20%E7%9A%84%E5%AD%90%E4%B8%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1513.%20%E4%BB%85%E5%90%AB%201%20%E7%9A%84%E5%AD%90%E4%B8%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1514. 概率最大的路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1514.%20%E6%A6%82%E7%8E%87%E6%9C%80%E5%A4%A7%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1514.%20%E6%A6%82%E7%8E%87%E6%9C%80%E5%A4%A7%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1515. 服务中心的最佳位置【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1515.%20%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%BF%83%E7%9A%84%E6%9C%80%E4%BD%B3%E4%BD%8D%E7%BD%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1515.%20%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%BF%83%E7%9A%84%E6%9C%80%E4%BD%B3%E4%BD%8D%E7%BD%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1516. 移动 N 叉树的子树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1516.%20%E7%A7%BB%E5%8A%A8%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1516.%20%E7%A7%BB%E5%8A%A8%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E5%AD%90%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1517. 查找拥有有效邮箱的用户【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1517.%20%E6%9F%A5%E6%89%BE%E6%8B%A5%E6%9C%89%E6%9C%89%E6%95%88%E9%82%AE%E7%AE%B1%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1517.%20%E6%9F%A5%E6%89%BE%E6%8B%A5%E6%9C%89%E6%9C%89%E6%95%88%E9%82%AE%E7%AE%B1%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1518. 换水问题【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1518.%20%E6%8D%A2%E6%B0%B4%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1518.%20%E6%8D%A2%E6%B0%B4%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1519. 子树中标签相同的节点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1519.%20%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1519.%20%E5%AD%90%E6%A0%91%E4%B8%AD%E6%A0%87%E7%AD%BE%E7%9B%B8%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1520. 最多的不重叠子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1520.%20%E6%9C%80%E5%A4%9A%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1520.%20%E6%9C%80%E5%A4%9A%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1521. 找到最接近目标值的函数值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1521.%20%E6%89%BE%E5%88%B0%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E5%87%BD%E6%95%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1521.%20%E6%89%BE%E5%88%B0%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E5%87%BD%E6%95%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1522. N 叉树的直径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1522.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1522.%20N%20%E5%8F%89%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1523. 在区间范围内统计奇数数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1523.%20%E5%9C%A8%E5%8C%BA%E9%97%B4%E8%8C%83%E5%9B%B4%E5%86%85%E7%BB%9F%E8%AE%A1%E5%A5%87%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1523.%20%E5%9C%A8%E5%8C%BA%E9%97%B4%E8%8C%83%E5%9B%B4%E5%86%85%E7%BB%9F%E8%AE%A1%E5%A5%87%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1524. 和为奇数的子数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1524.%20%E5%92%8C%E4%B8%BA%E5%A5%87%E6%95%B0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1524.%20%E5%92%8C%E4%B8%BA%E5%A5%87%E6%95%B0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1525. 字符串的好分割数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1525.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A5%BD%E5%88%86%E5%89%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1525.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A5%BD%E5%88%86%E5%89%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1526. 形成目标数组的子数组最少增加次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1526.%20%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%91%E5%A2%9E%E5%8A%A0%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1526.%20%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%91%E5%A2%9E%E5%8A%A0%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1527. 患某种疾病的患者【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1527.%20%E6%82%A3%E6%9F%90%E7%A7%8D%E7%96%BE%E7%97%85%E7%9A%84%E6%82%A3%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1527.%20%E6%82%A3%E6%9F%90%E7%A7%8D%E7%96%BE%E7%97%85%E7%9A%84%E6%82%A3%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1528. 重新排列字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1528.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1528.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1529. 最少的后缀翻转次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1529.%20%E6%9C%80%E5%B0%91%E7%9A%84%E5%90%8E%E7%BC%80%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1529.%20%E6%9C%80%E5%B0%91%E7%9A%84%E5%90%8E%E7%BC%80%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1530. 好叶子节点对的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1530.%20%E5%A5%BD%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E5%AF%B9%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1530.%20%E5%A5%BD%E5%8F%B6%E5%AD%90%E8%8A%82%E7%82%B9%E5%AF%B9%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1531. 压缩字符串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1531.%20%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1531.%20%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1532. 最近的三笔订单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1532.%20%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%89%E7%AC%94%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1532.%20%E6%9C%80%E8%BF%91%E7%9A%84%E4%B8%89%E7%AC%94%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1533. 找到最大整数的索引【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1533.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E6%95%B4%E6%95%B0%E7%9A%84%E7%B4%A2%E5%BC%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1533.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E6%95%B4%E6%95%B0%E7%9A%84%E7%B4%A2%E5%BC%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1534. 统计好三元组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1534.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1534.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1535. 找出数组游戏的赢家【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1535.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E6%B8%B8%E6%88%8F%E7%9A%84%E8%B5%A2%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1535.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E6%B8%B8%E6%88%8F%E7%9A%84%E8%B5%A2%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1536. 排布二进制网格的最少交换次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1536.%20%E6%8E%92%E5%B8%83%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BD%91%E6%A0%BC%E7%9A%84%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1536.%20%E6%8E%92%E5%B8%83%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%BD%91%E6%A0%BC%E7%9A%84%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1537. 最大得分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1537.%20%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1537.%20%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1538. 找出隐藏数组中出现次数最多的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1538.%20%E6%89%BE%E5%87%BA%E9%9A%90%E8%97%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1538.%20%E6%89%BE%E5%87%BA%E9%9A%90%E8%97%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1539. 第 k 个缺失的正整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1539.%20%E7%AC%AC%20k%20%E4%B8%AA%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%AD%A3%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1539.%20%E7%AC%AC%20k%20%E4%B8%AA%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%AD%A3%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1540. K 次操作转变字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1540.%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E8%BD%AC%E5%8F%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1540.%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E8%BD%AC%E5%8F%98%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1541. 平衡括号字符串的最少插入次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1541.%20%E5%B9%B3%E8%A1%A1%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1541.%20%E5%B9%B3%E8%A1%A1%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1542. 找出最长的超赞子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1542.%20%E6%89%BE%E5%87%BA%E6%9C%80%E9%95%BF%E7%9A%84%E8%B6%85%E8%B5%9E%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1542.%20%E6%89%BE%E5%87%BA%E6%9C%80%E9%95%BF%E7%9A%84%E8%B6%85%E8%B5%9E%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1543. 产品名称格式修复【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1543.%20%E4%BA%A7%E5%93%81%E5%90%8D%E7%A7%B0%E6%A0%BC%E5%BC%8F%E4%BF%AE%E5%A4%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1543.%20%E4%BA%A7%E5%93%81%E5%90%8D%E7%A7%B0%E6%A0%BC%E5%BC%8F%E4%BF%AE%E5%A4%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1544. 整理字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1544.%20%E6%95%B4%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1544.%20%E6%95%B4%E7%90%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1545. 找出第 N 个二进制字符串中的第 K 位【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1545.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20N%20%E4%B8%AA%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1545.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20N%20%E4%B8%AA%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E4%BD%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1546. 和为目标值且不重叠的非空子数组的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1546.%20%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E4%B8%94%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E9%9D%9E%E7%A9%BA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1546.%20%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E4%B8%94%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E9%9D%9E%E7%A9%BA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1547. 切棍子的最小成本【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1547.%20%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1547.%20%E5%88%87%E6%A3%8D%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1548. 图中最相似的路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1548.%20%E5%9B%BE%E4%B8%AD%E6%9C%80%E7%9B%B8%E4%BC%BC%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1548.%20%E5%9B%BE%E4%B8%AD%E6%9C%80%E7%9B%B8%E4%BC%BC%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1549. 每件商品的最新订单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1549.%20%E6%AF%8F%E4%BB%B6%E5%95%86%E5%93%81%E7%9A%84%E6%9C%80%E6%96%B0%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1549.%20%E6%AF%8F%E4%BB%B6%E5%95%86%E5%93%81%E7%9A%84%E6%9C%80%E6%96%B0%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1550. 存在连续三个奇数的数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1550.%20%E5%AD%98%E5%9C%A8%E8%BF%9E%E7%BB%AD%E4%B8%89%E4%B8%AA%E5%A5%87%E6%95%B0%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1550.%20%E5%AD%98%E5%9C%A8%E8%BF%9E%E7%BB%AD%E4%B8%89%E4%B8%AA%E5%A5%87%E6%95%B0%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1551. 使数组中所有元素相等的最小操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1551.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1551.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1552. 两球之间的磁力【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1552.%20%E4%B8%A4%E7%90%83%E4%B9%8B%E9%97%B4%E7%9A%84%E7%A3%81%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1552.%20%E4%B8%A4%E7%90%83%E4%B9%8B%E9%97%B4%E7%9A%84%E7%A3%81%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1553. 吃掉 N 个橘子的最少天数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1553.%20%E5%90%83%E6%8E%89%20N%20%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1553.%20%E5%90%83%E6%8E%89%20N%20%E4%B8%AA%E6%A9%98%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1554. 只有一个不同字符的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1554.%20%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1554.%20%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1555. 银行账户概要【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1555.%20%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E6%A6%82%E8%A6%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1555.%20%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E6%A6%82%E8%A6%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1556. 千位分隔数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1556.%20%E5%8D%83%E4%BD%8D%E5%88%86%E9%9A%94%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1556.%20%E5%8D%83%E4%BD%8D%E5%88%86%E9%9A%94%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1557. 可以到达所有点的最少点数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1557.%20%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E7%82%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1557.%20%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E7%82%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1558. 得到目标数组的最少函数调用次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1558.%20%E5%BE%97%E5%88%B0%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1558.%20%E5%BE%97%E5%88%B0%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1559. 二维网格图中探测环【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1559.%20%E4%BA%8C%E7%BB%B4%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%8E%A2%E6%B5%8B%E7%8E%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1559.%20%E4%BA%8C%E7%BB%B4%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%8E%A2%E6%B5%8B%E7%8E%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1560. 圆形赛道上经过次数最多的扇区【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1560.%20%E5%9C%86%E5%BD%A2%E8%B5%9B%E9%81%93%E4%B8%8A%E7%BB%8F%E8%BF%87%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E6%89%87%E5%8C%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1560.%20%E5%9C%86%E5%BD%A2%E8%B5%9B%E9%81%93%E4%B8%8A%E7%BB%8F%E8%BF%87%E6%AC%A1%E6%95%B0%E6%9C%80%E5%A4%9A%E7%9A%84%E6%89%87%E5%8C%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1561. 你可以获得的最大硬币数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1561.%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%A1%AC%E5%B8%81%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1561.%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%A1%AC%E5%B8%81%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1562. 查找大小为 M 的最新分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1562.%20%E6%9F%A5%E6%89%BE%E5%A4%A7%E5%B0%8F%E4%B8%BA%20M%20%E7%9A%84%E6%9C%80%E6%96%B0%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1562.%20%E6%9F%A5%E6%89%BE%E5%A4%A7%E5%B0%8F%E4%B8%BA%20M%20%E7%9A%84%E6%9C%80%E6%96%B0%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1563. 石子游戏 V【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1563.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20V%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1563.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20V%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1564. 把箱子放进仓库里 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1564.%20%E6%8A%8A%E7%AE%B1%E5%AD%90%E6%94%BE%E8%BF%9B%E4%BB%93%E5%BA%93%E9%87%8C%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1564.%20%E6%8A%8A%E7%AE%B1%E5%AD%90%E6%94%BE%E8%BF%9B%E4%BB%93%E5%BA%93%E9%87%8C%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1565. 按月统计订单数与顾客数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1565.%20%E6%8C%89%E6%9C%88%E7%BB%9F%E8%AE%A1%E8%AE%A2%E5%8D%95%E6%95%B0%E4%B8%8E%E9%A1%BE%E5%AE%A2%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1565.%20%E6%8C%89%E6%9C%88%E7%BB%9F%E8%AE%A1%E8%AE%A2%E5%8D%95%E6%95%B0%E4%B8%8E%E9%A1%BE%E5%AE%A2%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1566. 重复至少 K 次且长度为 M 的模式【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1566.%20%E9%87%8D%E5%A4%8D%E8%87%B3%E5%B0%91%20K%20%E6%AC%A1%E4%B8%94%E9%95%BF%E5%BA%A6%E4%B8%BA%20M%20%E7%9A%84%E6%A8%A1%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1566.%20%E9%87%8D%E5%A4%8D%E8%87%B3%E5%B0%91%20K%20%E6%AC%A1%E4%B8%94%E9%95%BF%E5%BA%A6%E4%B8%BA%20M%20%E7%9A%84%E6%A8%A1%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1567. 乘积为正数的最长子数组长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1567.%20%E4%B9%98%E7%A7%AF%E4%B8%BA%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1567.%20%E4%B9%98%E7%A7%AF%E4%B8%BA%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1568. 使陆地分离的最少天数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1568.%20%E4%BD%BF%E9%99%86%E5%9C%B0%E5%88%86%E7%A6%BB%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1568.%20%E4%BD%BF%E9%99%86%E5%9C%B0%E5%88%86%E7%A6%BB%E7%9A%84%E6%9C%80%E5%B0%91%E5%A4%A9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1569. 将子数组重新排序得到同一个二叉搜索树的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1569.%20%E5%B0%86%E5%AD%90%E6%95%B0%E7%BB%84%E9%87%8D%E6%96%B0%E6%8E%92%E5%BA%8F%E5%BE%97%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1569.%20%E5%B0%86%E5%AD%90%E6%95%B0%E7%BB%84%E9%87%8D%E6%96%B0%E6%8E%92%E5%BA%8F%E5%BE%97%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1570. 两个稀疏向量的点积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1570.%20%E4%B8%A4%E4%B8%AA%E7%A8%80%E7%96%8F%E5%90%91%E9%87%8F%E7%9A%84%E7%82%B9%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1570.%20%E4%B8%A4%E4%B8%AA%E7%A8%80%E7%96%8F%E5%90%91%E9%87%8F%E7%9A%84%E7%82%B9%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1571. 仓库经理【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1571.%20%E4%BB%93%E5%BA%93%E7%BB%8F%E7%90%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1571.%20%E4%BB%93%E5%BA%93%E7%BB%8F%E7%90%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1572. 矩阵对角线元素的和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1572.%20%E7%9F%A9%E9%98%B5%E5%AF%B9%E8%A7%92%E7%BA%BF%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1572.%20%E7%9F%A9%E9%98%B5%E5%AF%B9%E8%A7%92%E7%BA%BF%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1573. 分割字符串的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1573.%20%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1573.%20%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1574. 删除最短的子数组使剩余数组有序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1574.%20%E5%88%A0%E9%99%A4%E6%9C%80%E7%9F%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E5%89%A9%E4%BD%99%E6%95%B0%E7%BB%84%E6%9C%89%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1574.%20%E5%88%A0%E9%99%A4%E6%9C%80%E7%9F%AD%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E4%BD%BF%E5%89%A9%E4%BD%99%E6%95%B0%E7%BB%84%E6%9C%89%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1575. 统计所有可行路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1575.%20%E7%BB%9F%E8%AE%A1%E6%89%80%E6%9C%89%E5%8F%AF%E8%A1%8C%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1575.%20%E7%BB%9F%E8%AE%A1%E6%89%80%E6%9C%89%E5%8F%AF%E8%A1%8C%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1576. 替换所有的问号【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1576.%20%E6%9B%BF%E6%8D%A2%E6%89%80%E6%9C%89%E7%9A%84%E9%97%AE%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1576.%20%E6%9B%BF%E6%8D%A2%E6%89%80%E6%9C%89%E7%9A%84%E9%97%AE%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1577. 数的平方等于两数乘积的方法数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1577.%20%E6%95%B0%E7%9A%84%E5%B9%B3%E6%96%B9%E7%AD%89%E4%BA%8E%E4%B8%A4%E6%95%B0%E4%B9%98%E7%A7%AF%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1577.%20%E6%95%B0%E7%9A%84%E5%B9%B3%E6%96%B9%E7%AD%89%E4%BA%8E%E4%B8%A4%E6%95%B0%E4%B9%98%E7%A7%AF%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1578. 使绳子变成彩色的最短时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1578.%20%E4%BD%BF%E7%BB%B3%E5%AD%90%E5%8F%98%E6%88%90%E5%BD%A9%E8%89%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1578.%20%E4%BD%BF%E7%BB%B3%E5%AD%90%E5%8F%98%E6%88%90%E5%BD%A9%E8%89%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1579. 保证图可完全遍历【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1579.%20%E4%BF%9D%E8%AF%81%E5%9B%BE%E5%8F%AF%E5%AE%8C%E5%85%A8%E9%81%8D%E5%8E%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1579.%20%E4%BF%9D%E8%AF%81%E5%9B%BE%E5%8F%AF%E5%AE%8C%E5%85%A8%E9%81%8D%E5%8E%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1580. 把箱子放进仓库里 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1580.%20%E6%8A%8A%E7%AE%B1%E5%AD%90%E6%94%BE%E8%BF%9B%E4%BB%93%E5%BA%93%E9%87%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1580.%20%E6%8A%8A%E7%AE%B1%E5%AD%90%E6%94%BE%E8%BF%9B%E4%BB%93%E5%BA%93%E9%87%8C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1581. 进店却未进行过交易的顾客【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1581.%20%E8%BF%9B%E5%BA%97%E5%8D%B4%E6%9C%AA%E8%BF%9B%E8%A1%8C%E8%BF%87%E4%BA%A4%E6%98%93%E7%9A%84%E9%A1%BE%E5%AE%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1581.%20%E8%BF%9B%E5%BA%97%E5%8D%B4%E6%9C%AA%E8%BF%9B%E8%A1%8C%E8%BF%87%E4%BA%A4%E6%98%93%E7%9A%84%E9%A1%BE%E5%AE%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1582. 二进制矩阵中的特殊位置【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1582.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1582.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E7%89%B9%E6%AE%8A%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1583. 统计不开心的朋友【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1583.%20%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%BC%80%E5%BF%83%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1583.%20%E7%BB%9F%E8%AE%A1%E4%B8%8D%E5%BC%80%E5%BF%83%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1584. 连接所有点的最小费用【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1584.%20%E8%BF%9E%E6%8E%A5%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1584.%20%E8%BF%9E%E6%8E%A5%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1585. 检查字符串是否可以通过排序子字符串得到另一个字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1585.%20%E6%A3%80%E6%9F%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%8E%92%E5%BA%8F%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%97%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1585.%20%E6%A3%80%E6%9F%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E6%8E%92%E5%BA%8F%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%97%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1586. 二叉搜索树迭代器 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1586.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1586.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E8%BF%AD%E4%BB%A3%E5%99%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1587. 银行账户概要 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1587.%20%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E6%A6%82%E8%A6%81%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1587.%20%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E6%A6%82%E8%A6%81%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1588. 所有奇数长度子数组的和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1588.%20%E6%89%80%E6%9C%89%E5%A5%87%E6%95%B0%E9%95%BF%E5%BA%A6%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1588.%20%E6%89%80%E6%9C%89%E5%A5%87%E6%95%B0%E9%95%BF%E5%BA%A6%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1589. 所有排列中的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1589.%20%E6%89%80%E6%9C%89%E6%8E%92%E5%88%97%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1589.%20%E6%89%80%E6%9C%89%E6%8E%92%E5%88%97%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1590. 使数组和能被 P 整除【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1590.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%92%8C%E8%83%BD%E8%A2%AB%20P%20%E6%95%B4%E9%99%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1590.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%92%8C%E8%83%BD%E8%A2%AB%20P%20%E6%95%B4%E9%99%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1591. 奇怪的打印机 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1591.%20%E5%A5%87%E6%80%AA%E7%9A%84%E6%89%93%E5%8D%B0%E6%9C%BA%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1591.%20%E5%A5%87%E6%80%AA%E7%9A%84%E6%89%93%E5%8D%B0%E6%9C%BA%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1592. 重新排列单词间的空格【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1592.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8D%95%E8%AF%8D%E9%97%B4%E7%9A%84%E7%A9%BA%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1592.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%8D%95%E8%AF%8D%E9%97%B4%E7%9A%84%E7%A9%BA%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1593. 拆分字符串使唯一子字符串的数目最大【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1593.%20%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%BF%E5%94%AF%E4%B8%80%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E6%9C%80%E5%A4%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1593.%20%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BD%BF%E5%94%AF%E4%B8%80%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E6%9C%80%E5%A4%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1594. 矩阵的最大非负积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1594.%20%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%9E%E8%B4%9F%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1594.%20%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%9E%E8%B4%9F%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1595. 连通两组点的最小成本【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1595.%20%E8%BF%9E%E9%80%9A%E4%B8%A4%E7%BB%84%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1595.%20%E8%BF%9E%E9%80%9A%E4%B8%A4%E7%BB%84%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1596. 每位顾客最经常订购的商品【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1596.%20%E6%AF%8F%E4%BD%8D%E9%A1%BE%E5%AE%A2%E6%9C%80%E7%BB%8F%E5%B8%B8%E8%AE%A2%E8%B4%AD%E7%9A%84%E5%95%86%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1596.%20%E6%AF%8F%E4%BD%8D%E9%A1%BE%E5%AE%A2%E6%9C%80%E7%BB%8F%E5%B8%B8%E8%AE%A2%E8%B4%AD%E7%9A%84%E5%95%86%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1597. 根据中缀表达式构造二叉表达式树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1597.%20%E6%A0%B9%E6%8D%AE%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1597.%20%E6%A0%B9%E6%8D%AE%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%9E%84%E9%80%A0%E4%BA%8C%E5%8F%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1598. 文件夹操作日志搜集器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1598.%20%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C%E6%97%A5%E5%BF%97%E6%90%9C%E9%9B%86%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1598.%20%E6%96%87%E4%BB%B6%E5%A4%B9%E6%93%8D%E4%BD%9C%E6%97%A5%E5%BF%97%E6%90%9C%E9%9B%86%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1599. 经营摩天轮的最大利润【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1599.%20%E7%BB%8F%E8%90%A5%E6%91%A9%E5%A4%A9%E8%BD%AE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1599.%20%E7%BB%8F%E8%90%A5%E6%91%A9%E5%A4%A9%E8%BD%AE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1600. 王位继承顺序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1600.%20%E7%8E%8B%E4%BD%8D%E7%BB%A7%E6%89%BF%E9%A1%BA%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1600.%20%E7%8E%8B%E4%BD%8D%E7%BB%A7%E6%89%BF%E9%A1%BA%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 18. 1601~1700\\n\\n- [ ] [1601. 最多可达成的换楼请求数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1601.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E8%BE%BE%E6%88%90%E7%9A%84%E6%8D%A2%E6%A5%BC%E8%AF%B7%E6%B1%82%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1601.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E8%BE%BE%E6%88%90%E7%9A%84%E6%8D%A2%E6%A5%BC%E8%AF%B7%E6%B1%82%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1602. 找到二叉树中最近的右侧节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1602.%20%E6%89%BE%E5%88%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1602.%20%E6%89%BE%E5%88%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E6%9C%80%E8%BF%91%E7%9A%84%E5%8F%B3%E4%BE%A7%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1603. 设计停车系统【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1603.%20%E8%AE%BE%E8%AE%A1%E5%81%9C%E8%BD%A6%E7%B3%BB%E7%BB%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1603.%20%E8%AE%BE%E8%AE%A1%E5%81%9C%E8%BD%A6%E7%B3%BB%E7%BB%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1604. 警告一小时内使用相同员工卡大于等于三次的人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1604.%20%E8%AD%A6%E5%91%8A%E4%B8%80%E5%B0%8F%E6%97%B6%E5%86%85%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%90%8C%E5%91%98%E5%B7%A5%E5%8D%A1%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E4%B8%89%E6%AC%A1%E7%9A%84%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1604.%20%E8%AD%A6%E5%91%8A%E4%B8%80%E5%B0%8F%E6%97%B6%E5%86%85%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%90%8C%E5%91%98%E5%B7%A5%E5%8D%A1%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E4%B8%89%E6%AC%A1%E7%9A%84%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1605. 给定行和列的和求可行矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1605.%20%E7%BB%99%E5%AE%9A%E8%A1%8C%E5%92%8C%E5%88%97%E7%9A%84%E5%92%8C%E6%B1%82%E5%8F%AF%E8%A1%8C%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1605.%20%E7%BB%99%E5%AE%9A%E8%A1%8C%E5%92%8C%E5%88%97%E7%9A%84%E5%92%8C%E6%B1%82%E5%8F%AF%E8%A1%8C%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1606. 找到处理最多请求的服务器【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1606.%20%E6%89%BE%E5%88%B0%E5%A4%84%E7%90%86%E6%9C%80%E5%A4%9A%E8%AF%B7%E6%B1%82%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1606.%20%E6%89%BE%E5%88%B0%E5%A4%84%E7%90%86%E6%9C%80%E5%A4%9A%E8%AF%B7%E6%B1%82%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1607. 没有卖出的卖家【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1607.%20%E6%B2%A1%E6%9C%89%E5%8D%96%E5%87%BA%E7%9A%84%E5%8D%96%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1607.%20%E6%B2%A1%E6%9C%89%E5%8D%96%E5%87%BA%E7%9A%84%E5%8D%96%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1608. 特殊数组的特征值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1608.%20%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1608.%20%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%E7%9A%84%E7%89%B9%E5%BE%81%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1609. 奇偶树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1609.%20%E5%A5%87%E5%81%B6%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1609.%20%E5%A5%87%E5%81%B6%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1610. 可见点的最大数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1610.%20%E5%8F%AF%E8%A7%81%E7%82%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1610.%20%E5%8F%AF%E8%A7%81%E7%82%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1611. 使整数变为 0 的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1611.%20%E4%BD%BF%E6%95%B4%E6%95%B0%E5%8F%98%E4%B8%BA%200%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1611.%20%E4%BD%BF%E6%95%B4%E6%95%B0%E5%8F%98%E4%B8%BA%200%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1612. 检查两棵二叉表达式树是否等价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1612.%20%E6%A3%80%E6%9F%A5%E4%B8%A4%E6%A3%B5%E4%BA%8C%E5%8F%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91%E6%98%AF%E5%90%A6%E7%AD%89%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1612.%20%E6%A3%80%E6%9F%A5%E4%B8%A4%E6%A3%B5%E4%BA%8C%E5%8F%89%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91%E6%98%AF%E5%90%A6%E7%AD%89%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1613. 找到遗失的ID【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1613.%20%E6%89%BE%E5%88%B0%E9%81%97%E5%A4%B1%E7%9A%84ID%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1613.%20%E6%89%BE%E5%88%B0%E9%81%97%E5%A4%B1%E7%9A%84ID%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1614. 括号的最大嵌套深度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1614.%20%E6%8B%AC%E5%8F%B7%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B5%8C%E5%A5%97%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1614.%20%E6%8B%AC%E5%8F%B7%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B5%8C%E5%A5%97%E6%B7%B1%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1615. 最大网络秩【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1615.%20%E6%9C%80%E5%A4%A7%E7%BD%91%E7%BB%9C%E7%A7%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1615.%20%E6%9C%80%E5%A4%A7%E7%BD%91%E7%BB%9C%E7%A7%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1616. 分割两个字符串得到回文串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1616.%20%E5%88%86%E5%89%B2%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%97%E5%88%B0%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1616.%20%E5%88%86%E5%89%B2%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BE%97%E5%88%B0%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1617. 统计子树中城市之间最大距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1617.%20%E7%BB%9F%E8%AE%A1%E5%AD%90%E6%A0%91%E4%B8%AD%E5%9F%8E%E5%B8%82%E4%B9%8B%E9%97%B4%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1617.%20%E7%BB%9F%E8%AE%A1%E5%AD%90%E6%A0%91%E4%B8%AD%E5%9F%8E%E5%B8%82%E4%B9%8B%E9%97%B4%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1618. 找出适应屏幕的最大字号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1618.%20%E6%89%BE%E5%87%BA%E9%80%82%E5%BA%94%E5%B1%8F%E5%B9%95%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%97%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1618.%20%E6%89%BE%E5%87%BA%E9%80%82%E5%BA%94%E5%B1%8F%E5%B9%95%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%97%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1619. 删除某些元素后的数组均值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1619.%20%E5%88%A0%E9%99%A4%E6%9F%90%E4%BA%9B%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1619.%20%E5%88%A0%E9%99%A4%E6%9F%90%E4%BA%9B%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1620. 网络信号最好的坐标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1620.%20%E7%BD%91%E7%BB%9C%E4%BF%A1%E5%8F%B7%E6%9C%80%E5%A5%BD%E7%9A%84%E5%9D%90%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1620.%20%E7%BD%91%E7%BB%9C%E4%BF%A1%E5%8F%B7%E6%9C%80%E5%A5%BD%E7%9A%84%E5%9D%90%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1621. 大小为 K 的不重叠线段的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1621.%20%E5%A4%A7%E5%B0%8F%E4%B8%BA%20K%20%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1621.%20%E5%A4%A7%E5%B0%8F%E4%B8%BA%20K%20%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%BA%BF%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1622. 奇妙序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1622.%20%E5%A5%87%E5%A6%99%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1622.%20%E5%A5%87%E5%A6%99%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1623. 三人国家代表队【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1623.%20%E4%B8%89%E4%BA%BA%E5%9B%BD%E5%AE%B6%E4%BB%A3%E8%A1%A8%E9%98%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1623.%20%E4%B8%89%E4%BA%BA%E5%9B%BD%E5%AE%B6%E4%BB%A3%E8%A1%A8%E9%98%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1624. 两个相同字符之间的最长子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1624.%20%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1624.%20%E4%B8%A4%E4%B8%AA%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1625. 执行操作后字典序最小的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1625.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1625.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1626. 无矛盾的最佳球队【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1626.%20%E6%97%A0%E7%9F%9B%E7%9B%BE%E7%9A%84%E6%9C%80%E4%BD%B3%E7%90%83%E9%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1626.%20%E6%97%A0%E7%9F%9B%E7%9B%BE%E7%9A%84%E6%9C%80%E4%BD%B3%E7%90%83%E9%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1627. 带阈值的图连通性【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1627.%20%E5%B8%A6%E9%98%88%E5%80%BC%E7%9A%84%E5%9B%BE%E8%BF%9E%E9%80%9A%E6%80%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1627.%20%E5%B8%A6%E9%98%88%E5%80%BC%E7%9A%84%E5%9B%BE%E8%BF%9E%E9%80%9A%E6%80%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1628. 设计带解析函数的表达式树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1628.%20%E8%AE%BE%E8%AE%A1%E5%B8%A6%E8%A7%A3%E6%9E%90%E5%87%BD%E6%95%B0%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1628.%20%E8%AE%BE%E8%AE%A1%E5%B8%A6%E8%A7%A3%E6%9E%90%E5%87%BD%E6%95%B0%E7%9A%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1629. 按键持续时间最长的键【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1629.%20%E6%8C%89%E9%94%AE%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E6%9C%80%E9%95%BF%E7%9A%84%E9%94%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1629.%20%E6%8C%89%E9%94%AE%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E6%9C%80%E9%95%BF%E7%9A%84%E9%94%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1630. 等差子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1630.%20%E7%AD%89%E5%B7%AE%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1630.%20%E7%AD%89%E5%B7%AE%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1631. 最小体力消耗路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1631.%20%E6%9C%80%E5%B0%8F%E4%BD%93%E5%8A%9B%E6%B6%88%E8%80%97%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1631.%20%E6%9C%80%E5%B0%8F%E4%BD%93%E5%8A%9B%E6%B6%88%E8%80%97%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1632. 矩阵转换后的秩【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1632.%20%E7%9F%A9%E9%98%B5%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%E7%A7%A9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1632.%20%E7%9F%A9%E9%98%B5%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%E7%A7%A9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1633. 各赛事的用户注册率【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1633.%20%E5%90%84%E8%B5%9B%E4%BA%8B%E7%9A%84%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1633.%20%E5%90%84%E8%B5%9B%E4%BA%8B%E7%9A%84%E7%94%A8%E6%88%B7%E6%B3%A8%E5%86%8C%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1634. 求两个多项式链表的和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1634.%20%E6%B1%82%E4%B8%A4%E4%B8%AA%E5%A4%9A%E9%A1%B9%E5%BC%8F%E9%93%BE%E8%A1%A8%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1634.%20%E6%B1%82%E4%B8%A4%E4%B8%AA%E5%A4%9A%E9%A1%B9%E5%BC%8F%E9%93%BE%E8%A1%A8%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1635. Hopper 公司查询 I【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1635.%20Hopper%20%E5%85%AC%E5%8F%B8%E6%9F%A5%E8%AF%A2%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1635.%20Hopper%20%E5%85%AC%E5%8F%B8%E6%9F%A5%E8%AF%A2%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1636. 按照频率将数组升序排序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1636.%20%E6%8C%89%E7%85%A7%E9%A2%91%E7%8E%87%E5%B0%86%E6%95%B0%E7%BB%84%E5%8D%87%E5%BA%8F%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1636.%20%E6%8C%89%E7%85%A7%E9%A2%91%E7%8E%87%E5%B0%86%E6%95%B0%E7%BB%84%E5%8D%87%E5%BA%8F%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1637. 两点之间不包含任何点的最宽垂直区域【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1637.%20%E4%B8%A4%E7%82%B9%E4%B9%8B%E9%97%B4%E4%B8%8D%E5%8C%85%E5%90%AB%E4%BB%BB%E4%BD%95%E7%82%B9%E7%9A%84%E6%9C%80%E5%AE%BD%E5%9E%82%E7%9B%B4%E5%8C%BA%E5%9F%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1637.%20%E4%B8%A4%E7%82%B9%E4%B9%8B%E9%97%B4%E4%B8%8D%E5%8C%85%E5%90%AB%E4%BB%BB%E4%BD%95%E7%82%B9%E7%9A%84%E6%9C%80%E5%AE%BD%E5%9E%82%E7%9B%B4%E5%8C%BA%E5%9F%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1638. 统计只差一个字符的子串数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1638.%20%E7%BB%9F%E8%AE%A1%E5%8F%AA%E5%B7%AE%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1638.%20%E7%BB%9F%E8%AE%A1%E5%8F%AA%E5%B7%AE%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1639. 通过给定词典构造目标字符串的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1639.%20%E9%80%9A%E8%BF%87%E7%BB%99%E5%AE%9A%E8%AF%8D%E5%85%B8%E6%9E%84%E9%80%A0%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1639.%20%E9%80%9A%E8%BF%87%E7%BB%99%E5%AE%9A%E8%AF%8D%E5%85%B8%E6%9E%84%E9%80%A0%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1640. 能否连接形成数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1640.%20%E8%83%BD%E5%90%A6%E8%BF%9E%E6%8E%A5%E5%BD%A2%E6%88%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1640.%20%E8%83%BD%E5%90%A6%E8%BF%9E%E6%8E%A5%E5%BD%A2%E6%88%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1641. 统计字典序元音字符串的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1641.%20%E7%BB%9F%E8%AE%A1%E5%AD%97%E5%85%B8%E5%BA%8F%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1641.%20%E7%BB%9F%E8%AE%A1%E5%AD%97%E5%85%B8%E5%BA%8F%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1642. 可以到达的最远建筑【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1642.%20%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E7%9A%84%E6%9C%80%E8%BF%9C%E5%BB%BA%E7%AD%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1642.%20%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E7%9A%84%E6%9C%80%E8%BF%9C%E5%BB%BA%E7%AD%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1643. 第 K 条最小指令【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1643.%20%E7%AC%AC%20K%20%E6%9D%A1%E6%9C%80%E5%B0%8F%E6%8C%87%E4%BB%A4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1643.%20%E7%AC%AC%20K%20%E6%9D%A1%E6%9C%80%E5%B0%8F%E6%8C%87%E4%BB%A4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1644. 二叉树的最近公共祖先 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1644.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1644.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1645. Hopper 公司查询 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1645.%20Hopper%20%E5%85%AC%E5%8F%B8%E6%9F%A5%E8%AF%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1645.%20Hopper%20%E5%85%AC%E5%8F%B8%E6%9F%A5%E8%AF%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1646. 获取生成数组中的最大值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1646.%20%E8%8E%B7%E5%8F%96%E7%94%9F%E6%88%90%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1646.%20%E8%8E%B7%E5%8F%96%E7%94%9F%E6%88%90%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1647. 字符频次唯一的最小删除次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1647.%20%E5%AD%97%E7%AC%A6%E9%A2%91%E6%AC%A1%E5%94%AF%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1647.%20%E5%AD%97%E7%AC%A6%E9%A2%91%E6%AC%A1%E5%94%AF%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1648. 销售价值减少的颜色球【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1648.%20%E9%94%80%E5%94%AE%E4%BB%B7%E5%80%BC%E5%87%8F%E5%B0%91%E7%9A%84%E9%A2%9C%E8%89%B2%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1648.%20%E9%94%80%E5%94%AE%E4%BB%B7%E5%80%BC%E5%87%8F%E5%B0%91%E7%9A%84%E9%A2%9C%E8%89%B2%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1649. 通过指令创建有序数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1649.%20%E9%80%9A%E8%BF%87%E6%8C%87%E4%BB%A4%E5%88%9B%E5%BB%BA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1649.%20%E9%80%9A%E8%BF%87%E6%8C%87%E4%BB%A4%E5%88%9B%E5%BB%BA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1650. 二叉树的最近公共祖先 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1650.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1650.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1651. Hopper 公司查询 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1651.%20Hopper%20%E5%85%AC%E5%8F%B8%E6%9F%A5%E8%AF%A2%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1651.%20Hopper%20%E5%85%AC%E5%8F%B8%E6%9F%A5%E8%AF%A2%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1652. 拆炸弹【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1652.%20%E6%8B%86%E7%82%B8%E5%BC%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1652.%20%E6%8B%86%E7%82%B8%E5%BC%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1653. 使字符串平衡的最少删除次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1653.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B9%B3%E8%A1%A1%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1653.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B9%B3%E8%A1%A1%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1654. 到家的最少跳跃次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1654.%20%E5%88%B0%E5%AE%B6%E7%9A%84%E6%9C%80%E5%B0%91%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1654.%20%E5%88%B0%E5%AE%B6%E7%9A%84%E6%9C%80%E5%B0%91%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1655. 分配重复整数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1655.%20%E5%88%86%E9%85%8D%E9%87%8D%E5%A4%8D%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1655.%20%E5%88%86%E9%85%8D%E9%87%8D%E5%A4%8D%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1656. 设计有序流【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1656.%20%E8%AE%BE%E8%AE%A1%E6%9C%89%E5%BA%8F%E6%B5%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1656.%20%E8%AE%BE%E8%AE%A1%E6%9C%89%E5%BA%8F%E6%B5%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1657. 确定两个字符串是否接近【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1657.%20%E7%A1%AE%E5%AE%9A%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%8E%A5%E8%BF%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1657.%20%E7%A1%AE%E5%AE%9A%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%8E%A5%E8%BF%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1658. 将 x 减到 0 的最小操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1658.%20%E5%B0%86%20x%20%E5%87%8F%E5%88%B0%200%20%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1658.%20%E5%B0%86%20x%20%E5%87%8F%E5%88%B0%200%20%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1659. 最大化网格幸福感【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1659.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E7%BD%91%E6%A0%BC%E5%B9%B8%E7%A6%8F%E6%84%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1659.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E7%BD%91%E6%A0%BC%E5%B9%B8%E7%A6%8F%E6%84%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1660. 纠正二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1660.%20%E7%BA%A0%E6%AD%A3%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1660.%20%E7%BA%A0%E6%AD%A3%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1661. 每台机器的进程平均运行时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1661.%20%E6%AF%8F%E5%8F%B0%E6%9C%BA%E5%99%A8%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%B9%B3%E5%9D%87%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1661.%20%E6%AF%8F%E5%8F%B0%E6%9C%BA%E5%99%A8%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%B9%B3%E5%9D%87%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1662. 检查两个字符串数组是否相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1662.%20%E6%A3%80%E6%9F%A5%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1662.%20%E6%A3%80%E6%9F%A5%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1663. 具有给定数值的最小字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1663.%20%E5%85%B7%E6%9C%89%E7%BB%99%E5%AE%9A%E6%95%B0%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1663.%20%E5%85%B7%E6%9C%89%E7%BB%99%E5%AE%9A%E6%95%B0%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1664. 生成平衡数组的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1664.%20%E7%94%9F%E6%88%90%E5%B9%B3%E8%A1%A1%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1664.%20%E7%94%9F%E6%88%90%E5%B9%B3%E8%A1%A1%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1665. 完成所有任务的最少初始能量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1665.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%9D%E5%A7%8B%E8%83%BD%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1665.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%9D%E5%A7%8B%E8%83%BD%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1666. 改变二叉树的根节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1666.%20%E6%94%B9%E5%8F%98%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1666.%20%E6%94%B9%E5%8F%98%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%A0%B9%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1667. 修复表中的名字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1667.%20%E4%BF%AE%E5%A4%8D%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1667.%20%E4%BF%AE%E5%A4%8D%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1668. 最大重复子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1668.%20%E6%9C%80%E5%A4%A7%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1668.%20%E6%9C%80%E5%A4%A7%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1669. 合并两个链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1669.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1669.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1670. 设计前中后队列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1670.%20%E8%AE%BE%E8%AE%A1%E5%89%8D%E4%B8%AD%E5%90%8E%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1670.%20%E8%AE%BE%E8%AE%A1%E5%89%8D%E4%B8%AD%E5%90%8E%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1671. 得到山形数组的最少删除次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1671.%20%E5%BE%97%E5%88%B0%E5%B1%B1%E5%BD%A2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1671.%20%E5%BE%97%E5%88%B0%E5%B1%B1%E5%BD%A2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1672. 最富有客户的资产总量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1672.%20%E6%9C%80%E5%AF%8C%E6%9C%89%E5%AE%A2%E6%88%B7%E7%9A%84%E8%B5%84%E4%BA%A7%E6%80%BB%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1672.%20%E6%9C%80%E5%AF%8C%E6%9C%89%E5%AE%A2%E6%88%B7%E7%9A%84%E8%B5%84%E4%BA%A7%E6%80%BB%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1673. 找出最具竞争力的子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1673.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%85%B7%E7%AB%9E%E4%BA%89%E5%8A%9B%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1673.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%85%B7%E7%AB%9E%E4%BA%89%E5%8A%9B%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1674. 使数组互补的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1674.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%BA%92%E8%A1%A5%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1674.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%BA%92%E8%A1%A5%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1675. 数组的最小偏移量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1675.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%81%8F%E7%A7%BB%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1675.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%81%8F%E7%A7%BB%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1676. 二叉树的最近公共祖先 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1676.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1676.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1677. 发票中的产品金额【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1677.%20%E5%8F%91%E7%A5%A8%E4%B8%AD%E7%9A%84%E4%BA%A7%E5%93%81%E9%87%91%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1677.%20%E5%8F%91%E7%A5%A8%E4%B8%AD%E7%9A%84%E4%BA%A7%E5%93%81%E9%87%91%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1678. 设计 Goal 解析器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1678.%20%E8%AE%BE%E8%AE%A1%20Goal%20%E8%A7%A3%E6%9E%90%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1678.%20%E8%AE%BE%E8%AE%A1%20Goal%20%E8%A7%A3%E6%9E%90%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1679. K 和数对的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1679.%20K%20%E5%92%8C%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1679.%20K%20%E5%92%8C%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1680. 连接连续二进制数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1680.%20%E8%BF%9E%E6%8E%A5%E8%BF%9E%E7%BB%AD%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1680.%20%E8%BF%9E%E6%8E%A5%E8%BF%9E%E7%BB%AD%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1681. 最小不兼容性【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1681.%20%E6%9C%80%E5%B0%8F%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%80%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1681.%20%E6%9C%80%E5%B0%8F%E4%B8%8D%E5%85%BC%E5%AE%B9%E6%80%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1682. 最长回文子序列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1682.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1682.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1683. 无效的推文【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1683.%20%E6%97%A0%E6%95%88%E7%9A%84%E6%8E%A8%E6%96%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1683.%20%E6%97%A0%E6%95%88%E7%9A%84%E6%8E%A8%E6%96%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [x] [1684. 统计一致字符串的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1684.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E8%87%B4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/1684.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E8%87%B4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/1684.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E8%87%B4%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [1685. 有序数组中差绝对值之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1685.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%B7%AE%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1685.%20%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%B7%AE%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1686. 石子游戏 VI【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1686.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20VI%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1686.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20VI%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1687. 从仓库到码头运输箱子【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1687.%20%E4%BB%8E%E4%BB%93%E5%BA%93%E5%88%B0%E7%A0%81%E5%A4%B4%E8%BF%90%E8%BE%93%E7%AE%B1%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1687.%20%E4%BB%8E%E4%BB%93%E5%BA%93%E5%88%B0%E7%A0%81%E5%A4%B4%E8%BF%90%E8%BE%93%E7%AE%B1%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1688. 比赛中的配对次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1688.%20%E6%AF%94%E8%B5%9B%E4%B8%AD%E7%9A%84%E9%85%8D%E5%AF%B9%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1688.%20%E6%AF%94%E8%B5%9B%E4%B8%AD%E7%9A%84%E9%85%8D%E5%AF%B9%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1689. 十-二进制数的最少数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1689.%20%E5%8D%81-%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1689.%20%E5%8D%81-%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1690. 石子游戏 VII【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1690.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20VII%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1690.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20VII%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1691. 堆叠长方体的最大高度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1691.%20%E5%A0%86%E5%8F%A0%E9%95%BF%E6%96%B9%E4%BD%93%E7%9A%84%E6%9C%80%E5%A4%A7%E9%AB%98%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1691.%20%E5%A0%86%E5%8F%A0%E9%95%BF%E6%96%B9%E4%BD%93%E7%9A%84%E6%9C%80%E5%A4%A7%E9%AB%98%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1692. 计算分配糖果的不同方式【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1692.%20%E8%AE%A1%E7%AE%97%E5%88%86%E9%85%8D%E7%B3%96%E6%9E%9C%E7%9A%84%E4%B8%8D%E5%90%8C%E6%96%B9%E5%BC%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1692.%20%E8%AE%A1%E7%AE%97%E5%88%86%E9%85%8D%E7%B3%96%E6%9E%9C%E7%9A%84%E4%B8%8D%E5%90%8C%E6%96%B9%E5%BC%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1693. 每天的领导和合伙人【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1693.%20%E6%AF%8F%E5%A4%A9%E7%9A%84%E9%A2%86%E5%AF%BC%E5%92%8C%E5%90%88%E4%BC%99%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1693.%20%E6%AF%8F%E5%A4%A9%E7%9A%84%E9%A2%86%E5%AF%BC%E5%92%8C%E5%90%88%E4%BC%99%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1694. 重新格式化电话号码【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1694.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1694.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1695. 删除子数组的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1695.%20%E5%88%A0%E9%99%A4%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/1695.%20%E5%88%A0%E9%99%A4%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 滑动窗口](https://tdahuyou.github.io/TNotes.leetcode/notes/1695.%20%E5%88%A0%E9%99%A4%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---滑动窗口)\\n  - [leetcode](https://leetcode.cn/problems/maximum-erasure-value/)\\n- [ ] [1696. 跳跃游戏 VI【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1696.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20VI%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1696.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20VI%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1697. 检查边长度限制的路径是否存在【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1697.%20%E6%A3%80%E6%9F%A5%E8%BE%B9%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1697.%20%E6%A3%80%E6%9F%A5%E8%BE%B9%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1698. 字符串的不同子字符串个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1698.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%8D%E5%90%8C%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1698.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%8D%E5%90%8C%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1699. 两人之间的通话次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1699.%20%E4%B8%A4%E4%BA%BA%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E8%AF%9D%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1699.%20%E4%B8%A4%E4%BA%BA%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E8%AF%9D%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1700. 无法吃午餐的学生数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1700.%20%E6%97%A0%E6%B3%95%E5%90%83%E5%8D%88%E9%A4%90%E7%9A%84%E5%AD%A6%E7%94%9F%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1700.%20%E6%97%A0%E6%B3%95%E5%90%83%E5%8D%88%E9%A4%90%E7%9A%84%E5%AD%A6%E7%94%9F%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 19. 1701~1800\\n\\n- [ ] [1701. 平均等待时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1701.%20%E5%B9%B3%E5%9D%87%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1701.%20%E5%B9%B3%E5%9D%87%E7%AD%89%E5%BE%85%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1702. 修改后的最大二进制字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1702.%20%E4%BF%AE%E6%94%B9%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1702.%20%E4%BF%AE%E6%94%B9%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1703. 得到连续 K 个 1 的最少相邻交换次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1703.%20%E5%BE%97%E5%88%B0%E8%BF%9E%E7%BB%AD%20K%20%E4%B8%AA%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E7%9B%B8%E9%82%BB%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1703.%20%E5%BE%97%E5%88%B0%E8%BF%9E%E7%BB%AD%20K%20%E4%B8%AA%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E7%9B%B8%E9%82%BB%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1704. 判断字符串的两半是否相似【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1704.%20%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%A4%E5%8D%8A%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BC%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1704.%20%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%A4%E5%8D%8A%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BC%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1705. 吃苹果的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1705.%20%E5%90%83%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1705.%20%E5%90%83%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1706. 球会落何处【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1706.%20%E7%90%83%E4%BC%9A%E8%90%BD%E4%BD%95%E5%A4%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1706.%20%E7%90%83%E4%BC%9A%E8%90%BD%E4%BD%95%E5%A4%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1707. 与数组中元素的最大异或值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1707.%20%E4%B8%8E%E6%95%B0%E7%BB%84%E4%B8%AD%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1707.%20%E4%B8%8E%E6%95%B0%E7%BB%84%E4%B8%AD%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1708. 长度为 K 的最大子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1708.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1708.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1709. 访问日期之间最大的空档期【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1709.%20%E8%AE%BF%E9%97%AE%E6%97%A5%E6%9C%9F%E4%B9%8B%E9%97%B4%E6%9C%80%E5%A4%A7%E7%9A%84%E7%A9%BA%E6%A1%A3%E6%9C%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1709.%20%E8%AE%BF%E9%97%AE%E6%97%A5%E6%9C%9F%E4%B9%8B%E9%97%B4%E6%9C%80%E5%A4%A7%E7%9A%84%E7%A9%BA%E6%A1%A3%E6%9C%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1710. 卡车上的最大单元数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1710.%20%E5%8D%A1%E8%BD%A6%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8D%95%E5%85%83%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1710.%20%E5%8D%A1%E8%BD%A6%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8D%95%E5%85%83%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1711. 大餐计数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1711.%20%E5%A4%A7%E9%A4%90%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1711.%20%E5%A4%A7%E9%A4%90%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1712. 将数组分成三个子数组的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1712.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E4%B8%89%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1712.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E4%B8%89%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1713. 得到子序列的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1713.%20%E5%BE%97%E5%88%B0%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1713.%20%E5%BE%97%E5%88%B0%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1714. 数组中特殊等间距元素的和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1714.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%89%B9%E6%AE%8A%E7%AD%89%E9%97%B4%E8%B7%9D%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1714.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%89%B9%E6%AE%8A%E7%AD%89%E9%97%B4%E8%B7%9D%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1715. 苹果和橘子的个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1715.%20%E8%8B%B9%E6%9E%9C%E5%92%8C%E6%A9%98%E5%AD%90%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1715.%20%E8%8B%B9%E6%9E%9C%E5%92%8C%E6%A9%98%E5%AD%90%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1716. 计算力扣银行的钱【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1716.%20%E8%AE%A1%E7%AE%97%E5%8A%9B%E6%89%A3%E9%93%B6%E8%A1%8C%E7%9A%84%E9%92%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1716.%20%E8%AE%A1%E7%AE%97%E5%8A%9B%E6%89%A3%E9%93%B6%E8%A1%8C%E7%9A%84%E9%92%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1717. 删除子字符串的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1717.%20%E5%88%A0%E9%99%A4%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1717.%20%E5%88%A0%E9%99%A4%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1718. 构建字典序最大的可行序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1718.%20%E6%9E%84%E5%BB%BA%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%8F%AF%E8%A1%8C%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1718.%20%E6%9E%84%E5%BB%BA%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%8F%AF%E8%A1%8C%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1719. 重构一棵树的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1719.%20%E9%87%8D%E6%9E%84%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1719.%20%E9%87%8D%E6%9E%84%E4%B8%80%E6%A3%B5%E6%A0%91%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1720. 解码异或后的数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1720.%20%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1720.%20%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1721. 交换链表中的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1721.%20%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1721.%20%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1722. 执行交换操作后的最小汉明距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1722.%20%E6%89%A7%E8%A1%8C%E4%BA%A4%E6%8D%A2%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1722.%20%E6%89%A7%E8%A1%8C%E4%BA%A4%E6%8D%A2%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1723. 完成所有工作的最短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1723.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1723.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1724. 检查边长度限制的路径是否存在 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1724.%20%E6%A3%80%E6%9F%A5%E8%BE%B9%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1724.%20%E6%A3%80%E6%9F%A5%E8%BE%B9%E9%95%BF%E5%BA%A6%E9%99%90%E5%88%B6%E7%9A%84%E8%B7%AF%E5%BE%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1725. 可以形成最大正方形的矩形数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1725.%20%E5%8F%AF%E4%BB%A5%E5%BD%A2%E6%88%90%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%9A%84%E7%9F%A9%E5%BD%A2%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1725.%20%E5%8F%AF%E4%BB%A5%E5%BD%A2%E6%88%90%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%9A%84%E7%9F%A9%E5%BD%A2%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1726. 同积元组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1726.%20%E5%90%8C%E7%A7%AF%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1726.%20%E5%90%8C%E7%A7%AF%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1727. 重新排列后的最大子矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1727.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1727.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1728. 猫和老鼠 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1728.%20%E7%8C%AB%E5%92%8C%E8%80%81%E9%BC%A0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1728.%20%E7%8C%AB%E5%92%8C%E8%80%81%E9%BC%A0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1729. 求关注者的数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1729.%20%E6%B1%82%E5%85%B3%E6%B3%A8%E8%80%85%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1729.%20%E6%B1%82%E5%85%B3%E6%B3%A8%E8%80%85%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1730. 获取食物的最短路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1730.%20%E8%8E%B7%E5%8F%96%E9%A3%9F%E7%89%A9%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1730.%20%E8%8E%B7%E5%8F%96%E9%A3%9F%E7%89%A9%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1731. 每位经理的下属员工数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1731.%20%E6%AF%8F%E4%BD%8D%E7%BB%8F%E7%90%86%E7%9A%84%E4%B8%8B%E5%B1%9E%E5%91%98%E5%B7%A5%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1731.%20%E6%AF%8F%E4%BD%8D%E7%BB%8F%E7%90%86%E7%9A%84%E4%B8%8B%E5%B1%9E%E5%91%98%E5%B7%A5%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1732. 找到最高海拔【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1732.%20%E6%89%BE%E5%88%B0%E6%9C%80%E9%AB%98%E6%B5%B7%E6%8B%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1732.%20%E6%89%BE%E5%88%B0%E6%9C%80%E9%AB%98%E6%B5%B7%E6%8B%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1733. 需要教语言的最少人数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1733.%20%E9%9C%80%E8%A6%81%E6%95%99%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9C%80%E5%B0%91%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1733.%20%E9%9C%80%E8%A6%81%E6%95%99%E8%AF%AD%E8%A8%80%E7%9A%84%E6%9C%80%E5%B0%91%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1734. 解码异或后的排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1734.%20%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1734.%20%E8%A7%A3%E7%A0%81%E5%BC%82%E6%88%96%E5%90%8E%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1735. 生成乘积数组的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1735.%20%E7%94%9F%E6%88%90%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1735.%20%E7%94%9F%E6%88%90%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1736. 替换隐藏数字得到的最晚时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1736.%20%E6%9B%BF%E6%8D%A2%E9%9A%90%E8%97%8F%E6%95%B0%E5%AD%97%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E6%99%9A%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1736.%20%E6%9B%BF%E6%8D%A2%E9%9A%90%E8%97%8F%E6%95%B0%E5%AD%97%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E6%99%9A%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1737. 满足三条件之一需改变的最少字符数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1737.%20%E6%BB%A1%E8%B6%B3%E4%B8%89%E6%9D%A1%E4%BB%B6%E4%B9%8B%E4%B8%80%E9%9C%80%E6%94%B9%E5%8F%98%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1737.%20%E6%BB%A1%E8%B6%B3%E4%B8%89%E6%9D%A1%E4%BB%B6%E4%B9%8B%E4%B8%80%E9%9C%80%E6%94%B9%E5%8F%98%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1738. 找出第 K 大的异或坐标值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1738.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E5%A4%A7%E7%9A%84%E5%BC%82%E6%88%96%E5%9D%90%E6%A0%87%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1738.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E5%A4%A7%E7%9A%84%E5%BC%82%E6%88%96%E5%9D%90%E6%A0%87%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1739. 放置盒子【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1739.%20%E6%94%BE%E7%BD%AE%E7%9B%92%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1739.%20%E6%94%BE%E7%BD%AE%E7%9B%92%E5%AD%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1740. 找到二叉树中的距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1740.%20%E6%89%BE%E5%88%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1740.%20%E6%89%BE%E5%88%B0%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1741. 查找每个员工花费的总时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1741.%20%E6%9F%A5%E6%89%BE%E6%AF%8F%E4%B8%AA%E5%91%98%E5%B7%A5%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1741.%20%E6%9F%A5%E6%89%BE%E6%AF%8F%E4%B8%AA%E5%91%98%E5%B7%A5%E8%8A%B1%E8%B4%B9%E7%9A%84%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1742. 盒子中小球的最大数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1742.%20%E7%9B%92%E5%AD%90%E4%B8%AD%E5%B0%8F%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1742.%20%E7%9B%92%E5%AD%90%E4%B8%AD%E5%B0%8F%E7%90%83%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1743. 从相邻元素对还原数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1743.%20%E4%BB%8E%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E5%AF%B9%E8%BF%98%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1743.%20%E4%BB%8E%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E5%AF%B9%E8%BF%98%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1744. 你能在你最喜欢的那天吃到你最喜欢的糖果吗？【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1744.%20%E4%BD%A0%E8%83%BD%E5%9C%A8%E4%BD%A0%E6%9C%80%E5%96%9C%E6%AC%A2%E7%9A%84%E9%82%A3%E5%A4%A9%E5%90%83%E5%88%B0%E4%BD%A0%E6%9C%80%E5%96%9C%E6%AC%A2%E7%9A%84%E7%B3%96%E6%9E%9C%E5%90%97%EF%BC%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1744.%20%E4%BD%A0%E8%83%BD%E5%9C%A8%E4%BD%A0%E6%9C%80%E5%96%9C%E6%AC%A2%E7%9A%84%E9%82%A3%E5%A4%A9%E5%90%83%E5%88%B0%E4%BD%A0%E6%9C%80%E5%96%9C%E6%AC%A2%E7%9A%84%E7%B3%96%E6%9E%9C%E5%90%97%EF%BC%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1745. 分割回文串 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1745.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1745.%20%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1746. 经过一次操作后的最大子数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1746.%20%E7%BB%8F%E8%BF%87%E4%B8%80%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1746.%20%E7%BB%8F%E8%BF%87%E4%B8%80%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1747. 应该被禁止的 Leetflex 账户【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1747.%20%E5%BA%94%E8%AF%A5%E8%A2%AB%E7%A6%81%E6%AD%A2%E7%9A%84%20Leetflex%20%E8%B4%A6%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1747.%20%E5%BA%94%E8%AF%A5%E8%A2%AB%E7%A6%81%E6%AD%A2%E7%9A%84%20Leetflex%20%E8%B4%A6%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1748. 唯一元素的和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1748.%20%E5%94%AF%E4%B8%80%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1748.%20%E5%94%AF%E4%B8%80%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1749. 任意子数组和的绝对值的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1749.%20%E4%BB%BB%E6%84%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1749.%20%E4%BB%BB%E6%84%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1750. 删除字符串两端相同字符后的最短长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1750.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%A4%E7%AB%AF%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E5%90%8E%E7%9A%84%E6%9C%80%E7%9F%AD%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1750.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%A4%E7%AB%AF%E7%9B%B8%E5%90%8C%E5%AD%97%E7%AC%A6%E5%90%8E%E7%9A%84%E6%9C%80%E7%9F%AD%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1751. 最多可以参加的会议数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1751.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E5%8F%82%E5%8A%A0%E7%9A%84%E4%BC%9A%E8%AE%AE%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1751.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E5%8F%82%E5%8A%A0%E7%9A%84%E4%BC%9A%E8%AE%AE%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1752. 检查数组是否经排序和轮转得到【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1752.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%BB%8F%E6%8E%92%E5%BA%8F%E5%92%8C%E8%BD%AE%E8%BD%AC%E5%BE%97%E5%88%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1752.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E7%BB%8F%E6%8E%92%E5%BA%8F%E5%92%8C%E8%BD%AE%E8%BD%AC%E5%BE%97%E5%88%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1753. 移除石子的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1753.%20%E7%A7%BB%E9%99%A4%E7%9F%B3%E5%AD%90%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1753.%20%E7%A7%BB%E9%99%A4%E7%9F%B3%E5%AD%90%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1754. 构造字典序最大的合并字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1754.%20%E6%9E%84%E9%80%A0%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1754.%20%E6%9E%84%E9%80%A0%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1755. 最接近目标值的子序列和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1755.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1755.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1756. 设计最近使用（MRU）队列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1756.%20%E8%AE%BE%E8%AE%A1%E6%9C%80%E8%BF%91%E4%BD%BF%E7%94%A8%EF%BC%88MRU%EF%BC%89%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1756.%20%E8%AE%BE%E8%AE%A1%E6%9C%80%E8%BF%91%E4%BD%BF%E7%94%A8%EF%BC%88MRU%EF%BC%89%E9%98%9F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1757. 可回收且低脂的产品【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1757.%20%E5%8F%AF%E5%9B%9E%E6%94%B6%E4%B8%94%E4%BD%8E%E8%84%82%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1757.%20%E5%8F%AF%E5%9B%9E%E6%94%B6%E4%B8%94%E4%BD%8E%E8%84%82%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1758. 生成交替二进制字符串的最少操作数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1758.%20%E7%94%9F%E6%88%90%E4%BA%A4%E6%9B%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1758.%20%E7%94%9F%E6%88%90%E4%BA%A4%E6%9B%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1759. 统计同质子字符串的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1759.%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E8%B4%A8%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1759.%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E8%B4%A8%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1760. 袋子里最少数目的球【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1760.%20%E8%A2%8B%E5%AD%90%E9%87%8C%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E7%9A%84%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1760.%20%E8%A2%8B%E5%AD%90%E9%87%8C%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E7%9A%84%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1761. 一个图中连通三元组的最小度数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1761.%20%E4%B8%80%E4%B8%AA%E5%9B%BE%E4%B8%AD%E8%BF%9E%E9%80%9A%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BA%A6%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1761.%20%E4%B8%80%E4%B8%AA%E5%9B%BE%E4%B8%AD%E8%BF%9E%E9%80%9A%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BA%A6%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1762. 能看到海景的建筑物【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1762.%20%E8%83%BD%E7%9C%8B%E5%88%B0%E6%B5%B7%E6%99%AF%E7%9A%84%E5%BB%BA%E7%AD%91%E7%89%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1762.%20%E8%83%BD%E7%9C%8B%E5%88%B0%E6%B5%B7%E6%99%AF%E7%9A%84%E5%BB%BA%E7%AD%91%E7%89%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1763. 最长的美好子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1763.%20%E6%9C%80%E9%95%BF%E7%9A%84%E7%BE%8E%E5%A5%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1763.%20%E6%9C%80%E9%95%BF%E7%9A%84%E7%BE%8E%E5%A5%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1764. 通过连接另一个数组的子数组得到一个数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1764.%20%E9%80%9A%E8%BF%87%E8%BF%9E%E6%8E%A5%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1764.%20%E9%80%9A%E8%BF%87%E8%BF%9E%E6%8E%A5%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1765. 地图中的最高点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1765.%20%E5%9C%B0%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E9%AB%98%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1765.%20%E5%9C%B0%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E9%AB%98%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1766. 互质树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1766.%20%E4%BA%92%E8%B4%A8%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1766.%20%E4%BA%92%E8%B4%A8%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1767. 寻找没有被执行的任务对【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1767.%20%E5%AF%BB%E6%89%BE%E6%B2%A1%E6%9C%89%E8%A2%AB%E6%89%A7%E8%A1%8C%E7%9A%84%E4%BB%BB%E5%8A%A1%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1767.%20%E5%AF%BB%E6%89%BE%E6%B2%A1%E6%9C%89%E8%A2%AB%E6%89%A7%E8%A1%8C%E7%9A%84%E4%BB%BB%E5%8A%A1%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1768. 交替合并字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1768.%20%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1768.%20%E4%BA%A4%E6%9B%BF%E5%90%88%E5%B9%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1769. 移动所有球到每个盒子所需的最小操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1769.%20%E7%A7%BB%E5%8A%A8%E6%89%80%E6%9C%89%E7%90%83%E5%88%B0%E6%AF%8F%E4%B8%AA%E7%9B%92%E5%AD%90%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1769.%20%E7%A7%BB%E5%8A%A8%E6%89%80%E6%9C%89%E7%90%83%E5%88%B0%E6%AF%8F%E4%B8%AA%E7%9B%92%E5%AD%90%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1770. 执行乘法运算的最大分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1770.%20%E6%89%A7%E8%A1%8C%E4%B9%98%E6%B3%95%E8%BF%90%E7%AE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1770.%20%E6%89%A7%E8%A1%8C%E4%B9%98%E6%B3%95%E8%BF%90%E7%AE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1771. 由子序列构造的最长回文串的长度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1771.%20%E7%94%B1%E5%AD%90%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1771.%20%E7%94%B1%E5%AD%90%E5%BA%8F%E5%88%97%E6%9E%84%E9%80%A0%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1772. 按受欢迎程度排列功能【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1772.%20%E6%8C%89%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%A8%8B%E5%BA%A6%E6%8E%92%E5%88%97%E5%8A%9F%E8%83%BD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1772.%20%E6%8C%89%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%A8%8B%E5%BA%A6%E6%8E%92%E5%88%97%E5%8A%9F%E8%83%BD%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1773. 统计匹配检索规则的物品数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1773.%20%E7%BB%9F%E8%AE%A1%E5%8C%B9%E9%85%8D%E6%A3%80%E7%B4%A2%E8%A7%84%E5%88%99%E7%9A%84%E7%89%A9%E5%93%81%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1773.%20%E7%BB%9F%E8%AE%A1%E5%8C%B9%E9%85%8D%E6%A3%80%E7%B4%A2%E8%A7%84%E5%88%99%E7%9A%84%E7%89%A9%E5%93%81%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1774. 最接近目标价格的甜点成本【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1774.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E4%BB%B7%E6%A0%BC%E7%9A%84%E7%94%9C%E7%82%B9%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1774.%20%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9B%AE%E6%A0%87%E4%BB%B7%E6%A0%BC%E7%9A%84%E7%94%9C%E7%82%B9%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1775. 通过最少操作次数使数组的和相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1775.%20%E9%80%9A%E8%BF%87%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1775.%20%E9%80%9A%E8%BF%87%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1776. 车队 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1776.%20%E8%BD%A6%E9%98%9F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1776.%20%E8%BD%A6%E9%98%9F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1777. 每家商店的产品价格【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1777.%20%E6%AF%8F%E5%AE%B6%E5%95%86%E5%BA%97%E7%9A%84%E4%BA%A7%E5%93%81%E4%BB%B7%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1777.%20%E6%AF%8F%E5%AE%B6%E5%95%86%E5%BA%97%E7%9A%84%E4%BA%A7%E5%93%81%E4%BB%B7%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1778. 未知网格中的最短路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1778.%20%E6%9C%AA%E7%9F%A5%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1778.%20%E6%9C%AA%E7%9F%A5%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1779. 找到最近的有相同 X 或 Y 坐标的点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1779.%20%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E6%9C%89%E7%9B%B8%E5%90%8C%20X%20%E6%88%96%20Y%20%E5%9D%90%E6%A0%87%E7%9A%84%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1779.%20%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E6%9C%89%E7%9B%B8%E5%90%8C%20X%20%E6%88%96%20Y%20%E5%9D%90%E6%A0%87%E7%9A%84%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1780. 判断一个数字是否可以表示成三的幂的和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1780.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%A1%A8%E7%A4%BA%E6%88%90%E4%B8%89%E7%9A%84%E5%B9%82%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1780.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%A1%A8%E7%A4%BA%E6%88%90%E4%B8%89%E7%9A%84%E5%B9%82%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1781. 所有子字符串美丽值之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1781.%20%E6%89%80%E6%9C%89%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BE%8E%E4%B8%BD%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1781.%20%E6%89%80%E6%9C%89%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BE%8E%E4%B8%BD%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1782. 统计点对的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1782.%20%E7%BB%9F%E8%AE%A1%E7%82%B9%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1782.%20%E7%BB%9F%E8%AE%A1%E7%82%B9%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1783. 大满贯数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1783.%20%E5%A4%A7%E6%BB%A1%E8%B4%AF%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1783.%20%E5%A4%A7%E6%BB%A1%E8%B4%AF%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1784. 检查二进制字符串字段【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1784.%20%E6%A3%80%E6%9F%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1784.%20%E6%A3%80%E6%9F%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1785. 构成特定和需要添加的最少元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1785.%20%E6%9E%84%E6%88%90%E7%89%B9%E5%AE%9A%E5%92%8C%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E6%9C%80%E5%B0%91%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1785.%20%E6%9E%84%E6%88%90%E7%89%B9%E5%AE%9A%E5%92%8C%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E6%9C%80%E5%B0%91%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1786. 从第一个节点出发到最后一个节点的受限路径数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1786.%20%E4%BB%8E%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E5%87%BA%E5%8F%91%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E5%8F%97%E9%99%90%E8%B7%AF%E5%BE%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1786.%20%E4%BB%8E%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E5%87%BA%E5%8F%91%E5%88%B0%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E5%8F%97%E9%99%90%E8%B7%AF%E5%BE%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1787. 使所有区间的异或结果为零【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1787.%20%E4%BD%BF%E6%89%80%E6%9C%89%E5%8C%BA%E9%97%B4%E7%9A%84%E5%BC%82%E6%88%96%E7%BB%93%E6%9E%9C%E4%B8%BA%E9%9B%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1787.%20%E4%BD%BF%E6%89%80%E6%9C%89%E5%8C%BA%E9%97%B4%E7%9A%84%E5%BC%82%E6%88%96%E7%BB%93%E6%9E%9C%E4%B8%BA%E9%9B%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1788. 最大化花园的美观度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1788.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E8%8A%B1%E5%9B%AD%E7%9A%84%E7%BE%8E%E8%A7%82%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1788.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E8%8A%B1%E5%9B%AD%E7%9A%84%E7%BE%8E%E8%A7%82%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1789. 员工的直属部门【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1789.%20%E5%91%98%E5%B7%A5%E7%9A%84%E7%9B%B4%E5%B1%9E%E9%83%A8%E9%97%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1789.%20%E5%91%98%E5%B7%A5%E7%9A%84%E7%9B%B4%E5%B1%9E%E9%83%A8%E9%97%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1790. 仅执行一次字符串交换能否使两个字符串相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1790.%20%E4%BB%85%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E6%8D%A2%E8%83%BD%E5%90%A6%E4%BD%BF%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1790.%20%E4%BB%85%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BA%A4%E6%8D%A2%E8%83%BD%E5%90%A6%E4%BD%BF%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1791. 找出星型图的中心节点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1791.%20%E6%89%BE%E5%87%BA%E6%98%9F%E5%9E%8B%E5%9B%BE%E7%9A%84%E4%B8%AD%E5%BF%83%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1791.%20%E6%89%BE%E5%87%BA%E6%98%9F%E5%9E%8B%E5%9B%BE%E7%9A%84%E4%B8%AD%E5%BF%83%E8%8A%82%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1792. 最大平均通过率【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1792.%20%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E9%80%9A%E8%BF%87%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1792.%20%E6%9C%80%E5%A4%A7%E5%B9%B3%E5%9D%87%E9%80%9A%E8%BF%87%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1793. 好子数组的最大分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1793.%20%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1793.%20%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1794. 统计距离最小的子串对个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1794.%20%E7%BB%9F%E8%AE%A1%E8%B7%9D%E7%A6%BB%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E4%B8%B2%E5%AF%B9%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1794.%20%E7%BB%9F%E8%AE%A1%E8%B7%9D%E7%A6%BB%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E4%B8%B2%E5%AF%B9%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1795. 每个产品在不同商店的价格【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1795.%20%E6%AF%8F%E4%B8%AA%E4%BA%A7%E5%93%81%E5%9C%A8%E4%B8%8D%E5%90%8C%E5%95%86%E5%BA%97%E7%9A%84%E4%BB%B7%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1795.%20%E6%AF%8F%E4%B8%AA%E4%BA%A7%E5%93%81%E5%9C%A8%E4%B8%8D%E5%90%8C%E5%95%86%E5%BA%97%E7%9A%84%E4%BB%B7%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1796. 字符串中第二大的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1796.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%BA%8C%E5%A4%A7%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1796.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%BA%8C%E5%A4%A7%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1797. 设计一个验证系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1797.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AA%8C%E8%AF%81%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1797.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AA%8C%E8%AF%81%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1798. 你能构造出连续值的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1798.%20%E4%BD%A0%E8%83%BD%E6%9E%84%E9%80%A0%E5%87%BA%E8%BF%9E%E7%BB%AD%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1798.%20%E4%BD%A0%E8%83%BD%E6%9E%84%E9%80%A0%E5%87%BA%E8%BF%9E%E7%BB%AD%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1799. N 次操作后的最大分数和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1799.%20N%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1799.%20N%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1800. 最大升序子数组和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1800.%20%E6%9C%80%E5%A4%A7%E5%8D%87%E5%BA%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1800.%20%E6%9C%80%E5%A4%A7%E5%8D%87%E5%BA%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 20. 1801~1900\\n\\n- [ ] [1801. 积压订单中的订单总数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1801.%20%E7%A7%AF%E5%8E%8B%E8%AE%A2%E5%8D%95%E4%B8%AD%E7%9A%84%E8%AE%A2%E5%8D%95%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1801.%20%E7%A7%AF%E5%8E%8B%E8%AE%A2%E5%8D%95%E4%B8%AD%E7%9A%84%E8%AE%A2%E5%8D%95%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1802. 有界数组中指定下标处的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1802.%20%E6%9C%89%E7%95%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E6%8C%87%E5%AE%9A%E4%B8%8B%E6%A0%87%E5%A4%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1802.%20%E6%9C%89%E7%95%8C%E6%95%B0%E7%BB%84%E4%B8%AD%E6%8C%87%E5%AE%9A%E4%B8%8B%E6%A0%87%E5%A4%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1803. 统计异或值在范围内的数对有多少【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1803.%20%E7%BB%9F%E8%AE%A1%E5%BC%82%E6%88%96%E5%80%BC%E5%9C%A8%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%95%B0%E5%AF%B9%E6%9C%89%E5%A4%9A%E5%B0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1803.%20%E7%BB%9F%E8%AE%A1%E5%BC%82%E6%88%96%E5%80%BC%E5%9C%A8%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%95%B0%E5%AF%B9%E6%9C%89%E5%A4%9A%E5%B0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1804. 实现 Trie （前缀树） II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1804.%20%E5%AE%9E%E7%8E%B0%20Trie%20%EF%BC%88%E5%89%8D%E7%BC%80%E6%A0%91%EF%BC%89%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1804.%20%E5%AE%9E%E7%8E%B0%20Trie%20%EF%BC%88%E5%89%8D%E7%BC%80%E6%A0%91%EF%BC%89%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1805. 字符串中不同整数的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1805.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1805.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1806. 还原排列的最少操作步数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1806.%20%E8%BF%98%E5%8E%9F%E6%8E%92%E5%88%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AD%A5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1806.%20%E8%BF%98%E5%8E%9F%E6%8E%92%E5%88%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AD%A5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1807. 替换字符串中的括号内容【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1807.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%86%85%E5%AE%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1807.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%8B%AC%E5%8F%B7%E5%86%85%E5%AE%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1808. 好因子的最大数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1808.%20%E5%A5%BD%E5%9B%A0%E5%AD%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1808.%20%E5%A5%BD%E5%9B%A0%E5%AD%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1809. 没有广告的剧集【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1809.%20%E6%B2%A1%E6%9C%89%E5%B9%BF%E5%91%8A%E7%9A%84%E5%89%A7%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1809.%20%E6%B2%A1%E6%9C%89%E5%B9%BF%E5%91%8A%E7%9A%84%E5%89%A7%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1810. 隐藏网格下的最小消耗路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1810.%20%E9%9A%90%E8%97%8F%E7%BD%91%E6%A0%BC%E4%B8%8B%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B6%88%E8%80%97%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1810.%20%E9%9A%90%E8%97%8F%E7%BD%91%E6%A0%BC%E4%B8%8B%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B6%88%E8%80%97%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1811. 寻找面试候选人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1811.%20%E5%AF%BB%E6%89%BE%E9%9D%A2%E8%AF%95%E5%80%99%E9%80%89%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1811.%20%E5%AF%BB%E6%89%BE%E9%9D%A2%E8%AF%95%E5%80%99%E9%80%89%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1812. 判断国际象棋棋盘中一个格子的颜色【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1812.%20%E5%88%A4%E6%96%AD%E5%9B%BD%E9%99%85%E8%B1%A1%E6%A3%8B%E6%A3%8B%E7%9B%98%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E9%A2%9C%E8%89%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1812.%20%E5%88%A4%E6%96%AD%E5%9B%BD%E9%99%85%E8%B1%A1%E6%A3%8B%E6%A3%8B%E7%9B%98%E4%B8%AD%E4%B8%80%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E9%A2%9C%E8%89%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1813. 句子相似性 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1813.%20%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E6%80%A7%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1813.%20%E5%8F%A5%E5%AD%90%E7%9B%B8%E4%BC%BC%E6%80%A7%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1814. 统计一个数组中好对子的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1814.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%A5%BD%E5%AF%B9%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1814.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%A5%BD%E5%AF%B9%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1815. 得到新鲜甜甜圈的最多组数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1815.%20%E5%BE%97%E5%88%B0%E6%96%B0%E9%B2%9C%E7%94%9C%E7%94%9C%E5%9C%88%E7%9A%84%E6%9C%80%E5%A4%9A%E7%BB%84%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1815.%20%E5%BE%97%E5%88%B0%E6%96%B0%E9%B2%9C%E7%94%9C%E7%94%9C%E5%9C%88%E7%9A%84%E6%9C%80%E5%A4%9A%E7%BB%84%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1816. 截断句子【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1816.%20%E6%88%AA%E6%96%AD%E5%8F%A5%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1816.%20%E6%88%AA%E6%96%AD%E5%8F%A5%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1817. 查找用户活跃分钟数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1817.%20%E6%9F%A5%E6%89%BE%E7%94%A8%E6%88%B7%E6%B4%BB%E8%B7%83%E5%88%86%E9%92%9F%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1817.%20%E6%9F%A5%E6%89%BE%E7%94%A8%E6%88%B7%E6%B4%BB%E8%B7%83%E5%88%86%E9%92%9F%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1818. 绝对差值和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1818.%20%E7%BB%9D%E5%AF%B9%E5%B7%AE%E5%80%BC%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1818.%20%E7%BB%9D%E5%AF%B9%E5%B7%AE%E5%80%BC%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1819. 序列中不同最大公约数的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1819.%20%E5%BA%8F%E5%88%97%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1819.%20%E5%BA%8F%E5%88%97%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1820. 最多邀请的个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1820.%20%E6%9C%80%E5%A4%9A%E9%82%80%E8%AF%B7%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1820.%20%E6%9C%80%E5%A4%9A%E9%82%80%E8%AF%B7%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1821. 寻找今年具有正收入的客户【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1821.%20%E5%AF%BB%E6%89%BE%E4%BB%8A%E5%B9%B4%E5%85%B7%E6%9C%89%E6%AD%A3%E6%94%B6%E5%85%A5%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1821.%20%E5%AF%BB%E6%89%BE%E4%BB%8A%E5%B9%B4%E5%85%B7%E6%9C%89%E6%AD%A3%E6%94%B6%E5%85%A5%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1822. 数组元素积的符号【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1822.%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%A7%AF%E7%9A%84%E7%AC%A6%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1822.%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%A7%AF%E7%9A%84%E7%AC%A6%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1823. 找出游戏的获胜者【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1823.%20%E6%89%BE%E5%87%BA%E6%B8%B8%E6%88%8F%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1823.%20%E6%89%BE%E5%87%BA%E6%B8%B8%E6%88%8F%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1824. 最少侧跳次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1824.%20%E6%9C%80%E5%B0%91%E4%BE%A7%E8%B7%B3%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1824.%20%E6%9C%80%E5%B0%91%E4%BE%A7%E8%B7%B3%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1825. 求出 MK 平均值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1825.%20%E6%B1%82%E5%87%BA%20MK%20%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1825.%20%E6%B1%82%E5%87%BA%20MK%20%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1826. 有缺陷的传感器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1826.%20%E6%9C%89%E7%BC%BA%E9%99%B7%E7%9A%84%E4%BC%A0%E6%84%9F%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1826.%20%E6%9C%89%E7%BC%BA%E9%99%B7%E7%9A%84%E4%BC%A0%E6%84%9F%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1827. 最少操作使数组递增【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1827.%20%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E7%BB%84%E9%80%92%E5%A2%9E%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1827.%20%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E7%BB%84%E9%80%92%E5%A2%9E%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1828. 统计一个圆中点的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1828.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%9C%86%E4%B8%AD%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1828.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%9C%86%E4%B8%AD%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1829. 每个查询的最大异或值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1829.%20%E6%AF%8F%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1829.%20%E6%AF%8F%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1830. 使字符串有序的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1830.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%89%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1830.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%89%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1831. 每天的最大交易【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1831.%20%E6%AF%8F%E5%A4%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1831.%20%E6%AF%8F%E5%A4%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1832. 判断句子是否为全字母句【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1832.%20%E5%88%A4%E6%96%AD%E5%8F%A5%E5%AD%90%E6%98%AF%E5%90%A6%E4%B8%BA%E5%85%A8%E5%AD%97%E6%AF%8D%E5%8F%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1832.%20%E5%88%A4%E6%96%AD%E5%8F%A5%E5%AD%90%E6%98%AF%E5%90%A6%E4%B8%BA%E5%85%A8%E5%AD%97%E6%AF%8D%E5%8F%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1833. 雪糕的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1833.%20%E9%9B%AA%E7%B3%95%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1833.%20%E9%9B%AA%E7%B3%95%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1834. 单线程 CPU【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1834.%20%E5%8D%95%E7%BA%BF%E7%A8%8B%20CPU%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1834.%20%E5%8D%95%E7%BA%BF%E7%A8%8B%20CPU%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1835. 所有数对按位与结果的异或和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1835.%20%E6%89%80%E6%9C%89%E6%95%B0%E5%AF%B9%E6%8C%89%E4%BD%8D%E4%B8%8E%E7%BB%93%E6%9E%9C%E7%9A%84%E5%BC%82%E6%88%96%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1835.%20%E6%89%80%E6%9C%89%E6%95%B0%E5%AF%B9%E6%8C%89%E4%BD%8D%E4%B8%8E%E7%BB%93%E6%9E%9C%E7%9A%84%E5%BC%82%E6%88%96%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1836. 从未排序的链表中移除重复元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1836.%20%E4%BB%8E%E6%9C%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1836.%20%E4%BB%8E%E6%9C%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1837. K 进制表示下的各位数字总和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1837.%20K%20%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E4%B8%8B%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1837.%20K%20%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E4%B8%8B%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E6%80%BB%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1838. 最高频元素的频数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1838.%20%E6%9C%80%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E7%9A%84%E9%A2%91%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1838.%20%E6%9C%80%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E7%9A%84%E9%A2%91%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1839. 所有元音按顺序排布的最长子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1839.%20%E6%89%80%E6%9C%89%E5%85%83%E9%9F%B3%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%B8%83%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1839.%20%E6%89%80%E6%9C%89%E5%85%83%E9%9F%B3%E6%8C%89%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%B8%83%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1840. 最高建筑高度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1840.%20%E6%9C%80%E9%AB%98%E5%BB%BA%E7%AD%91%E9%AB%98%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1840.%20%E6%9C%80%E9%AB%98%E5%BB%BA%E7%AD%91%E9%AB%98%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1841. 联赛信息统计【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1841.%20%E8%81%94%E8%B5%9B%E4%BF%A1%E6%81%AF%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1841.%20%E8%81%94%E8%B5%9B%E4%BF%A1%E6%81%AF%E7%BB%9F%E8%AE%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1842. 下个由相同数字构成的回文串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1842.%20%E4%B8%8B%E4%B8%AA%E7%94%B1%E7%9B%B8%E5%90%8C%E6%95%B0%E5%AD%97%E6%9E%84%E6%88%90%E7%9A%84%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1842.%20%E4%B8%8B%E4%B8%AA%E7%94%B1%E7%9B%B8%E5%90%8C%E6%95%B0%E5%AD%97%E6%9E%84%E6%88%90%E7%9A%84%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1843. 可疑银行账户【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1843.%20%E5%8F%AF%E7%96%91%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1843.%20%E5%8F%AF%E7%96%91%E9%93%B6%E8%A1%8C%E8%B4%A6%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1844. 将所有数字用字符替换【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1844.%20%E5%B0%86%E6%89%80%E6%9C%89%E6%95%B0%E5%AD%97%E7%94%A8%E5%AD%97%E7%AC%A6%E6%9B%BF%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1844.%20%E5%B0%86%E6%89%80%E6%9C%89%E6%95%B0%E5%AD%97%E7%94%A8%E5%AD%97%E7%AC%A6%E6%9B%BF%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1845. 座位预约管理系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1845.%20%E5%BA%A7%E4%BD%8D%E9%A2%84%E7%BA%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1845.%20%E5%BA%A7%E4%BD%8D%E9%A2%84%E7%BA%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1846. 减小和重新排列数组后的最大元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1846.%20%E5%87%8F%E5%B0%8F%E5%92%8C%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1846.%20%E5%87%8F%E5%B0%8F%E5%92%8C%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E7%BB%84%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1847. 最近的房间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1847.%20%E6%9C%80%E8%BF%91%E7%9A%84%E6%88%BF%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1847.%20%E6%9C%80%E8%BF%91%E7%9A%84%E6%88%BF%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1848. 到目标元素的最小距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1848.%20%E5%88%B0%E7%9B%AE%E6%A0%87%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1848.%20%E5%88%B0%E7%9B%AE%E6%A0%87%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1849. 将字符串拆分为递减的连续值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1849.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%88%86%E4%B8%BA%E9%80%92%E5%87%8F%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1849.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%88%86%E4%B8%BA%E9%80%92%E5%87%8F%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1850. 邻位交换的最小次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1850.%20%E9%82%BB%E4%BD%8D%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1850.%20%E9%82%BB%E4%BD%8D%E4%BA%A4%E6%8D%A2%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1851. 包含每个查询的最小区间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1851.%20%E5%8C%85%E5%90%AB%E6%AF%8F%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1851.%20%E5%8C%85%E5%90%AB%E6%AF%8F%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1852. 每个子数组的数字种类数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1852.%20%E6%AF%8F%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E5%AD%97%E7%A7%8D%E7%B1%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1852.%20%E6%AF%8F%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E5%AD%97%E7%A7%8D%E7%B1%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1853. 转换日期格式【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1853.%20%E8%BD%AC%E6%8D%A2%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1853.%20%E8%BD%AC%E6%8D%A2%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1854. 人口最多的年份【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1854.%20%E4%BA%BA%E5%8F%A3%E6%9C%80%E5%A4%9A%E7%9A%84%E5%B9%B4%E4%BB%BD%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1854.%20%E4%BA%BA%E5%8F%A3%E6%9C%80%E5%A4%9A%E7%9A%84%E5%B9%B4%E4%BB%BD%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1855. 下标对中的最大距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1855.%20%E4%B8%8B%E6%A0%87%E5%AF%B9%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1855.%20%E4%B8%8B%E6%A0%87%E5%AF%B9%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1856. 子数组最小乘积的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1856.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%8F%E4%B9%98%E7%A7%AF%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1856.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%8F%E4%B9%98%E7%A7%AF%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1857. 有向图中最大颜色值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1857.%20%E6%9C%89%E5%90%91%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E9%A2%9C%E8%89%B2%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1857.%20%E6%9C%89%E5%90%91%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E9%A2%9C%E8%89%B2%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1858. 包含所有前缀的最长单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1858.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E5%89%8D%E7%BC%80%E7%9A%84%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1858.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%E5%89%8D%E7%BC%80%E7%9A%84%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1859. 将句子排序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1859.%20%E5%B0%86%E5%8F%A5%E5%AD%90%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1859.%20%E5%B0%86%E5%8F%A5%E5%AD%90%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1860. 增长的内存泄露【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1860.%20%E5%A2%9E%E9%95%BF%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1860.%20%E5%A2%9E%E9%95%BF%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1861. 旋转盒子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1861.%20%E6%97%8B%E8%BD%AC%E7%9B%92%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1861.%20%E6%97%8B%E8%BD%AC%E7%9B%92%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1862. 向下取整数对和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1862.%20%E5%90%91%E4%B8%8B%E5%8F%96%E6%95%B4%E6%95%B0%E5%AF%B9%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1862.%20%E5%90%91%E4%B8%8B%E5%8F%96%E6%95%B4%E6%95%B0%E5%AF%B9%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1863. 找出所有子集的异或总和再求和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1863.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E5%AD%90%E9%9B%86%E7%9A%84%E5%BC%82%E6%88%96%E6%80%BB%E5%92%8C%E5%86%8D%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1863.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E5%AD%90%E9%9B%86%E7%9A%84%E5%BC%82%E6%88%96%E6%80%BB%E5%92%8C%E5%86%8D%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1864. 构成交替字符串需要的最小交换次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1864.%20%E6%9E%84%E6%88%90%E4%BA%A4%E6%9B%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1864.%20%E6%9E%84%E6%88%90%E4%BA%A4%E6%9B%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1865. 找出和为指定值的下标对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1865.%20%E6%89%BE%E5%87%BA%E5%92%8C%E4%B8%BA%E6%8C%87%E5%AE%9A%E5%80%BC%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1865.%20%E6%89%BE%E5%87%BA%E5%92%8C%E4%B8%BA%E6%8C%87%E5%AE%9A%E5%80%BC%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1866. 恰有 K 根木棍可以看到的排列数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1866.%20%E6%81%B0%E6%9C%89%20K%20%E6%A0%B9%E6%9C%A8%E6%A3%8D%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9A%84%E6%8E%92%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1866.%20%E6%81%B0%E6%9C%89%20K%20%E6%A0%B9%E6%9C%A8%E6%A3%8D%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9A%84%E6%8E%92%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1867. 最大数量高于平均水平的订单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1867.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E9%AB%98%E4%BA%8E%E5%B9%B3%E5%9D%87%E6%B0%B4%E5%B9%B3%E7%9A%84%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1867.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E9%AB%98%E4%BA%8E%E5%B9%B3%E5%9D%87%E6%B0%B4%E5%B9%B3%E7%9A%84%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1868. 两个行程编码数组的积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1868.%20%E4%B8%A4%E4%B8%AA%E8%A1%8C%E7%A8%8B%E7%BC%96%E7%A0%81%E6%95%B0%E7%BB%84%E7%9A%84%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1868.%20%E4%B8%A4%E4%B8%AA%E8%A1%8C%E7%A8%8B%E7%BC%96%E7%A0%81%E6%95%B0%E7%BB%84%E7%9A%84%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1869. 哪种连续子字符串更长【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1869.%20%E5%93%AA%E7%A7%8D%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%B4%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1869.%20%E5%93%AA%E7%A7%8D%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9B%B4%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1870. 准时到达的列车最小时速【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1870.%20%E5%87%86%E6%97%B6%E5%88%B0%E8%BE%BE%E7%9A%84%E5%88%97%E8%BD%A6%E6%9C%80%E5%B0%8F%E6%97%B6%E9%80%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1870.%20%E5%87%86%E6%97%B6%E5%88%B0%E8%BE%BE%E7%9A%84%E5%88%97%E8%BD%A6%E6%9C%80%E5%B0%8F%E6%97%B6%E9%80%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1871. 跳跃游戏 VII【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1871.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20VII%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1871.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20VII%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1872. 石子游戏 VIII【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1872.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20VIII%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1872.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20VIII%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1873. 计算特殊奖金【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1873.%20%E8%AE%A1%E7%AE%97%E7%89%B9%E6%AE%8A%E5%A5%96%E9%87%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1873.%20%E8%AE%A1%E7%AE%97%E7%89%B9%E6%AE%8A%E5%A5%96%E9%87%91%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1874. 两个数组的最小乘积和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1874.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%B9%98%E7%A7%AF%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1874.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%B9%98%E7%A7%AF%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1875. 将工资相同的雇员分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1875.%20%E5%B0%86%E5%B7%A5%E8%B5%84%E7%9B%B8%E5%90%8C%E7%9A%84%E9%9B%87%E5%91%98%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1875.%20%E5%B0%86%E5%B7%A5%E8%B5%84%E7%9B%B8%E5%90%8C%E7%9A%84%E9%9B%87%E5%91%98%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1876. 长度为三且各字符不同的子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1876.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%E4%B8%89%E4%B8%94%E5%90%84%E5%AD%97%E7%AC%A6%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1876.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%E4%B8%89%E4%B8%94%E5%90%84%E5%AD%97%E7%AC%A6%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1877. 数组中最大数对和的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1877.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1877.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1878. 矩阵中最大的三个菱形和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1878.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E4%B8%89%E4%B8%AA%E8%8F%B1%E5%BD%A2%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1878.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%E4%B8%89%E4%B8%AA%E8%8F%B1%E5%BD%A2%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1879. 两个数组最小的异或值之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1879.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%8F%E7%9A%84%E5%BC%82%E6%88%96%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1879.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%8F%E7%9A%84%E5%BC%82%E6%88%96%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1880. 检查某单词是否等于两单词之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1880.%20%E6%A3%80%E6%9F%A5%E6%9F%90%E5%8D%95%E8%AF%8D%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E4%B8%A4%E5%8D%95%E8%AF%8D%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1880.%20%E6%A3%80%E6%9F%A5%E6%9F%90%E5%8D%95%E8%AF%8D%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E4%B8%A4%E5%8D%95%E8%AF%8D%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1881. 插入后的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1881.%20%E6%8F%92%E5%85%A5%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1881.%20%E6%8F%92%E5%85%A5%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1882. 使用服务器处理任务【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1882.%20%E4%BD%BF%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%84%E7%90%86%E4%BB%BB%E5%8A%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1882.%20%E4%BD%BF%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%A4%84%E7%90%86%E4%BB%BB%E5%8A%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1883. 准时抵达会议现场的最小跳过休息次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1883.%20%E5%87%86%E6%97%B6%E6%8A%B5%E8%BE%BE%E4%BC%9A%E8%AE%AE%E7%8E%B0%E5%9C%BA%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%B3%E8%BF%87%E4%BC%91%E6%81%AF%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1883.%20%E5%87%86%E6%97%B6%E6%8A%B5%E8%BE%BE%E4%BC%9A%E8%AE%AE%E7%8E%B0%E5%9C%BA%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%B3%E8%BF%87%E4%BC%91%E6%81%AF%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1884. 鸡蛋掉落-两枚鸡蛋【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1884.%20%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD-%E4%B8%A4%E6%9E%9A%E9%B8%A1%E8%9B%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1884.%20%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD-%E4%B8%A4%E6%9E%9A%E9%B8%A1%E8%9B%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1885. 统计数对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1885.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1885.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1886. 判断矩阵经轮转后是否一致【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1886.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5%E7%BB%8F%E8%BD%AE%E8%BD%AC%E5%90%8E%E6%98%AF%E5%90%A6%E4%B8%80%E8%87%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1886.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5%E7%BB%8F%E8%BD%AE%E8%BD%AC%E5%90%8E%E6%98%AF%E5%90%A6%E4%B8%80%E8%87%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1887. 使数组元素相等的减少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1887.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E5%87%8F%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1887.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E5%87%8F%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1888. 使二进制字符串字符交替的最少反转次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1888.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E7%AC%A6%E4%BA%A4%E6%9B%BF%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%8D%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1888.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E7%AC%A6%E4%BA%A4%E6%9B%BF%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%8D%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1889. 装包裹的最小浪费空间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1889.%20%E8%A3%85%E5%8C%85%E8%A3%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B5%AA%E8%B4%B9%E7%A9%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1889.%20%E8%A3%85%E5%8C%85%E8%A3%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%B5%AA%E8%B4%B9%E7%A9%BA%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1890. 2020年最后一次登录【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1890.%202020%E5%B9%B4%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E7%99%BB%E5%BD%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1890.%202020%E5%B9%B4%E6%9C%80%E5%90%8E%E4%B8%80%E6%AC%A1%E7%99%BB%E5%BD%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1891. 割绳子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1891.%20%E5%89%B2%E7%BB%B3%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1891.%20%E5%89%B2%E7%BB%B3%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1892. 页面推荐Ⅱ【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1892.%20%E9%A1%B5%E9%9D%A2%E6%8E%A8%E8%8D%90%E2%85%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1892.%20%E9%A1%B5%E9%9D%A2%E6%8E%A8%E8%8D%90%E2%85%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1893. 检查是否区域内所有整数都被覆盖【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1893.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%8C%BA%E5%9F%9F%E5%86%85%E6%89%80%E6%9C%89%E6%95%B4%E6%95%B0%E9%83%BD%E8%A2%AB%E8%A6%86%E7%9B%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1893.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%8C%BA%E5%9F%9F%E5%86%85%E6%89%80%E6%9C%89%E6%95%B4%E6%95%B0%E9%83%BD%E8%A2%AB%E8%A6%86%E7%9B%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1894. 找到需要补充粉笔的学生编号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1894.%20%E6%89%BE%E5%88%B0%E9%9C%80%E8%A6%81%E8%A1%A5%E5%85%85%E7%B2%89%E7%AC%94%E7%9A%84%E5%AD%A6%E7%94%9F%E7%BC%96%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1894.%20%E6%89%BE%E5%88%B0%E9%9C%80%E8%A6%81%E8%A1%A5%E5%85%85%E7%B2%89%E7%AC%94%E7%9A%84%E5%AD%A6%E7%94%9F%E7%BC%96%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1895. 最大的幻方【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1895.%20%E6%9C%80%E5%A4%A7%E7%9A%84%E5%B9%BB%E6%96%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1895.%20%E6%9C%80%E5%A4%A7%E7%9A%84%E5%B9%BB%E6%96%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1896. 反转表达式值的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1896.%20%E5%8F%8D%E8%BD%AC%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1896.%20%E5%8F%8D%E8%BD%AC%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1897. 重新分配字符使所有字符串都相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1897.%20%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%E5%AD%97%E7%AC%A6%E4%BD%BF%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%83%BD%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1897.%20%E9%87%8D%E6%96%B0%E5%88%86%E9%85%8D%E5%AD%97%E7%AC%A6%E4%BD%BF%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%83%BD%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1898. 可移除字符的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1898.%20%E5%8F%AF%E7%A7%BB%E9%99%A4%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1898.%20%E5%8F%AF%E7%A7%BB%E9%99%A4%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1899. 合并若干三元组以形成目标三元组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1899.%20%E5%90%88%E5%B9%B6%E8%8B%A5%E5%B9%B2%E4%B8%89%E5%85%83%E7%BB%84%E4%BB%A5%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1899.%20%E5%90%88%E5%B9%B6%E8%8B%A5%E5%B9%B2%E4%B8%89%E5%85%83%E7%BB%84%E4%BB%A5%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1900. 最佳运动员的比拼回合【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1900.%20%E6%9C%80%E4%BD%B3%E8%BF%90%E5%8A%A8%E5%91%98%E7%9A%84%E6%AF%94%E6%8B%BC%E5%9B%9E%E5%90%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1900.%20%E6%9C%80%E4%BD%B3%E8%BF%90%E5%8A%A8%E5%91%98%E7%9A%84%E6%AF%94%E6%8B%BC%E5%9B%9E%E5%90%88%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n\\n## 21. 1901~2000\\n\\n- [ ] [1901. 寻找峰值 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1901.%20%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1901.%20%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1902. 给定二叉搜索树的插入顺序求深度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1902.%20%E7%BB%99%E5%AE%9A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%8F%92%E5%85%A5%E9%A1%BA%E5%BA%8F%E6%B1%82%E6%B7%B1%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1902.%20%E7%BB%99%E5%AE%9A%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%8F%92%E5%85%A5%E9%A1%BA%E5%BA%8F%E6%B1%82%E6%B7%B1%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1903. 字符串中的最大奇数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1903.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%A5%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1903.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%A5%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1904. 你完成的完整对局数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1904.%20%E4%BD%A0%E5%AE%8C%E6%88%90%E7%9A%84%E5%AE%8C%E6%95%B4%E5%AF%B9%E5%B1%80%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1904.%20%E4%BD%A0%E5%AE%8C%E6%88%90%E7%9A%84%E5%AE%8C%E6%95%B4%E5%AF%B9%E5%B1%80%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1905. 统计子岛屿【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1905.%20%E7%BB%9F%E8%AE%A1%E5%AD%90%E5%B2%9B%E5%B1%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1905.%20%E7%BB%9F%E8%AE%A1%E5%AD%90%E5%B2%9B%E5%B1%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1906. 查询差绝对值的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1906.%20%E6%9F%A5%E8%AF%A2%E5%B7%AE%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1906.%20%E6%9F%A5%E8%AF%A2%E5%B7%AE%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1907. 按分类统计薪水【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1907.%20%E6%8C%89%E5%88%86%E7%B1%BB%E7%BB%9F%E8%AE%A1%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1907.%20%E6%8C%89%E5%88%86%E7%B1%BB%E7%BB%9F%E8%AE%A1%E8%96%AA%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1908. Nim 游戏 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1908.%20Nim%20%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1908.%20Nim%20%E6%B8%B8%E6%88%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1909. 删除一个元素使数组严格递增【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1909.%20%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1909.%20%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1910. 删除一个字符串中所有出现的给定子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1910.%20%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%87%BA%E7%8E%B0%E7%9A%84%E7%BB%99%E5%AE%9A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1910.%20%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%89%80%E6%9C%89%E5%87%BA%E7%8E%B0%E7%9A%84%E7%BB%99%E5%AE%9A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1911. 最大交替子序列和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1911.%20%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%9B%BF%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1911.%20%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%9B%BF%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1912. 设计电影租借系统【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1912.%20%E8%AE%BE%E8%AE%A1%E7%94%B5%E5%BD%B1%E7%A7%9F%E5%80%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1912.%20%E8%AE%BE%E8%AE%A1%E7%94%B5%E5%BD%B1%E7%A7%9F%E5%80%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1913. 两个数对之间的最大乘积差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1913.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AF%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1913.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AF%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1914. 循环轮转矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1914.%20%E5%BE%AA%E7%8E%AF%E8%BD%AE%E8%BD%AC%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1914.%20%E5%BE%AA%E7%8E%AF%E8%BD%AE%E8%BD%AC%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1915. 最美子字符串的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1915.%20%E6%9C%80%E7%BE%8E%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1915.%20%E6%9C%80%E7%BE%8E%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1916. 统计为蚁群构筑房间的不同顺序【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1916.%20%E7%BB%9F%E8%AE%A1%E4%B8%BA%E8%9A%81%E7%BE%A4%E6%9E%84%E7%AD%91%E6%88%BF%E9%97%B4%E7%9A%84%E4%B8%8D%E5%90%8C%E9%A1%BA%E5%BA%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1916.%20%E7%BB%9F%E8%AE%A1%E4%B8%BA%E8%9A%81%E7%BE%A4%E6%9E%84%E7%AD%91%E6%88%BF%E9%97%B4%E7%9A%84%E4%B8%8D%E5%90%8C%E9%A1%BA%E5%BA%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1917. Leetcodify 好友推荐【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1917.%20Leetcodify%20%E5%A5%BD%E5%8F%8B%E6%8E%A8%E8%8D%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1917.%20Leetcodify%20%E5%A5%BD%E5%8F%8B%E6%8E%A8%E8%8D%90%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1918. 第 K 小的子数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1918.%20%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1918.%20%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1919. 兴趣相同的朋友【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1919.%20%E5%85%B4%E8%B6%A3%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1919.%20%E5%85%B4%E8%B6%A3%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1920. 基于排列构建数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1920.%20%E5%9F%BA%E4%BA%8E%E6%8E%92%E5%88%97%E6%9E%84%E5%BB%BA%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1920.%20%E5%9F%BA%E4%BA%8E%E6%8E%92%E5%88%97%E6%9E%84%E5%BB%BA%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1921. 消灭怪物的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1921.%20%E6%B6%88%E7%81%AD%E6%80%AA%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1921.%20%E6%B6%88%E7%81%AD%E6%80%AA%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1922. 统计好数字的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1922.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1922.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1923. 最长公共子路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1923.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1923.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1924. 安装栅栏 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1924.%20%E5%AE%89%E8%A3%85%E6%A0%85%E6%A0%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1924.%20%E5%AE%89%E8%A3%85%E6%A0%85%E6%A0%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1925. 统计平方和三元组的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1925.%20%E7%BB%9F%E8%AE%A1%E5%B9%B3%E6%96%B9%E5%92%8C%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1925.%20%E7%BB%9F%E8%AE%A1%E5%B9%B3%E6%96%B9%E5%92%8C%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1926. 迷宫中离入口最近的出口【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1926.%20%E8%BF%B7%E5%AE%AB%E4%B8%AD%E7%A6%BB%E5%85%A5%E5%8F%A3%E6%9C%80%E8%BF%91%E7%9A%84%E5%87%BA%E5%8F%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1926.%20%E8%BF%B7%E5%AE%AB%E4%B8%AD%E7%A6%BB%E5%85%A5%E5%8F%A3%E6%9C%80%E8%BF%91%E7%9A%84%E5%87%BA%E5%8F%A3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1927. 求和游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1927.%20%E6%B1%82%E5%92%8C%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1927.%20%E6%B1%82%E5%92%8C%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1928. 规定时间内到达终点的最小花费【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1928.%20%E8%A7%84%E5%AE%9A%E6%97%B6%E9%97%B4%E5%86%85%E5%88%B0%E8%BE%BE%E7%BB%88%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%8A%B1%E8%B4%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1928.%20%E8%A7%84%E5%AE%9A%E6%97%B6%E9%97%B4%E5%86%85%E5%88%B0%E8%BE%BE%E7%BB%88%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E8%8A%B1%E8%B4%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1929. 数组串联【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1929.%20%E6%95%B0%E7%BB%84%E4%B8%B2%E8%81%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1929.%20%E6%95%B0%E7%BB%84%E4%B8%B2%E8%81%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1930. 长度为 3 的不同回文子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1930.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%203%20%E7%9A%84%E4%B8%8D%E5%90%8C%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1930.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%203%20%E7%9A%84%E4%B8%8D%E5%90%8C%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1931. 用三种不同颜色为网格涂色【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1931.%20%E7%94%A8%E4%B8%89%E7%A7%8D%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E4%B8%BA%E7%BD%91%E6%A0%BC%E6%B6%82%E8%89%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1931.%20%E7%94%A8%E4%B8%89%E7%A7%8D%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E4%B8%BA%E7%BD%91%E6%A0%BC%E6%B6%82%E8%89%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1932. 合并多棵二叉搜索树【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1932.%20%E5%90%88%E5%B9%B6%E5%A4%9A%E6%A3%B5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1932.%20%E5%90%88%E5%B9%B6%E5%A4%9A%E6%A3%B5%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1933. 判断字符串是否可分解为值均等的子串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1933.%20%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8F%AF%E5%88%86%E8%A7%A3%E4%B8%BA%E5%80%BC%E5%9D%87%E7%AD%89%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1933.%20%E5%88%A4%E6%96%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%8F%AF%E5%88%86%E8%A7%A3%E4%B8%BA%E5%80%BC%E5%9D%87%E7%AD%89%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1934. 确认率【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1934.%20%E7%A1%AE%E8%AE%A4%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1934.%20%E7%A1%AE%E8%AE%A4%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1935. 可以输入的最大单词数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1935.%20%E5%8F%AF%E4%BB%A5%E8%BE%93%E5%85%A5%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1935.%20%E5%8F%AF%E4%BB%A5%E8%BE%93%E5%85%A5%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1936. 新增的最少台阶数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1936.%20%E6%96%B0%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%B0%E9%98%B6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1936.%20%E6%96%B0%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%B0%E9%98%B6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1937. 扣分后的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1937.%20%E6%89%A3%E5%88%86%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1937.%20%E6%89%A3%E5%88%86%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1938. 查询最大基因差【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1938.%20%E6%9F%A5%E8%AF%A2%E6%9C%80%E5%A4%A7%E5%9F%BA%E5%9B%A0%E5%B7%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1938.%20%E6%9F%A5%E8%AF%A2%E6%9C%80%E5%A4%A7%E5%9F%BA%E5%9B%A0%E5%B7%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1939. 主动请求确认消息的用户【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1939.%20%E4%B8%BB%E5%8A%A8%E8%AF%B7%E6%B1%82%E7%A1%AE%E8%AE%A4%E6%B6%88%E6%81%AF%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1939.%20%E4%B8%BB%E5%8A%A8%E8%AF%B7%E6%B1%82%E7%A1%AE%E8%AE%A4%E6%B6%88%E6%81%AF%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1940. 排序数组之间的最长公共子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1940.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1940.%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1941. 检查是否所有字符出现次数相同【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1941.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E7%9B%B8%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1941.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E7%9B%B8%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1942. 最小未被占据椅子的编号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1942.%20%E6%9C%80%E5%B0%8F%E6%9C%AA%E8%A2%AB%E5%8D%A0%E6%8D%AE%E6%A4%85%E5%AD%90%E7%9A%84%E7%BC%96%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1942.%20%E6%9C%80%E5%B0%8F%E6%9C%AA%E8%A2%AB%E5%8D%A0%E6%8D%AE%E6%A4%85%E5%AD%90%E7%9A%84%E7%BC%96%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1943. 描述绘画结果【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1943.%20%E6%8F%8F%E8%BF%B0%E7%BB%98%E7%94%BB%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1943.%20%E6%8F%8F%E8%BF%B0%E7%BB%98%E7%94%BB%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1944. 队列中可以看到的人数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1944.%20%E9%98%9F%E5%88%97%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1944.%20%E9%98%9F%E5%88%97%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1945. 字符串转化后的各位数字之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1945.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E5%90%8E%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1945.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E5%8C%96%E5%90%8E%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1946. 子字符串突变后可能得到的最大整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1946.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AA%81%E5%8F%98%E5%90%8E%E5%8F%AF%E8%83%BD%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1946.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%AA%81%E5%8F%98%E5%90%8E%E5%8F%AF%E8%83%BD%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1947. 最大兼容性评分和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1947.%20%E6%9C%80%E5%A4%A7%E5%85%BC%E5%AE%B9%E6%80%A7%E8%AF%84%E5%88%86%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1947.%20%E6%9C%80%E5%A4%A7%E5%85%BC%E5%AE%B9%E6%80%A7%E8%AF%84%E5%88%86%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1948. 删除系统中的重复文件夹【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1948.%20%E5%88%A0%E9%99%A4%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1948.%20%E5%88%A0%E9%99%A4%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E6%96%87%E4%BB%B6%E5%A4%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1949. 坚定的友谊【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1949.%20%E5%9D%9A%E5%AE%9A%E7%9A%84%E5%8F%8B%E8%B0%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1949.%20%E5%9D%9A%E5%AE%9A%E7%9A%84%E5%8F%8B%E8%B0%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1950. 所有子数组最小值中的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1950.%20%E6%89%80%E6%9C%89%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1950.%20%E6%89%80%E6%9C%89%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1951. 查询具有最多共同关注者的所有两两结对组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1951.%20%E6%9F%A5%E8%AF%A2%E5%85%B7%E6%9C%89%E6%9C%80%E5%A4%9A%E5%85%B1%E5%90%8C%E5%85%B3%E6%B3%A8%E8%80%85%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%A4%E4%B8%A4%E7%BB%93%E5%AF%B9%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1951.%20%E6%9F%A5%E8%AF%A2%E5%85%B7%E6%9C%89%E6%9C%80%E5%A4%9A%E5%85%B1%E5%90%8C%E5%85%B3%E6%B3%A8%E8%80%85%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%A4%E4%B8%A4%E7%BB%93%E5%AF%B9%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1952. 三除数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1952.%20%E4%B8%89%E9%99%A4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1952.%20%E4%B8%89%E9%99%A4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1953. 你可以工作的最大周数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1953.%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%91%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1953.%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%91%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1954. 收集足够苹果的最小花园周长【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1954.%20%E6%94%B6%E9%9B%86%E8%B6%B3%E5%A4%9F%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%8F%E8%8A%B1%E5%9B%AD%E5%91%A8%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1954.%20%E6%94%B6%E9%9B%86%E8%B6%B3%E5%A4%9F%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%8F%E8%8A%B1%E5%9B%AD%E5%91%A8%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1955. 统计特殊子序列的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1955.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1955.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1956. 感染 K 种病毒所需的最短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1956.%20%E6%84%9F%E6%9F%93%20K%20%E7%A7%8D%E7%97%85%E6%AF%92%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1956.%20%E6%84%9F%E6%9F%93%20K%20%E7%A7%8D%E7%97%85%E6%AF%92%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1957. 删除字符使字符串变好【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1957.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E5%A5%BD%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1957.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E5%A5%BD%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1958. 检查操作是否合法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1958.%20%E6%A3%80%E6%9F%A5%E6%93%8D%E4%BD%9C%E6%98%AF%E5%90%A6%E5%90%88%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1958.%20%E6%A3%80%E6%9F%A5%E6%93%8D%E4%BD%9C%E6%98%AF%E5%90%A6%E5%90%88%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1959. K 次调整数组大小浪费的最小总空间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1959.%20K%20%E6%AC%A1%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E5%A4%A7%E5%B0%8F%E6%B5%AA%E8%B4%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E7%A9%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1959.%20K%20%E6%AC%A1%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E5%A4%A7%E5%B0%8F%E6%B5%AA%E8%B4%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E7%A9%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1960. 两个回文子字符串长度的最大乘积【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1960.%20%E4%B8%A4%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1960.%20%E4%B8%A4%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1961. 检查字符串是否为数组前缀【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1961.%20%E6%A3%80%E6%9F%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E4%B8%BA%E6%95%B0%E7%BB%84%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1961.%20%E6%A3%80%E6%9F%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E4%B8%BA%E6%95%B0%E7%BB%84%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1962. 移除石子使总数最小【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1962.%20%E7%A7%BB%E9%99%A4%E7%9F%B3%E5%AD%90%E4%BD%BF%E6%80%BB%E6%95%B0%E6%9C%80%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1962.%20%E7%A7%BB%E9%99%A4%E7%9F%B3%E5%AD%90%E4%BD%BF%E6%80%BB%E6%95%B0%E6%9C%80%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1963. 使字符串平衡的最小交换次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1963.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B9%B3%E8%A1%A1%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1963.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B9%B3%E8%A1%A1%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1964. 找出到每个位置为止最长的有效障碍赛跑路线【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1964.%20%E6%89%BE%E5%87%BA%E5%88%B0%E6%AF%8F%E4%B8%AA%E4%BD%8D%E7%BD%AE%E4%B8%BA%E6%AD%A2%E6%9C%80%E9%95%BF%E7%9A%84%E6%9C%89%E6%95%88%E9%9A%9C%E7%A2%8D%E8%B5%9B%E8%B7%91%E8%B7%AF%E7%BA%BF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1964.%20%E6%89%BE%E5%87%BA%E5%88%B0%E6%AF%8F%E4%B8%AA%E4%BD%8D%E7%BD%AE%E4%B8%BA%E6%AD%A2%E6%9C%80%E9%95%BF%E7%9A%84%E6%9C%89%E6%95%88%E9%9A%9C%E7%A2%8D%E8%B5%9B%E8%B7%91%E8%B7%AF%E7%BA%BF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1965. 丢失信息的雇员【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1965.%20%E4%B8%A2%E5%A4%B1%E4%BF%A1%E6%81%AF%E7%9A%84%E9%9B%87%E5%91%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1965.%20%E4%B8%A2%E5%A4%B1%E4%BF%A1%E6%81%AF%E7%9A%84%E9%9B%87%E5%91%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1966. 未排序数组中的可被二分搜索的数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1966.%20%E6%9C%AA%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%8F%AF%E8%A2%AB%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E7%9A%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1966.%20%E6%9C%AA%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%8F%AF%E8%A2%AB%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E7%9A%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1967. 作为子字符串出现在单词中的字符串数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1967.%20%E4%BD%9C%E4%B8%BA%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%8D%95%E8%AF%8D%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1967.%20%E4%BD%9C%E4%B8%BA%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%8D%95%E8%AF%8D%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1968. 构造元素不等于两相邻元素平均值的数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1968.%20%E6%9E%84%E9%80%A0%E5%85%83%E7%B4%A0%E4%B8%8D%E7%AD%89%E4%BA%8E%E4%B8%A4%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E5%B9%B3%E5%9D%87%E5%80%BC%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1968.%20%E6%9E%84%E9%80%A0%E5%85%83%E7%B4%A0%E4%B8%8D%E7%AD%89%E4%BA%8E%E4%B8%A4%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E5%B9%B3%E5%9D%87%E5%80%BC%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1969. 数组元素的最小非零乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1969.%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E9%9D%9E%E9%9B%B6%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1969.%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E9%9D%9E%E9%9B%B6%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1970. 你能穿过矩阵的最后一天【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1970.%20%E4%BD%A0%E8%83%BD%E7%A9%BF%E8%BF%87%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1970.%20%E4%BD%A0%E8%83%BD%E7%A9%BF%E8%BF%87%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1971. 寻找图中是否存在路径【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1971.%20%E5%AF%BB%E6%89%BE%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B7%AF%E5%BE%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1971.%20%E5%AF%BB%E6%89%BE%E5%9B%BE%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E8%B7%AF%E5%BE%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1972. 同一天的第一个电话和最后一个电话【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1972.%20%E5%90%8C%E4%B8%80%E5%A4%A9%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%94%B5%E8%AF%9D%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E7%94%B5%E8%AF%9D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1972.%20%E5%90%8C%E4%B8%80%E5%A4%A9%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%94%B5%E8%AF%9D%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E7%94%B5%E8%AF%9D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1973. 值等于子节点值之和的节点数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1973.%20%E5%80%BC%E7%AD%89%E4%BA%8E%E5%AD%90%E8%8A%82%E7%82%B9%E5%80%BC%E4%B9%8B%E5%92%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1973.%20%E5%80%BC%E7%AD%89%E4%BA%8E%E5%AD%90%E8%8A%82%E7%82%B9%E5%80%BC%E4%B9%8B%E5%92%8C%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1974. 使用特殊打字机键入单词的最少时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1974.%20%E4%BD%BF%E7%94%A8%E7%89%B9%E6%AE%8A%E6%89%93%E5%AD%97%E6%9C%BA%E9%94%AE%E5%85%A5%E5%8D%95%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1974.%20%E4%BD%BF%E7%94%A8%E7%89%B9%E6%AE%8A%E6%89%93%E5%AD%97%E6%9C%BA%E9%94%AE%E5%85%A5%E5%8D%95%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1975. 最大方阵和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1975.%20%E6%9C%80%E5%A4%A7%E6%96%B9%E9%98%B5%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1975.%20%E6%9C%80%E5%A4%A7%E6%96%B9%E9%98%B5%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1976. 到达目的地的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1976.%20%E5%88%B0%E8%BE%BE%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1976.%20%E5%88%B0%E8%BE%BE%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1977. 划分数字的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1977.%20%E5%88%92%E5%88%86%E6%95%B0%E5%AD%97%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1977.%20%E5%88%92%E5%88%86%E6%95%B0%E5%AD%97%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1978. 上级经理已离职的公司员工【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1978.%20%E4%B8%8A%E7%BA%A7%E7%BB%8F%E7%90%86%E5%B7%B2%E7%A6%BB%E8%81%8C%E7%9A%84%E5%85%AC%E5%8F%B8%E5%91%98%E5%B7%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1978.%20%E4%B8%8A%E7%BA%A7%E7%BB%8F%E7%90%86%E5%B7%B2%E7%A6%BB%E8%81%8C%E7%9A%84%E5%85%AC%E5%8F%B8%E5%91%98%E5%B7%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1979. 找出数组的最大公约数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1979.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1979.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1980. 找出不同的二进制字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1980.%20%E6%89%BE%E5%87%BA%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1980.%20%E6%89%BE%E5%87%BA%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1981. 最小化目标值与所选元素的差【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1981.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9B%AE%E6%A0%87%E5%80%BC%E4%B8%8E%E6%89%80%E9%80%89%E5%85%83%E7%B4%A0%E7%9A%84%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1981.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9B%AE%E6%A0%87%E5%80%BC%E4%B8%8E%E6%89%80%E9%80%89%E5%85%83%E7%B4%A0%E7%9A%84%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1982. 从子集的和还原数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1982.%20%E4%BB%8E%E5%AD%90%E9%9B%86%E7%9A%84%E5%92%8C%E8%BF%98%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1982.%20%E4%BB%8E%E5%AD%90%E9%9B%86%E7%9A%84%E5%92%8C%E8%BF%98%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1983. 范围和相等的最宽索引对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1983.%20%E8%8C%83%E5%9B%B4%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%AE%BD%E7%B4%A2%E5%BC%95%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1983.%20%E8%8C%83%E5%9B%B4%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%AE%BD%E7%B4%A2%E5%BC%95%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1984. 学生分数的最小差值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1984.%20%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1984.%20%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1985. 找出数组中的第 K 大整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1985.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1985.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1986. 完成任务的最少工作时间段【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1986.%20%E5%AE%8C%E6%88%90%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%91%E5%B7%A5%E4%BD%9C%E6%97%B6%E9%97%B4%E6%AE%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1986.%20%E5%AE%8C%E6%88%90%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%91%E5%B7%A5%E4%BD%9C%E6%97%B6%E9%97%B4%E6%AE%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1987. 不同的好子序列数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1987.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1987.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1988. 找出每所学校的最低分数要求【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1988.%20%E6%89%BE%E5%87%BA%E6%AF%8F%E6%89%80%E5%AD%A6%E6%A0%A1%E7%9A%84%E6%9C%80%E4%BD%8E%E5%88%86%E6%95%B0%E8%A6%81%E6%B1%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1988.%20%E6%89%BE%E5%87%BA%E6%AF%8F%E6%89%80%E5%AD%A6%E6%A0%A1%E7%9A%84%E6%9C%80%E4%BD%8E%E5%88%86%E6%95%B0%E8%A6%81%E6%B1%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1989. 捉迷藏中可捕获的最大人数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1989.%20%E6%8D%89%E8%BF%B7%E8%97%8F%E4%B8%AD%E5%8F%AF%E6%8D%95%E8%8E%B7%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1989.%20%E6%8D%89%E8%BF%B7%E8%97%8F%E4%B8%AD%E5%8F%AF%E6%8D%95%E8%8E%B7%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1990. 统计实验的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1990.%20%E7%BB%9F%E8%AE%A1%E5%AE%9E%E9%AA%8C%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1990.%20%E7%BB%9F%E8%AE%A1%E5%AE%9E%E9%AA%8C%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1991. 找到数组的中间位置【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1991.%20%E6%89%BE%E5%88%B0%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1991.%20%E6%89%BE%E5%88%B0%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BD%8D%E7%BD%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1992. 找到所有的农场组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1992.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E7%9A%84%E5%86%9C%E5%9C%BA%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1992.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E7%9A%84%E5%86%9C%E5%9C%BA%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1993. 树上的操作【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1993.%20%E6%A0%91%E4%B8%8A%E7%9A%84%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1993.%20%E6%A0%91%E4%B8%8A%E7%9A%84%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1994. 好子集的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1994.%20%E5%A5%BD%E5%AD%90%E9%9B%86%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1994.%20%E5%A5%BD%E5%AD%90%E9%9B%86%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1995. 统计特殊四元组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/1995.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%9B%9B%E5%85%83%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1995.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%9B%9B%E5%85%83%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [1996. 游戏中弱角色的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1996.%20%E6%B8%B8%E6%88%8F%E4%B8%AD%E5%BC%B1%E8%A7%92%E8%89%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1996.%20%E6%B8%B8%E6%88%8F%E4%B8%AD%E5%BC%B1%E8%A7%92%E8%89%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1997. 访问完所有房间的第一天【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1997.%20%E8%AE%BF%E9%97%AE%E5%AE%8C%E6%89%80%E6%9C%89%E6%88%BF%E9%97%B4%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1997.%20%E8%AE%BF%E9%97%AE%E5%AE%8C%E6%89%80%E6%9C%89%E6%88%BF%E9%97%B4%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [1998. 数组的最大公因数排序【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/1998.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0%E6%8E%92%E5%BA%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1998.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0%E6%8E%92%E5%BA%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [1999. 最小的仅由两个数组成的倍数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/1999.%20%E6%9C%80%E5%B0%8F%E7%9A%84%E4%BB%85%E7%94%B1%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E6%88%90%E7%9A%84%E5%80%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/1999.%20%E6%9C%80%E5%B0%8F%E7%9A%84%E4%BB%85%E7%94%B1%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E6%88%90%E7%9A%84%E5%80%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2000. 反转单词前缀【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2000.%20%E5%8F%8D%E8%BD%AC%E5%8D%95%E8%AF%8D%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2000.%20%E5%8F%8D%E8%BD%AC%E5%8D%95%E8%AF%8D%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 22. 2001~2100\\n\\n- [ ] [2001. 可互换矩形的组数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2001.%20%E5%8F%AF%E4%BA%92%E6%8D%A2%E7%9F%A9%E5%BD%A2%E7%9A%84%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2001.%20%E5%8F%AF%E4%BA%92%E6%8D%A2%E7%9F%A9%E5%BD%A2%E7%9A%84%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2002. 两个回文子序列长度的最大乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2002.%20%E4%B8%A4%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2002.%20%E4%B8%A4%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2003. 每棵子树内缺失的最小基因值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2003.%20%E6%AF%8F%E6%A3%B5%E5%AD%90%E6%A0%91%E5%86%85%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%9C%80%E5%B0%8F%E5%9F%BA%E5%9B%A0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2003.%20%E6%AF%8F%E6%A3%B5%E5%AD%90%E6%A0%91%E5%86%85%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%9C%80%E5%B0%8F%E5%9F%BA%E5%9B%A0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2004. 职员招聘人数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2004.%20%E8%81%8C%E5%91%98%E6%8B%9B%E8%81%98%E4%BA%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2004.%20%E8%81%8C%E5%91%98%E6%8B%9B%E8%81%98%E4%BA%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2005. 斐波那契树的移除子树游戏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2005.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%A0%91%E7%9A%84%E7%A7%BB%E9%99%A4%E5%AD%90%E6%A0%91%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2005.%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%A0%91%E7%9A%84%E7%A7%BB%E9%99%A4%E5%AD%90%E6%A0%91%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2006. 差的绝对值为 K 的数对数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2006.%20%E5%B7%AE%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B8%BA%20K%20%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2006.%20%E5%B7%AE%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E4%B8%BA%20K%20%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2007. 从双倍数组中还原原数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2007.%20%E4%BB%8E%E5%8F%8C%E5%80%8D%E6%95%B0%E7%BB%84%E4%B8%AD%E8%BF%98%E5%8E%9F%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2007.%20%E4%BB%8E%E5%8F%8C%E5%80%8D%E6%95%B0%E7%BB%84%E4%B8%AD%E8%BF%98%E5%8E%9F%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2008. 出租车的最大盈利【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2008.%20%E5%87%BA%E7%A7%9F%E8%BD%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E7%9B%88%E5%88%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2008.%20%E5%87%BA%E7%A7%9F%E8%BD%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E7%9B%88%E5%88%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2009. 使数组连续的最少操作数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2009.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E8%BF%9E%E7%BB%AD%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2009.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E8%BF%9E%E7%BB%AD%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2010. 职员招聘人数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2010.%20%E8%81%8C%E5%91%98%E6%8B%9B%E8%81%98%E4%BA%BA%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2010.%20%E8%81%8C%E5%91%98%E6%8B%9B%E8%81%98%E4%BA%BA%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2011. 执行操作后的变量值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2011.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E5%8F%98%E9%87%8F%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2011.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E5%8F%98%E9%87%8F%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2012. 数组美丽值求和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2012.%20%E6%95%B0%E7%BB%84%E7%BE%8E%E4%B8%BD%E5%80%BC%E6%B1%82%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2012.%20%E6%95%B0%E7%BB%84%E7%BE%8E%E4%B8%BD%E5%80%BC%E6%B1%82%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2013. 检测正方形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2013.%20%E6%A3%80%E6%B5%8B%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2013.%20%E6%A3%80%E6%B5%8B%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2014. 重复 K 次的最长子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2014.%20%E9%87%8D%E5%A4%8D%20K%20%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2014.%20%E9%87%8D%E5%A4%8D%20K%20%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2015. 每段建筑物的平均高度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2015.%20%E6%AF%8F%E6%AE%B5%E5%BB%BA%E7%AD%91%E7%89%A9%E7%9A%84%E5%B9%B3%E5%9D%87%E9%AB%98%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2015.%20%E6%AF%8F%E6%AE%B5%E5%BB%BA%E7%AD%91%E7%89%A9%E7%9A%84%E5%B9%B3%E5%9D%87%E9%AB%98%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2016. 增量元素之间的最大差值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2016.%20%E5%A2%9E%E9%87%8F%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2016.%20%E5%A2%9E%E9%87%8F%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2017. 网格游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2017.%20%E7%BD%91%E6%A0%BC%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2017.%20%E7%BD%91%E6%A0%BC%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2018. 判断单词是否能放入填字游戏内【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2018.%20%E5%88%A4%E6%96%AD%E5%8D%95%E8%AF%8D%E6%98%AF%E5%90%A6%E8%83%BD%E6%94%BE%E5%85%A5%E5%A1%AB%E5%AD%97%E6%B8%B8%E6%88%8F%E5%86%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2018.%20%E5%88%A4%E6%96%AD%E5%8D%95%E8%AF%8D%E6%98%AF%E5%90%A6%E8%83%BD%E6%94%BE%E5%85%A5%E5%A1%AB%E5%AD%97%E6%B8%B8%E6%88%8F%E5%86%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2019. 解出数学表达式的学生分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2019.%20%E8%A7%A3%E5%87%BA%E6%95%B0%E5%AD%A6%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2019.%20%E8%A7%A3%E5%87%BA%E6%95%B0%E5%AD%A6%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%9A%84%E5%AD%A6%E7%94%9F%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2020. 无流量的帐户数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2020.%20%E6%97%A0%E6%B5%81%E9%87%8F%E7%9A%84%E5%B8%90%E6%88%B7%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2020.%20%E6%97%A0%E6%B5%81%E9%87%8F%E7%9A%84%E5%B8%90%E6%88%B7%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2021. 街上最亮的位置【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2021.%20%E8%A1%97%E4%B8%8A%E6%9C%80%E4%BA%AE%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2021.%20%E8%A1%97%E4%B8%8A%E6%9C%80%E4%BA%AE%E7%9A%84%E4%BD%8D%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2022. 将一维数组转变成二维数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2022.%20%E5%B0%86%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8F%98%E6%88%90%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2022.%20%E5%B0%86%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8F%98%E6%88%90%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2023. 连接后等于目标字符串的字符串对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2023.%20%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2023.%20%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2024. 考试的最大困扰度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2024.%20%E8%80%83%E8%AF%95%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9B%B0%E6%89%B0%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2024.%20%E8%80%83%E8%AF%95%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9B%B0%E6%89%B0%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2025. 分割数组的最多方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2025.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%9A%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2025.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%9A%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2026. 低质量的问题【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2026.%20%E4%BD%8E%E8%B4%A8%E9%87%8F%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2026.%20%E4%BD%8E%E8%B4%A8%E9%87%8F%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2027. 转换字符串的最少操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2027.%20%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2027.%20%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2028. 找出缺失的观测数据【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2028.%20%E6%89%BE%E5%87%BA%E7%BC%BA%E5%A4%B1%E7%9A%84%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2028.%20%E6%89%BE%E5%87%BA%E7%BC%BA%E5%A4%B1%E7%9A%84%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2029. 石子游戏 IX【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2029.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20IX%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2029.%20%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F%20IX%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2030. 含特定字母的最小子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2030.%20%E5%90%AB%E7%89%B9%E5%AE%9A%E5%AD%97%E6%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2030.%20%E5%90%AB%E7%89%B9%E5%AE%9A%E5%AD%97%E6%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2031. 1 比 0 多的子数组个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2031.%201%20%E6%AF%94%200%20%E5%A4%9A%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2031.%201%20%E6%AF%94%200%20%E5%A4%9A%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2032. 至少在两个数组中出现的值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2032.%20%E8%87%B3%E5%B0%91%E5%9C%A8%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2032.%20%E8%87%B3%E5%B0%91%E5%9C%A8%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2033. 获取单值网格的最小操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2033.%20%E8%8E%B7%E5%8F%96%E5%8D%95%E5%80%BC%E7%BD%91%E6%A0%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2033.%20%E8%8E%B7%E5%8F%96%E5%8D%95%E5%80%BC%E7%BD%91%E6%A0%BC%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2034. 股票价格波动【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2034.%20%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E6%B3%A2%E5%8A%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2034.%20%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E6%B3%A2%E5%8A%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2035. 将数组分成两个数组并最小化数组和的差【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2035.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E5%B9%B6%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E7%BB%84%E5%92%8C%E7%9A%84%E5%B7%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2035.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E5%B9%B6%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E7%BB%84%E5%92%8C%E7%9A%84%E5%B7%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2036. 最大交替子数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2036.%20%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%9B%BF%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2036.%20%E6%9C%80%E5%A4%A7%E4%BA%A4%E6%9B%BF%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2037. 使每位学生都有座位的最少移动次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2037.%20%E4%BD%BF%E6%AF%8F%E4%BD%8D%E5%AD%A6%E7%94%9F%E9%83%BD%E6%9C%89%E5%BA%A7%E4%BD%8D%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2037.%20%E4%BD%BF%E6%AF%8F%E4%BD%8D%E5%AD%A6%E7%94%9F%E9%83%BD%E6%9C%89%E5%BA%A7%E4%BD%8D%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2038. 如果相邻两个颜色均相同则删除当前颜色【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2038.%20%E5%A6%82%E6%9E%9C%E7%9B%B8%E9%82%BB%E4%B8%A4%E4%B8%AA%E9%A2%9C%E8%89%B2%E5%9D%87%E7%9B%B8%E5%90%8C%E5%88%99%E5%88%A0%E9%99%A4%E5%BD%93%E5%89%8D%E9%A2%9C%E8%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2038.%20%E5%A6%82%E6%9E%9C%E7%9B%B8%E9%82%BB%E4%B8%A4%E4%B8%AA%E9%A2%9C%E8%89%B2%E5%9D%87%E7%9B%B8%E5%90%8C%E5%88%99%E5%88%A0%E9%99%A4%E5%BD%93%E5%89%8D%E9%A2%9C%E8%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2039. 网络空闲的时刻【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2039.%20%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B2%E7%9A%84%E6%97%B6%E5%88%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2039.%20%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B2%E7%9A%84%E6%97%B6%E5%88%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2040. 两个有序数组的第 K 小乘积【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2040.%20%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%20K%20%E5%B0%8F%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2040.%20%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%20K%20%E5%B0%8F%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2041. 面试中被录取的候选人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2041.%20%E9%9D%A2%E8%AF%95%E4%B8%AD%E8%A2%AB%E5%BD%95%E5%8F%96%E7%9A%84%E5%80%99%E9%80%89%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2041.%20%E9%9D%A2%E8%AF%95%E4%B8%AD%E8%A2%AB%E5%BD%95%E5%8F%96%E7%9A%84%E5%80%99%E9%80%89%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2042. 检查句子中的数字是否递增【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2042.%20%E6%A3%80%E6%9F%A5%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E9%80%92%E5%A2%9E%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2042.%20%E6%A3%80%E6%9F%A5%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E9%80%92%E5%A2%9E%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2043. 简易银行系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2043.%20%E7%AE%80%E6%98%93%E9%93%B6%E8%A1%8C%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2043.%20%E7%AE%80%E6%98%93%E9%93%B6%E8%A1%8C%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2044. 统计按位或能得到最大值的子集数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2044.%20%E7%BB%9F%E8%AE%A1%E6%8C%89%E4%BD%8D%E6%88%96%E8%83%BD%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%80%BC%E7%9A%84%E5%AD%90%E9%9B%86%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2044.%20%E7%BB%9F%E8%AE%A1%E6%8C%89%E4%BD%8D%E6%88%96%E8%83%BD%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%80%BC%E7%9A%84%E5%AD%90%E9%9B%86%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2045. 到达目的地的第二短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2045.%20%E5%88%B0%E8%BE%BE%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2045.%20%E5%88%B0%E8%BE%BE%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2046. 给按照绝对值排序的链表排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2046.%20%E7%BB%99%E6%8C%89%E7%85%A7%E7%BB%9D%E5%AF%B9%E5%80%BC%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2046.%20%E7%BB%99%E6%8C%89%E7%85%A7%E7%BB%9D%E5%AF%B9%E5%80%BC%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2047. 句子中的有效单词数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2047.%20%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%9C%89%E6%95%88%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2047.%20%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%9C%89%E6%95%88%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2048. 下一个更大的数值平衡数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2048.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E7%9A%84%E6%95%B0%E5%80%BC%E5%B9%B3%E8%A1%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2048.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E7%9A%84%E6%95%B0%E5%80%BC%E5%B9%B3%E8%A1%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2049. 统计最高分的节点数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2049.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E9%AB%98%E5%88%86%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2049.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E9%AB%98%E5%88%86%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2050. 并行课程 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2050.%20%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8B%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2050.%20%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8B%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2051. 商店中每个成员的级别【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2051.%20%E5%95%86%E5%BA%97%E4%B8%AD%E6%AF%8F%E4%B8%AA%E6%88%90%E5%91%98%E7%9A%84%E7%BA%A7%E5%88%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2051.%20%E5%95%86%E5%BA%97%E4%B8%AD%E6%AF%8F%E4%B8%AA%E6%88%90%E5%91%98%E7%9A%84%E7%BA%A7%E5%88%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2052. 将句子分隔成行的最低成本【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2052.%20%E5%B0%86%E5%8F%A5%E5%AD%90%E5%88%86%E9%9A%94%E6%88%90%E8%A1%8C%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2052.%20%E5%B0%86%E5%8F%A5%E5%AD%90%E5%88%86%E9%9A%94%E6%88%90%E8%A1%8C%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2053. 数组中第 K 个独一无二的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2053.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%AC%20K%20%E4%B8%AA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2053.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%AC%20K%20%E4%B8%AA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2053.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%AC%20K%20%E4%B8%AA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2054. 两个最好的不重叠活动【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2054.%20%E4%B8%A4%E4%B8%AA%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E6%B4%BB%E5%8A%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2054.%20%E4%B8%A4%E4%B8%AA%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%8D%E9%87%8D%E5%8F%A0%E6%B4%BB%E5%8A%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2055. 蜡烛之间的盘子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2055.%20%E8%9C%A1%E7%83%9B%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%98%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2055.%20%E8%9C%A1%E7%83%9B%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%98%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2056. 棋盘上有效移动组合的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2056.%20%E6%A3%8B%E7%9B%98%E4%B8%8A%E6%9C%89%E6%95%88%E7%A7%BB%E5%8A%A8%E7%BB%84%E5%90%88%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2056.%20%E6%A3%8B%E7%9B%98%E4%B8%8A%E6%9C%89%E6%95%88%E7%A7%BB%E5%8A%A8%E7%BB%84%E5%90%88%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2057. 值相等的最小索引【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2057.%20%E5%80%BC%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A2%E5%BC%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2057.%20%E5%80%BC%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E7%B4%A2%E5%BC%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2058. 找出临界点之间的最小和最大距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2058.%20%E6%89%BE%E5%87%BA%E4%B8%B4%E7%95%8C%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2058.%20%E6%89%BE%E5%87%BA%E4%B8%B4%E7%95%8C%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2059. 转化数字的最小运算数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2059.%20%E8%BD%AC%E5%8C%96%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%8F%E8%BF%90%E7%AE%97%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2059.%20%E8%BD%AC%E5%8C%96%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%8F%E8%BF%90%E7%AE%97%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2060. 同源字符串检测【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2060.%20%E5%90%8C%E6%BA%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A3%80%E6%B5%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2060.%20%E5%90%8C%E6%BA%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A3%80%E6%B5%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2061. 扫地机器人清扫过的空间个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2061.%20%E6%89%AB%E5%9C%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%B8%85%E6%89%AB%E8%BF%87%E7%9A%84%E7%A9%BA%E9%97%B4%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2061.%20%E6%89%AB%E5%9C%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%B8%85%E6%89%AB%E8%BF%87%E7%9A%84%E7%A9%BA%E9%97%B4%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2062. 统计字符串中的元音子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2062.%20%E7%BB%9F%E8%AE%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2062.%20%E7%BB%9F%E8%AE%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2063. 所有子字符串中的元音【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2063.%20%E6%89%80%E6%9C%89%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2063.%20%E6%89%80%E6%9C%89%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2064. 分配给商店的最多商品的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2064.%20%E5%88%86%E9%85%8D%E7%BB%99%E5%95%86%E5%BA%97%E7%9A%84%E6%9C%80%E5%A4%9A%E5%95%86%E5%93%81%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2064.%20%E5%88%86%E9%85%8D%E7%BB%99%E5%95%86%E5%BA%97%E7%9A%84%E6%9C%80%E5%A4%9A%E5%95%86%E5%93%81%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2065. 最大化一张图中的路径价值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2065.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E4%B8%80%E5%BC%A0%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E4%BB%B7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2065.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E4%B8%80%E5%BC%A0%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84%E4%BB%B7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2066. 账户余额【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2066.%20%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2066.%20%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2067. 等计数子串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2067.%20%E7%AD%89%E8%AE%A1%E6%95%B0%E5%AD%90%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2067.%20%E7%AD%89%E8%AE%A1%E6%95%B0%E5%AD%90%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2068. 检查两个字符串是否几乎相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2068.%20%E6%A3%80%E6%9F%A5%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%87%A0%E4%B9%8E%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2068.%20%E6%A3%80%E6%9F%A5%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E5%87%A0%E4%B9%8E%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2069. 模拟行走机器人 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2069.%20%E6%A8%A1%E6%8B%9F%E8%A1%8C%E8%B5%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2069.%20%E6%A8%A1%E6%8B%9F%E8%A1%8C%E8%B5%B0%E6%9C%BA%E5%99%A8%E4%BA%BA%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2070. 每一个查询的最大美丽值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2070.%20%E6%AF%8F%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2070.%20%E6%AF%8F%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2071. 你可以安排的最多任务数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2071.%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%AE%89%E6%8E%92%E7%9A%84%E6%9C%80%E5%A4%9A%E4%BB%BB%E5%8A%A1%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2071.%20%E4%BD%A0%E5%8F%AF%E4%BB%A5%E5%AE%89%E6%8E%92%E7%9A%84%E6%9C%80%E5%A4%9A%E4%BB%BB%E5%8A%A1%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2072. 赢得比赛的大学【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2072.%20%E8%B5%A2%E5%BE%97%E6%AF%94%E8%B5%9B%E7%9A%84%E5%A4%A7%E5%AD%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2072.%20%E8%B5%A2%E5%BE%97%E6%AF%94%E8%B5%9B%E7%9A%84%E5%A4%A7%E5%AD%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2073. 买票需要的时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2073.%20%E4%B9%B0%E7%A5%A8%E9%9C%80%E8%A6%81%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2073.%20%E4%B9%B0%E7%A5%A8%E9%9C%80%E8%A6%81%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2074. 反转偶数长度组的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2074.%20%E5%8F%8D%E8%BD%AC%E5%81%B6%E6%95%B0%E9%95%BF%E5%BA%A6%E7%BB%84%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2074.%20%E5%8F%8D%E8%BD%AC%E5%81%B6%E6%95%B0%E9%95%BF%E5%BA%A6%E7%BB%84%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2075. 解码斜向换位密码【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2075.%20%E8%A7%A3%E7%A0%81%E6%96%9C%E5%90%91%E6%8D%A2%E4%BD%8D%E5%AF%86%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2075.%20%E8%A7%A3%E7%A0%81%E6%96%9C%E5%90%91%E6%8D%A2%E4%BD%8D%E5%AF%86%E7%A0%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2076. 处理含限制条件的好友请求【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2076.%20%E5%A4%84%E7%90%86%E5%90%AB%E9%99%90%E5%88%B6%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%A5%BD%E5%8F%8B%E8%AF%B7%E6%B1%82%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2076.%20%E5%A4%84%E7%90%86%E5%90%AB%E9%99%90%E5%88%B6%E6%9D%A1%E4%BB%B6%E7%9A%84%E5%A5%BD%E5%8F%8B%E8%AF%B7%E6%B1%82%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2077. 殊途同归【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2077.%20%E6%AE%8A%E9%80%94%E5%90%8C%E5%BD%92%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2077.%20%E6%AE%8A%E9%80%94%E5%90%8C%E5%BD%92%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2078. 两栋颜色不同且距离最远的房子【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2078.%20%E4%B8%A4%E6%A0%8B%E9%A2%9C%E8%89%B2%E4%B8%8D%E5%90%8C%E4%B8%94%E8%B7%9D%E7%A6%BB%E6%9C%80%E8%BF%9C%E7%9A%84%E6%88%BF%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2078.%20%E4%B8%A4%E6%A0%8B%E9%A2%9C%E8%89%B2%E4%B8%8D%E5%90%8C%E4%B8%94%E8%B7%9D%E7%A6%BB%E6%9C%80%E8%BF%9C%E7%9A%84%E6%88%BF%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2079. 给植物浇水【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2079.%20%E7%BB%99%E6%A4%8D%E7%89%A9%E6%B5%87%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2079.%20%E7%BB%99%E6%A4%8D%E7%89%A9%E6%B5%87%E6%B0%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2080. 区间内查询数字的频率【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2080.%20%E5%8C%BA%E9%97%B4%E5%86%85%E6%9F%A5%E8%AF%A2%E6%95%B0%E5%AD%97%E7%9A%84%E9%A2%91%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2080.%20%E5%8C%BA%E9%97%B4%E5%86%85%E6%9F%A5%E8%AF%A2%E6%95%B0%E5%AD%97%E7%9A%84%E9%A2%91%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2081. k 镜像数字的和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2081.%20k%20%E9%95%9C%E5%83%8F%E6%95%B0%E5%AD%97%E7%9A%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2081.%20k%20%E9%95%9C%E5%83%8F%E6%95%B0%E5%AD%97%E7%9A%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2082. 富有客户的数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2082.%20%E5%AF%8C%E6%9C%89%E5%AE%A2%E6%88%B7%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2082.%20%E5%AF%8C%E6%9C%89%E5%AE%A2%E6%88%B7%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2083. 求以相同字母开头和结尾的子串总数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2083.%20%E6%B1%82%E4%BB%A5%E7%9B%B8%E5%90%8C%E5%AD%97%E6%AF%8D%E5%BC%80%E5%A4%B4%E5%92%8C%E7%BB%93%E5%B0%BE%E7%9A%84%E5%AD%90%E4%B8%B2%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2083.%20%E6%B1%82%E4%BB%A5%E7%9B%B8%E5%90%8C%E5%AD%97%E6%AF%8D%E5%BC%80%E5%A4%B4%E5%92%8C%E7%BB%93%E5%B0%BE%E7%9A%84%E5%AD%90%E4%B8%B2%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2084. 为订单类型为 0 的客户删除类型为 1 的订单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2084.%20%E4%B8%BA%E8%AE%A2%E5%8D%95%E7%B1%BB%E5%9E%8B%E4%B8%BA%200%20%E7%9A%84%E5%AE%A2%E6%88%B7%E5%88%A0%E9%99%A4%E7%B1%BB%E5%9E%8B%E4%B8%BA%201%20%E7%9A%84%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2084.%20%E4%B8%BA%E8%AE%A2%E5%8D%95%E7%B1%BB%E5%9E%8B%E4%B8%BA%200%20%E7%9A%84%E5%AE%A2%E6%88%B7%E5%88%A0%E9%99%A4%E7%B1%BB%E5%9E%8B%E4%B8%BA%201%20%E7%9A%84%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2085. 统计出现过一次的公共字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2085.%20%E7%BB%9F%E8%AE%A1%E5%87%BA%E7%8E%B0%E8%BF%87%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%AC%E5%85%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2085.%20%E7%BB%9F%E8%AE%A1%E5%87%BA%E7%8E%B0%E8%BF%87%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%AC%E5%85%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 计数法](https://tdahuyou.github.io/TNotes.leetcode/notes/2085.%20%E7%BB%9F%E8%AE%A1%E5%87%BA%E7%8E%B0%E8%BF%87%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%AC%E5%85%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---计数法)\\n  - [3. 🎯 Solutions.2 - 集合去重法](https://tdahuyou.github.io/TNotes.leetcode/notes/2085.%20%E7%BB%9F%E8%AE%A1%E5%87%BA%E7%8E%B0%E8%BF%87%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%AC%E5%85%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---集合去重法)\\n- [ ] [2086. 喂食仓鼠的最小食物桶数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2086.%20%E5%96%82%E9%A3%9F%E4%BB%93%E9%BC%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E9%A3%9F%E7%89%A9%E6%A1%B6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2086.%20%E5%96%82%E9%A3%9F%E4%BB%93%E9%BC%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E9%A3%9F%E7%89%A9%E6%A1%B6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2087. 网格图中机器人回家的最小代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2087.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9B%9E%E5%AE%B6%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2087.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%9B%9E%E5%AE%B6%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2088. 统计农场中肥沃金字塔的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2088.%20%E7%BB%9F%E8%AE%A1%E5%86%9C%E5%9C%BA%E4%B8%AD%E8%82%A5%E6%B2%83%E9%87%91%E5%AD%97%E5%A1%94%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2088.%20%E7%BB%9F%E8%AE%A1%E5%86%9C%E5%9C%BA%E4%B8%AD%E8%82%A5%E6%B2%83%E9%87%91%E5%AD%97%E5%A1%94%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2089. 找出数组排序后的目标下标【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2089.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E5%90%8E%E7%9A%84%E7%9B%AE%E6%A0%87%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2089.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E5%90%8E%E7%9A%84%E7%9B%AE%E6%A0%87%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2090. 半径为 k 的子数组平均值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2090.%20%E5%8D%8A%E5%BE%84%E4%B8%BA%20k%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2090.%20%E5%8D%8A%E5%BE%84%E4%B8%BA%20k%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2091. 从数组中移除最大值和最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2091.%20%E4%BB%8E%E6%95%B0%E7%BB%84%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2091.%20%E4%BB%8E%E6%95%B0%E7%BB%84%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2092. 找出知晓秘密的所有专家【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2092.%20%E6%89%BE%E5%87%BA%E7%9F%A5%E6%99%93%E7%A7%98%E5%AF%86%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%93%E5%AE%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2092.%20%E6%89%BE%E5%87%BA%E7%9F%A5%E6%99%93%E7%A7%98%E5%AF%86%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%93%E5%AE%B6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2093. 前往目标城市的最小费用【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2093.%20%E5%89%8D%E5%BE%80%E7%9B%AE%E6%A0%87%E5%9F%8E%E5%B8%82%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2093.%20%E5%89%8D%E5%BE%80%E7%9B%AE%E6%A0%87%E5%9F%8E%E5%B8%82%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2094. 找出 3 位偶数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2094.%20%E6%89%BE%E5%87%BA%203%20%E4%BD%8D%E5%81%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2094.%20%E6%89%BE%E5%87%BA%203%20%E4%BD%8D%E5%81%B6%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2095. 删除链表的中间节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2095.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2095.%20%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2096. 从二叉树一个节点到另一个节点每一步的方向【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2096.%20%E4%BB%8E%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E6%AF%8F%E4%B8%80%E6%AD%A5%E7%9A%84%E6%96%B9%E5%90%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2096.%20%E4%BB%8E%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E6%AF%8F%E4%B8%80%E6%AD%A5%E7%9A%84%E6%96%B9%E5%90%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2097. 合法重新排列数对【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2097.%20%E5%90%88%E6%B3%95%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2097.%20%E5%90%88%E6%B3%95%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%95%B0%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2098. 长度为 K 的最大偶数和子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2098.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E5%81%B6%E6%95%B0%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2098.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E5%81%B6%E6%95%B0%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2099. 找到和最大的长度为 K 的子序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2099.%20%E6%89%BE%E5%88%B0%E5%92%8C%E6%9C%80%E5%A4%A7%E7%9A%84%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2099.%20%E6%89%BE%E5%88%B0%E5%92%8C%E6%9C%80%E5%A4%A7%E7%9A%84%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2099.%20%E6%89%BE%E5%88%B0%E5%92%8C%E6%9C%80%E5%A4%A7%E7%9A%84%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2100. 适合野炊的日子【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2100.%20%E9%80%82%E5%90%88%E9%87%8E%E7%82%8A%E7%9A%84%E6%97%A5%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2100.%20%E9%80%82%E5%90%88%E9%87%8E%E7%82%8A%E7%9A%84%E6%97%A5%E5%AD%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 23. 2101~2200\\n\\n- [ ] [2101. 引爆最多的炸弹【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2101.%20%E5%BC%95%E7%88%86%E6%9C%80%E5%A4%9A%E7%9A%84%E7%82%B8%E5%BC%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2101.%20%E5%BC%95%E7%88%86%E6%9C%80%E5%A4%9A%E7%9A%84%E7%82%B8%E5%BC%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2102. 序列顺序查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2102.%20%E5%BA%8F%E5%88%97%E9%A1%BA%E5%BA%8F%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2102.%20%E5%BA%8F%E5%88%97%E9%A1%BA%E5%BA%8F%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2103. 环和杆【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2103.%20%E7%8E%AF%E5%92%8C%E6%9D%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2103.%20%E7%8E%AF%E5%92%8C%E6%9D%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2104. 子数组范围和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2104.%20%E5%AD%90%E6%95%B0%E7%BB%84%E8%8C%83%E5%9B%B4%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2104.%20%E5%AD%90%E6%95%B0%E7%BB%84%E8%8C%83%E5%9B%B4%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2105. 给植物浇水 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2105.%20%E7%BB%99%E6%A4%8D%E7%89%A9%E6%B5%87%E6%B0%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2105.%20%E7%BB%99%E6%A4%8D%E7%89%A9%E6%B5%87%E6%B0%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2106. 摘水果【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2106.%20%E6%91%98%E6%B0%B4%E6%9E%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2106.%20%E6%91%98%E6%B0%B4%E6%9E%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2107. 分享 K 个糖果后独特口味的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2107.%20%E5%88%86%E4%BA%AB%20K%20%E4%B8%AA%E7%B3%96%E6%9E%9C%E5%90%8E%E7%8B%AC%E7%89%B9%E5%8F%A3%E5%91%B3%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2107.%20%E5%88%86%E4%BA%AB%20K%20%E4%B8%AA%E7%B3%96%E6%9E%9C%E5%90%8E%E7%8B%AC%E7%89%B9%E5%8F%A3%E5%91%B3%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2108. 找出数组中的第一个回文字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2108.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2108.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2108.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2109. 向字符串添加空格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2109.%20%E5%90%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%BB%E5%8A%A0%E7%A9%BA%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2109.%20%E5%90%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%BB%E5%8A%A0%E7%A9%BA%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2110. 股票平滑下跌阶段的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2110.%20%E8%82%A1%E7%A5%A8%E5%B9%B3%E6%BB%91%E4%B8%8B%E8%B7%8C%E9%98%B6%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2110.%20%E8%82%A1%E7%A5%A8%E5%B9%B3%E6%BB%91%E4%B8%8B%E8%B7%8C%E9%98%B6%E6%AE%B5%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2111. 使数组 K 递增的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2111.%20%E4%BD%BF%E6%95%B0%E7%BB%84%20K%20%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2111.%20%E4%BD%BF%E6%95%B0%E7%BB%84%20K%20%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2112. 最繁忙的机场【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2112.%20%E6%9C%80%E7%B9%81%E5%BF%99%E7%9A%84%E6%9C%BA%E5%9C%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2112.%20%E6%9C%80%E7%B9%81%E5%BF%99%E7%9A%84%E6%9C%BA%E5%9C%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2113. 查询删除和添加元素后的数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2113.%20%E6%9F%A5%E8%AF%A2%E5%88%A0%E9%99%A4%E5%92%8C%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2113.%20%E6%9F%A5%E8%AF%A2%E5%88%A0%E9%99%A4%E5%92%8C%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2114. 句子中的最多单词数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2114.%20%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%9A%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2114.%20%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%9A%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2114.%20%E5%8F%A5%E5%AD%90%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%9A%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2115. 从给定原材料中找到所有可以做出的菜【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2115.%20%E4%BB%8E%E7%BB%99%E5%AE%9A%E5%8E%9F%E6%9D%90%E6%96%99%E4%B8%AD%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%87%BA%E7%9A%84%E8%8F%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2115.%20%E4%BB%8E%E7%BB%99%E5%AE%9A%E5%8E%9F%E6%9D%90%E6%96%99%E4%B8%AD%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%87%BA%E7%9A%84%E8%8F%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2116. 判断一个括号字符串是否有效【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2116.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2116.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%9C%89%E6%95%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2117. 一个区间内所有数乘积的缩写【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2117.%20%E4%B8%80%E4%B8%AA%E5%8C%BA%E9%97%B4%E5%86%85%E6%89%80%E6%9C%89%E6%95%B0%E4%B9%98%E7%A7%AF%E7%9A%84%E7%BC%A9%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2117.%20%E4%B8%80%E4%B8%AA%E5%8C%BA%E9%97%B4%E5%86%85%E6%89%80%E6%9C%89%E6%95%B0%E4%B9%98%E7%A7%AF%E7%9A%84%E7%BC%A9%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2118. 建立方程【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2118.%20%E5%BB%BA%E7%AB%8B%E6%96%B9%E7%A8%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2118.%20%E5%BB%BA%E7%AB%8B%E6%96%B9%E7%A8%8B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2119. 反转两次的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2119.%20%E5%8F%8D%E8%BD%AC%E4%B8%A4%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2119.%20%E5%8F%8D%E8%BD%AC%E4%B8%A4%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2120. 执行所有后缀指令【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2120.%20%E6%89%A7%E8%A1%8C%E6%89%80%E6%9C%89%E5%90%8E%E7%BC%80%E6%8C%87%E4%BB%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2120.%20%E6%89%A7%E8%A1%8C%E6%89%80%E6%9C%89%E5%90%8E%E7%BC%80%E6%8C%87%E4%BB%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2121. 相同元素的间隔之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2121.%20%E7%9B%B8%E5%90%8C%E5%85%83%E7%B4%A0%E7%9A%84%E9%97%B4%E9%9A%94%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2121.%20%E7%9B%B8%E5%90%8C%E5%85%83%E7%B4%A0%E7%9A%84%E9%97%B4%E9%9A%94%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2122. 还原原数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2122.%20%E8%BF%98%E5%8E%9F%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2122.%20%E8%BF%98%E5%8E%9F%E5%8E%9F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2123. 使矩阵中的 1 互不相邻的最小操作数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2123.%20%E4%BD%BF%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%201%20%E4%BA%92%E4%B8%8D%E7%9B%B8%E9%82%BB%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2123.%20%E4%BD%BF%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%201%20%E4%BA%92%E4%B8%8D%E7%9B%B8%E9%82%BB%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2124. 检查是否所有 A 都在 B 之前【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2124.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%89%80%E6%9C%89%20A%20%E9%83%BD%E5%9C%A8%20B%20%E4%B9%8B%E5%89%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2124.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%89%80%E6%9C%89%20A%20%E9%83%BD%E5%9C%A8%20B%20%E4%B9%8B%E5%89%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2125. 银行中的激光束数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2125.%20%E9%93%B6%E8%A1%8C%E4%B8%AD%E7%9A%84%E6%BF%80%E5%85%89%E6%9D%9F%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2125.%20%E9%93%B6%E8%A1%8C%E4%B8%AD%E7%9A%84%E6%BF%80%E5%85%89%E6%9D%9F%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2126. 摧毁小行星【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2126.%20%E6%91%A7%E6%AF%81%E5%B0%8F%E8%A1%8C%E6%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2126.%20%E6%91%A7%E6%AF%81%E5%B0%8F%E8%A1%8C%E6%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2127. 参加会议的最多员工数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2127.%20%E5%8F%82%E5%8A%A0%E4%BC%9A%E8%AE%AE%E7%9A%84%E6%9C%80%E5%A4%9A%E5%91%98%E5%B7%A5%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2127.%20%E5%8F%82%E5%8A%A0%E4%BC%9A%E8%AE%AE%E7%9A%84%E6%9C%80%E5%A4%9A%E5%91%98%E5%B7%A5%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2128. 通过翻转行或列来去除所有的 1【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2128.%20%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E8%A1%8C%E6%88%96%E5%88%97%E6%9D%A5%E5%8E%BB%E9%99%A4%E6%89%80%E6%9C%89%E7%9A%84%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2128.%20%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E8%A1%8C%E6%88%96%E5%88%97%E6%9D%A5%E5%8E%BB%E9%99%A4%E6%89%80%E6%9C%89%E7%9A%84%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2129. 将标题首字母大写【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2129.%20%E5%B0%86%E6%A0%87%E9%A2%98%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2129.%20%E5%B0%86%E6%A0%87%E9%A2%98%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2130. 链表最大孪生和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2130.%20%E9%93%BE%E8%A1%A8%E6%9C%80%E5%A4%A7%E5%AD%AA%E7%94%9F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2130.%20%E9%93%BE%E8%A1%A8%E6%9C%80%E5%A4%A7%E5%AD%AA%E7%94%9F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2131. 连接两字母单词得到的最长回文串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2131.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E5%AD%97%E6%AF%8D%E5%8D%95%E8%AF%8D%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2131.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E5%AD%97%E6%AF%8D%E5%8D%95%E8%AF%8D%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions](https://tdahuyou.github.io/TNotes.leetcode/notes/2131.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E5%AD%97%E6%AF%8D%E5%8D%95%E8%AF%8D%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions)\\n- [ ] [2132. 用邮票贴满网格图【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2132.%20%E7%94%A8%E9%82%AE%E7%A5%A8%E8%B4%B4%E6%BB%A1%E7%BD%91%E6%A0%BC%E5%9B%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2132.%20%E7%94%A8%E9%82%AE%E7%A5%A8%E8%B4%B4%E6%BB%A1%E7%BD%91%E6%A0%BC%E5%9B%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [2133. 检查是否每一行每一列都包含全部整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2133.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%AF%8F%E4%B8%80%E8%A1%8C%E6%AF%8F%E4%B8%80%E5%88%97%E9%83%BD%E5%8C%85%E5%90%AB%E5%85%A8%E9%83%A8%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2133.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%AF%8F%E4%B8%80%E8%A1%8C%E6%AF%8F%E4%B8%80%E5%88%97%E9%83%BD%E5%8C%85%E5%90%AB%E5%85%A8%E9%83%A8%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 逐行、逐列求和](https://tdahuyou.github.io/TNotes.leetcode/notes/2133.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%AF%8F%E4%B8%80%E8%A1%8C%E6%AF%8F%E4%B8%80%E5%88%97%E9%83%BD%E5%8C%85%E5%90%AB%E5%85%A8%E9%83%A8%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---逐行逐列求和)\\n  - [3. 🎯 Solutions.2 - 使用 Set](https://tdahuyou.github.io/TNotes.leetcode/notes/2133.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%AF%8F%E4%B8%80%E8%A1%8C%E6%AF%8F%E4%B8%80%E5%88%97%E9%83%BD%E5%8C%85%E5%90%AB%E5%85%A8%E9%83%A8%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---使用-set)\\n- [ ] [2134. 最少交换次数来组合所有的 1 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2134.%20%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E6%9D%A5%E7%BB%84%E5%90%88%E6%89%80%E6%9C%89%E7%9A%84%201%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2134.%20%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E6%9D%A5%E7%BB%84%E5%90%88%E6%89%80%E6%9C%89%E7%9A%84%201%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2135. 统计追加字母可以获得的单词数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2135.%20%E7%BB%9F%E8%AE%A1%E8%BF%BD%E5%8A%A0%E5%AD%97%E6%AF%8D%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2135.%20%E7%BB%9F%E8%AE%A1%E8%BF%BD%E5%8A%A0%E5%AD%97%E6%AF%8D%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E5%8D%95%E8%AF%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2136. 全部开花的最早一天【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2136.%20%E5%85%A8%E9%83%A8%E5%BC%80%E8%8A%B1%E7%9A%84%E6%9C%80%E6%97%A9%E4%B8%80%E5%A4%A9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2136.%20%E5%85%A8%E9%83%A8%E5%BC%80%E8%8A%B1%E7%9A%84%E6%9C%80%E6%97%A9%E4%B8%80%E5%A4%A9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2137. 通过倒水操作让所有的水桶所含水量相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2137.%20%E9%80%9A%E8%BF%87%E5%80%92%E6%B0%B4%E6%93%8D%E4%BD%9C%E8%AE%A9%E6%89%80%E6%9C%89%E7%9A%84%E6%B0%B4%E6%A1%B6%E6%89%80%E5%90%AB%E6%B0%B4%E9%87%8F%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2137.%20%E9%80%9A%E8%BF%87%E5%80%92%E6%B0%B4%E6%93%8D%E4%BD%9C%E8%AE%A9%E6%89%80%E6%9C%89%E7%9A%84%E6%B0%B4%E6%A1%B6%E6%89%80%E5%90%AB%E6%B0%B4%E9%87%8F%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2138. 将字符串拆分为若干长度为 k 的组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2138.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%88%86%E4%B8%BA%E8%8B%A5%E5%B9%B2%E9%95%BF%E5%BA%A6%E4%B8%BA%20k%20%E7%9A%84%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2138.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%88%86%E4%B8%BA%E8%8B%A5%E5%B9%B2%E9%95%BF%E5%BA%A6%E4%B8%BA%20k%20%E7%9A%84%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2139. 得到目标值的最少行动次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2139.%20%E5%BE%97%E5%88%B0%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E8%A1%8C%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2139.%20%E5%BE%97%E5%88%B0%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E8%A1%8C%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2140. 解决智力问题【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2140.%20%E8%A7%A3%E5%86%B3%E6%99%BA%E5%8A%9B%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2140.%20%E8%A7%A3%E5%86%B3%E6%99%BA%E5%8A%9B%E9%97%AE%E9%A2%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2141. 同时运行 N 台电脑的最长时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2141.%20%E5%90%8C%E6%97%B6%E8%BF%90%E8%A1%8C%20N%20%E5%8F%B0%E7%94%B5%E8%84%91%E7%9A%84%E6%9C%80%E9%95%BF%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2141.%20%E5%90%8C%E6%97%B6%E8%BF%90%E8%A1%8C%20N%20%E5%8F%B0%E7%94%B5%E8%84%91%E7%9A%84%E6%9C%80%E9%95%BF%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2142. 每辆车的乘客人数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2142.%20%E6%AF%8F%E8%BE%86%E8%BD%A6%E7%9A%84%E4%B9%98%E5%AE%A2%E4%BA%BA%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2142.%20%E6%AF%8F%E8%BE%86%E8%BD%A6%E7%9A%84%E4%B9%98%E5%AE%A2%E4%BA%BA%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2143. 在两个数组的区间中选取数字【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2143.%20%E5%9C%A8%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E9%97%B4%E4%B8%AD%E9%80%89%E5%8F%96%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2143.%20%E5%9C%A8%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E9%97%B4%E4%B8%AD%E9%80%89%E5%8F%96%E6%95%B0%E5%AD%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [2144. 打折购买糖果的最小开销【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2144.%20%E6%89%93%E6%8A%98%E8%B4%AD%E4%B9%B0%E7%B3%96%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2144.%20%E6%89%93%E6%8A%98%E8%B4%AD%E4%B9%B0%E7%B3%96%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2144.%20%E6%89%93%E6%8A%98%E8%B4%AD%E4%B9%B0%E7%B3%96%E6%9E%9C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2145. 统计隐藏数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2145.%20%E7%BB%9F%E8%AE%A1%E9%9A%90%E8%97%8F%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2145.%20%E7%BB%9F%E8%AE%A1%E9%9A%90%E8%97%8F%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2146. 价格范围内最高排名的 K 样物品【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2146.%20%E4%BB%B7%E6%A0%BC%E8%8C%83%E5%9B%B4%E5%86%85%E6%9C%80%E9%AB%98%E6%8E%92%E5%90%8D%E7%9A%84%20K%20%E6%A0%B7%E7%89%A9%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2146.%20%E4%BB%B7%E6%A0%BC%E8%8C%83%E5%9B%B4%E5%86%85%E6%9C%80%E9%AB%98%E6%8E%92%E5%90%8D%E7%9A%84%20K%20%E6%A0%B7%E7%89%A9%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2147. 分隔长廊的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2147.%20%E5%88%86%E9%9A%94%E9%95%BF%E5%BB%8A%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2147.%20%E5%88%86%E9%9A%94%E9%95%BF%E5%BB%8A%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2148. 元素计数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2148.%20%E5%85%83%E7%B4%A0%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2148.%20%E5%85%83%E7%B4%A0%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2149. 按符号重排数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2149.%20%E6%8C%89%E7%AC%A6%E5%8F%B7%E9%87%8D%E6%8E%92%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2149.%20%E6%8C%89%E7%AC%A6%E5%8F%B7%E9%87%8D%E6%8E%92%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2150. 找出数组中的所有孤独数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2150.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%A4%E7%8B%AC%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2150.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%A4%E7%8B%AC%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2151. 基于陈述统计最多好人数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2151.%20%E5%9F%BA%E4%BA%8E%E9%99%88%E8%BF%B0%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%A4%9A%E5%A5%BD%E4%BA%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2151.%20%E5%9F%BA%E4%BA%8E%E9%99%88%E8%BF%B0%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%A4%9A%E5%A5%BD%E4%BA%BA%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2152. 穿过所有点的所需最少直线数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2152.%20%E7%A9%BF%E8%BF%87%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%89%80%E9%9C%80%E6%9C%80%E5%B0%91%E7%9B%B4%E7%BA%BF%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2152.%20%E7%A9%BF%E8%BF%87%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%89%80%E9%9C%80%E6%9C%80%E5%B0%91%E7%9B%B4%E7%BA%BF%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2153. 每辆车的乘客人数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2153.%20%E6%AF%8F%E8%BE%86%E8%BD%A6%E7%9A%84%E4%B9%98%E5%AE%A2%E4%BA%BA%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2153.%20%E6%AF%8F%E8%BE%86%E8%BD%A6%E7%9A%84%E4%B9%98%E5%AE%A2%E4%BA%BA%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2154. 将找到的值乘以 2【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2154.%20%E5%B0%86%E6%89%BE%E5%88%B0%E7%9A%84%E5%80%BC%E4%B9%98%E4%BB%A5%202%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2154.%20%E5%B0%86%E6%89%BE%E5%88%B0%E7%9A%84%E5%80%BC%E4%B9%98%E4%BB%A5%202%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2155. 分组得分最高的所有下标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2155.%20%E5%88%86%E7%BB%84%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2155.%20%E5%88%86%E7%BB%84%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E6%89%80%E6%9C%89%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2156. 查找给定哈希值的子串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2156.%20%E6%9F%A5%E6%89%BE%E7%BB%99%E5%AE%9A%E5%93%88%E5%B8%8C%E5%80%BC%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2156.%20%E6%9F%A5%E6%89%BE%E7%BB%99%E5%AE%9A%E5%93%88%E5%B8%8C%E5%80%BC%E7%9A%84%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2157. 字符串分组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2157.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2157.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2158. 每天绘制新区域的数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2158.%20%E6%AF%8F%E5%A4%A9%E7%BB%98%E5%88%B6%E6%96%B0%E5%8C%BA%E5%9F%9F%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2158.%20%E6%AF%8F%E5%A4%A9%E7%BB%98%E5%88%B6%E6%96%B0%E5%8C%BA%E5%9F%9F%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2159. 分别排序两列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2159.%20%E5%88%86%E5%88%AB%E6%8E%92%E5%BA%8F%E4%B8%A4%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2159.%20%E5%88%86%E5%88%AB%E6%8E%92%E5%BA%8F%E4%B8%A4%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2160. 拆分数位后四位数字的最小和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2160.%20%E6%8B%86%E5%88%86%E6%95%B0%E4%BD%8D%E5%90%8E%E5%9B%9B%E4%BD%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2160.%20%E6%8B%86%E5%88%86%E6%95%B0%E4%BD%8D%E5%90%8E%E5%9B%9B%E4%BD%8D%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2161. 根据给定数字划分数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2161.%20%E6%A0%B9%E6%8D%AE%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2161.%20%E6%A0%B9%E6%8D%AE%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2162. 设置时间的最少代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2162.%20%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%91%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2162.%20%E8%AE%BE%E7%BD%AE%E6%97%B6%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%91%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2163. 删除元素后和的最小差值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2163.%20%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E5%90%8E%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2163.%20%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E5%90%8E%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2164. 对奇偶下标分别排序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2164.%20%E5%AF%B9%E5%A5%87%E5%81%B6%E4%B8%8B%E6%A0%87%E5%88%86%E5%88%AB%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2164.%20%E5%AF%B9%E5%A5%87%E5%81%B6%E4%B8%8B%E6%A0%87%E5%88%86%E5%88%AB%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2165. 重排数字的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2165.%20%E9%87%8D%E6%8E%92%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2165.%20%E9%87%8D%E6%8E%92%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2166. 设计位集【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2166.%20%E8%AE%BE%E8%AE%A1%E4%BD%8D%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2166.%20%E8%AE%BE%E8%AE%A1%E4%BD%8D%E9%9B%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2167. 移除所有载有违禁货物车厢所需的最少时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2167.%20%E7%A7%BB%E9%99%A4%E6%89%80%E6%9C%89%E8%BD%BD%E6%9C%89%E8%BF%9D%E7%A6%81%E8%B4%A7%E7%89%A9%E8%BD%A6%E5%8E%A2%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2167.%20%E7%A7%BB%E9%99%A4%E6%89%80%E6%9C%89%E8%BD%BD%E6%9C%89%E8%BF%9D%E7%A6%81%E8%B4%A7%E7%89%A9%E8%BD%A6%E5%8E%A2%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2168. 每个数字的频率都相同的独特子字符串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2168.%20%E6%AF%8F%E4%B8%AA%E6%95%B0%E5%AD%97%E7%9A%84%E9%A2%91%E7%8E%87%E9%83%BD%E7%9B%B8%E5%90%8C%E7%9A%84%E7%8B%AC%E7%89%B9%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2168.%20%E6%AF%8F%E4%B8%AA%E6%95%B0%E5%AD%97%E7%9A%84%E9%A2%91%E7%8E%87%E9%83%BD%E7%9B%B8%E5%90%8C%E7%9A%84%E7%8B%AC%E7%89%B9%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2169. 得到 0 的操作数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2169.%20%E5%BE%97%E5%88%B0%200%20%E7%9A%84%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2169.%20%E5%BE%97%E5%88%B0%200%20%E7%9A%84%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2170. 使数组变成交替数组的最少操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2170.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8F%98%E6%88%90%E4%BA%A4%E6%9B%BF%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2170.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8F%98%E6%88%90%E4%BA%A4%E6%9B%BF%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2171. 拿出最少数目的魔法豆【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2171.%20%E6%8B%BF%E5%87%BA%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E7%9A%84%E9%AD%94%E6%B3%95%E8%B1%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2171.%20%E6%8B%BF%E5%87%BA%E6%9C%80%E5%B0%91%E6%95%B0%E7%9B%AE%E7%9A%84%E9%AD%94%E6%B3%95%E8%B1%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2172. 数组的最大与和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2172.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B8%8E%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2172.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B8%8E%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2173. 最多连胜的次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2173.%20%E6%9C%80%E5%A4%9A%E8%BF%9E%E8%83%9C%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2173.%20%E6%9C%80%E5%A4%9A%E8%BF%9E%E8%83%9C%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2174. 通过翻转行或列来去除所有的 1 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2174.%20%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E8%A1%8C%E6%88%96%E5%88%97%E6%9D%A5%E5%8E%BB%E9%99%A4%E6%89%80%E6%9C%89%E7%9A%84%201%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2174.%20%E9%80%9A%E8%BF%87%E7%BF%BB%E8%BD%AC%E8%A1%8C%E6%88%96%E5%88%97%E6%9D%A5%E5%8E%BB%E9%99%A4%E6%89%80%E6%9C%89%E7%9A%84%201%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2175. 世界排名的变化【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2175.%20%E4%B8%96%E7%95%8C%E6%8E%92%E5%90%8D%E7%9A%84%E5%8F%98%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2175.%20%E4%B8%96%E7%95%8C%E6%8E%92%E5%90%8D%E7%9A%84%E5%8F%98%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2176. 统计数组中相等且可以被整除的数对【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2176.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9B%B8%E7%AD%89%E4%B8%94%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2176.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9B%B8%E7%AD%89%E4%B8%94%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%95%B0%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2177. 找到和为给定整数的三个连续整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2177.%20%E6%89%BE%E5%88%B0%E5%92%8C%E4%B8%BA%E7%BB%99%E5%AE%9A%E6%95%B4%E6%95%B0%E7%9A%84%E4%B8%89%E4%B8%AA%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2177.%20%E6%89%BE%E5%88%B0%E5%92%8C%E4%B8%BA%E7%BB%99%E5%AE%9A%E6%95%B4%E6%95%B0%E7%9A%84%E4%B8%89%E4%B8%AA%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2178. 拆分成最多数目的正偶数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2178.%20%E6%8B%86%E5%88%86%E6%88%90%E6%9C%80%E5%A4%9A%E6%95%B0%E7%9B%AE%E7%9A%84%E6%AD%A3%E5%81%B6%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2178.%20%E6%8B%86%E5%88%86%E6%88%90%E6%9C%80%E5%A4%9A%E6%95%B0%E7%9B%AE%E7%9A%84%E6%AD%A3%E5%81%B6%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2179. 统计数组中好三元组数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2179.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E5%A5%BD%E4%B8%89%E5%85%83%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2179.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E5%A5%BD%E4%B8%89%E5%85%83%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2180. 统计各位数字之和为偶数的整数个数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2180.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E6%95%B4%E6%95%B0%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2180.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E6%95%B4%E6%95%B0%E4%B8%AA%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2181. 合并零之间的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2181.%20%E5%90%88%E5%B9%B6%E9%9B%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2181.%20%E5%90%88%E5%B9%B6%E9%9B%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2182. 构造限制重复的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2182.%20%E6%9E%84%E9%80%A0%E9%99%90%E5%88%B6%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2182.%20%E6%9E%84%E9%80%A0%E9%99%90%E5%88%B6%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2183. 统计可以被 K 整除的下标对数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2183.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E4%BB%A5%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2183.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E4%BB%A5%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2184. 建造坚实的砖墙的方法数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2184.%20%E5%BB%BA%E9%80%A0%E5%9D%9A%E5%AE%9E%E7%9A%84%E7%A0%96%E5%A2%99%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2184.%20%E5%BB%BA%E9%80%A0%E5%9D%9A%E5%AE%9E%E7%9A%84%E7%A0%96%E5%A2%99%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2185. 统计包含给定前缀的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2185.%20%E7%BB%9F%E8%AE%A1%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E5%89%8D%E7%BC%80%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2185.%20%E7%BB%9F%E8%AE%A1%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E5%89%8D%E7%BC%80%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2186. 制造字母异位词的最小步骤数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2186.%20%E5%88%B6%E9%80%A0%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AD%A5%E9%AA%A4%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2186.%20%E5%88%B6%E9%80%A0%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%AD%A5%E9%AA%A4%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2187. 完成旅途的最少时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2187.%20%E5%AE%8C%E6%88%90%E6%97%85%E9%80%94%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2187.%20%E5%AE%8C%E6%88%90%E6%97%85%E9%80%94%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2188. 完成比赛的最少时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2188.%20%E5%AE%8C%E6%88%90%E6%AF%94%E8%B5%9B%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2188.%20%E5%AE%8C%E6%88%90%E6%AF%94%E8%B5%9B%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2189. 建造纸牌屋的方法数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2189.%20%E5%BB%BA%E9%80%A0%E7%BA%B8%E7%89%8C%E5%B1%8B%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2189.%20%E5%BB%BA%E9%80%A0%E7%BA%B8%E7%89%8C%E5%B1%8B%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2190. 数组中紧跟 key 之后出现最频繁的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2190.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%B4%A7%E8%B7%9F%20key%20%E4%B9%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2190.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%B4%A7%E8%B7%9F%20key%20%E4%B9%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2191. 将杂乱无章的数字排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2191.%20%E5%B0%86%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0%E7%9A%84%E6%95%B0%E5%AD%97%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2191.%20%E5%B0%86%E6%9D%82%E4%B9%B1%E6%97%A0%E7%AB%A0%E7%9A%84%E6%95%B0%E5%AD%97%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2192. 有向无环图中一个节点的所有祖先【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2192.%20%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE%E4%B8%AD%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%89%80%E6%9C%89%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2192.%20%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE%E4%B8%AD%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%89%80%E6%9C%89%E7%A5%96%E5%85%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2193. 得到回文串的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2193.%20%E5%BE%97%E5%88%B0%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2193.%20%E5%BE%97%E5%88%B0%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2194. Excel 表中某个范围内的单元格【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2194.%20Excel%20%E8%A1%A8%E4%B8%AD%E6%9F%90%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E5%8D%95%E5%85%83%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2194.%20Excel%20%E8%A1%A8%E4%B8%AD%E6%9F%90%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E5%8D%95%E5%85%83%E6%A0%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2195. 向数组中追加 K 个整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2195.%20%E5%90%91%E6%95%B0%E7%BB%84%E4%B8%AD%E8%BF%BD%E5%8A%A0%20K%20%E4%B8%AA%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2195.%20%E5%90%91%E6%95%B0%E7%BB%84%E4%B8%AD%E8%BF%BD%E5%8A%A0%20K%20%E4%B8%AA%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2196. 根据描述创建二叉树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2196.%20%E6%A0%B9%E6%8D%AE%E6%8F%8F%E8%BF%B0%E5%88%9B%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2196.%20%E6%A0%B9%E6%8D%AE%E6%8F%8F%E8%BF%B0%E5%88%9B%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2197. 替换数组中的非互质数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2197.%20%E6%9B%BF%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%9D%9E%E4%BA%92%E8%B4%A8%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2197.%20%E6%9B%BF%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%9D%9E%E4%BA%92%E8%B4%A8%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2198. 单因数三元组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2198.%20%E5%8D%95%E5%9B%A0%E6%95%B0%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2198.%20%E5%8D%95%E5%9B%A0%E6%95%B0%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2199. 找到每篇文章的主题【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2199.%20%E6%89%BE%E5%88%B0%E6%AF%8F%E7%AF%87%E6%96%87%E7%AB%A0%E7%9A%84%E4%B8%BB%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2199.%20%E6%89%BE%E5%88%B0%E6%AF%8F%E7%AF%87%E6%96%87%E7%AB%A0%E7%9A%84%E4%B8%BB%E9%A2%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2200. 找出数组中的所有 K 近邻下标【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2200.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%20K%20%E8%BF%91%E9%82%BB%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2200.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%20K%20%E8%BF%91%E9%82%BB%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 24. 2201~2300\\n\\n- [ ] [2201. 统计可以提取的工件【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2201.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E4%BB%A5%E6%8F%90%E5%8F%96%E7%9A%84%E5%B7%A5%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2201.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E4%BB%A5%E6%8F%90%E5%8F%96%E7%9A%84%E5%B7%A5%E4%BB%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2202. K 次操作后最大化顶端元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2202.%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E9%A1%B6%E7%AB%AF%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2202.%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E9%A1%B6%E7%AB%AF%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2203. 得到要求路径的最小带权子图【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2203.%20%E5%BE%97%E5%88%B0%E8%A6%81%E6%B1%82%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B8%A6%E6%9D%83%E5%AD%90%E5%9B%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2203.%20%E5%BE%97%E5%88%B0%E8%A6%81%E6%B1%82%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B8%A6%E6%9D%83%E5%AD%90%E5%9B%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2204. 无向图中到环的距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2204.%20%E6%97%A0%E5%90%91%E5%9B%BE%E4%B8%AD%E5%88%B0%E7%8E%AF%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2204.%20%E6%97%A0%E5%90%91%E5%9B%BE%E4%B8%AD%E5%88%B0%E7%8E%AF%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2205. 有资格享受折扣的用户数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2205.%20%E6%9C%89%E8%B5%84%E6%A0%BC%E4%BA%AB%E5%8F%97%E6%8A%98%E6%89%A3%E7%9A%84%E7%94%A8%E6%88%B7%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2205.%20%E6%9C%89%E8%B5%84%E6%A0%BC%E4%BA%AB%E5%8F%97%E6%8A%98%E6%89%A3%E7%9A%84%E7%94%A8%E6%88%B7%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2206. 将数组划分成相等数对【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2206.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%92%E5%88%86%E6%88%90%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2206.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%92%E5%88%86%E6%88%90%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2207. 字符串中最多数目的子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2207.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%9C%80%E5%A4%9A%E6%95%B0%E7%9B%AE%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2207.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%9C%80%E5%A4%9A%E6%95%B0%E7%9B%AE%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2208. 将数组和减半的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2208.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%92%8C%E5%87%8F%E5%8D%8A%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2208.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%92%8C%E5%87%8F%E5%8D%8A%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2209. 用地毯覆盖后的最少白色砖块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2209.%20%E7%94%A8%E5%9C%B0%E6%AF%AF%E8%A6%86%E7%9B%96%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%91%E7%99%BD%E8%89%B2%E7%A0%96%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2209.%20%E7%94%A8%E5%9C%B0%E6%AF%AF%E8%A6%86%E7%9B%96%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%91%E7%99%BD%E8%89%B2%E7%A0%96%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2210. 统计数组中峰和谷的数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2210.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E5%B3%B0%E5%92%8C%E8%B0%B7%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2210.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E5%B3%B0%E5%92%8C%E8%B0%B7%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2211. 统计道路上的碰撞次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2211.%20%E7%BB%9F%E8%AE%A1%E9%81%93%E8%B7%AF%E4%B8%8A%E7%9A%84%E7%A2%B0%E6%92%9E%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2211.%20%E7%BB%9F%E8%AE%A1%E9%81%93%E8%B7%AF%E4%B8%8A%E7%9A%84%E7%A2%B0%E6%92%9E%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2212. 射箭比赛中的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2212.%20%E5%B0%84%E7%AE%AD%E6%AF%94%E8%B5%9B%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2212.%20%E5%B0%84%E7%AE%AD%E6%AF%94%E8%B5%9B%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2213. 由单个字符重复的最长子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2213.%20%E7%94%B1%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6%E9%87%8D%E5%A4%8D%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2213.%20%E7%94%B1%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6%E9%87%8D%E5%A4%8D%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2214. 通关游戏所需的最低生命值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2214.%20%E9%80%9A%E5%85%B3%E6%B8%B8%E6%88%8F%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E4%BD%8E%E7%94%9F%E5%91%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2214.%20%E9%80%9A%E5%85%B3%E6%B8%B8%E6%88%8F%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E4%BD%8E%E7%94%9F%E5%91%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2215. 找出两数组的不同【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2215.%20%E6%89%BE%E5%87%BA%E4%B8%A4%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8D%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2215.%20%E6%89%BE%E5%87%BA%E4%B8%A4%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8D%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2216. 美化数组的最少删除数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2216.%20%E7%BE%8E%E5%8C%96%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2216.%20%E7%BE%8E%E5%8C%96%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2217. 找到指定长度的回文数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2217.%20%E6%89%BE%E5%88%B0%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2217.%20%E6%89%BE%E5%88%B0%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2218. 从栈中取出 K 个硬币的最大面值和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2218.%20%E4%BB%8E%E6%A0%88%E4%B8%AD%E5%8F%96%E5%87%BA%20K%20%E4%B8%AA%E7%A1%AC%E5%B8%81%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E5%80%BC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2218.%20%E4%BB%8E%E6%A0%88%E4%B8%AD%E5%8F%96%E5%87%BA%20K%20%E4%B8%AA%E7%A1%AC%E5%B8%81%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E5%80%BC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2219. 数组的最大总分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2219.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2219.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2220. 转换数字的最少位翻转次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2220.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%91%E4%BD%8D%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2220.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%91%E4%BD%8D%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2221. 数组的三角和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2221.%20%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%89%E8%A7%92%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2221.%20%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%89%E8%A7%92%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2222. 选择建筑的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2222.%20%E9%80%89%E6%8B%A9%E5%BB%BA%E7%AD%91%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2222.%20%E9%80%89%E6%8B%A9%E5%BB%BA%E7%AD%91%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2223. 构造字符串的总得分和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2223.%20%E6%9E%84%E9%80%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%80%BB%E5%BE%97%E5%88%86%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2223.%20%E6%9E%84%E9%80%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%80%BB%E5%BE%97%E5%88%86%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2224. 转化时间需要的最少操作数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2224.%20%E8%BD%AC%E5%8C%96%E6%97%B6%E9%97%B4%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2224.%20%E8%BD%AC%E5%8C%96%E6%97%B6%E9%97%B4%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2225. 找出输掉零场或一场比赛的玩家【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2225.%20%E6%89%BE%E5%87%BA%E8%BE%93%E6%8E%89%E9%9B%B6%E5%9C%BA%E6%88%96%E4%B8%80%E5%9C%BA%E6%AF%94%E8%B5%9B%E7%9A%84%E7%8E%A9%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2225.%20%E6%89%BE%E5%87%BA%E8%BE%93%E6%8E%89%E9%9B%B6%E5%9C%BA%E6%88%96%E4%B8%80%E5%9C%BA%E6%AF%94%E8%B5%9B%E7%9A%84%E7%8E%A9%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2226. 每个小孩最多能分到多少糖果【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2226.%20%E6%AF%8F%E4%B8%AA%E5%B0%8F%E5%AD%A9%E6%9C%80%E5%A4%9A%E8%83%BD%E5%88%86%E5%88%B0%E5%A4%9A%E5%B0%91%E7%B3%96%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2226.%20%E6%AF%8F%E4%B8%AA%E5%B0%8F%E5%AD%A9%E6%9C%80%E5%A4%9A%E8%83%BD%E5%88%86%E5%88%B0%E5%A4%9A%E5%B0%91%E7%B3%96%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2227. 加密解密字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2227.%20%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2227.%20%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2228. 7 天内两次购买的用户【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2228.%207%20%E5%A4%A9%E5%86%85%E4%B8%A4%E6%AC%A1%E8%B4%AD%E4%B9%B0%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2228.%207%20%E5%A4%A9%E5%86%85%E4%B8%A4%E6%AC%A1%E8%B4%AD%E4%B9%B0%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2229. 检查数组是否连贯【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2229.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E8%BF%9E%E8%B4%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2229.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E8%BF%9E%E8%B4%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2230. 查找可享受优惠的用户【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2230.%20%E6%9F%A5%E6%89%BE%E5%8F%AF%E4%BA%AB%E5%8F%97%E4%BC%98%E6%83%A0%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2230.%20%E6%9F%A5%E6%89%BE%E5%8F%AF%E4%BA%AB%E5%8F%97%E4%BC%98%E6%83%A0%E7%9A%84%E7%94%A8%E6%88%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2231. 按奇偶性交换后的最大数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2231.%20%E6%8C%89%E5%A5%87%E5%81%B6%E6%80%A7%E4%BA%A4%E6%8D%A2%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2231.%20%E6%8C%89%E5%A5%87%E5%81%B6%E6%80%A7%E4%BA%A4%E6%8D%A2%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2232. 向表达式添加括号后的最小结果【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2232.%20%E5%90%91%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B7%BB%E5%8A%A0%E6%8B%AC%E5%8F%B7%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2232.%20%E5%90%91%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B7%BB%E5%8A%A0%E6%8B%AC%E5%8F%B7%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2233. K 次增加后的最大乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2233.%20K%20%E6%AC%A1%E5%A2%9E%E5%8A%A0%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2233.%20K%20%E6%AC%A1%E5%A2%9E%E5%8A%A0%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2234. 花园的最大总美丽值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2234.%20%E8%8A%B1%E5%9B%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2234.%20%E8%8A%B1%E5%9B%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2235. 两整数相加【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2235.%20%E4%B8%A4%E6%95%B4%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2235.%20%E4%B8%A4%E6%95%B4%E6%95%B0%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2236. 判断根结点是否等于子结点之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2236.%20%E5%88%A4%E6%96%AD%E6%A0%B9%E7%BB%93%E7%82%B9%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E5%AD%90%E7%BB%93%E7%82%B9%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2236.%20%E5%88%A4%E6%96%AD%E6%A0%B9%E7%BB%93%E7%82%B9%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E5%AD%90%E7%BB%93%E7%82%B9%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2237. 计算街道上满足所需亮度的位置数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2237.%20%E8%AE%A1%E7%AE%97%E8%A1%97%E9%81%93%E4%B8%8A%E6%BB%A1%E8%B6%B3%E6%89%80%E9%9C%80%E4%BA%AE%E5%BA%A6%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2237.%20%E8%AE%A1%E7%AE%97%E8%A1%97%E9%81%93%E4%B8%8A%E6%BB%A1%E8%B6%B3%E6%89%80%E9%9C%80%E4%BA%AE%E5%BA%A6%E7%9A%84%E4%BD%8D%E7%BD%AE%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2238. 司机成为乘客的次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2238.%20%E5%8F%B8%E6%9C%BA%E6%88%90%E4%B8%BA%E4%B9%98%E5%AE%A2%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2238.%20%E5%8F%B8%E6%9C%BA%E6%88%90%E4%B8%BA%E4%B9%98%E5%AE%A2%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2239. 找到最接近 0 的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2239.%20%E6%89%BE%E5%88%B0%E6%9C%80%E6%8E%A5%E8%BF%91%200%20%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2239.%20%E6%89%BE%E5%88%B0%E6%9C%80%E6%8E%A5%E8%BF%91%200%20%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2240. 买钢笔和铅笔的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2240.%20%E4%B9%B0%E9%92%A2%E7%AC%94%E5%92%8C%E9%93%85%E7%AC%94%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2240.%20%E4%B9%B0%E9%92%A2%E7%AC%94%E5%92%8C%E9%93%85%E7%AC%94%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2241. 设计一个 ATM 机器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2241.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%20ATM%20%E6%9C%BA%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2241.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%20ATM%20%E6%9C%BA%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2242. 节点序列的最大得分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2242.%20%E8%8A%82%E7%82%B9%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2242.%20%E8%8A%82%E7%82%B9%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2243. 计算字符串的数字和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2243.%20%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E5%AD%97%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2243.%20%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E5%AD%97%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2244. 完成所有任务需要的最少轮数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2244.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E8%BD%AE%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2244.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E8%BD%AE%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2245. 转角路径的乘积中最多能有几个尾随零【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2245.%20%E8%BD%AC%E8%A7%92%E8%B7%AF%E5%BE%84%E7%9A%84%E4%B9%98%E7%A7%AF%E4%B8%AD%E6%9C%80%E5%A4%9A%E8%83%BD%E6%9C%89%E5%87%A0%E4%B8%AA%E5%B0%BE%E9%9A%8F%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2245.%20%E8%BD%AC%E8%A7%92%E8%B7%AF%E5%BE%84%E7%9A%84%E4%B9%98%E7%A7%AF%E4%B8%AD%E6%9C%80%E5%A4%9A%E8%83%BD%E6%9C%89%E5%87%A0%E4%B8%AA%E5%B0%BE%E9%9A%8F%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2246. 相邻字符不同的最长路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2246.%20%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9C%80%E9%95%BF%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2246.%20%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9C%80%E9%95%BF%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2247. K 条高速公路的最大旅行费用【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2247.%20K%20%E6%9D%A1%E9%AB%98%E9%80%9F%E5%85%AC%E8%B7%AF%E7%9A%84%E6%9C%80%E5%A4%A7%E6%97%85%E8%A1%8C%E8%B4%B9%E7%94%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2247.%20K%20%E6%9D%A1%E9%AB%98%E9%80%9F%E5%85%AC%E8%B7%AF%E7%9A%84%E6%9C%80%E5%A4%A7%E6%97%85%E8%A1%8C%E8%B4%B9%E7%94%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2248. 多个数组求交集【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2248.%20%E5%A4%9A%E4%B8%AA%E6%95%B0%E7%BB%84%E6%B1%82%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2248.%20%E5%A4%9A%E4%B8%AA%E6%95%B0%E7%BB%84%E6%B1%82%E4%BA%A4%E9%9B%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2249. 统计圆内格点数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2249.%20%E7%BB%9F%E8%AE%A1%E5%9C%86%E5%86%85%E6%A0%BC%E7%82%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2249.%20%E7%BB%9F%E8%AE%A1%E5%9C%86%E5%86%85%E6%A0%BC%E7%82%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2250. 统计包含每个点的矩形数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2250.%20%E7%BB%9F%E8%AE%A1%E5%8C%85%E5%90%AB%E6%AF%8F%E4%B8%AA%E7%82%B9%E7%9A%84%E7%9F%A9%E5%BD%A2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2250.%20%E7%BB%9F%E8%AE%A1%E5%8C%85%E5%90%AB%E6%AF%8F%E4%B8%AA%E7%82%B9%E7%9A%84%E7%9F%A9%E5%BD%A2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2251. 花期内花的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2251.%20%E8%8A%B1%E6%9C%9F%E5%86%85%E8%8A%B1%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2251.%20%E8%8A%B1%E6%9C%9F%E5%86%85%E8%8A%B1%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2252. 表的动态旋转【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2252.%20%E8%A1%A8%E7%9A%84%E5%8A%A8%E6%80%81%E6%97%8B%E8%BD%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2252.%20%E8%A1%A8%E7%9A%84%E5%8A%A8%E6%80%81%E6%97%8B%E8%BD%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2253. 动态取消表的旋转【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2253.%20%E5%8A%A8%E6%80%81%E5%8F%96%E6%B6%88%E8%A1%A8%E7%9A%84%E6%97%8B%E8%BD%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2253.%20%E5%8A%A8%E6%80%81%E5%8F%96%E6%B6%88%E8%A1%A8%E7%9A%84%E6%97%8B%E8%BD%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2254. 设计视频共享平台【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2254.%20%E8%AE%BE%E8%AE%A1%E8%A7%86%E9%A2%91%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2254.%20%E8%AE%BE%E8%AE%A1%E8%A7%86%E9%A2%91%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2255. 统计是给定字符串前缀的字符串数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2255.%20%E7%BB%9F%E8%AE%A1%E6%98%AF%E7%BB%99%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%89%8D%E7%BC%80%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2255.%20%E7%BB%9F%E8%AE%A1%E6%98%AF%E7%BB%99%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%89%8D%E7%BC%80%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2256. 最小平均差【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2256.%20%E6%9C%80%E5%B0%8F%E5%B9%B3%E5%9D%87%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2256.%20%E6%9C%80%E5%B0%8F%E5%B9%B3%E5%9D%87%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2257. 统计网格图中没有被保卫的格子数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2257.%20%E7%BB%9F%E8%AE%A1%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%A2%AB%E4%BF%9D%E5%8D%AB%E7%9A%84%E6%A0%BC%E5%AD%90%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2257.%20%E7%BB%9F%E8%AE%A1%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%A2%AB%E4%BF%9D%E5%8D%AB%E7%9A%84%E6%A0%BC%E5%AD%90%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2258. 逃离火灾【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2258.%20%E9%80%83%E7%A6%BB%E7%81%AB%E7%81%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2258.%20%E9%80%83%E7%A6%BB%E7%81%AB%E7%81%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2259. 移除指定数字得到的最大结果【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2259.%20%E7%A7%BB%E9%99%A4%E6%8C%87%E5%AE%9A%E6%95%B0%E5%AD%97%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E7%BB%93%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2259.%20%E7%A7%BB%E9%99%A4%E6%8C%87%E5%AE%9A%E6%95%B0%E5%AD%97%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E7%BB%93%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2260. 必须拿起的最小连续卡牌数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2260.%20%E5%BF%85%E9%A1%BB%E6%8B%BF%E8%B5%B7%E7%9A%84%E6%9C%80%E5%B0%8F%E8%BF%9E%E7%BB%AD%E5%8D%A1%E7%89%8C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2260.%20%E5%BF%85%E9%A1%BB%E6%8B%BF%E8%B5%B7%E7%9A%84%E6%9C%80%E5%B0%8F%E8%BF%9E%E7%BB%AD%E5%8D%A1%E7%89%8C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2261. 含最多 K 个可整除元素的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2261.%20%E5%90%AB%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E5%8F%AF%E6%95%B4%E9%99%A4%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2261.%20%E5%90%AB%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E5%8F%AF%E6%95%B4%E9%99%A4%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2262. 字符串的总引力【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2262.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%80%BB%E5%BC%95%E5%8A%9B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2262.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%80%BB%E5%BC%95%E5%8A%9B%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2263. 数组变为有序的最小操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2263.%20%E6%95%B0%E7%BB%84%E5%8F%98%E4%B8%BA%E6%9C%89%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2263.%20%E6%95%B0%E7%BB%84%E5%8F%98%E4%B8%BA%E6%9C%89%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2264. 字符串中最大的 3 位相同数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2264.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%203%20%E4%BD%8D%E7%9B%B8%E5%90%8C%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2264.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E6%9C%80%E5%A4%A7%E7%9A%84%203%20%E4%BD%8D%E7%9B%B8%E5%90%8C%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2265. 统计值等于子树平均值的节点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2265.%20%E7%BB%9F%E8%AE%A1%E5%80%BC%E7%AD%89%E4%BA%8E%E5%AD%90%E6%A0%91%E5%B9%B3%E5%9D%87%E5%80%BC%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2265.%20%E7%BB%9F%E8%AE%A1%E5%80%BC%E7%AD%89%E4%BA%8E%E5%AD%90%E6%A0%91%E5%B9%B3%E5%9D%87%E5%80%BC%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2266. 统计打字方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2266.%20%E7%BB%9F%E8%AE%A1%E6%89%93%E5%AD%97%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2266.%20%E7%BB%9F%E8%AE%A1%E6%89%93%E5%AD%97%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2267. 检查是否有合法括号字符串路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2267.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89%E5%90%88%E6%B3%95%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2267.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89%E5%90%88%E6%B3%95%E6%8B%AC%E5%8F%B7%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2268. 最少按键次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2268.%20%E6%9C%80%E5%B0%91%E6%8C%89%E9%94%AE%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2268.%20%E6%9C%80%E5%B0%91%E6%8C%89%E9%94%AE%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2269. 找到一个数字的 K 美丽值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2269.%20%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E7%9A%84%20K%20%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2269.%20%E6%89%BE%E5%88%B0%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E7%9A%84%20K%20%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2270. 分割数组的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2270.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2270.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2271. 毯子覆盖的最多白色砖块数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2271.%20%E6%AF%AF%E5%AD%90%E8%A6%86%E7%9B%96%E7%9A%84%E6%9C%80%E5%A4%9A%E7%99%BD%E8%89%B2%E7%A0%96%E5%9D%97%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2271.%20%E6%AF%AF%E5%AD%90%E8%A6%86%E7%9B%96%E7%9A%84%E6%9C%80%E5%A4%9A%E7%99%BD%E8%89%B2%E7%A0%96%E5%9D%97%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2272. 最大波动的子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2272.%20%E6%9C%80%E5%A4%A7%E6%B3%A2%E5%8A%A8%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2272.%20%E6%9C%80%E5%A4%A7%E6%B3%A2%E5%8A%A8%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [2273. 移除字母异位词后的结果数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2273.%20%E7%A7%BB%E9%99%A4%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2273.%20%E7%A7%BB%E9%99%A4%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2273.%20%E7%A7%BB%E9%99%A4%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2274. 不含特殊楼层的最大连续楼层数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2274.%20%E4%B8%8D%E5%90%AB%E7%89%B9%E6%AE%8A%E6%A5%BC%E5%B1%82%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E6%A5%BC%E5%B1%82%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2274.%20%E4%B8%8D%E5%90%AB%E7%89%B9%E6%AE%8A%E6%A5%BC%E5%B1%82%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BF%9E%E7%BB%AD%E6%A5%BC%E5%B1%82%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2275. 按位与结果大于零的最长组合【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2275.%20%E6%8C%89%E4%BD%8D%E4%B8%8E%E7%BB%93%E6%9E%9C%E5%A4%A7%E4%BA%8E%E9%9B%B6%E7%9A%84%E6%9C%80%E9%95%BF%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2275.%20%E6%8C%89%E4%BD%8D%E4%B8%8E%E7%BB%93%E6%9E%9C%E5%A4%A7%E4%BA%8E%E9%9B%B6%E7%9A%84%E6%9C%80%E9%95%BF%E7%BB%84%E5%90%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2276. 统计区间中的整数数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2276.%20%E7%BB%9F%E8%AE%A1%E5%8C%BA%E9%97%B4%E4%B8%AD%E7%9A%84%E6%95%B4%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2276.%20%E7%BB%9F%E8%AE%A1%E5%8C%BA%E9%97%B4%E4%B8%AD%E7%9A%84%E6%95%B4%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2277. 树中最接近路径的节点【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2277.%20%E6%A0%91%E4%B8%AD%E6%9C%80%E6%8E%A5%E8%BF%91%E8%B7%AF%E5%BE%84%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2277.%20%E6%A0%91%E4%B8%AD%E6%9C%80%E6%8E%A5%E8%BF%91%E8%B7%AF%E5%BE%84%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2278. 字母在字符串中的百分比【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2278.%20%E5%AD%97%E6%AF%8D%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2278.%20%E5%AD%97%E6%AF%8D%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E7%99%BE%E5%88%86%E6%AF%94%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2279. 装满石头的背包的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2279.%20%E8%A3%85%E6%BB%A1%E7%9F%B3%E5%A4%B4%E7%9A%84%E8%83%8C%E5%8C%85%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2279.%20%E8%A3%85%E6%BB%A1%E7%9F%B3%E5%A4%B4%E7%9A%84%E8%83%8C%E5%8C%85%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2280. 表示一个折线图的最少线段数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2280.%20%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E6%8A%98%E7%BA%BF%E5%9B%BE%E7%9A%84%E6%9C%80%E5%B0%91%E7%BA%BF%E6%AE%B5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2280.%20%E8%A1%A8%E7%A4%BA%E4%B8%80%E4%B8%AA%E6%8A%98%E7%BA%BF%E5%9B%BE%E7%9A%84%E6%9C%80%E5%B0%91%E7%BA%BF%E6%AE%B5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2281. 巫师的总力量和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2281.%20%E5%B7%AB%E5%B8%88%E7%9A%84%E6%80%BB%E5%8A%9B%E9%87%8F%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2281.%20%E5%B7%AB%E5%B8%88%E7%9A%84%E6%80%BB%E5%8A%9B%E9%87%8F%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2282. 在一个网格中可以看到的人数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2282.%20%E5%9C%A8%E4%B8%80%E4%B8%AA%E7%BD%91%E6%A0%BC%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2282.%20%E5%9C%A8%E4%B8%80%E4%B8%AA%E7%BD%91%E6%A0%BC%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2283. 判断一个数的数字计数是否等于数位的值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2283.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%97%E8%AE%A1%E6%95%B0%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E6%95%B0%E4%BD%8D%E7%9A%84%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2283.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%97%E8%AE%A1%E6%95%B0%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E6%95%B0%E4%BD%8D%E7%9A%84%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2284. 最多单词数的发件人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2284.%20%E6%9C%80%E5%A4%9A%E5%8D%95%E8%AF%8D%E6%95%B0%E7%9A%84%E5%8F%91%E4%BB%B6%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2284.%20%E6%9C%80%E5%A4%9A%E5%8D%95%E8%AF%8D%E6%95%B0%E7%9A%84%E5%8F%91%E4%BB%B6%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2285. 道路的最大总重要性【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2285.%20%E9%81%93%E8%B7%AF%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E9%87%8D%E8%A6%81%E6%80%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2285.%20%E9%81%93%E8%B7%AF%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E9%87%8D%E8%A6%81%E6%80%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2286. 以组为单位订音乐会的门票【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2286.%20%E4%BB%A5%E7%BB%84%E4%B8%BA%E5%8D%95%E4%BD%8D%E8%AE%A2%E9%9F%B3%E4%B9%90%E4%BC%9A%E7%9A%84%E9%97%A8%E7%A5%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2286.%20%E4%BB%A5%E7%BB%84%E4%B8%BA%E5%8D%95%E4%BD%8D%E8%AE%A2%E9%9F%B3%E4%B9%90%E4%BC%9A%E7%9A%84%E9%97%A8%E7%A5%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2287. 重排字符形成目标字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2287.%20%E9%87%8D%E6%8E%92%E5%AD%97%E7%AC%A6%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2287.%20%E9%87%8D%E6%8E%92%E5%AD%97%E7%AC%A6%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2288. 价格减免【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2288.%20%E4%BB%B7%E6%A0%BC%E5%87%8F%E5%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2288.%20%E4%BB%B7%E6%A0%BC%E5%87%8F%E5%85%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2289. 使数组按非递减顺序排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2289.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%8C%89%E9%9D%9E%E9%80%92%E5%87%8F%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2289.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%8C%89%E9%9D%9E%E9%80%92%E5%87%8F%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2290. 到达角落需要移除障碍物的最小数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2290.%20%E5%88%B0%E8%BE%BE%E8%A7%92%E8%90%BD%E9%9C%80%E8%A6%81%E7%A7%BB%E9%99%A4%E9%9A%9C%E7%A2%8D%E7%89%A9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2290.%20%E5%88%B0%E8%BE%BE%E8%A7%92%E8%90%BD%E9%9C%80%E8%A6%81%E7%A7%BB%E9%99%A4%E9%9A%9C%E7%A2%8D%E7%89%A9%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2291. 最大股票收益【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2291.%20%E6%9C%80%E5%A4%A7%E8%82%A1%E7%A5%A8%E6%94%B6%E7%9B%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2291.%20%E6%9C%80%E5%A4%A7%E8%82%A1%E7%A5%A8%E6%94%B6%E7%9B%8A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2292. 连续两年有 3 个及以上订单的产品【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2292.%20%E8%BF%9E%E7%BB%AD%E4%B8%A4%E5%B9%B4%E6%9C%89%203%20%E4%B8%AA%E5%8F%8A%E4%BB%A5%E4%B8%8A%E8%AE%A2%E5%8D%95%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2292.%20%E8%BF%9E%E7%BB%AD%E4%B8%A4%E5%B9%B4%E6%9C%89%203%20%E4%B8%AA%E5%8F%8A%E4%BB%A5%E4%B8%8A%E8%AE%A2%E5%8D%95%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2293. 极大极小游戏【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2293.%20%E6%9E%81%E5%A4%A7%E6%9E%81%E5%B0%8F%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2293.%20%E6%9E%81%E5%A4%A7%E6%9E%81%E5%B0%8F%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2294. 划分数组使最大差为 K【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2294.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E4%BD%BF%E6%9C%80%E5%A4%A7%E5%B7%AE%E4%B8%BA%20K%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2294.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E4%BD%BF%E6%9C%80%E5%A4%A7%E5%B7%AE%E4%B8%BA%20K%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2295. 替换数组中的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2295.%20%E6%9B%BF%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2295.%20%E6%9B%BF%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2296. 设计一个文本编辑器【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2296.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2296.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2297. 跳跃游戏 VIII【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2297.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20VIII%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2297.%20%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20VIII%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2298. 周末任务计数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2298.%20%E5%91%A8%E6%9C%AB%E4%BB%BB%E5%8A%A1%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2298.%20%E5%91%A8%E6%9C%AB%E4%BB%BB%E5%8A%A1%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2299. 强密码检验器 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2299.%20%E5%BC%BA%E5%AF%86%E7%A0%81%E6%A3%80%E9%AA%8C%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2299.%20%E5%BC%BA%E5%AF%86%E7%A0%81%E6%A3%80%E9%AA%8C%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2299.%20%E5%BC%BA%E5%AF%86%E7%A0%81%E6%A3%80%E9%AA%8C%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2300. 咒语和药水的成功对数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2300.%20%E5%92%92%E8%AF%AD%E5%92%8C%E8%8D%AF%E6%B0%B4%E7%9A%84%E6%88%90%E5%8A%9F%E5%AF%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2300.%20%E5%92%92%E8%AF%AD%E5%92%8C%E8%8D%AF%E6%B0%B4%E7%9A%84%E6%88%90%E5%8A%9F%E5%AF%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 25. 2301~2400\\n\\n- [ ] [2301. 替换字符后匹配【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2301.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E5%90%8E%E5%8C%B9%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2301.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E5%90%8E%E5%8C%B9%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2302. 统计得分小于 K 的子数组数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2302.%20%E7%BB%9F%E8%AE%A1%E5%BE%97%E5%88%86%E5%B0%8F%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2302.%20%E7%BB%9F%E8%AE%A1%E5%BE%97%E5%88%86%E5%B0%8F%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2303. 计算应缴税款总额【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2303.%20%E8%AE%A1%E7%AE%97%E5%BA%94%E7%BC%B4%E7%A8%8E%E6%AC%BE%E6%80%BB%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2303.%20%E8%AE%A1%E7%AE%97%E5%BA%94%E7%BC%B4%E7%A8%8E%E6%AC%BE%E6%80%BB%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2304. 网格中的最小路径代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2304.%20%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2304.%20%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2305. 公平分发饼干【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2305.%20%E5%85%AC%E5%B9%B3%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2305.%20%E5%85%AC%E5%B9%B3%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2306. 公司命名【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2306.%20%E5%85%AC%E5%8F%B8%E5%91%BD%E5%90%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2306.%20%E5%85%AC%E5%8F%B8%E5%91%BD%E5%90%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2307. 检查方程中的矛盾之处【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2307.%20%E6%A3%80%E6%9F%A5%E6%96%B9%E7%A8%8B%E4%B8%AD%E7%9A%84%E7%9F%9B%E7%9B%BE%E4%B9%8B%E5%A4%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2307.%20%E6%A3%80%E6%9F%A5%E6%96%B9%E7%A8%8B%E4%B8%AD%E7%9A%84%E7%9F%9B%E7%9B%BE%E4%B9%8B%E5%A4%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2308. 按性别排列表格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2308.%20%E6%8C%89%E6%80%A7%E5%88%AB%E6%8E%92%E5%88%97%E8%A1%A8%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2308.%20%E6%8C%89%E6%80%A7%E5%88%AB%E6%8E%92%E5%88%97%E8%A1%A8%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2309. 兼具大小写的最好英文字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2309.%20%E5%85%BC%E5%85%B7%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E6%9C%80%E5%A5%BD%E8%8B%B1%E6%96%87%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2309.%20%E5%85%BC%E5%85%B7%E5%A4%A7%E5%B0%8F%E5%86%99%E7%9A%84%E6%9C%80%E5%A5%BD%E8%8B%B1%E6%96%87%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2310. 个位数字为 K 的整数之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2310.%20%E4%B8%AA%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B8%BA%20K%20%E7%9A%84%E6%95%B4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2310.%20%E4%B8%AA%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B8%BA%20K%20%E7%9A%84%E6%95%B4%E6%95%B0%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2311. 小于等于 K 的最长二进制子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2311.%20%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E9%95%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2311.%20%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E9%95%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2312. 卖木头块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2312.%20%E5%8D%96%E6%9C%A8%E5%A4%B4%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2312.%20%E5%8D%96%E6%9C%A8%E5%A4%B4%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2313. 二叉树中得到结果所需的最少翻转次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2313.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%BE%97%E5%88%B0%E7%BB%93%E6%9E%9C%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2313.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%BE%97%E5%88%B0%E7%BB%93%E6%9E%9C%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2314. 每个城市最高气温的第一天【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2314.%20%E6%AF%8F%E4%B8%AA%E5%9F%8E%E5%B8%82%E6%9C%80%E9%AB%98%E6%B0%94%E6%B8%A9%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2314.%20%E6%AF%8F%E4%B8%AA%E5%9F%8E%E5%B8%82%E6%9C%80%E9%AB%98%E6%B0%94%E6%B8%A9%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2315. 统计星号【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2315.%20%E7%BB%9F%E8%AE%A1%E6%98%9F%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2315.%20%E7%BB%9F%E8%AE%A1%E6%98%9F%E5%8F%B7%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2316. 统计无向图中无法互相到达点对数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2316.%20%E7%BB%9F%E8%AE%A1%E6%97%A0%E5%90%91%E5%9B%BE%E4%B8%AD%E6%97%A0%E6%B3%95%E4%BA%92%E7%9B%B8%E5%88%B0%E8%BE%BE%E7%82%B9%E5%AF%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2316.%20%E7%BB%9F%E8%AE%A1%E6%97%A0%E5%90%91%E5%9B%BE%E4%B8%AD%E6%97%A0%E6%B3%95%E4%BA%92%E7%9B%B8%E5%88%B0%E8%BE%BE%E7%82%B9%E5%AF%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2317. 操作后的最大异或和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2317.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2317.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2318. 不同骰子序列的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2318.%20%E4%B8%8D%E5%90%8C%E9%AA%B0%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2318.%20%E4%B8%8D%E5%90%8C%E9%AA%B0%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2319. 判断矩阵是否是一个 X 矩阵【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2319.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5%E6%98%AF%E5%90%A6%E6%98%AF%E4%B8%80%E4%B8%AA%20X%20%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2319.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5%E6%98%AF%E5%90%A6%E6%98%AF%E4%B8%80%E4%B8%AA%20X%20%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2320. 统计放置房子的方式数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2320.%20%E7%BB%9F%E8%AE%A1%E6%94%BE%E7%BD%AE%E6%88%BF%E5%AD%90%E7%9A%84%E6%96%B9%E5%BC%8F%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2320.%20%E7%BB%9F%E8%AE%A1%E6%94%BE%E7%BD%AE%E6%88%BF%E5%AD%90%E7%9A%84%E6%96%B9%E5%BC%8F%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2321. 拼接数组的最大分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2321.%20%E6%8B%BC%E6%8E%A5%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2321.%20%E6%8B%BC%E6%8E%A5%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2322. 从树中删除边的最小分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2322.%20%E4%BB%8E%E6%A0%91%E4%B8%AD%E5%88%A0%E9%99%A4%E8%BE%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2322.%20%E4%BB%8E%E6%A0%91%E4%B8%AD%E5%88%A0%E9%99%A4%E8%BE%B9%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2323. 完成所有工作的最短时间 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2323.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2323.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E5%B7%A5%E4%BD%9C%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2324. 产品销售分析 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2324.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2324.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2325. 解密消息【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2325.%20%E8%A7%A3%E5%AF%86%E6%B6%88%E6%81%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2325.%20%E8%A7%A3%E5%AF%86%E6%B6%88%E6%81%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2326. 螺旋矩阵 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2326.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2326.%20%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2327. 知道秘密的人数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2327.%20%E7%9F%A5%E9%81%93%E7%A7%98%E5%AF%86%E7%9A%84%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2327.%20%E7%9F%A5%E9%81%93%E7%A7%98%E5%AF%86%E7%9A%84%E4%BA%BA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2328. 网格图中递增路径的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2328.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2328.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E9%80%92%E5%A2%9E%E8%B7%AF%E5%BE%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2329. 产品销售分析Ⅴ【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2329.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%E2%85%A4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2329.%20%E4%BA%A7%E5%93%81%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%E2%85%A4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2330. 验证回文串 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2330.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2330.%20%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2331. 计算布尔二叉树的值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2331.%20%E8%AE%A1%E7%AE%97%E5%B8%83%E5%B0%94%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2331.%20%E8%AE%A1%E7%AE%97%E5%B8%83%E5%B0%94%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2332. 坐上公交的最晚时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2332.%20%E5%9D%90%E4%B8%8A%E5%85%AC%E4%BA%A4%E7%9A%84%E6%9C%80%E6%99%9A%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2332.%20%E5%9D%90%E4%B8%8A%E5%85%AC%E4%BA%A4%E7%9A%84%E6%9C%80%E6%99%9A%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2333. 最小差值平方和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2333.%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E5%B9%B3%E6%96%B9%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2333.%20%E6%9C%80%E5%B0%8F%E5%B7%AE%E5%80%BC%E5%B9%B3%E6%96%B9%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2334. 元素值大于变化阈值的子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2334.%20%E5%85%83%E7%B4%A0%E5%80%BC%E5%A4%A7%E4%BA%8E%E5%8F%98%E5%8C%96%E9%98%88%E5%80%BC%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2334.%20%E5%85%83%E7%B4%A0%E5%80%BC%E5%A4%A7%E4%BA%8E%E5%8F%98%E5%8C%96%E9%98%88%E5%80%BC%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2335. 装满杯子需要的最短总时长【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2335.%20%E8%A3%85%E6%BB%A1%E6%9D%AF%E5%AD%90%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E7%9F%AD%E6%80%BB%E6%97%B6%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2335.%20%E8%A3%85%E6%BB%A1%E6%9D%AF%E5%AD%90%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E7%9F%AD%E6%80%BB%E6%97%B6%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2336. 无限集中的最小数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2336.%20%E6%97%A0%E9%99%90%E9%9B%86%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2336.%20%E6%97%A0%E9%99%90%E9%9B%86%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2337. 移动片段得到字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2337.%20%E7%A7%BB%E5%8A%A8%E7%89%87%E6%AE%B5%E5%BE%97%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2337.%20%E7%A7%BB%E5%8A%A8%E7%89%87%E6%AE%B5%E5%BE%97%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2338. 统计理想数组的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2338.%20%E7%BB%9F%E8%AE%A1%E7%90%86%E6%83%B3%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2338.%20%E7%BB%9F%E8%AE%A1%E7%90%86%E6%83%B3%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2339. 联赛的所有比赛【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2339.%20%E8%81%94%E8%B5%9B%E7%9A%84%E6%89%80%E6%9C%89%E6%AF%94%E8%B5%9B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2339.%20%E8%81%94%E8%B5%9B%E7%9A%84%E6%89%80%E6%9C%89%E6%AF%94%E8%B5%9B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2340. 生成有效数组的最少交换次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2340.%20%E7%94%9F%E6%88%90%E6%9C%89%E6%95%88%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2340.%20%E7%94%9F%E6%88%90%E6%9C%89%E6%95%88%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2341. 数组能形成多少数对【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2341.%20%E6%95%B0%E7%BB%84%E8%83%BD%E5%BD%A2%E6%88%90%E5%A4%9A%E5%B0%91%E6%95%B0%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2341.%20%E6%95%B0%E7%BB%84%E8%83%BD%E5%BD%A2%E6%88%90%E5%A4%9A%E5%B0%91%E6%95%B0%E5%AF%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2342. 数位和相等数对的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2342.%20%E6%95%B0%E4%BD%8D%E5%92%8C%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2342.%20%E6%95%B0%E4%BD%8D%E5%92%8C%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2343. 裁剪数字后查询第 K 小的数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2343.%20%E8%A3%81%E5%89%AA%E6%95%B0%E5%AD%97%E5%90%8E%E6%9F%A5%E8%AF%A2%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2343.%20%E8%A3%81%E5%89%AA%E6%95%B0%E5%AD%97%E5%90%8E%E6%9F%A5%E8%AF%A2%E7%AC%AC%20K%20%E5%B0%8F%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2344. 使数组可以被整除的最少删除次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2344.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2344.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2345. 寻找可见山的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2345.%20%E5%AF%BB%E6%89%BE%E5%8F%AF%E8%A7%81%E5%B1%B1%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2345.%20%E5%AF%BB%E6%89%BE%E5%8F%AF%E8%A7%81%E5%B1%B1%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2346. 以百分比计算排名【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2346.%20%E4%BB%A5%E7%99%BE%E5%88%86%E6%AF%94%E8%AE%A1%E7%AE%97%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2346.%20%E4%BB%A5%E7%99%BE%E5%88%86%E6%AF%94%E8%AE%A1%E7%AE%97%E6%8E%92%E5%90%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2347. 最好的扑克手牌【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2347.%20%E6%9C%80%E5%A5%BD%E7%9A%84%E6%89%91%E5%85%8B%E6%89%8B%E7%89%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2347.%20%E6%9C%80%E5%A5%BD%E7%9A%84%E6%89%91%E5%85%8B%E6%89%8B%E7%89%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2348. 全 0 子数组的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2348.%20%E5%85%A8%200%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2348.%20%E5%85%A8%200%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2349. 设计数字容器系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2349.%20%E8%AE%BE%E8%AE%A1%E6%95%B0%E5%AD%97%E5%AE%B9%E5%99%A8%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2349.%20%E8%AE%BE%E8%AE%A1%E6%95%B0%E5%AD%97%E5%AE%B9%E5%99%A8%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2350. 不可能得到的最短骰子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2350.%20%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E7%9F%AD%E9%AA%B0%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2350.%20%E4%B8%8D%E5%8F%AF%E8%83%BD%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E7%9F%AD%E9%AA%B0%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2351. 第一个出现两次的字母【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2351.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E7%9A%84%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2351.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E7%9A%84%E5%AD%97%E6%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2352. 相等行列对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2352.%20%E7%9B%B8%E7%AD%89%E8%A1%8C%E5%88%97%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2352.%20%E7%9B%B8%E7%AD%89%E8%A1%8C%E5%88%97%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2353. 设计食物评分系统【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2353.%20%E8%AE%BE%E8%AE%A1%E9%A3%9F%E7%89%A9%E8%AF%84%E5%88%86%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2353.%20%E8%AE%BE%E8%AE%A1%E9%A3%9F%E7%89%A9%E8%AF%84%E5%88%86%E7%B3%BB%E7%BB%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2354. 优质数对的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2354.%20%E4%BC%98%E8%B4%A8%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2354.%20%E4%BC%98%E8%B4%A8%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2355. 你能拿走的最大图书数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2355.%20%E4%BD%A0%E8%83%BD%E6%8B%BF%E8%B5%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9B%BE%E4%B9%A6%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2355.%20%E4%BD%A0%E8%83%BD%E6%8B%BF%E8%B5%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9B%BE%E4%B9%A6%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2356. 每位教师所教授的科目种类的数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2356.%20%E6%AF%8F%E4%BD%8D%E6%95%99%E5%B8%88%E6%89%80%E6%95%99%E6%8E%88%E7%9A%84%E7%A7%91%E7%9B%AE%E7%A7%8D%E7%B1%BB%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2356.%20%E6%AF%8F%E4%BD%8D%E6%95%99%E5%B8%88%E6%89%80%E6%95%99%E6%8E%88%E7%9A%84%E7%A7%91%E7%9B%AE%E7%A7%8D%E7%B1%BB%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2357. 使数组中所有元素都等于零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2357.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E7%AD%89%E4%BA%8E%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2357.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E7%AD%89%E4%BA%8E%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2358. 分组的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2358.%20%E5%88%86%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2358.%20%E5%88%86%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2359. 找到离给定两个节点最近的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2359.%20%E6%89%BE%E5%88%B0%E7%A6%BB%E7%BB%99%E5%AE%9A%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E6%9C%80%E8%BF%91%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2359.%20%E6%89%BE%E5%88%B0%E7%A6%BB%E7%BB%99%E5%AE%9A%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E6%9C%80%E8%BF%91%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2360. 图中的最长环【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2360.%20%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E7%8E%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2360.%20%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E9%95%BF%E7%8E%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2361. 乘坐火车路线的最少费用【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2361.%20%E4%B9%98%E5%9D%90%E7%81%AB%E8%BD%A6%E8%B7%AF%E7%BA%BF%E7%9A%84%E6%9C%80%E5%B0%91%E8%B4%B9%E7%94%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2361.%20%E4%B9%98%E5%9D%90%E7%81%AB%E8%BD%A6%E8%B7%AF%E7%BA%BF%E7%9A%84%E6%9C%80%E5%B0%91%E8%B4%B9%E7%94%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2362. 生成发票【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2362.%20%E7%94%9F%E6%88%90%E5%8F%91%E7%A5%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2362.%20%E7%94%9F%E6%88%90%E5%8F%91%E7%A5%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2363. 合并相似的物品【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2363.%20%E5%90%88%E5%B9%B6%E7%9B%B8%E4%BC%BC%E7%9A%84%E7%89%A9%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2363.%20%E5%90%88%E5%B9%B6%E7%9B%B8%E4%BC%BC%E7%9A%84%E7%89%A9%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2364. 统计坏数对的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2364.%20%E7%BB%9F%E8%AE%A1%E5%9D%8F%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2364.%20%E7%BB%9F%E8%AE%A1%E5%9D%8F%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2365. 任务调度器 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2365.%20%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2365.%20%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E5%99%A8%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2366. 将数组排序的最少替换次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2366.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%91%E6%9B%BF%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2366.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%8E%92%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%91%E6%9B%BF%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2367. 等差三元组的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2367.%20%E7%AD%89%E5%B7%AE%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2367.%20%E7%AD%89%E5%B7%AE%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2368. 受限条件下可到达节点的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2368.%20%E5%8F%97%E9%99%90%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%8F%AF%E5%88%B0%E8%BE%BE%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2368.%20%E5%8F%97%E9%99%90%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%8F%AF%E5%88%B0%E8%BE%BE%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2369. 检查数组是否存在有效划分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2369.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9C%89%E6%95%88%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2369.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E6%9C%89%E6%95%88%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2370. 最长理想子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2370.%20%E6%9C%80%E9%95%BF%E7%90%86%E6%83%B3%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2370.%20%E6%9C%80%E9%95%BF%E7%90%86%E6%83%B3%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2371. 最小化网格中的最大值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2371.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2371.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E7%BD%91%E6%A0%BC%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2372. 计算每个销售人员的影响力【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2372.%20%E8%AE%A1%E7%AE%97%E6%AF%8F%E4%B8%AA%E9%94%80%E5%94%AE%E4%BA%BA%E5%91%98%E7%9A%84%E5%BD%B1%E5%93%8D%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2372.%20%E8%AE%A1%E7%AE%97%E6%AF%8F%E4%B8%AA%E9%94%80%E5%94%AE%E4%BA%BA%E5%91%98%E7%9A%84%E5%BD%B1%E5%93%8D%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2373. 矩阵中的局部最大值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2373.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B1%80%E9%83%A8%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2373.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%B1%80%E9%83%A8%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2374. 边积分最高的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2374.%20%E8%BE%B9%E7%A7%AF%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2374.%20%E8%BE%B9%E7%A7%AF%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2375. 根据模式串构造最小数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2375.%20%E6%A0%B9%E6%8D%AE%E6%A8%A1%E5%BC%8F%E4%B8%B2%E6%9E%84%E9%80%A0%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2375.%20%E6%A0%B9%E6%8D%AE%E6%A8%A1%E5%BC%8F%E4%B8%B2%E6%9E%84%E9%80%A0%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2376. 统计特殊整数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2376.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2376.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2377. 整理奥运表【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2377.%20%E6%95%B4%E7%90%86%E5%A5%A5%E8%BF%90%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2377.%20%E6%95%B4%E7%90%86%E5%A5%A5%E8%BF%90%E8%A1%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2378. 选择边来最大化树的得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2378.%20%E9%80%89%E6%8B%A9%E8%BE%B9%E6%9D%A5%E6%9C%80%E5%A4%A7%E5%8C%96%E6%A0%91%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2378.%20%E9%80%89%E6%8B%A9%E8%BE%B9%E6%9D%A5%E6%9C%80%E5%A4%A7%E5%8C%96%E6%A0%91%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2379. 得到 K 个黑块的最少涂色次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2379.%20%E5%BE%97%E5%88%B0%20K%20%E4%B8%AA%E9%BB%91%E5%9D%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%B6%82%E8%89%B2%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2379.%20%E5%BE%97%E5%88%B0%20K%20%E4%B8%AA%E9%BB%91%E5%9D%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%B6%82%E8%89%B2%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2380. 二进制字符串重新安排顺序需要的时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2380.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E9%A1%BA%E5%BA%8F%E9%9C%80%E8%A6%81%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2380.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E9%A1%BA%E5%BA%8F%E9%9C%80%E8%A6%81%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2381. 字母移位 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2381.%20%E5%AD%97%E6%AF%8D%E7%A7%BB%E4%BD%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2381.%20%E5%AD%97%E6%AF%8D%E7%A7%BB%E4%BD%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2382. 删除操作后的最大子段和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2382.%20%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2382.%20%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2383. 赢得比赛需要的最少训练时长【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2383.%20%E8%B5%A2%E5%BE%97%E6%AF%94%E8%B5%9B%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E8%AE%AD%E7%BB%83%E6%97%B6%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2383.%20%E8%B5%A2%E5%BE%97%E6%AF%94%E8%B5%9B%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E8%AE%AD%E7%BB%83%E6%97%B6%E9%95%BF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2384. 最大回文数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2384.%20%E6%9C%80%E5%A4%A7%E5%9B%9E%E6%96%87%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2384.%20%E6%9C%80%E5%A4%A7%E5%9B%9E%E6%96%87%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2385. 感染二叉树需要的总时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2385.%20%E6%84%9F%E6%9F%93%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9C%80%E8%A6%81%E7%9A%84%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2385.%20%E6%84%9F%E6%9F%93%E4%BA%8C%E5%8F%89%E6%A0%91%E9%9C%80%E8%A6%81%E7%9A%84%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2386. 找出数组的第 K 大和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2386.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2386.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2387. 行排序矩阵的中位数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2387.%20%E8%A1%8C%E6%8E%92%E5%BA%8F%E7%9F%A9%E9%98%B5%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2387.%20%E8%A1%8C%E6%8E%92%E5%BA%8F%E7%9F%A9%E9%98%B5%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2388. 将表中的空值更改为前一个值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2388.%20%E5%B0%86%E8%A1%A8%E4%B8%AD%E7%9A%84%E7%A9%BA%E5%80%BC%E6%9B%B4%E6%94%B9%E4%B8%BA%E5%89%8D%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2388.%20%E5%B0%86%E8%A1%A8%E4%B8%AD%E7%9A%84%E7%A9%BA%E5%80%BC%E6%9B%B4%E6%94%B9%E4%B8%BA%E5%89%8D%E4%B8%80%E4%B8%AA%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2389. 和有限的最长子序列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2389.%20%E5%92%8C%E6%9C%89%E9%99%90%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2389.%20%E5%92%8C%E6%9C%89%E9%99%90%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2390. 从字符串中移除星号【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2390.%20%E4%BB%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%98%9F%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2390.%20%E4%BB%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%A7%BB%E9%99%A4%E6%98%9F%E5%8F%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2391. 收集垃圾的最少总时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2391.%20%E6%94%B6%E9%9B%86%E5%9E%83%E5%9C%BE%E7%9A%84%E6%9C%80%E5%B0%91%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2391.%20%E6%94%B6%E9%9B%86%E5%9E%83%E5%9C%BE%E7%9A%84%E6%9C%80%E5%B0%91%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2392. 给定条件下构造矩阵【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2392.%20%E7%BB%99%E5%AE%9A%E6%9D%A1%E4%BB%B6%E4%B8%8B%E6%9E%84%E9%80%A0%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2392.%20%E7%BB%99%E5%AE%9A%E6%9D%A1%E4%BB%B6%E4%B8%8B%E6%9E%84%E9%80%A0%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2393. 严格递增的子数组个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2393.%20%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2393.%20%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2394. 开除员工【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2394.%20%E5%BC%80%E9%99%A4%E5%91%98%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2394.%20%E5%BC%80%E9%99%A4%E5%91%98%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2395. 和相等的子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2395.%20%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2395.%20%E5%92%8C%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2396. 严格回文的数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2396.%20%E4%B8%A5%E6%A0%BC%E5%9B%9E%E6%96%87%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2396.%20%E4%B8%A5%E6%A0%BC%E5%9B%9E%E6%96%87%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2397. 被列覆盖的最多行数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2397.%20%E8%A2%AB%E5%88%97%E8%A6%86%E7%9B%96%E7%9A%84%E6%9C%80%E5%A4%9A%E8%A1%8C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2397.%20%E8%A2%AB%E5%88%97%E8%A6%86%E7%9B%96%E7%9A%84%E6%9C%80%E5%A4%9A%E8%A1%8C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2398. 预算内的最多机器人数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2398.%20%E9%A2%84%E7%AE%97%E5%86%85%E7%9A%84%E6%9C%80%E5%A4%9A%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2398.%20%E9%A2%84%E7%AE%97%E5%86%85%E7%9A%84%E6%9C%80%E5%A4%9A%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [2399. 检查相同字母间的距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2399.%20%E6%A3%80%E6%9F%A5%E7%9B%B8%E5%90%8C%E5%AD%97%E6%AF%8D%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2399.%20%E6%A3%80%E6%9F%A5%E7%9B%B8%E5%90%8C%E5%AD%97%E6%AF%8D%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2399.%20%E6%A3%80%E6%9F%A5%E7%9B%B8%E5%90%8C%E5%AD%97%E6%AF%8D%E9%97%B4%E7%9A%84%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2400. 恰好移动 k 步到达某一位置的方法数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2400.%20%E6%81%B0%E5%A5%BD%E7%A7%BB%E5%8A%A8%20k%20%E6%AD%A5%E5%88%B0%E8%BE%BE%E6%9F%90%E4%B8%80%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2400.%20%E6%81%B0%E5%A5%BD%E7%A7%BB%E5%8A%A8%20k%20%E6%AD%A5%E5%88%B0%E8%BE%BE%E6%9F%90%E4%B8%80%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 26. 2401~2500\\n\\n- [ ] [2401. 最长优雅子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2401.%20%E6%9C%80%E9%95%BF%E4%BC%98%E9%9B%85%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2401.%20%E6%9C%80%E9%95%BF%E4%BC%98%E9%9B%85%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2402. 会议室 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2402.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2402.%20%E4%BC%9A%E8%AE%AE%E5%AE%A4%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2403. 杀死所有怪物的最短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2403.%20%E6%9D%80%E6%AD%BB%E6%89%80%E6%9C%89%E6%80%AA%E7%89%A9%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2403.%20%E6%9D%80%E6%AD%BB%E6%89%80%E6%9C%89%E6%80%AA%E7%89%A9%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2404. 出现最频繁的偶数元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2404.%20%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E5%81%B6%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2404.%20%E5%87%BA%E7%8E%B0%E6%9C%80%E9%A2%91%E7%B9%81%E7%9A%84%E5%81%B6%E6%95%B0%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2405. 子字符串的最优划分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2405.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E4%BC%98%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2405.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E4%BC%98%E5%88%92%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2406. 将区间分为最少组数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2406.%20%E5%B0%86%E5%8C%BA%E9%97%B4%E5%88%86%E4%B8%BA%E6%9C%80%E5%B0%91%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2406.%20%E5%B0%86%E5%8C%BA%E9%97%B4%E5%88%86%E4%B8%BA%E6%9C%80%E5%B0%91%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2407. 最长递增子序列 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2407.%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2407.%20%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2408. 设计 SQL【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2408.%20%E8%AE%BE%E8%AE%A1%20SQL%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2408.%20%E8%AE%BE%E8%AE%A1%20SQL%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2409. 统计共同度过的日子数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2409.%20%E7%BB%9F%E8%AE%A1%E5%85%B1%E5%90%8C%E5%BA%A6%E8%BF%87%E7%9A%84%E6%97%A5%E5%AD%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2409.%20%E7%BB%9F%E8%AE%A1%E5%85%B1%E5%90%8C%E5%BA%A6%E8%BF%87%E7%9A%84%E6%97%A5%E5%AD%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2410. 运动员和训练师的最大匹配数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2410.%20%E8%BF%90%E5%8A%A8%E5%91%98%E5%92%8C%E8%AE%AD%E7%BB%83%E5%B8%88%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2410.%20%E8%BF%90%E5%8A%A8%E5%91%98%E5%92%8C%E8%AE%AD%E7%BB%83%E5%B8%88%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2411. 按位或最大的最小子数组长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2411.%20%E6%8C%89%E4%BD%8D%E6%88%96%E6%9C%80%E5%A4%A7%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2411.%20%E6%8C%89%E4%BD%8D%E6%88%96%E6%9C%80%E5%A4%A7%E7%9A%84%E6%9C%80%E5%B0%8F%E5%AD%90%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2412. 完成所有交易的初始最少钱数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2412.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BA%A4%E6%98%93%E7%9A%84%E5%88%9D%E5%A7%8B%E6%9C%80%E5%B0%91%E9%92%B1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2412.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BA%A4%E6%98%93%E7%9A%84%E5%88%9D%E5%A7%8B%E6%9C%80%E5%B0%91%E9%92%B1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2413. 最小偶倍数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2413.%20%E6%9C%80%E5%B0%8F%E5%81%B6%E5%80%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2413.%20%E6%9C%80%E5%B0%8F%E5%81%B6%E5%80%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2414. 最长的字母序连续子字符串的长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2414.%20%E6%9C%80%E9%95%BF%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BA%8F%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2414.%20%E6%9C%80%E9%95%BF%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BA%8F%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2414.%20%E6%9C%80%E9%95%BF%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BA%8F%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2415. 反转二叉树的奇数层【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2415.%20%E5%8F%8D%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%A5%87%E6%95%B0%E5%B1%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2415.%20%E5%8F%8D%E8%BD%AC%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%A5%87%E6%95%B0%E5%B1%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2416. 字符串的前缀分数和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2416.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%89%8D%E7%BC%80%E5%88%86%E6%95%B0%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2416.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%89%8D%E7%BC%80%E5%88%86%E6%95%B0%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2417. 最近的公平整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2417.%20%E6%9C%80%E8%BF%91%E7%9A%84%E5%85%AC%E5%B9%B3%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2417.%20%E6%9C%80%E8%BF%91%E7%9A%84%E5%85%AC%E5%B9%B3%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2418. 按身高排序【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2418.%20%E6%8C%89%E8%BA%AB%E9%AB%98%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2418.%20%E6%8C%89%E8%BA%AB%E9%AB%98%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2418.%20%E6%8C%89%E8%BA%AB%E9%AB%98%E6%8E%92%E5%BA%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2419. 按位与最大的最长子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2419.%20%E6%8C%89%E4%BD%8D%E4%B8%8E%E6%9C%80%E5%A4%A7%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2419.%20%E6%8C%89%E4%BD%8D%E4%B8%8E%E6%9C%80%E5%A4%A7%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2420. 找到所有好下标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2420.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E5%A5%BD%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2420.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E5%A5%BD%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2421. 好路径的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2421.%20%E5%A5%BD%E8%B7%AF%E5%BE%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2421.%20%E5%A5%BD%E8%B7%AF%E5%BE%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2422. 使用合并操作将数组转换为回文序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2422.%20%E4%BD%BF%E7%94%A8%E5%90%88%E5%B9%B6%E6%93%8D%E4%BD%9C%E5%B0%86%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%9B%9E%E6%96%87%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2422.%20%E4%BD%BF%E7%94%A8%E5%90%88%E5%B9%B6%E6%93%8D%E4%BD%9C%E5%B0%86%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%9B%9E%E6%96%87%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2423. 删除字符使频率相同【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2423.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%BD%BF%E9%A2%91%E7%8E%87%E7%9B%B8%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2423.%20%E5%88%A0%E9%99%A4%E5%AD%97%E7%AC%A6%E4%BD%BF%E9%A2%91%E7%8E%87%E7%9B%B8%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2424. 最长上传前缀【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2424.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E4%BC%A0%E5%89%8D%E7%BC%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2424.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E4%BC%A0%E5%89%8D%E7%BC%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2425. 所有数对的异或和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2425.%20%E6%89%80%E6%9C%89%E6%95%B0%E5%AF%B9%E7%9A%84%E5%BC%82%E6%88%96%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2425.%20%E6%89%80%E6%9C%89%E6%95%B0%E5%AF%B9%E7%9A%84%E5%BC%82%E6%88%96%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2426. 满足不等式的数对数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2426.%20%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2426.%20%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E6%95%B0%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2427. 公因子的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2427.%20%E5%85%AC%E5%9B%A0%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2427.%20%E5%85%AC%E5%9B%A0%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2428. 沙漏的最大总和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2428.%20%E6%B2%99%E6%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2428.%20%E6%B2%99%E6%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2429. 最小异或【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2429.%20%E6%9C%80%E5%B0%8F%E5%BC%82%E6%88%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2429.%20%E6%9C%80%E5%B0%8F%E5%BC%82%E6%88%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2430. 对字母串可执行的最大删除数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2430.%20%E5%AF%B9%E5%AD%97%E6%AF%8D%E4%B8%B2%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A0%E9%99%A4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2430.%20%E5%AF%B9%E5%AD%97%E6%AF%8D%E4%B8%B2%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A0%E9%99%A4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2431. 最大限度地提高购买水果的口味【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2431.%20%E6%9C%80%E5%A4%A7%E9%99%90%E5%BA%A6%E5%9C%B0%E6%8F%90%E9%AB%98%E8%B4%AD%E4%B9%B0%E6%B0%B4%E6%9E%9C%E7%9A%84%E5%8F%A3%E5%91%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2431.%20%E6%9C%80%E5%A4%A7%E9%99%90%E5%BA%A6%E5%9C%B0%E6%8F%90%E9%AB%98%E8%B4%AD%E4%B9%B0%E6%B0%B4%E6%9E%9C%E7%9A%84%E5%8F%A3%E5%91%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2432. 处理用时最长的那个任务的员工【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2432.%20%E5%A4%84%E7%90%86%E7%94%A8%E6%97%B6%E6%9C%80%E9%95%BF%E7%9A%84%E9%82%A3%E4%B8%AA%E4%BB%BB%E5%8A%A1%E7%9A%84%E5%91%98%E5%B7%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2432.%20%E5%A4%84%E7%90%86%E7%94%A8%E6%97%B6%E6%9C%80%E9%95%BF%E7%9A%84%E9%82%A3%E4%B8%AA%E4%BB%BB%E5%8A%A1%E7%9A%84%E5%91%98%E5%B7%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2433. 找出前缀异或的原始数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2433.%20%E6%89%BE%E5%87%BA%E5%89%8D%E7%BC%80%E5%BC%82%E6%88%96%E7%9A%84%E5%8E%9F%E5%A7%8B%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2433.%20%E6%89%BE%E5%87%BA%E5%89%8D%E7%BC%80%E5%BC%82%E6%88%96%E7%9A%84%E5%8E%9F%E5%A7%8B%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2434. 使用机器人打印字典序最小的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2434.%20%E4%BD%BF%E7%94%A8%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%89%93%E5%8D%B0%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2434.%20%E4%BD%BF%E7%94%A8%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%89%93%E5%8D%B0%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2435. 矩阵中和能被 K 整除的路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2435.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E5%92%8C%E8%83%BD%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2435.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E5%92%8C%E8%83%BD%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2436. 使子数组最大公约数大于一的最小分割数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2436.%20%E4%BD%BF%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%A4%A7%E4%BA%8E%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E5%89%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2436.%20%E4%BD%BF%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%A4%A7%E4%BA%8E%E4%B8%80%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E5%89%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2437. 有效时间的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2437.%20%E6%9C%89%E6%95%88%E6%97%B6%E9%97%B4%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2437.%20%E6%9C%89%E6%95%88%E6%97%B6%E9%97%B4%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2438. 二的幂数组中查询范围内的乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2438.%20%E4%BA%8C%E7%9A%84%E5%B9%82%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E8%AF%A2%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2438.%20%E4%BA%8C%E7%9A%84%E5%B9%82%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E8%AF%A2%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2439. 最小化数组中的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2439.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2439.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2440. 创建价值相同的连通块【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2440.%20%E5%88%9B%E5%BB%BA%E4%BB%B7%E5%80%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E8%BF%9E%E9%80%9A%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2440.%20%E5%88%9B%E5%BB%BA%E4%BB%B7%E5%80%BC%E7%9B%B8%E5%90%8C%E7%9A%84%E8%BF%9E%E9%80%9A%E5%9D%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2441. 与对应负数同时存在的最大正整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2441.%20%E4%B8%8E%E5%AF%B9%E5%BA%94%E8%B4%9F%E6%95%B0%E5%90%8C%E6%97%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2441.%20%E4%B8%8E%E5%AF%B9%E5%BA%94%E8%B4%9F%E6%95%B0%E5%90%8C%E6%97%B6%E5%AD%98%E5%9C%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2442. 反转之后不同整数的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2442.%20%E5%8F%8D%E8%BD%AC%E4%B9%8B%E5%90%8E%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2442.%20%E5%8F%8D%E8%BD%AC%E4%B9%8B%E5%90%8E%E4%B8%8D%E5%90%8C%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2443. 反转之后的数字和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2443.%20%E5%8F%8D%E8%BD%AC%E4%B9%8B%E5%90%8E%E7%9A%84%E6%95%B0%E5%AD%97%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2443.%20%E5%8F%8D%E8%BD%AC%E4%B9%8B%E5%90%8E%E7%9A%84%E6%95%B0%E5%AD%97%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2444. 统计定界子数组的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2444.%20%E7%BB%9F%E8%AE%A1%E5%AE%9A%E7%95%8C%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2444.%20%E7%BB%9F%E8%AE%A1%E5%AE%9A%E7%95%8C%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2445. 值为 1 的节点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2445.%20%E5%80%BC%E4%B8%BA%201%20%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2445.%20%E5%80%BC%E4%B8%BA%201%20%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2446. 判断两个事件是否存在冲突【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2446.%20%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E4%BA%8B%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%86%B2%E7%AA%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2446.%20%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E4%BA%8B%E4%BB%B6%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%86%B2%E7%AA%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2447. 最大公因数等于 K 的子数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2447.%20%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2447.%20%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2448. 使数组相等的最小开销【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2448.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2448.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2449. 使数组相似的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2449.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9B%B8%E4%BC%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2449.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9B%B8%E4%BC%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2450. 应用操作后不同二进制字符串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2450.%20%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C%E5%90%8E%E4%B8%8D%E5%90%8C%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2450.%20%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C%E5%90%8E%E4%B8%8D%E5%90%8C%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2451. 差值数组不同的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2451.%20%E5%B7%AE%E5%80%BC%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2451.%20%E5%B7%AE%E5%80%BC%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2451.%20%E5%B7%AE%E5%80%BC%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2452. 距离字典两次编辑以内的单词【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2452.%20%E8%B7%9D%E7%A6%BB%E5%AD%97%E5%85%B8%E4%B8%A4%E6%AC%A1%E7%BC%96%E8%BE%91%E4%BB%A5%E5%86%85%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2452.%20%E8%B7%9D%E7%A6%BB%E5%AD%97%E5%85%B8%E4%B8%A4%E6%AC%A1%E7%BC%96%E8%BE%91%E4%BB%A5%E5%86%85%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2453. 摧毁一系列目标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2453.%20%E6%91%A7%E6%AF%81%E4%B8%80%E7%B3%BB%E5%88%97%E7%9B%AE%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2453.%20%E6%91%A7%E6%AF%81%E4%B8%80%E7%B3%BB%E5%88%97%E7%9B%AE%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2454. 下一个更大元素 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2454.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2454.%20%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2455. 可被三整除的偶数的平均值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2455.%20%E5%8F%AF%E8%A2%AB%E4%B8%89%E6%95%B4%E9%99%A4%E7%9A%84%E5%81%B6%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2455.%20%E5%8F%AF%E8%A2%AB%E4%B8%89%E6%95%B4%E9%99%A4%E7%9A%84%E5%81%B6%E6%95%B0%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2456. 最流行的视频创作者【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2456.%20%E6%9C%80%E6%B5%81%E8%A1%8C%E7%9A%84%E8%A7%86%E9%A2%91%E5%88%9B%E4%BD%9C%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2456.%20%E6%9C%80%E6%B5%81%E8%A1%8C%E7%9A%84%E8%A7%86%E9%A2%91%E5%88%9B%E4%BD%9C%E8%80%85%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2457. 美丽整数的最小增量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2457.%20%E7%BE%8E%E4%B8%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A2%9E%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2457.%20%E7%BE%8E%E4%B8%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A2%9E%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2458. 移除子树后的二叉树高度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2458.%20%E7%A7%BB%E9%99%A4%E5%AD%90%E6%A0%91%E5%90%8E%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E9%AB%98%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2458.%20%E7%A7%BB%E9%99%A4%E5%AD%90%E6%A0%91%E5%90%8E%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91%E9%AB%98%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2459. 通过移动项目到空白区域来排序数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2459.%20%E9%80%9A%E8%BF%87%E7%A7%BB%E5%8A%A8%E9%A1%B9%E7%9B%AE%E5%88%B0%E7%A9%BA%E7%99%BD%E5%8C%BA%E5%9F%9F%E6%9D%A5%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2459.%20%E9%80%9A%E8%BF%87%E7%A7%BB%E5%8A%A8%E9%A1%B9%E7%9B%AE%E5%88%B0%E7%A9%BA%E7%99%BD%E5%8C%BA%E5%9F%9F%E6%9D%A5%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2460. 对数组执行操作【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2460.%20%E5%AF%B9%E6%95%B0%E7%BB%84%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2460.%20%E5%AF%B9%E6%95%B0%E7%BB%84%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2461. 长度为 K 子数组中的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2461.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2461.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2462. 雇佣 K 位工人的总代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2462.%20%E9%9B%87%E4%BD%A3%20K%20%E4%BD%8D%E5%B7%A5%E4%BA%BA%E7%9A%84%E6%80%BB%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2462.%20%E9%9B%87%E4%BD%A3%20K%20%E4%BD%8D%E5%B7%A5%E4%BA%BA%E7%9A%84%E6%80%BB%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2463. 最小移动总距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2463.%20%E6%9C%80%E5%B0%8F%E7%A7%BB%E5%8A%A8%E6%80%BB%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2463.%20%E6%9C%80%E5%B0%8F%E7%A7%BB%E5%8A%A8%E6%80%BB%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2464. 有效分割中的最少子数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2464.%20%E6%9C%89%E6%95%88%E5%88%86%E5%89%B2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2464.%20%E6%9C%89%E6%95%88%E5%88%86%E5%89%B2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2465. 不同的平均值数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2465.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2465.%20%E4%B8%8D%E5%90%8C%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2466. 统计构造好字符串的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2466.%20%E7%BB%9F%E8%AE%A1%E6%9E%84%E9%80%A0%E5%A5%BD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2466.%20%E7%BB%9F%E8%AE%A1%E6%9E%84%E9%80%A0%E5%A5%BD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2467. 树上最大得分和路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2467.%20%E6%A0%91%E4%B8%8A%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E5%92%8C%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2467.%20%E6%A0%91%E4%B8%8A%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E5%92%8C%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2468. 根据限制分割消息【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2468.%20%E6%A0%B9%E6%8D%AE%E9%99%90%E5%88%B6%E5%88%86%E5%89%B2%E6%B6%88%E6%81%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2468.%20%E6%A0%B9%E6%8D%AE%E9%99%90%E5%88%B6%E5%88%86%E5%89%B2%E6%B6%88%E6%81%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2469. 温度转换【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2469.%20%E6%B8%A9%E5%BA%A6%E8%BD%AC%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2469.%20%E6%B8%A9%E5%BA%A6%E8%BD%AC%E6%8D%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2470. 最小公倍数等于 K 的子数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2470.%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2470.%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2471. 逐层排序二叉树所需的最少操作数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2471.%20%E9%80%90%E5%B1%82%E6%8E%92%E5%BA%8F%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2471.%20%E9%80%90%E5%B1%82%E6%8E%92%E5%BA%8F%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2472. 不重叠回文子字符串的最大数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2472.%20%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%9B%9E%E6%96%87%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2472.%20%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%9B%9E%E6%96%87%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2473. 购买苹果的最低成本【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2473.%20%E8%B4%AD%E4%B9%B0%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2473.%20%E8%B4%AD%E4%B9%B0%E8%8B%B9%E6%9E%9C%E7%9A%84%E6%9C%80%E4%BD%8E%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2474. 购买量严格增加的客户【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2474.%20%E8%B4%AD%E4%B9%B0%E9%87%8F%E4%B8%A5%E6%A0%BC%E5%A2%9E%E5%8A%A0%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2474.%20%E8%B4%AD%E4%B9%B0%E9%87%8F%E4%B8%A5%E6%A0%BC%E5%A2%9E%E5%8A%A0%E7%9A%84%E5%AE%A2%E6%88%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2475. 数组中不等三元组的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2475.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%8D%E7%AD%89%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2475.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%8D%E7%AD%89%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2476. 二叉搜索树最近节点查询【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2476.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E6%9C%80%E8%BF%91%E8%8A%82%E7%82%B9%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2476.%20%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E6%9C%80%E8%BF%91%E8%8A%82%E7%82%B9%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2477. 到达首都的最少油耗【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2477.%20%E5%88%B0%E8%BE%BE%E9%A6%96%E9%83%BD%E7%9A%84%E6%9C%80%E5%B0%91%E6%B2%B9%E8%80%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2477.%20%E5%88%B0%E8%BE%BE%E9%A6%96%E9%83%BD%E7%9A%84%E6%9C%80%E5%B0%91%E6%B2%B9%E8%80%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2478. 完美分割的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2478.%20%E5%AE%8C%E7%BE%8E%E5%88%86%E5%89%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2478.%20%E5%AE%8C%E7%BE%8E%E5%88%86%E5%89%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2479. 两个不重叠子树的最大异或值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2479.%20%E4%B8%A4%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%AD%90%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2479.%20%E4%B8%A4%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%AD%90%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2480. 形成化学键【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2480.%20%E5%BD%A2%E6%88%90%E5%8C%96%E5%AD%A6%E9%94%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2480.%20%E5%BD%A2%E6%88%90%E5%8C%96%E5%AD%A6%E9%94%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2481. 分割圆的最少切割次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2481.%20%E5%88%86%E5%89%B2%E5%9C%86%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%87%E5%89%B2%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2481.%20%E5%88%86%E5%89%B2%E5%9C%86%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%87%E5%89%B2%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2482. 行和列中一和零的差值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2482.%20%E8%A1%8C%E5%92%8C%E5%88%97%E4%B8%AD%E4%B8%80%E5%92%8C%E9%9B%B6%E7%9A%84%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2482.%20%E8%A1%8C%E5%92%8C%E5%88%97%E4%B8%AD%E4%B8%80%E5%92%8C%E9%9B%B6%E7%9A%84%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2483. 商店的最少代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2483.%20%E5%95%86%E5%BA%97%E7%9A%84%E6%9C%80%E5%B0%91%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2483.%20%E5%95%86%E5%BA%97%E7%9A%84%E6%9C%80%E5%B0%91%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2484. 统计回文子序列数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2484.%20%E7%BB%9F%E8%AE%A1%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2484.%20%E7%BB%9F%E8%AE%A1%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2485. 找出中枢整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2485.%20%E6%89%BE%E5%87%BA%E4%B8%AD%E6%9E%A2%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2485.%20%E6%89%BE%E5%87%BA%E4%B8%AD%E6%9E%A2%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2486. 追加字符以获得子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2486.%20%E8%BF%BD%E5%8A%A0%E5%AD%97%E7%AC%A6%E4%BB%A5%E8%8E%B7%E5%BE%97%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2486.%20%E8%BF%BD%E5%8A%A0%E5%AD%97%E7%AC%A6%E4%BB%A5%E8%8E%B7%E5%BE%97%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2487. 从链表中移除节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2487.%20%E4%BB%8E%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2487.%20%E4%BB%8E%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2488. 统计中位数为 K 的子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2488.%20%E7%BB%9F%E8%AE%A1%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2488.%20%E7%BB%9F%E8%AE%A1%E4%B8%AD%E4%BD%8D%E6%95%B0%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2489. 固定比率的子字符串数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2489.%20%E5%9B%BA%E5%AE%9A%E6%AF%94%E7%8E%87%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2489.%20%E5%9B%BA%E5%AE%9A%E6%AF%94%E7%8E%87%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2490. 回环句【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2490.%20%E5%9B%9E%E7%8E%AF%E5%8F%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2490.%20%E5%9B%9E%E7%8E%AF%E5%8F%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2491. 划分技能点相等的团队【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2491.%20%E5%88%92%E5%88%86%E6%8A%80%E8%83%BD%E7%82%B9%E7%9B%B8%E7%AD%89%E7%9A%84%E5%9B%A2%E9%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2491.%20%E5%88%92%E5%88%86%E6%8A%80%E8%83%BD%E7%82%B9%E7%9B%B8%E7%AD%89%E7%9A%84%E5%9B%A2%E9%98%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2492. 两个城市间路径的最小分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2492.%20%E4%B8%A4%E4%B8%AA%E5%9F%8E%E5%B8%82%E9%97%B4%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2492.%20%E4%B8%A4%E4%B8%AA%E5%9F%8E%E5%B8%82%E9%97%B4%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2493. 将节点分成尽可能多的组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2493.%20%E5%B0%86%E8%8A%82%E7%82%B9%E5%88%86%E6%88%90%E5%B0%BD%E5%8F%AF%E8%83%BD%E5%A4%9A%E7%9A%84%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2493.%20%E5%B0%86%E8%8A%82%E7%82%B9%E5%88%86%E6%88%90%E5%B0%BD%E5%8F%AF%E8%83%BD%E5%A4%9A%E7%9A%84%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2494. 合并在同一个大厅重叠的活动【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2494.%20%E5%90%88%E5%B9%B6%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E5%A4%A7%E5%8E%85%E9%87%8D%E5%8F%A0%E7%9A%84%E6%B4%BB%E5%8A%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2494.%20%E5%90%88%E5%B9%B6%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E5%A4%A7%E5%8E%85%E9%87%8D%E5%8F%A0%E7%9A%84%E6%B4%BB%E5%8A%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2495. 乘积为偶数的子数组数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2495.%20%E4%B9%98%E7%A7%AF%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2495.%20%E4%B9%98%E7%A7%AF%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2496. 数组中字符串的最大值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2496.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2496.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2497. 图中最大星和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2497.%20%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%98%9F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2497.%20%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%A4%A7%E6%98%9F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2498. 青蛙过河 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2498.%20%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2498.%20%E9%9D%92%E8%9B%99%E8%BF%87%E6%B2%B3%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2499. 让数组不相等的最小总代价【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2499.%20%E8%AE%A9%E6%95%B0%E7%BB%84%E4%B8%8D%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2499.%20%E8%AE%A9%E6%95%B0%E7%BB%84%E4%B8%8D%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2500. 删除每行中的最大值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2500.%20%E5%88%A0%E9%99%A4%E6%AF%8F%E8%A1%8C%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2500.%20%E5%88%A0%E9%99%A4%E6%AF%8F%E8%A1%8C%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 27. 2501~2600\\n\\n- [ ] [2501. 数组中最长的方波【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2501.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%B9%E6%B3%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2501.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%B9%E6%B3%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2502. 设计内存分配器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2502.%20%E8%AE%BE%E8%AE%A1%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2502.%20%E8%AE%BE%E8%AE%A1%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2503. 矩阵查询可获得的最大分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2503.%20%E7%9F%A9%E9%98%B5%E6%9F%A5%E8%AF%A2%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2503.%20%E7%9F%A9%E9%98%B5%E6%9F%A5%E8%AF%A2%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2504. 把名字和职业联系起来【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2504.%20%E6%8A%8A%E5%90%8D%E5%AD%97%E5%92%8C%E8%81%8C%E4%B8%9A%E8%81%94%E7%B3%BB%E8%B5%B7%E6%9D%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2504.%20%E6%8A%8A%E5%90%8D%E5%AD%97%E5%92%8C%E8%81%8C%E4%B8%9A%E8%81%94%E7%B3%BB%E8%B5%B7%E6%9D%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2505. 所有子序列和的按位或【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2505.%20%E6%89%80%E6%9C%89%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E7%9A%84%E6%8C%89%E4%BD%8D%E6%88%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2505.%20%E6%89%80%E6%9C%89%E5%AD%90%E5%BA%8F%E5%88%97%E5%92%8C%E7%9A%84%E6%8C%89%E4%BD%8D%E6%88%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2506. 统计相似字符串对的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2506.%20%E7%BB%9F%E8%AE%A1%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2506.%20%E7%BB%9F%E8%AE%A1%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力比较](https://tdahuyou.github.io/TNotes.leetcode/notes/2506.%20%E7%BB%9F%E8%AE%A1%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力比较)\\n  - [3. 🎯 Solutions.2 - map 统计 + 排列组合计算](https://tdahuyou.github.io/TNotes.leetcode/notes/2506.%20%E7%BB%9F%E8%AE%A1%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---map-统计--排列组合计算)\\n  - [4. 🎯 Solutions.3 - 位运算 + 排列组合计算](https://tdahuyou.github.io/TNotes.leetcode/notes/2506.%20%E7%BB%9F%E8%AE%A1%E7%9B%B8%E4%BC%BC%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3---位运算--排列组合计算)\\n- [ ] [2507. 使用质因数之和替换后可以取到的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2507.%20%E4%BD%BF%E7%94%A8%E8%B4%A8%E5%9B%A0%E6%95%B0%E4%B9%8B%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%90%8E%E5%8F%AF%E4%BB%A5%E5%8F%96%E5%88%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2507.%20%E4%BD%BF%E7%94%A8%E8%B4%A8%E5%9B%A0%E6%95%B0%E4%B9%8B%E5%92%8C%E6%9B%BF%E6%8D%A2%E5%90%8E%E5%8F%AF%E4%BB%A5%E5%8F%96%E5%88%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2508. 添加边使所有节点度数都为偶数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2508.%20%E6%B7%BB%E5%8A%A0%E8%BE%B9%E4%BD%BF%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E5%BA%A6%E6%95%B0%E9%83%BD%E4%B8%BA%E5%81%B6%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2508.%20%E6%B7%BB%E5%8A%A0%E8%BE%B9%E4%BD%BF%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E5%BA%A6%E6%95%B0%E9%83%BD%E4%B8%BA%E5%81%B6%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2509. 查询树中环的长度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2509.%20%E6%9F%A5%E8%AF%A2%E6%A0%91%E4%B8%AD%E7%8E%AF%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2509.%20%E6%9F%A5%E8%AF%A2%E6%A0%91%E4%B8%AD%E7%8E%AF%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2510. 检查是否有路径经过相同数量的 0 和 1【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2510.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89%E8%B7%AF%E5%BE%84%E7%BB%8F%E8%BF%87%E7%9B%B8%E5%90%8C%E6%95%B0%E9%87%8F%E7%9A%84%200%20%E5%92%8C%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2510.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%9C%89%E8%B7%AF%E5%BE%84%E7%BB%8F%E8%BF%87%E7%9B%B8%E5%90%8C%E6%95%B0%E9%87%8F%E7%9A%84%200%20%E5%92%8C%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2511. 最多可以摧毁的敌人城堡数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2511.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%91%A7%E6%AF%81%E7%9A%84%E6%95%8C%E4%BA%BA%E5%9F%8E%E5%A0%A1%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2511.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%91%A7%E6%AF%81%E7%9A%84%E6%95%8C%E4%BA%BA%E5%9F%8E%E5%A0%A1%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2512. 奖励最顶尖的 K 名学生【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2512.%20%E5%A5%96%E5%8A%B1%E6%9C%80%E9%A1%B6%E5%B0%96%E7%9A%84%20K%20%E5%90%8D%E5%AD%A6%E7%94%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2512.%20%E5%A5%96%E5%8A%B1%E6%9C%80%E9%A1%B6%E5%B0%96%E7%9A%84%20K%20%E5%90%8D%E5%AD%A6%E7%94%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2513. 最小化两个数组中的最大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2513.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2513.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2514. 统计同位异构字符串数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2514.%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E4%BD%8D%E5%BC%82%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2514.%20%E7%BB%9F%E8%AE%A1%E5%90%8C%E4%BD%8D%E5%BC%82%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2515. 到目标字符串的最短距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2515.%20%E5%88%B0%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2515.%20%E5%88%B0%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2516. 每种字符至少取 K 个【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2516.%20%E6%AF%8F%E7%A7%8D%E5%AD%97%E7%AC%A6%E8%87%B3%E5%B0%91%E5%8F%96%20K%20%E4%B8%AA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2516.%20%E6%AF%8F%E7%A7%8D%E5%AD%97%E7%AC%A6%E8%87%B3%E5%B0%91%E5%8F%96%20K%20%E4%B8%AA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2517. 礼盒的最大甜蜜度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2517.%20%E7%A4%BC%E7%9B%92%E7%9A%84%E6%9C%80%E5%A4%A7%E7%94%9C%E8%9C%9C%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2517.%20%E7%A4%BC%E7%9B%92%E7%9A%84%E6%9C%80%E5%A4%A7%E7%94%9C%E8%9C%9C%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2518. 好分区的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2518.%20%E5%A5%BD%E5%88%86%E5%8C%BA%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2518.%20%E5%A5%BD%E5%88%86%E5%8C%BA%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2519. 统计 K-Big 索引的数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2519.%20%E7%BB%9F%E8%AE%A1%20K-Big%20%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2519.%20%E7%BB%9F%E8%AE%A1%20K-Big%20%E7%B4%A2%E5%BC%95%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2520. 统计能整除数字的位数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2520.%20%E7%BB%9F%E8%AE%A1%E8%83%BD%E6%95%B4%E9%99%A4%E6%95%B0%E5%AD%97%E7%9A%84%E4%BD%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2520.%20%E7%BB%9F%E8%AE%A1%E8%83%BD%E6%95%B4%E9%99%A4%E6%95%B0%E5%AD%97%E7%9A%84%E4%BD%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2521. 数组乘积中的不同质因数数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2521.%20%E6%95%B0%E7%BB%84%E4%B9%98%E7%A7%AF%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8C%E8%B4%A8%E5%9B%A0%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2521.%20%E6%95%B0%E7%BB%84%E4%B9%98%E7%A7%AF%E4%B8%AD%E7%9A%84%E4%B8%8D%E5%90%8C%E8%B4%A8%E5%9B%A0%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2522. 将字符串分割成值不超过 K 的子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2522.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E5%89%B2%E6%88%90%E5%80%BC%E4%B8%8D%E8%B6%85%E8%BF%87%20K%20%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2522.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E5%89%B2%E6%88%90%E5%80%BC%E4%B8%8D%E8%B6%85%E8%BF%87%20K%20%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2523. 范围内最接近的两个质数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2523.%20%E8%8C%83%E5%9B%B4%E5%86%85%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%A4%E4%B8%AA%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2523.%20%E8%8C%83%E5%9B%B4%E5%86%85%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%A4%E4%B8%AA%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2524. 子数组的最大频率分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2524.%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2524.%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2525. 根据规则将箱子分类【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2525.%20%E6%A0%B9%E6%8D%AE%E8%A7%84%E5%88%99%E5%B0%86%E7%AE%B1%E5%AD%90%E5%88%86%E7%B1%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2525.%20%E6%A0%B9%E6%8D%AE%E8%A7%84%E5%88%99%E5%B0%86%E7%AE%B1%E5%AD%90%E5%88%86%E7%B1%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2526. 找到数据流中的连续整数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2526.%20%E6%89%BE%E5%88%B0%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2526.%20%E6%89%BE%E5%88%B0%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%95%B4%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2527. 查询数组异或美丽值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2527.%20%E6%9F%A5%E8%AF%A2%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2527.%20%E6%9F%A5%E8%AF%A2%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2528. 最大化城市的最小电量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2528.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E5%9F%8E%E5%B8%82%E7%9A%84%E6%9C%80%E5%B0%8F%E7%94%B5%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2528.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E5%9F%8E%E5%B8%82%E7%9A%84%E6%9C%80%E5%B0%8F%E7%94%B5%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2529. 正整数和负整数的最大计数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2529.%20%E6%AD%A3%E6%95%B4%E6%95%B0%E5%92%8C%E8%B4%9F%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2529.%20%E6%AD%A3%E6%95%B4%E6%95%B0%E5%92%8C%E8%B4%9F%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2530. 执行 K 次操作后的最大分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2530.%20%E6%89%A7%E8%A1%8C%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2530.%20%E6%89%A7%E8%A1%8C%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2531. 使字符串中不同字符的数目相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2531.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%95%B0%E7%9B%AE%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2531.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E7%9A%84%E6%95%B0%E7%9B%AE%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2532. 过桥的时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2532.%20%E8%BF%87%E6%A1%A5%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2532.%20%E8%BF%87%E6%A1%A5%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2533. 好二进制字符串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2533.%20%E5%A5%BD%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2533.%20%E5%A5%BD%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2534. 通过门的时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2534.%20%E9%80%9A%E8%BF%87%E9%97%A8%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2534.%20%E9%80%9A%E8%BF%87%E9%97%A8%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2535. 数组元素和与数字和的绝对差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2535.%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E4%B8%8E%E6%95%B0%E5%AD%97%E5%92%8C%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2535.%20%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E4%B8%8E%E6%95%B0%E5%AD%97%E5%92%8C%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2536. 子矩阵元素加 1【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2536.%20%E5%AD%90%E7%9F%A9%E9%98%B5%E5%85%83%E7%B4%A0%E5%8A%A0%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2536.%20%E5%AD%90%E7%9F%A9%E9%98%B5%E5%85%83%E7%B4%A0%E5%8A%A0%201%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2537. 统计好子数组的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2537.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2537.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2538. 最大价值和与最小价值和的差值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2538.%20%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC%E5%92%8C%E4%B8%8E%E6%9C%80%E5%B0%8F%E4%BB%B7%E5%80%BC%E5%92%8C%E7%9A%84%E5%B7%AE%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2538.%20%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC%E5%92%8C%E4%B8%8E%E6%9C%80%E5%B0%8F%E4%BB%B7%E5%80%BC%E5%92%8C%E7%9A%84%E5%B7%AE%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2539. 好子序列的个数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2539.%20%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2539.%20%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2540. 最小公共值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2540.%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%85%B1%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2540.%20%E6%9C%80%E5%B0%8F%E5%85%AC%E5%85%B1%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2541. 使数组中所有元素相等的最小操作数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2541.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2541.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2542. 最大子序列的分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2542.%20%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2542.%20%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2543. 判断一个点是否可以到达【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2543.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2543.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E7%82%B9%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2544. 交替数字和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2544.%20%E4%BA%A4%E6%9B%BF%E6%95%B0%E5%AD%97%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2544.%20%E4%BA%A4%E6%9B%BF%E6%95%B0%E5%AD%97%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2545. 根据第 K 场考试的分数排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2545.%20%E6%A0%B9%E6%8D%AE%E7%AC%AC%20K%20%E5%9C%BA%E8%80%83%E8%AF%95%E7%9A%84%E5%88%86%E6%95%B0%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2545.%20%E6%A0%B9%E6%8D%AE%E7%AC%AC%20K%20%E5%9C%BA%E8%80%83%E8%AF%95%E7%9A%84%E5%88%86%E6%95%B0%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2546. 执行逐位运算使字符串相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2546.%20%E6%89%A7%E8%A1%8C%E9%80%90%E4%BD%8D%E8%BF%90%E7%AE%97%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2546.%20%E6%89%A7%E8%A1%8C%E9%80%90%E4%BD%8D%E8%BF%90%E7%AE%97%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2547. 拆分数组的最小代价【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2547.%20%E6%8B%86%E5%88%86%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2547.%20%E6%8B%86%E5%88%86%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2548. 填满背包的最大价格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2548.%20%E5%A1%AB%E6%BB%A1%E8%83%8C%E5%8C%85%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2548.%20%E5%A1%AB%E6%BB%A1%E8%83%8C%E5%8C%85%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2549. 统计桌面上的不同数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2549.%20%E7%BB%9F%E8%AE%A1%E6%A1%8C%E9%9D%A2%E4%B8%8A%E7%9A%84%E4%B8%8D%E5%90%8C%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2549.%20%E7%BB%9F%E8%AE%A1%E6%A1%8C%E9%9D%A2%E4%B8%8A%E7%9A%84%E4%B8%8D%E5%90%8C%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2550. 猴子碰撞的方法数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2550.%20%E7%8C%B4%E5%AD%90%E7%A2%B0%E6%92%9E%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2550.%20%E7%8C%B4%E5%AD%90%E7%A2%B0%E6%92%9E%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2551. 将珠子放入背包中【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2551.%20%E5%B0%86%E7%8F%A0%E5%AD%90%E6%94%BE%E5%85%A5%E8%83%8C%E5%8C%85%E4%B8%AD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2551.%20%E5%B0%86%E7%8F%A0%E5%AD%90%E6%94%BE%E5%85%A5%E8%83%8C%E5%8C%85%E4%B8%AD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2552. 统计上升四元组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2552.%20%E7%BB%9F%E8%AE%A1%E4%B8%8A%E5%8D%87%E5%9B%9B%E5%85%83%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2552.%20%E7%BB%9F%E8%AE%A1%E4%B8%8A%E5%8D%87%E5%9B%9B%E5%85%83%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2553. 分割数组中数字的数位【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2553.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E4%B8%AD%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2553.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E4%B8%AD%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E4%BD%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2554. 从一个范围内选择最多整数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2554.%20%E4%BB%8E%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E9%80%89%E6%8B%A9%E6%9C%80%E5%A4%9A%E6%95%B4%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2554.%20%E4%BB%8E%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E9%80%89%E6%8B%A9%E6%9C%80%E5%A4%9A%E6%95%B4%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2555. 两个线段获得的最多奖品【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2555.%20%E4%B8%A4%E4%B8%AA%E7%BA%BF%E6%AE%B5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%9A%E5%A5%96%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2555.%20%E4%B8%A4%E4%B8%AA%E7%BA%BF%E6%AE%B5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%9A%E5%A5%96%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2556. 二进制矩阵中翻转最多一次使路径不连通【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2556.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%BF%BB%E8%BD%AC%E6%9C%80%E5%A4%9A%E4%B8%80%E6%AC%A1%E4%BD%BF%E8%B7%AF%E5%BE%84%E4%B8%8D%E8%BF%9E%E9%80%9A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2556.%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%BF%BB%E8%BD%AC%E6%9C%80%E5%A4%9A%E4%B8%80%E6%AC%A1%E4%BD%BF%E8%B7%AF%E5%BE%84%E4%B8%8D%E8%BF%9E%E9%80%9A%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2557. 从一个范围内选择最多整数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2557.%20%E4%BB%8E%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E9%80%89%E6%8B%A9%E6%9C%80%E5%A4%9A%E6%95%B4%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2557.%20%E4%BB%8E%E4%B8%80%E4%B8%AA%E8%8C%83%E5%9B%B4%E5%86%85%E9%80%89%E6%8B%A9%E6%9C%80%E5%A4%9A%E6%95%B4%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2558. 从数量最多的堆取走礼物【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2558.%20%E4%BB%8E%E6%95%B0%E9%87%8F%E6%9C%80%E5%A4%9A%E7%9A%84%E5%A0%86%E5%8F%96%E8%B5%B0%E7%A4%BC%E7%89%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2558.%20%E4%BB%8E%E6%95%B0%E9%87%8F%E6%9C%80%E5%A4%9A%E7%9A%84%E5%A0%86%E5%8F%96%E8%B5%B0%E7%A4%BC%E7%89%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2559. 统计范围内的元音字符串数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2559.%20%E7%BB%9F%E8%AE%A1%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2559.%20%E7%BB%9F%E8%AE%A1%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2560. 打家劫舍 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2560.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2560.%20%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2561. 重排水果【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2561.%20%E9%87%8D%E6%8E%92%E6%B0%B4%E6%9E%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2561.%20%E9%87%8D%E6%8E%92%E6%B0%B4%E6%9E%9C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2562. 找出数组的串联值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2562.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%B2%E8%81%94%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2562.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%B2%E8%81%94%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2563. 统计公平数对的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2563.%20%E7%BB%9F%E8%AE%A1%E5%85%AC%E5%B9%B3%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2563.%20%E7%BB%9F%E8%AE%A1%E5%85%AC%E5%B9%B3%E6%95%B0%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2564. 子字符串异或查询【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2564.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2564.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2565. 最少得分子序列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2565.%20%E6%9C%80%E5%B0%91%E5%BE%97%E5%88%86%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2565.%20%E6%9C%80%E5%B0%91%E5%BE%97%E5%88%86%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2566. 替换一个数字后的最大差值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2566.%20%E6%9B%BF%E6%8D%A2%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2566.%20%E6%9B%BF%E6%8D%A2%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2567. 修改两个元素的最小分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2567.%20%E4%BF%AE%E6%94%B9%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2567.%20%E4%BF%AE%E6%94%B9%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2568. 最小无法得到的或值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2568.%20%E6%9C%80%E5%B0%8F%E6%97%A0%E6%B3%95%E5%BE%97%E5%88%B0%E7%9A%84%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2568.%20%E6%9C%80%E5%B0%8F%E6%97%A0%E6%B3%95%E5%BE%97%E5%88%B0%E7%9A%84%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2569. 更新数组后处理求和查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2569.%20%E6%9B%B4%E6%96%B0%E6%95%B0%E7%BB%84%E5%90%8E%E5%A4%84%E7%90%86%E6%B1%82%E5%92%8C%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2569.%20%E6%9B%B4%E6%96%B0%E6%95%B0%E7%BB%84%E5%90%8E%E5%A4%84%E7%90%86%E6%B1%82%E5%92%8C%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2570. 合并两个二维数组 - 求和法【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2570.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%20-%20%E6%B1%82%E5%92%8C%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2570.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%20-%20%E6%B1%82%E5%92%8C%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2571. 将整数减少到零需要的最少操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2571.%20%E5%B0%86%E6%95%B4%E6%95%B0%E5%87%8F%E5%B0%91%E5%88%B0%E9%9B%B6%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2571.%20%E5%B0%86%E6%95%B4%E6%95%B0%E5%87%8F%E5%B0%91%E5%88%B0%E9%9B%B6%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2572. 无平方子集计数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2572.%20%E6%97%A0%E5%B9%B3%E6%96%B9%E5%AD%90%E9%9B%86%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2572.%20%E6%97%A0%E5%B9%B3%E6%96%B9%E5%AD%90%E9%9B%86%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2573. 找出对应 LCP 矩阵的字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2573.%20%E6%89%BE%E5%87%BA%E5%AF%B9%E5%BA%94%20LCP%20%E7%9F%A9%E9%98%B5%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2573.%20%E6%89%BE%E5%87%BA%E5%AF%B9%E5%BA%94%20LCP%20%E7%9F%A9%E9%98%B5%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2574. 左右元素和的差值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2574.%20%E5%B7%A6%E5%8F%B3%E5%85%83%E7%B4%A0%E5%92%8C%E7%9A%84%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2574.%20%E5%B7%A6%E5%8F%B3%E5%85%83%E7%B4%A0%E5%92%8C%E7%9A%84%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2575. 找出字符串的可整除数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2575.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%AF%E6%95%B4%E9%99%A4%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2575.%20%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%AF%E6%95%B4%E9%99%A4%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2576. 求出最多标记下标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2576.%20%E6%B1%82%E5%87%BA%E6%9C%80%E5%A4%9A%E6%A0%87%E8%AE%B0%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2576.%20%E6%B1%82%E5%87%BA%E6%9C%80%E5%A4%9A%E6%A0%87%E8%AE%B0%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2577. 在网格图中访问一个格子的最少时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2577.%20%E5%9C%A8%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E8%AE%BF%E9%97%AE%E4%B8%80%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2577.%20%E5%9C%A8%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E8%AE%BF%E9%97%AE%E4%B8%80%E4%B8%AA%E6%A0%BC%E5%AD%90%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2578. 最小和分割【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2578.%20%E6%9C%80%E5%B0%8F%E5%92%8C%E5%88%86%E5%89%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2578.%20%E6%9C%80%E5%B0%8F%E5%92%8C%E5%88%86%E5%89%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2579. 统计染色格子数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2579.%20%E7%BB%9F%E8%AE%A1%E6%9F%93%E8%89%B2%E6%A0%BC%E5%AD%90%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2579.%20%E7%BB%9F%E8%AE%A1%E6%9F%93%E8%89%B2%E6%A0%BC%E5%AD%90%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2580. 统计将重叠区间合并成组的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2580.%20%E7%BB%9F%E8%AE%A1%E5%B0%86%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6%E6%88%90%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2580.%20%E7%BB%9F%E8%AE%A1%E5%B0%86%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4%E5%90%88%E5%B9%B6%E6%88%90%E7%BB%84%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2581. 统计可能的树根数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2581.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E8%83%BD%E7%9A%84%E6%A0%91%E6%A0%B9%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2581.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E8%83%BD%E7%9A%84%E6%A0%91%E6%A0%B9%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2582. 递枕头【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2582.%20%E9%80%92%E6%9E%95%E5%A4%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2582.%20%E9%80%92%E6%9E%95%E5%A4%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2583. 二叉树中的第 K 大层和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2583.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E5%B1%82%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2583.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E7%AC%AC%20K%20%E5%A4%A7%E5%B1%82%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2584. 分割数组使乘积互质【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2584.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B9%98%E7%A7%AF%E4%BA%92%E8%B4%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2584.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E4%BD%BF%E4%B9%98%E7%A7%AF%E4%BA%92%E8%B4%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2585. 获得分数的方法数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2585.%20%E8%8E%B7%E5%BE%97%E5%88%86%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2585.%20%E8%8E%B7%E5%BE%97%E5%88%86%E6%95%B0%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2586. 统计范围内的元音字符串数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2586.%20%E7%BB%9F%E8%AE%A1%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2586.%20%E7%BB%9F%E8%AE%A1%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2587. 重排数组以得到最大前缀分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2587.%20%E9%87%8D%E6%8E%92%E6%95%B0%E7%BB%84%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%89%8D%E7%BC%80%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2587.%20%E9%87%8D%E6%8E%92%E6%95%B0%E7%BB%84%E4%BB%A5%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%A7%E5%89%8D%E7%BC%80%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2588. 统计美丽子数组数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2588.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2588.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2589. 完成所有任务的最少时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2589.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2589.%20%E5%AE%8C%E6%88%90%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2590. 设计一个待办事项清单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2590.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9%E6%B8%85%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2590.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%BE%85%E5%8A%9E%E4%BA%8B%E9%A1%B9%E6%B8%85%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2591. 将钱分给最多的儿童【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2591.%20%E5%B0%86%E9%92%B1%E5%88%86%E7%BB%99%E6%9C%80%E5%A4%9A%E7%9A%84%E5%84%BF%E7%AB%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2591.%20%E5%B0%86%E9%92%B1%E5%88%86%E7%BB%99%E6%9C%80%E5%A4%9A%E7%9A%84%E5%84%BF%E7%AB%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2592. 最大化数组的伟大值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2592.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%BC%9F%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2592.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%BC%9F%E5%A4%A7%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2593. 标记所有元素后数组的分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2593.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%90%8E%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2593.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%90%8E%E6%95%B0%E7%BB%84%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2594. 修车的最少时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2594.%20%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2594.%20%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2595. 奇偶位数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2595.%20%E5%A5%87%E5%81%B6%E4%BD%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2595.%20%E5%A5%87%E5%81%B6%E4%BD%8D%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2596. 检查骑士巡视方案【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2596.%20%E6%A3%80%E6%9F%A5%E9%AA%91%E5%A3%AB%E5%B7%A1%E8%A7%86%E6%96%B9%E6%A1%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2596.%20%E6%A3%80%E6%9F%A5%E9%AA%91%E5%A3%AB%E5%B7%A1%E8%A7%86%E6%96%B9%E6%A1%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2597. 美丽子集的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2597.%20%E7%BE%8E%E4%B8%BD%E5%AD%90%E9%9B%86%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2597.%20%E7%BE%8E%E4%B8%BD%E5%AD%90%E9%9B%86%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2598. 执行操作后的最大 MEX【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2598.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%20MEX%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2598.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%20MEX%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2599. 使前缀和数组非负【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2599.%20%E4%BD%BF%E5%89%8D%E7%BC%80%E5%92%8C%E6%95%B0%E7%BB%84%E9%9D%9E%E8%B4%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2599.%20%E4%BD%BF%E5%89%8D%E7%BC%80%E5%92%8C%E6%95%B0%E7%BB%84%E9%9D%9E%E8%B4%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2600. K 件物品的最大和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2600.%20K%20%E4%BB%B6%E7%89%A9%E5%93%81%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2600.%20K%20%E4%BB%B6%E7%89%A9%E5%93%81%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 28. 2601~2700\\n\\n- [ ] [2601. 质数减法运算【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2601.%20%E8%B4%A8%E6%95%B0%E5%87%8F%E6%B3%95%E8%BF%90%E7%AE%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2601.%20%E8%B4%A8%E6%95%B0%E5%87%8F%E6%B3%95%E8%BF%90%E7%AE%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2602. 使数组元素全部相等的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2602.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%85%A8%E9%83%A8%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2602.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%85%A8%E9%83%A8%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2603. 收集树中金币【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2603.%20%E6%94%B6%E9%9B%86%E6%A0%91%E4%B8%AD%E9%87%91%E5%B8%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2603.%20%E6%94%B6%E9%9B%86%E6%A0%91%E4%B8%AD%E9%87%91%E5%B8%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2604. 吃掉所有谷子的最短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2604.%20%E5%90%83%E6%8E%89%E6%89%80%E6%9C%89%E8%B0%B7%E5%AD%90%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2604.%20%E5%90%83%E6%8E%89%E6%89%80%E6%9C%89%E8%B0%B7%E5%AD%90%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2605. 从两个数字数组里生成最小数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2605.%20%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E6%95%B0%E7%BB%84%E9%87%8C%E7%94%9F%E6%88%90%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2605.%20%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E6%95%B0%E7%BB%84%E9%87%8C%E7%94%9F%E6%88%90%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2606. 找到最大开销的子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2606.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E5%BC%80%E9%94%80%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2606.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E5%BC%80%E9%94%80%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2607. 使子数组元素和相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2607.%20%E4%BD%BF%E5%AD%90%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2607.%20%E4%BD%BF%E5%AD%90%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2608. 图中的最短环【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2608.%20%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E7%8E%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2608.%20%E5%9B%BE%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E7%8E%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2609. 最长平衡子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2609.%20%E6%9C%80%E9%95%BF%E5%B9%B3%E8%A1%A1%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2609.%20%E6%9C%80%E9%95%BF%E5%B9%B3%E8%A1%A1%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2610. 转换二维数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2610.%20%E8%BD%AC%E6%8D%A2%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2610.%20%E8%BD%AC%E6%8D%A2%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2611. 老鼠和奶酪【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2611.%20%E8%80%81%E9%BC%A0%E5%92%8C%E5%A5%B6%E9%85%AA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2611.%20%E8%80%81%E9%BC%A0%E5%92%8C%E5%A5%B6%E9%85%AA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2612. 最少翻转操作数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2612.%20%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2612.%20%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2613. 美数对【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2613.%20%E7%BE%8E%E6%95%B0%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2613.%20%E7%BE%8E%E6%95%B0%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2614. 对角线上的质数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2614.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E4%B8%8A%E7%9A%84%E8%B4%A8%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2614.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E4%B8%8A%E7%9A%84%E8%B4%A8%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2615. 等值距离和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2615.%20%E7%AD%89%E5%80%BC%E8%B7%9D%E7%A6%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2615.%20%E7%AD%89%E5%80%BC%E8%B7%9D%E7%A6%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2616. 最小化数对的最大差值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2616.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2616.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2617. 网格图中最少访问的格子数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2617.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%B0%91%E8%AE%BF%E9%97%AE%E7%9A%84%E6%A0%BC%E5%AD%90%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2617.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%9C%80%E5%B0%91%E8%AE%BF%E9%97%AE%E7%9A%84%E6%A0%BC%E5%AD%90%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2618. 检查是否是类的对象实例【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2618.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%98%AF%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2618.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%98%AF%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2618.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%98%AF%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 📒 使用 Object() 将原始类型的值转为对应的包装对象](https://tdahuyou.github.io/TNotes.leetcode/notes/2618.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%98%AF%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--使用-object-将原始类型的值转为对应的包装对象)\\n  - [4. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2618.%20%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E6%98%AF%E7%B1%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AE%9E%E4%BE%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/check-if-object-instance-of-class)\\n- [ ] [2619. 数组原型对象的最后一个元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2619.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2619.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2619.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2620. 计数器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2620.%20%E8%AE%A1%E6%95%B0%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2620.%20%E8%AE%A1%E6%95%B0%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2620.%20%E8%AE%A1%E6%95%B0%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2621. 睡眠函数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2621.%20%E7%9D%A1%E7%9C%A0%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2621.%20%E7%9D%A1%E7%9C%A0%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2621.%20%E7%9D%A1%E7%9C%A0%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2622. 有时间限制的缓存【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2622.%20%E6%9C%89%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6%E7%9A%84%E7%BC%93%E5%AD%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2622.%20%E6%9C%89%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6%E7%9A%84%E7%BC%93%E5%AD%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/2622.%20%E6%9C%89%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6%E7%9A%84%E7%BC%93%E5%AD%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---哈希表)\\n- [ ] [2623. 记忆函数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2623.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2623.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 📒 将数字数组直接作为 key](https://tdahuyou.github.io/TNotes.leetcode/notes/2623.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--将数字数组直接作为-key)\\n  - [3. 🎯 Solutions.哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/2623.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions哈希表)\\n  - [4. 🎯 Solutions.双哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/2623.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions双哈希表)\\n- [ ] [2624. 蜗牛排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2624.%20%E8%9C%97%E7%89%9B%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2624.%20%E8%9C%97%E7%89%9B%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2624.%20%E8%9C%97%E7%89%9B%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2624.%20%E8%9C%97%E7%89%9B%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/snail-traversal/)\\n- [ ] [2625. 扁平化嵌套数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2625.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2625.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2625.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2625.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions暴力解法)\\n  - [4. 🎯 Solutions.递归](https://tdahuyou.github.io/TNotes.leetcode/notes/2625.%20%E6%89%81%E5%B9%B3%E5%8C%96%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions递归)\\n  - [leetcode](https://leetcode.cn/problems/flatten-deeply-nested-array/description/)\\n- [ ] [2626. 数组归约运算【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2626.%20%E6%95%B0%E7%BB%84%E5%BD%92%E7%BA%A6%E8%BF%90%E7%AE%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2626.%20%E6%95%B0%E7%BB%84%E5%BD%92%E7%BA%A6%E8%BF%90%E7%AE%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2626.%20%E6%95%B0%E7%BB%84%E5%BD%92%E7%BA%A6%E8%BF%90%E7%AE%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2627. 函数防抖【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2627.%20%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2627.%20%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2627.%20%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2627.%20%E5%87%BD%E6%95%B0%E9%98%B2%E6%8A%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/debounce/)\\n- [ ] [2628. 完全相等的 JSON 字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2628.%20%E5%AE%8C%E5%85%A8%E7%9B%B8%E7%AD%89%E7%9A%84%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2628.%20%E5%AE%8C%E5%85%A8%E7%9B%B8%E7%AD%89%E7%9A%84%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.递归](https://tdahuyou.github.io/TNotes.leetcode/notes/2628.%20%E5%AE%8C%E5%85%A8%E7%9B%B8%E7%AD%89%E7%9A%84%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions递归)\\n- [ ] [2629. 复合函数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2629.%20%E5%A4%8D%E5%90%88%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2629.%20%E5%A4%8D%E5%90%88%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2629.%20%E5%A4%8D%E5%90%88%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2630. 记忆函数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2630.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2630.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.双哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/2630.%20%E8%AE%B0%E5%BF%86%E5%87%BD%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions双哈希表)\\n- [ ] [2631. 分组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2631.%20%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2631.%20%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2631.%20%E5%88%86%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2632. 柯里化【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2632.%20%E6%9F%AF%E9%87%8C%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2632.%20%E6%9F%AF%E9%87%8C%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 📒 函数的 length 属性](https://tdahuyou.github.io/TNotes.leetcode/notes/2632.%20%E6%9F%AF%E9%87%8C%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--函数的-length-属性)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2632.%20%E6%9F%AF%E9%87%8C%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1)\\n  - [4. 🎯 Solutions.2](https://tdahuyou.github.io/TNotes.leetcode/notes/2632.%20%E6%9F%AF%E9%87%8C%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#4--solutions2)\\n- [ ] [2633. 将对象转换为 JSON 字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2633.%20%E5%B0%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2633.%20%E5%B0%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2633.%20%E5%B0%86%E5%AF%B9%E8%B1%A1%E8%BD%AC%E6%8D%A2%E4%B8%BA%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2634. 过滤数组中的元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2634.%20%E8%BF%87%E6%BB%A4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2634.%20%E8%BF%87%E6%BB%A4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2634.%20%E8%BF%87%E6%BB%A4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2635. 转换数组中的每个元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2635.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2635.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2635.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2635.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--评价)\\n- [ ] [2636. Promise 对象池【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2636.%20Promise%20%E5%AF%B9%E8%B1%A1%E6%B1%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2636.%20Promise%20%E5%AF%B9%E8%B1%A1%E6%B1%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2636.%20Promise%20%E5%AF%B9%E8%B1%A1%E6%B1%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2637. 有时间限制的 Promise 对象【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2637.%20%E6%9C%89%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6%E7%9A%84%20Promise%20%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2637.%20%E6%9C%89%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6%E7%9A%84%20Promise%20%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2637.%20%E6%9C%89%E6%97%B6%E9%97%B4%E9%99%90%E5%88%B6%E7%9A%84%20Promise%20%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2638. 统计 K-Free 子集的总数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2638.%20%E7%BB%9F%E8%AE%A1%20K-Free%20%E5%AD%90%E9%9B%86%E7%9A%84%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2638.%20%E7%BB%9F%E8%AE%A1%20K-Free%20%E5%AD%90%E9%9B%86%E7%9A%84%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2639. 查询网格图中每一列的宽度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2639.%20%E6%9F%A5%E8%AF%A2%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%AF%8F%E4%B8%80%E5%88%97%E7%9A%84%E5%AE%BD%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2639.%20%E6%9F%A5%E8%AF%A2%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%AF%8F%E4%B8%80%E5%88%97%E7%9A%84%E5%AE%BD%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2640. 一个数组所有前缀的分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2640.%20%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%89%80%E6%9C%89%E5%89%8D%E7%BC%80%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2640.%20%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%89%80%E6%9C%89%E5%89%8D%E7%BC%80%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2641. 二叉树的堂兄弟节点 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2641.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%A0%82%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2641.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%A0%82%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2642. 设计可以求最短路径的图类【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2642.%20%E8%AE%BE%E8%AE%A1%E5%8F%AF%E4%BB%A5%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%9A%84%E5%9B%BE%E7%B1%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2642.%20%E8%AE%BE%E8%AE%A1%E5%8F%AF%E4%BB%A5%E6%B1%82%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%9A%84%E5%9B%BE%E7%B1%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2643. 一最多的行【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2643.%20%E4%B8%80%E6%9C%80%E5%A4%9A%E7%9A%84%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2643.%20%E4%B8%80%E6%9C%80%E5%A4%9A%E7%9A%84%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2644. 找出可整除性得分最大的整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2644.%20%E6%89%BE%E5%87%BA%E5%8F%AF%E6%95%B4%E9%99%A4%E6%80%A7%E5%BE%97%E5%88%86%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2644.%20%E6%89%BE%E5%87%BA%E5%8F%AF%E6%95%B4%E9%99%A4%E6%80%A7%E5%BE%97%E5%88%86%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2645. 构造有效字符串的最少插入数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2645.%20%E6%9E%84%E9%80%A0%E6%9C%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2645.%20%E6%9E%84%E9%80%A0%E6%9C%89%E6%95%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E6%8F%92%E5%85%A5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2646. 最小化旅行的价格总和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2646.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%97%85%E8%A1%8C%E7%9A%84%E4%BB%B7%E6%A0%BC%E6%80%BB%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2646.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%97%85%E8%A1%8C%E7%9A%84%E4%BB%B7%E6%A0%BC%E6%80%BB%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2647. 把三角形染成红色【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2647.%20%E6%8A%8A%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9F%93%E6%88%90%E7%BA%A2%E8%89%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2647.%20%E6%8A%8A%E4%B8%89%E8%A7%92%E5%BD%A2%E6%9F%93%E6%88%90%E7%BA%A2%E8%89%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [x] [2648. 生成斐波那契数列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2648.%20%E7%94%9F%E6%88%90%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2648.%20%E7%94%9F%E6%88%90%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2648.%20%E7%94%9F%E6%88%90%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2648.%20%E7%94%9F%E6%88%90%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--评价)\\n- [ ] [2649. 嵌套数组生成器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2649.%20%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2649.%20%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2649.%20%E5%B5%8C%E5%A5%97%E6%95%B0%E7%BB%84%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2650. 设计可取消函数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2650.%20%E8%AE%BE%E8%AE%A1%E5%8F%AF%E5%8F%96%E6%B6%88%E5%87%BD%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2650.%20%E8%AE%BE%E8%AE%A1%E5%8F%AF%E5%8F%96%E6%B6%88%E5%87%BD%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2650.%20%E8%AE%BE%E8%AE%A1%E5%8F%AF%E5%8F%96%E6%B6%88%E5%87%BD%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions1)\\n- [ ] [2651. 计算列车到站时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2651.%20%E8%AE%A1%E7%AE%97%E5%88%97%E8%BD%A6%E5%88%B0%E7%AB%99%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2651.%20%E8%AE%A1%E7%AE%97%E5%88%97%E8%BD%A6%E5%88%B0%E7%AB%99%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2652. 倍数求和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2652.%20%E5%80%8D%E6%95%B0%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2652.%20%E5%80%8D%E6%95%B0%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2653. 滑动子数组的美丽值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2653.%20%E6%BB%91%E5%8A%A8%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2653.%20%E6%BB%91%E5%8A%A8%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2654. 使数组所有元素变成 1 的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2654.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%8F%98%E6%88%90%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2654.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%8F%98%E6%88%90%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2655. 寻找最大长度的未覆盖区间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2655.%20%E5%AF%BB%E6%89%BE%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%AA%E8%A6%86%E7%9B%96%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2655.%20%E5%AF%BB%E6%89%BE%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%AA%E8%A6%86%E7%9B%96%E5%8C%BA%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2656. K 个元素的最大和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2656.%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2656.%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2657. 找到两个数组的前缀公共数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2657.%20%E6%89%BE%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%89%8D%E7%BC%80%E5%85%AC%E5%85%B1%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2657.%20%E6%89%BE%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E5%89%8D%E7%BC%80%E5%85%AC%E5%85%B1%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2658. 网格图中鱼的最大数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2658.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E9%B1%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2658.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E9%B1%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2659. 将数组清空【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2659.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%B8%85%E7%A9%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2659.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%B8%85%E7%A9%BA%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2660. 保龄球游戏的获胜者【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2660.%20%E4%BF%9D%E9%BE%84%E7%90%83%E6%B8%B8%E6%88%8F%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2660.%20%E4%BF%9D%E9%BE%84%E7%90%83%E6%B8%B8%E6%88%8F%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2661. 找出叠涂元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2661.%20%E6%89%BE%E5%87%BA%E5%8F%A0%E6%B6%82%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2661.%20%E6%89%BE%E5%87%BA%E5%8F%A0%E6%B6%82%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2662. 前往目标的最小代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2662.%20%E5%89%8D%E5%BE%80%E7%9B%AE%E6%A0%87%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2662.%20%E5%89%8D%E5%BE%80%E7%9B%AE%E6%A0%87%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2663. 字典序最小的美丽字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2663.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2663.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2664. 巡逻的骑士【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2664.%20%E5%B7%A1%E9%80%BB%E7%9A%84%E9%AA%91%E5%A3%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2664.%20%E5%B7%A1%E9%80%BB%E7%9A%84%E9%AA%91%E5%A3%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2665. 计数器 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2665.%20%E8%AE%A1%E6%95%B0%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2665.%20%E8%AE%A1%E6%95%B0%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2665.%20%E8%AE%A1%E6%95%B0%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2665.%20%E8%AE%A1%E6%95%B0%E5%99%A8%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--评价)\\n- [ ] [2666. 只允许一次函数调用【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2666.%20%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E6%AC%A1%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2666.%20%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E6%AC%A1%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2666.%20%E5%8F%AA%E5%85%81%E8%AE%B8%E4%B8%80%E6%AC%A1%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2667. 创建 Hello World 函数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2667.%20%E5%88%9B%E5%BB%BA%20Hello%20World%20%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2667.%20%E5%88%9B%E5%BB%BA%20Hello%20World%20%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2667.%20%E5%88%9B%E5%BB%BA%20Hello%20World%20%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2667.%20%E5%88%9B%E5%BB%BA%20Hello%20World%20%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--评价)\\n- [ ] [2668. 查询员工当前薪水【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2668.%20%E6%9F%A5%E8%AF%A2%E5%91%98%E5%B7%A5%E5%BD%93%E5%89%8D%E8%96%AA%E6%B0%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2668.%20%E6%9F%A5%E8%AF%A2%E5%91%98%E5%B7%A5%E5%BD%93%E5%89%8D%E8%96%AA%E6%B0%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2669. 统计 Spotify 排行榜上艺术家出现次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2669.%20%E7%BB%9F%E8%AE%A1%20Spotify%20%E6%8E%92%E8%A1%8C%E6%A6%9C%E4%B8%8A%E8%89%BA%E6%9C%AF%E5%AE%B6%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2669.%20%E7%BB%9F%E8%AE%A1%20Spotify%20%E6%8E%92%E8%A1%8C%E6%A6%9C%E4%B8%8A%E8%89%BA%E6%9C%AF%E5%AE%B6%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2670. 找出不同元素数目差数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2670.%20%E6%89%BE%E5%87%BA%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E5%B7%AE%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2670.%20%E6%89%BE%E5%87%BA%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E5%B7%AE%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2671. 频率跟踪器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2671.%20%E9%A2%91%E7%8E%87%E8%B7%9F%E8%B8%AA%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2671.%20%E9%A2%91%E7%8E%87%E8%B7%9F%E8%B8%AA%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2672. 有相同颜色的相邻元素数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2672.%20%E6%9C%89%E7%9B%B8%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2672.%20%E6%9C%89%E7%9B%B8%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2673. 使二叉树所有路径值相等的最小代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2673.%20%E4%BD%BF%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E5%80%BC%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2673.%20%E4%BD%BF%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E5%80%BC%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2674. 拆分循环链表【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2674.%20%E6%8B%86%E5%88%86%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2674.%20%E6%8B%86%E5%88%86%E5%BE%AA%E7%8E%AF%E9%93%BE%E8%A1%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2675. 将对象数组转换为矩阵【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2675.%20%E5%B0%86%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2675.%20%E5%B0%86%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2675.%20%E5%B0%86%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions1)\\n- [ ] [2676. 节流【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2676.%20%E8%8A%82%E6%B5%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2676.%20%E8%8A%82%E6%B5%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2676.%20%E8%8A%82%E6%B5%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2676.%20%E8%8A%82%E6%B5%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/throttle)\\n- [ ] [2677. 分块数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2677.%20%E5%88%86%E5%9D%97%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2677.%20%E5%88%86%E5%9D%97%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2677.%20%E5%88%86%E5%9D%97%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2677.%20%E5%88%86%E5%9D%97%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/chunk-array)\\n  - 备注：本题是仿照 Lodash 中的 `_.chunk` 的实现手写一个 `chunk` 函数。\\n- [ ] [2678. 老人的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2678.%20%E8%80%81%E4%BA%BA%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2678.%20%E8%80%81%E4%BA%BA%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2679. 矩阵中的和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2679.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2679.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2680. 最大或值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2680.%20%E6%9C%80%E5%A4%A7%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2680.%20%E6%9C%80%E5%A4%A7%E6%88%96%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2681. 英雄的力量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2681.%20%E8%8B%B1%E9%9B%84%E7%9A%84%E5%8A%9B%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2681.%20%E8%8B%B1%E9%9B%84%E7%9A%84%E5%8A%9B%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2682. 找出转圈游戏输家【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2682.%20%E6%89%BE%E5%87%BA%E8%BD%AC%E5%9C%88%E6%B8%B8%E6%88%8F%E8%BE%93%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2682.%20%E6%89%BE%E5%87%BA%E8%BD%AC%E5%9C%88%E6%B8%B8%E6%88%8F%E8%BE%93%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2683. 相邻值的按位异或【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2683.%20%E7%9B%B8%E9%82%BB%E5%80%BC%E7%9A%84%E6%8C%89%E4%BD%8D%E5%BC%82%E6%88%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2683.%20%E7%9B%B8%E9%82%BB%E5%80%BC%E7%9A%84%E6%8C%89%E4%BD%8D%E5%BC%82%E6%88%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2684. 矩阵中移动的最大次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2684.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2684.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%A7%BB%E5%8A%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2685. 统计完全连通分量的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2685.%20%E7%BB%9F%E8%AE%A1%E5%AE%8C%E5%85%A8%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2685.%20%E7%BB%9F%E8%AE%A1%E5%AE%8C%E5%85%A8%E8%BF%9E%E9%80%9A%E5%88%86%E9%87%8F%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2686. 即时食物配送 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2686.%20%E5%8D%B3%E6%97%B6%E9%A3%9F%E7%89%A9%E9%85%8D%E9%80%81%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2686.%20%E5%8D%B3%E6%97%B6%E9%A3%9F%E7%89%A9%E9%85%8D%E9%80%81%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2687. 自行车的最后使用时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2687.%20%E8%87%AA%E8%A1%8C%E8%BD%A6%E7%9A%84%E6%9C%80%E5%90%8E%E4%BD%BF%E7%94%A8%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2687.%20%E8%87%AA%E8%A1%8C%E8%BD%A6%E7%9A%84%E6%9C%80%E5%90%8E%E4%BD%BF%E7%94%A8%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2688. 查找活跃用户【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2688.%20%E6%9F%A5%E6%89%BE%E6%B4%BB%E8%B7%83%E7%94%A8%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2688.%20%E6%9F%A5%E6%89%BE%E6%B4%BB%E8%B7%83%E7%94%A8%E6%88%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2689. 从 Rope 树中提取第 K 个字符【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2689.%20%E4%BB%8E%20Rope%20%E6%A0%91%E4%B8%AD%E6%8F%90%E5%8F%96%E7%AC%AC%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2689.%20%E4%BB%8E%20Rope%20%E6%A0%91%E4%B8%AD%E6%8F%90%E5%8F%96%E7%AC%AC%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2690. 无穷方法对象【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2690.%20%E6%97%A0%E7%A9%B7%E6%96%B9%E6%B3%95%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2690.%20%E6%97%A0%E7%A9%B7%E6%96%B9%E6%B3%95%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2690.%20%E6%97%A0%E7%A9%B7%E6%96%B9%E6%B3%95%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2691. 不可变辅助工具【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2691.%20%E4%B8%8D%E5%8F%AF%E5%8F%98%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2691.%20%E4%B8%8D%E5%8F%AF%E5%8F%98%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2691.%20%E4%B8%8D%E5%8F%AF%E5%8F%98%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions1)\\n- [ ] [2692. 使对象不可变【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2692.%20%E4%BD%BF%E5%AF%B9%E8%B1%A1%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2692.%20%E4%BD%BF%E5%AF%B9%E8%B1%A1%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2692.%20%E4%BD%BF%E5%AF%B9%E8%B1%A1%E4%B8%8D%E5%8F%AF%E5%8F%98%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2693. 使用自定义上下文调用函数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2693.%20%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2693.%20%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2693.%20%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%8A%E4%B8%8B%E6%96%87%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2694. 事件发射器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2694.%20%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B0%84%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2694.%20%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B0%84%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2694.%20%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B0%84%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2694.%20%E4%BA%8B%E4%BB%B6%E5%8F%91%E5%B0%84%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#3--评价)\\n- [x] [2695. 包装数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2695.%20%E5%8C%85%E8%A3%85%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2695.%20%E5%8C%85%E8%A3%85%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/2695.%20%E5%8C%85%E8%A3%85%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---暴力解法)\\n- [ ] [2696. 删除子串后的字符串最小长度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2696.%20%E5%88%A0%E9%99%A4%E5%AD%90%E4%B8%B2%E5%90%8E%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%B0%8F%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2696.%20%E5%88%A0%E9%99%A4%E5%AD%90%E4%B8%B2%E5%90%8E%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E5%B0%8F%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2697. 字典序最小回文串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2697.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2697.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2698. 求一个整数的惩罚数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2698.%20%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9A%84%E6%83%A9%E7%BD%9A%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2698.%20%E6%B1%82%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9A%84%E6%83%A9%E7%BD%9A%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2699. 修改图中的边权【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2699.%20%E4%BF%AE%E6%94%B9%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%BE%B9%E6%9D%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2699.%20%E4%BF%AE%E6%94%B9%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%BE%B9%E6%9D%83%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2700. 两个对象之间的差异【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2700.%20%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%B7%AE%E5%BC%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2700.%20%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%B7%AE%E5%BC%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2700.%20%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%B7%AE%E5%BC%82%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n\\n## 29. 2701~2800\\n\\n- [ ] [2701. 连续递增交易【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2701.%20%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E4%BA%A4%E6%98%93%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2701.%20%E8%BF%9E%E7%BB%AD%E9%80%92%E5%A2%9E%E4%BA%A4%E6%98%93%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2702. 使数字变为非正数的最小操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2702.%20%E4%BD%BF%E6%95%B0%E5%AD%97%E5%8F%98%E4%B8%BA%E9%9D%9E%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2702.%20%E4%BD%BF%E6%95%B0%E5%AD%97%E5%8F%98%E4%B8%BA%E9%9D%9E%E6%AD%A3%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2703. 返回传递的参数的长度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2703.%20%E8%BF%94%E5%9B%9E%E4%BC%A0%E9%80%92%E7%9A%84%E5%8F%82%E6%95%B0%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2703.%20%E8%BF%94%E5%9B%9E%E4%BC%A0%E9%80%92%E7%9A%84%E5%8F%82%E6%95%B0%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2703.%20%E8%BF%94%E5%9B%9E%E4%BC%A0%E9%80%92%E7%9A%84%E5%8F%82%E6%95%B0%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2704. 相等还是不相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2704.%20%E7%9B%B8%E7%AD%89%E8%BF%98%E6%98%AF%E4%B8%8D%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2704.%20%E7%9B%B8%E7%AD%89%E8%BF%98%E6%98%AF%E4%B8%8D%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2704.%20%E7%9B%B8%E7%AD%89%E8%BF%98%E6%98%AF%E4%B8%8D%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2705. 精简对象【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2705.%20%E7%B2%BE%E7%AE%80%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2705.%20%E7%B2%BE%E7%AE%80%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2705.%20%E7%B2%BE%E7%AE%80%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2706. 购买两块巧克力【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2706.%20%E8%B4%AD%E4%B9%B0%E4%B8%A4%E5%9D%97%E5%B7%A7%E5%85%8B%E5%8A%9B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2706.%20%E8%B4%AD%E4%B9%B0%E4%B8%A4%E5%9D%97%E5%B7%A7%E5%85%8B%E5%8A%9B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2707. 字符串中的额外字符【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2707.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E9%A2%9D%E5%A4%96%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2707.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E9%A2%9D%E5%A4%96%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2708. 一个小组的最大实力值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2708.%20%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AE%9E%E5%8A%9B%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2708.%20%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AE%9E%E5%8A%9B%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2709. 最大公约数遍历【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2709.%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E9%81%8D%E5%8E%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2709.%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E9%81%8D%E5%8E%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2710. 移除字符串中的尾随零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2710.%20%E7%A7%BB%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%B0%BE%E9%9A%8F%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2710.%20%E7%A7%BB%E9%99%A4%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%B0%BE%E9%9A%8F%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2711. 对角线上不同值的数量差【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2711.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E4%B8%8A%E4%B8%8D%E5%90%8C%E5%80%BC%E7%9A%84%E6%95%B0%E9%87%8F%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2711.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E4%B8%8A%E4%B8%8D%E5%90%8C%E5%80%BC%E7%9A%84%E6%95%B0%E9%87%8F%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2712. 使所有字符相等的最小成本【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2712.%20%E4%BD%BF%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2712.%20%E4%BD%BF%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2713. 矩阵中严格递增的单元格数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2713.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E5%8D%95%E5%85%83%E6%A0%BC%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2713.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E5%8D%95%E5%85%83%E6%A0%BC%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2714. 找到 K 次跨越的最短路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2714.%20%E6%89%BE%E5%88%B0%20K%20%E6%AC%A1%E8%B7%A8%E8%B6%8A%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2714.%20%E6%89%BE%E5%88%B0%20K%20%E6%AC%A1%E8%B7%A8%E8%B6%8A%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2715. 执行可取消的延迟函数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2715.%20%E6%89%A7%E8%A1%8C%E5%8F%AF%E5%8F%96%E6%B6%88%E7%9A%84%E5%BB%B6%E8%BF%9F%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2715.%20%E6%89%A7%E8%A1%8C%E5%8F%AF%E5%8F%96%E6%B6%88%E7%9A%84%E5%BB%B6%E8%BF%9F%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2715.%20%E6%89%A7%E8%A1%8C%E5%8F%AF%E5%8F%96%E6%B6%88%E7%9A%84%E5%BB%B6%E8%BF%9F%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2716. 最小化字符串长度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2716.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2716.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2717. 半有序排列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2717.%20%E5%8D%8A%E6%9C%89%E5%BA%8F%E6%8E%92%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2717.%20%E5%8D%8A%E6%9C%89%E5%BA%8F%E6%8E%92%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2718. 查询后矩阵的和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2718.%20%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9F%A9%E9%98%B5%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2718.%20%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9F%A9%E9%98%B5%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2719. 统计整数数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2719.%20%E7%BB%9F%E8%AE%A1%E6%95%B4%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2719.%20%E7%BB%9F%E8%AE%A1%E6%95%B4%E6%95%B0%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2720. 受欢迎度百分比【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2720.%20%E5%8F%97%E6%AC%A2%E8%BF%8E%E5%BA%A6%E7%99%BE%E5%88%86%E6%AF%94%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2720.%20%E5%8F%97%E6%AC%A2%E8%BF%8E%E5%BA%A6%E7%99%BE%E5%88%86%E6%AF%94%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2721. 并行执行异步函数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2721.%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2721.%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2721.%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2722. 根据 ID 合并两个数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2722.%20%E6%A0%B9%E6%8D%AE%20ID%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2722.%20%E6%A0%B9%E6%8D%AE%20ID%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2722.%20%E6%A0%B9%E6%8D%AE%20ID%20%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2723. 两个 Promise 对象相加【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2723.%20%E4%B8%A4%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2723.%20%E4%B8%A4%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2723.%20%E4%B8%A4%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2723.%20%E4%B8%A4%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%8A%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--评价)\\n- [ ] [2724. 排序方式【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2724.%20%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2724.%20%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2724.%20%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🔗 References](https://tdahuyou.github.io/TNotes.leetcode/notes/2724.%20%E6%8E%92%E5%BA%8F%E6%96%B9%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--references)\\n- [ ] [2725. 间隔取消【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2725.%20%E9%97%B4%E9%9A%94%E5%8F%96%E6%B6%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2725.%20%E9%97%B4%E9%9A%94%E5%8F%96%E6%B6%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2725.%20%E9%97%B4%E9%9A%94%E5%8F%96%E6%B6%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2726. 使用方法链的计算器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2726.%20%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E9%93%BE%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2726.%20%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E9%93%BE%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2726.%20%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E9%93%BE%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2726.%20%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E9%93%BE%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--评价)\\n- [ ] [2727. 判断对象是否为空【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2727.%20%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2727.%20%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2727.%20%E5%88%A4%E6%96%AD%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E4%B8%BA%E7%A9%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2728. 计算一个环形街道上的房屋数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2728.%20%E8%AE%A1%E7%AE%97%E4%B8%80%E4%B8%AA%E7%8E%AF%E5%BD%A2%E8%A1%97%E9%81%93%E4%B8%8A%E7%9A%84%E6%88%BF%E5%B1%8B%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2728.%20%E8%AE%A1%E7%AE%97%E4%B8%80%E4%B8%AA%E7%8E%AF%E5%BD%A2%E8%A1%97%E9%81%93%E4%B8%8A%E7%9A%84%E6%88%BF%E5%B1%8B%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2729. 判断一个数是否迷人【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2729.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E5%90%A6%E8%BF%B7%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2729.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%98%AF%E5%90%A6%E8%BF%B7%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2730. 找到最长的半重复子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2730.%20%E6%89%BE%E5%88%B0%E6%9C%80%E9%95%BF%E7%9A%84%E5%8D%8A%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2730.%20%E6%89%BE%E5%88%B0%E6%9C%80%E9%95%BF%E7%9A%84%E5%8D%8A%E9%87%8D%E5%A4%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2731. 移动机器人【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2731.%20%E7%A7%BB%E5%8A%A8%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2731.%20%E7%A7%BB%E5%8A%A8%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2732. 找到矩阵中的好子集【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2732.%20%E6%89%BE%E5%88%B0%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%A5%BD%E5%AD%90%E9%9B%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2732.%20%E6%89%BE%E5%88%B0%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%A5%BD%E5%AD%90%E9%9B%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2733. 既不是最小值也不是最大值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2733.%20%E6%97%A2%E4%B8%8D%E6%98%AF%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B9%9F%E4%B8%8D%E6%98%AF%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2733.%20%E6%97%A2%E4%B8%8D%E6%98%AF%E6%9C%80%E5%B0%8F%E5%80%BC%E4%B9%9F%E4%B8%8D%E6%98%AF%E6%9C%80%E5%A4%A7%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2734. 执行子串操作后的字典序最小字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2734.%20%E6%89%A7%E8%A1%8C%E5%AD%90%E4%B8%B2%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2734.%20%E6%89%A7%E8%A1%8C%E5%AD%90%E4%B8%B2%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2735. 收集巧克力【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2735.%20%E6%94%B6%E9%9B%86%E5%B7%A7%E5%85%8B%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2735.%20%E6%94%B6%E9%9B%86%E5%B7%A7%E5%85%8B%E5%8A%9B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2736. 最大和查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2736.%20%E6%9C%80%E5%A4%A7%E5%92%8C%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2736.%20%E6%9C%80%E5%A4%A7%E5%92%8C%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2737. 找到最近的标记节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2737.%20%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E6%A0%87%E8%AE%B0%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2737.%20%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E6%A0%87%E8%AE%B0%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2738. 统计文本中单词的出现次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2738.%20%E7%BB%9F%E8%AE%A1%E6%96%87%E6%9C%AC%E4%B8%AD%E5%8D%95%E8%AF%8D%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2738.%20%E7%BB%9F%E8%AE%A1%E6%96%87%E6%9C%AC%E4%B8%AD%E5%8D%95%E8%AF%8D%E7%9A%84%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2739. 总行驶距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2739.%20%E6%80%BB%E8%A1%8C%E9%A9%B6%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2739.%20%E6%80%BB%E8%A1%8C%E9%A9%B6%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2740. 找出分区值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2740.%20%E6%89%BE%E5%87%BA%E5%88%86%E5%8C%BA%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2740.%20%E6%89%BE%E5%87%BA%E5%88%86%E5%8C%BA%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2741. 特别的排列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2741.%20%E7%89%B9%E5%88%AB%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2741.%20%E7%89%B9%E5%88%AB%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2742. 给墙壁刷油漆【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2742.%20%E7%BB%99%E5%A2%99%E5%A3%81%E5%88%B7%E6%B2%B9%E6%BC%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2742.%20%E7%BB%99%E5%A2%99%E5%A3%81%E5%88%B7%E6%B2%B9%E6%BC%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2743. 计算没有重复字符的子字符串数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2743.%20%E8%AE%A1%E7%AE%97%E6%B2%A1%E6%9C%89%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2743.%20%E8%AE%A1%E7%AE%97%E6%B2%A1%E6%9C%89%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [x] [2744. 最大字符串配对数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2744.%20%E6%9C%80%E5%A4%A7%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%85%8D%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2744.%20%E6%9C%80%E5%A4%A7%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%85%8D%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 双重循环](https://tdahuyou.github.io/TNotes.leetcode/notes/2744.%20%E6%9C%80%E5%A4%A7%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%85%8D%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---双重循环)\\n  - [3. 🎯 Solutions.2 - 哈希表](https://tdahuyou.github.io/TNotes.leetcode/notes/2744.%20%E6%9C%80%E5%A4%A7%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%85%8D%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---哈希表)\\n- [ ] [2745. 构造最长的新字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2745.%20%E6%9E%84%E9%80%A0%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2745.%20%E6%9E%84%E9%80%A0%E6%9C%80%E9%95%BF%E7%9A%84%E6%96%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2746. 字符串连接删减字母【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2746.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E5%88%A0%E5%87%8F%E5%AD%97%E6%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2746.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E5%88%A0%E5%87%8F%E5%AD%97%E6%AF%8D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2747. 统计没有收到请求的服务器数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2747.%20%E7%BB%9F%E8%AE%A1%E6%B2%A1%E6%9C%89%E6%94%B6%E5%88%B0%E8%AF%B7%E6%B1%82%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2747.%20%E7%BB%9F%E8%AE%A1%E6%B2%A1%E6%9C%89%E6%94%B6%E5%88%B0%E8%AF%B7%E6%B1%82%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2748. 美丽下标对的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2748.%20%E7%BE%8E%E4%B8%BD%E4%B8%8B%E6%A0%87%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2748.%20%E7%BE%8E%E4%B8%BD%E4%B8%8B%E6%A0%87%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2749. 得到整数零需要执行的最少操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2749.%20%E5%BE%97%E5%88%B0%E6%95%B4%E6%95%B0%E9%9B%B6%E9%9C%80%E8%A6%81%E6%89%A7%E8%A1%8C%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2749.%20%E5%BE%97%E5%88%B0%E6%95%B4%E6%95%B0%E9%9B%B6%E9%9C%80%E8%A6%81%E6%89%A7%E8%A1%8C%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2750. 将数组划分成若干好子数组的方式【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2750.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%92%E5%88%86%E6%88%90%E8%8B%A5%E5%B9%B2%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2750.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%92%E5%88%86%E6%88%90%E8%8B%A5%E5%B9%B2%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2751. 机器人碰撞【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2751.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%A2%B0%E6%92%9E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2751.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%A2%B0%E6%92%9E%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2752. 在连续天数上进行了最多交易次数的顾客【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2752.%20%E5%9C%A8%E8%BF%9E%E7%BB%AD%E5%A4%A9%E6%95%B0%E4%B8%8A%E8%BF%9B%E8%A1%8C%E4%BA%86%E6%9C%80%E5%A4%9A%E4%BA%A4%E6%98%93%E6%AC%A1%E6%95%B0%E7%9A%84%E9%A1%BE%E5%AE%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2752.%20%E5%9C%A8%E8%BF%9E%E7%BB%AD%E5%A4%A9%E6%95%B0%E4%B8%8A%E8%BF%9B%E8%A1%8C%E4%BA%86%E6%9C%80%E5%A4%9A%E4%BA%A4%E6%98%93%E6%AC%A1%E6%95%B0%E7%9A%84%E9%A1%BE%E5%AE%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2753. 计算一个环形街道上的房屋数量 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2753.%20%E8%AE%A1%E7%AE%97%E4%B8%80%E4%B8%AA%E7%8E%AF%E5%BD%A2%E8%A1%97%E9%81%93%E4%B8%8A%E7%9A%84%E6%88%BF%E5%B1%8B%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2753.%20%E8%AE%A1%E7%AE%97%E4%B8%80%E4%B8%AA%E7%8E%AF%E5%BD%A2%E8%A1%97%E9%81%93%E4%B8%8A%E7%9A%84%E6%88%BF%E5%B1%8B%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2754. 将函数绑定到上下文【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2754.%20%E5%B0%86%E5%87%BD%E6%95%B0%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%8A%E4%B8%8B%E6%96%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2754.%20%E5%B0%86%E5%87%BD%E6%95%B0%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%8A%E4%B8%8B%E6%96%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2754.%20%E5%B0%86%E5%87%BD%E6%95%B0%E7%BB%91%E5%AE%9A%E5%88%B0%E4%B8%8A%E4%B8%8B%E6%96%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2755. 深度合并两个对象【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2755.%20%E6%B7%B1%E5%BA%A6%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2755.%20%E6%B7%B1%E5%BA%A6%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2755.%20%E6%B7%B1%E5%BA%A6%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2756. 批处理查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2756.%20%E6%89%B9%E5%A4%84%E7%90%86%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2756.%20%E6%89%B9%E5%A4%84%E7%90%86%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2756.%20%E6%89%B9%E5%A4%84%E7%90%86%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions1)\\n- [ ] [2757. 生成循环数组的值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2757.%20%E7%94%9F%E6%88%90%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2757.%20%E7%94%9F%E6%88%90%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2757.%20%E7%94%9F%E6%88%90%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2758. 下一天【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2758.%20%E4%B8%8B%E4%B8%80%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2758.%20%E4%B8%8B%E4%B8%80%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2758.%20%E4%B8%8B%E4%B8%80%E5%A4%A9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2759. 将 JSON 字符串转换为对象【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2759.%20%E5%B0%86%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2759.%20%E5%B0%86%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2759.%20%E5%B0%86%20JSON%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#2--solutions1)\\n- [ ] [2760. 最长奇偶子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2760.%20%E6%9C%80%E9%95%BF%E5%A5%87%E5%81%B6%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2760.%20%E6%9C%80%E9%95%BF%E5%A5%87%E5%81%B6%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2761. 和等于目标值的质数对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2761.%20%E5%92%8C%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E8%B4%A8%E6%95%B0%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2761.%20%E5%92%8C%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E8%B4%A8%E6%95%B0%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2762. 不间断子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2762.%20%E4%B8%8D%E9%97%B4%E6%96%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2762.%20%E4%B8%8D%E9%97%B4%E6%96%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2763. 所有子数组中不平衡数字之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2763.%20%E6%89%80%E6%9C%89%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%8D%E5%B9%B3%E8%A1%A1%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2763.%20%E6%89%80%E6%9C%89%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%8D%E5%B9%B3%E8%A1%A1%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2764. 数组是否表示某二叉树的前序遍历【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2764.%20%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E8%A1%A8%E7%A4%BA%E6%9F%90%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2764.%20%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E8%A1%A8%E7%A4%BA%E6%9F%90%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%89%8D%E5%BA%8F%E9%81%8D%E5%8E%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2765. 最长交替子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2765.%20%E6%9C%80%E9%95%BF%E4%BA%A4%E6%9B%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2765.%20%E6%9C%80%E9%95%BF%E4%BA%A4%E6%9B%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2766. 重新放置石块【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2766.%20%E9%87%8D%E6%96%B0%E6%94%BE%E7%BD%AE%E7%9F%B3%E5%9D%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2766.%20%E9%87%8D%E6%96%B0%E6%94%BE%E7%BD%AE%E7%9F%B3%E5%9D%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2767. 将字符串分割为最少的美丽子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2767.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E5%89%B2%E4%B8%BA%E6%9C%80%E5%B0%91%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2767.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%86%E5%89%B2%E4%B8%BA%E6%9C%80%E5%B0%91%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2768. 黑格子的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2768.%20%E9%BB%91%E6%A0%BC%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2768.%20%E9%BB%91%E6%A0%BC%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2769. 找出最大的可达成数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2769.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%A4%A7%E7%9A%84%E5%8F%AF%E8%BE%BE%E6%88%90%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2769.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%A4%A7%E7%9A%84%E5%8F%AF%E8%BE%BE%E6%88%90%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2770. 达到末尾下标所需的最大跳跃次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2770.%20%E8%BE%BE%E5%88%B0%E6%9C%AB%E5%B0%BE%E4%B8%8B%E6%A0%87%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2770.%20%E8%BE%BE%E5%88%B0%E6%9C%AB%E5%B0%BE%E4%B8%8B%E6%A0%87%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2771. 构造最长非递减子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2771.%20%E6%9E%84%E9%80%A0%E6%9C%80%E9%95%BF%E9%9D%9E%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2771.%20%E6%9E%84%E9%80%A0%E6%9C%80%E9%95%BF%E9%9D%9E%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2772. 使数组中的所有元素都等于零【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2772.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E7%AD%89%E4%BA%8E%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2772.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E7%AD%89%E4%BA%8E%E9%9B%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2773. 特殊二叉树的高度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2773.%20%E7%89%B9%E6%AE%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%AB%98%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2773.%20%E7%89%B9%E6%AE%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%AB%98%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2774. 数组的上界【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2774.%20%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8A%E7%95%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2774.%20%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8A%E7%95%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2774.%20%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8A%E7%95%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2774.%20%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%8A%E7%95%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/array-upper-bound)\\n- [ ] [2775. 将 undefined 转为 null【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2775.%20%E5%B0%86%20undefined%20%E8%BD%AC%E4%B8%BA%20null%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2775.%20%E5%B0%86%20undefined%20%E8%BD%AC%E4%B8%BA%20null%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 递归](https://tdahuyou.github.io/TNotes.leetcode/notes/2775.%20%E5%B0%86%20undefined%20%E8%BD%AC%E4%B8%BA%20null%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1---递归)\\n- [ ] [2776. 转换回调函数为 Promise 函数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2776.%20%E8%BD%AC%E6%8D%A2%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%B8%BA%20Promise%20%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2776.%20%E8%BD%AC%E6%8D%A2%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%B8%BA%20Promise%20%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2776.%20%E8%BD%AC%E6%8D%A2%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E4%B8%BA%20Promise%20%E5%87%BD%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2777. 日期范围生成器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2777.%20%E6%97%A5%E6%9C%9F%E8%8C%83%E5%9B%B4%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2777.%20%E6%97%A5%E6%9C%9F%E8%8C%83%E5%9B%B4%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2777.%20%E6%97%A5%E6%9C%9F%E8%8C%83%E5%9B%B4%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2778. 特殊元素平方和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2778.%20%E7%89%B9%E6%AE%8A%E5%85%83%E7%B4%A0%E5%B9%B3%E6%96%B9%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2778.%20%E7%89%B9%E6%AE%8A%E5%85%83%E7%B4%A0%E5%B9%B3%E6%96%B9%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2779. 数组的最大美丽值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2779.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2779.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E7%BE%8E%E4%B8%BD%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2780. 合法分割的最小下标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2780.%20%E5%90%88%E6%B3%95%E5%88%86%E5%89%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2780.%20%E5%90%88%E6%B3%95%E5%88%86%E5%89%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2781. 最长合法子字符串的长度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2781.%20%E6%9C%80%E9%95%BF%E5%90%88%E6%B3%95%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2781.%20%E6%9C%80%E9%95%BF%E5%90%88%E6%B3%95%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2782. 唯一类别的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2782.%20%E5%94%AF%E4%B8%80%E7%B1%BB%E5%88%AB%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2782.%20%E5%94%AF%E4%B8%80%E7%B1%BB%E5%88%AB%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2783. 航班入座率和等待名单分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2783.%20%E8%88%AA%E7%8F%AD%E5%85%A5%E5%BA%A7%E7%8E%87%E5%92%8C%E7%AD%89%E5%BE%85%E5%90%8D%E5%8D%95%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2783.%20%E8%88%AA%E7%8F%AD%E5%85%A5%E5%BA%A7%E7%8E%87%E5%92%8C%E7%AD%89%E5%BE%85%E5%90%8D%E5%8D%95%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2784. 检查数组是否是好的【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2784.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E6%98%AF%E5%A5%BD%E7%9A%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2784.%20%E6%A3%80%E6%9F%A5%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E6%98%AF%E5%A5%BD%E7%9A%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2785. 将字符串中的元音字母排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2785.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2785.%20%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2786. 访问数组中的位置使分数最大【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2786.%20%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%E4%BD%BF%E5%88%86%E6%95%B0%E6%9C%80%E5%A4%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2786.%20%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE%E4%BD%BF%E5%88%86%E6%95%B0%E6%9C%80%E5%A4%A7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2787. 将一个数字表示成幂的和的方案数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2787.%20%E5%B0%86%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E8%A1%A8%E7%A4%BA%E6%88%90%E5%B9%82%E7%9A%84%E5%92%8C%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2787.%20%E5%B0%86%E4%B8%80%E4%B8%AA%E6%95%B0%E5%AD%97%E8%A1%A8%E7%A4%BA%E6%88%90%E5%B9%82%E7%9A%84%E5%92%8C%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2788. 按分隔符拆分字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2788.%20%E6%8C%89%E5%88%86%E9%9A%94%E7%AC%A6%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2788.%20%E6%8C%89%E5%88%86%E9%9A%94%E7%AC%A6%E6%8B%86%E5%88%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2789. 合并后数组中的最大元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2789.%20%E5%90%88%E5%B9%B6%E5%90%8E%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2789.%20%E5%90%88%E5%B9%B6%E5%90%8E%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2790. 长度递增组的最大数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2790.%20%E9%95%BF%E5%BA%A6%E9%80%92%E5%A2%9E%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2790.%20%E9%95%BF%E5%BA%A6%E9%80%92%E5%A2%9E%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2791. 树中可以形成回文的路径数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2791.%20%E6%A0%91%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%BD%A2%E6%88%90%E5%9B%9E%E6%96%87%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2791.%20%E6%A0%91%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%BD%A2%E6%88%90%E5%9B%9E%E6%96%87%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2792. 计算足够大的节点数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2792.%20%E8%AE%A1%E7%AE%97%E8%B6%B3%E5%A4%9F%E5%A4%A7%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2792.%20%E8%AE%A1%E7%AE%97%E8%B6%B3%E5%A4%9F%E5%A4%A7%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2793. 航班机票状态【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2793.%20%E8%88%AA%E7%8F%AD%E6%9C%BA%E7%A5%A8%E7%8A%B6%E6%80%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2793.%20%E8%88%AA%E7%8F%AD%E6%9C%BA%E7%A5%A8%E7%8A%B6%E6%80%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2794. 从两个数组中创建对象【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2794.%20%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2794.%20%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2794.%20%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2794.%20%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/create-object-from-two-arrays)\\n- [ ] [2795. 并行执行 Promise 以获取独有的结果【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2795.%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C%20Promise%20%E4%BB%A5%E8%8E%B7%E5%8F%96%E7%8B%AC%E6%9C%89%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2795.%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C%20Promise%20%E4%BB%A5%E8%8E%B7%E5%8F%96%E7%8B%AC%E6%9C%89%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2795.%20%E5%B9%B6%E8%A1%8C%E6%89%A7%E8%A1%8C%20Promise%20%E4%BB%A5%E8%8E%B7%E5%8F%96%E7%8B%AC%E6%9C%89%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2796. 重复字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2796.%20%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2796.%20%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1 - 循环拼接](https://tdahuyou.github.io/TNotes.leetcode/notes/2796.%20%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1---循环拼接)\\n  - [3. 🎯 Solutions.2 - 分治法，递归拼接](https://tdahuyou.github.io/TNotes.leetcode/notes/2796.%20%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2---分治法递归拼接)\\n  - [4. 📒 双百提交](https://tdahuyou.github.io/TNotes.leetcode/notes/2796.%20%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--双百提交)\\n- [ ] [2797. 带有占位符的部分函数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2797.%20%E5%B8%A6%E6%9C%89%E5%8D%A0%E4%BD%8D%E7%AC%A6%E7%9A%84%E9%83%A8%E5%88%86%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2797.%20%E5%B8%A6%E6%9C%89%E5%8D%A0%E4%BD%8D%E7%AC%A6%E7%9A%84%E9%83%A8%E5%88%86%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2797.%20%E5%B8%A6%E6%9C%89%E5%8D%A0%E4%BD%8D%E7%AC%A6%E7%9A%84%E9%83%A8%E5%88%86%E5%87%BD%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2798. 满足目标工作时长的员工数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2798.%20%E6%BB%A1%E8%B6%B3%E7%9B%AE%E6%A0%87%E5%B7%A5%E4%BD%9C%E6%97%B6%E9%95%BF%E7%9A%84%E5%91%98%E5%B7%A5%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2798.%20%E6%BB%A1%E8%B6%B3%E7%9B%AE%E6%A0%87%E5%B7%A5%E4%BD%9C%E6%97%B6%E9%95%BF%E7%9A%84%E5%91%98%E5%B7%A5%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2799. 统计完全子数组的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2799.%20%E7%BB%9F%E8%AE%A1%E5%AE%8C%E5%85%A8%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2799.%20%E7%BB%9F%E8%AE%A1%E5%AE%8C%E5%85%A8%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2800. 包含三个字符串的最短字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2800.%20%E5%8C%85%E5%90%AB%E4%B8%89%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2800.%20%E5%8C%85%E5%90%AB%E4%B8%89%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 30. 2801~2900\\n\\n- [ ] [2801. 统计范围内的步进数字数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2801.%20%E7%BB%9F%E8%AE%A1%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%AD%A5%E8%BF%9B%E6%95%B0%E5%AD%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2801.%20%E7%BB%9F%E8%AE%A1%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E6%AD%A5%E8%BF%9B%E6%95%B0%E5%AD%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2802. 找出第 K 个幸运数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2802.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E4%B8%AA%E5%B9%B8%E8%BF%90%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2802.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E4%B8%AA%E5%B9%B8%E8%BF%90%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2803. 阶乘生成器【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2803.%20%E9%98%B6%E4%B9%98%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2803.%20%E9%98%B6%E4%B9%98%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2803.%20%E9%98%B6%E4%B9%98%E7%94%9F%E6%88%90%E5%99%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2804. 数组原型的 forEach 方法【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2804.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E7%9A%84%20forEach%20%E6%96%B9%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 🔗 links](https://tdahuyou.github.io/TNotes.leetcode/notes/2804.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E7%9A%84%20forEach%20%E6%96%B9%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--links)\\n  - [2. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2804.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E7%9A%84%20forEach%20%E6%96%B9%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--description)\\n  - [3. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2804.%20%E6%95%B0%E7%BB%84%E5%8E%9F%E5%9E%8B%E7%9A%84%20forEach%20%E6%96%B9%E6%B3%95%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions1)\\n  - [leetcode](https://leetcode.cn/problems/array-prototype-foreach/)\\n- [ ] [2805. 自定义间隔【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2805.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%97%B4%E9%9A%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2805.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%97%B4%E9%9A%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2805.%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%97%B4%E9%9A%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2806. 取整购买后的账户余额【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2806.%20%E5%8F%96%E6%95%B4%E8%B4%AD%E4%B9%B0%E5%90%8E%E7%9A%84%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2806.%20%E5%8F%96%E6%95%B4%E8%B4%AD%E4%B9%B0%E5%90%8E%E7%9A%84%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2806.%20%E5%8F%96%E6%95%B4%E8%B4%AD%E4%B9%B0%E5%90%8E%E7%9A%84%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n  - [3. 🎯 Solutions.2](https://tdahuyou.github.io/TNotes.leetcode/notes/2806.%20%E5%8F%96%E6%95%B4%E8%B4%AD%E4%B9%B0%E5%90%8E%E7%9A%84%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#3--solutions2)\\n  - [4. 🎯 Solutions.3](https://tdahuyou.github.io/TNotes.leetcode/notes/2806.%20%E5%8F%96%E6%95%B4%E8%B4%AD%E4%B9%B0%E5%90%8E%E7%9A%84%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#4--solutions3)\\n  - [5. 🫧 评价](https://tdahuyou.github.io/TNotes.leetcode/notes/2806.%20%E5%8F%96%E6%95%B4%E8%B4%AD%E4%B9%B0%E5%90%8E%E7%9A%84%E8%B4%A6%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#5--评价)\\n- [ ] [2807. 在链表中插入最大公约数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2807.%20%E5%9C%A8%E9%93%BE%E8%A1%A8%E4%B8%AD%E6%8F%92%E5%85%A5%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2807.%20%E5%9C%A8%E9%93%BE%E8%A1%A8%E4%B8%AD%E6%8F%92%E5%85%A5%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2808. 使循环数组所有元素相等的最少秒数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2808.%20%E4%BD%BF%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%92%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2808.%20%E4%BD%BF%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%92%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2809. 使数组和小于等于 x 的最少时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2809.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20x%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2809.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20x%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2810. 故障键盘【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2810.%20%E6%95%85%E9%9A%9C%E9%94%AE%E7%9B%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2810.%20%E6%95%85%E9%9A%9C%E9%94%AE%E7%9B%98%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2811. 判断是否能拆分数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2811.%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E8%83%BD%E6%8B%86%E5%88%86%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2811.%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E8%83%BD%E6%8B%86%E5%88%86%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2812. 找出最安全路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2812.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%AE%89%E5%85%A8%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2812.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%AE%89%E5%85%A8%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2813. 子序列最大优雅度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2813.%20%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E4%BC%98%E9%9B%85%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2813.%20%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E4%BC%98%E9%9B%85%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2814. 避免淹死并到达目的地的最短时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2814.%20%E9%81%BF%E5%85%8D%E6%B7%B9%E6%AD%BB%E5%B9%B6%E5%88%B0%E8%BE%BE%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2814.%20%E9%81%BF%E5%85%8D%E6%B7%B9%E6%AD%BB%E5%B9%B6%E5%88%B0%E8%BE%BE%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2815. 数组中的最大数对和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2815.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2815.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AF%B9%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2816. 翻倍以链表形式表示的数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2816.%20%E7%BF%BB%E5%80%8D%E4%BB%A5%E9%93%BE%E8%A1%A8%E5%BD%A2%E5%BC%8F%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2816.%20%E7%BF%BB%E5%80%8D%E4%BB%A5%E9%93%BE%E8%A1%A8%E5%BD%A2%E5%BC%8F%E8%A1%A8%E7%A4%BA%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2817. 限制条件下元素之间的最小绝对差【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2817.%20%E9%99%90%E5%88%B6%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2817.%20%E9%99%90%E5%88%B6%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2818. 操作使得分最大【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2818.%20%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%BE%97%E5%88%86%E6%9C%80%E5%A4%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2818.%20%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%BE%97%E5%88%86%E6%9C%80%E5%A4%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2819. 购买巧克力后的最小相对损失【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2819.%20%E8%B4%AD%E4%B9%B0%E5%B7%A7%E5%85%8B%E5%8A%9B%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9B%B8%E5%AF%B9%E6%8D%9F%E5%A4%B1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2819.%20%E8%B4%AD%E4%B9%B0%E5%B7%A7%E5%85%8B%E5%8A%9B%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9B%B8%E5%AF%B9%E6%8D%9F%E5%A4%B1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2820. 选举结果【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2820.%20%E9%80%89%E4%B8%BE%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2820.%20%E9%80%89%E4%B8%BE%E7%BB%93%E6%9E%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2821. 延迟每个 Promise 对象的解析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2821.%20%E5%BB%B6%E8%BF%9F%E6%AF%8F%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A7%A3%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2821.%20%E5%BB%B6%E8%BF%9F%E6%AF%8F%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A7%A3%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2821.%20%E5%BB%B6%E8%BF%9F%E6%AF%8F%E4%B8%AA%20Promise%20%E5%AF%B9%E8%B1%A1%E7%9A%84%E8%A7%A3%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2822. 对象反转【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2822.%20%E5%AF%B9%E8%B1%A1%E5%8F%8D%E8%BD%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2822.%20%E5%AF%B9%E8%B1%A1%E5%8F%8D%E8%BD%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2822.%20%E5%AF%B9%E8%B1%A1%E5%8F%8D%E8%BD%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#2--solutions1)\\n- [ ] [2823. 深度对象筛选【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2823.%20%E6%B7%B1%E5%BA%A6%E5%AF%B9%E8%B1%A1%E7%AD%9B%E9%80%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/2823.%20%E6%B7%B1%E5%BA%A6%E5%AF%B9%E8%B1%A1%E7%AD%9B%E9%80%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--description)\\n  - [2. 🎯 Solutions.1](https://tdahuyou.github.io/TNotes.leetcode/notes/2823.%20%E6%B7%B1%E5%BA%A6%E5%AF%B9%E8%B1%A1%E7%AD%9B%E9%80%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#2--solutions1)\\n- [ ] [2824. 统计和小于目标的下标对数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2824.%20%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2824.%20%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2825. 循环增长使字符串子序列等于另一个字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2825.%20%E5%BE%AA%E7%8E%AF%E5%A2%9E%E9%95%BF%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%90%E5%BA%8F%E5%88%97%E7%AD%89%E4%BA%8E%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2825.%20%E5%BE%AA%E7%8E%AF%E5%A2%9E%E9%95%BF%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%90%E5%BA%8F%E5%88%97%E7%AD%89%E4%BA%8E%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2826. 将三个组排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2826.%20%E5%B0%86%E4%B8%89%E4%B8%AA%E7%BB%84%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2826.%20%E5%B0%86%E4%B8%89%E4%B8%AA%E7%BB%84%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2827. 范围中美丽整数的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2827.%20%E8%8C%83%E5%9B%B4%E4%B8%AD%E7%BE%8E%E4%B8%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2827.%20%E8%8C%83%E5%9B%B4%E4%B8%AD%E7%BE%8E%E4%B8%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2828. 判别首字母缩略词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2828.%20%E5%88%A4%E5%88%AB%E9%A6%96%E5%AD%97%E6%AF%8D%E7%BC%A9%E7%95%A5%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2828.%20%E5%88%A4%E5%88%AB%E9%A6%96%E5%AD%97%E6%AF%8D%E7%BC%A9%E7%95%A5%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2829. k-avoiding 数组的最小总和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2829.%20k-avoiding%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2829.%20k-avoiding%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2830. 销售利润最大化【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2830.%20%E9%94%80%E5%94%AE%E5%88%A9%E6%B6%A6%E6%9C%80%E5%A4%A7%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2830.%20%E9%94%80%E5%94%AE%E5%88%A9%E6%B6%A6%E6%9C%80%E5%A4%A7%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2831. 找出最长等值子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2831.%20%E6%89%BE%E5%87%BA%E6%9C%80%E9%95%BF%E7%AD%89%E5%80%BC%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2831.%20%E6%89%BE%E5%87%BA%E6%9C%80%E9%95%BF%E7%AD%89%E5%80%BC%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2832. 每个元素为最大值的最大范围【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2832.%20%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E4%B8%BA%E6%9C%80%E5%A4%A7%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E8%8C%83%E5%9B%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2832.%20%E6%AF%8F%E4%B8%AA%E5%85%83%E7%B4%A0%E4%B8%BA%E6%9C%80%E5%A4%A7%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E8%8C%83%E5%9B%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2833. 距离原点最远的点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2833.%20%E8%B7%9D%E7%A6%BB%E5%8E%9F%E7%82%B9%E6%9C%80%E8%BF%9C%E7%9A%84%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2833.%20%E8%B7%9D%E7%A6%BB%E5%8E%9F%E7%82%B9%E6%9C%80%E8%BF%9C%E7%9A%84%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2834. 找出美丽数组的最小和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2834.%20%E6%89%BE%E5%87%BA%E7%BE%8E%E4%B8%BD%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2834.%20%E6%89%BE%E5%87%BA%E7%BE%8E%E4%B8%BD%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2835. 使子序列的和等于目标的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2835.%20%E4%BD%BF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%92%8C%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2835.%20%E4%BD%BF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%92%8C%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2836. 在传球游戏中最大化函数值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2836.%20%E5%9C%A8%E4%BC%A0%E7%90%83%E6%B8%B8%E6%88%8F%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%8C%96%E5%87%BD%E6%95%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2836.%20%E5%9C%A8%E4%BC%A0%E7%90%83%E6%B8%B8%E6%88%8F%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%8C%96%E5%87%BD%E6%95%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2837. 总旅行距离【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2837.%20%E6%80%BB%E6%97%85%E8%A1%8C%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2837.%20%E6%80%BB%E6%97%85%E8%A1%8C%E8%B7%9D%E7%A6%BB%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2838. 英雄可以获得的最大金币数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2838.%20%E8%8B%B1%E9%9B%84%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%87%91%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2838.%20%E8%8B%B1%E9%9B%84%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%87%91%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2839. 判断通过操作能否让字符串相等 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2839.%20%E5%88%A4%E6%96%AD%E9%80%9A%E8%BF%87%E6%93%8D%E4%BD%9C%E8%83%BD%E5%90%A6%E8%AE%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2839.%20%E5%88%A4%E6%96%AD%E9%80%9A%E8%BF%87%E6%93%8D%E4%BD%9C%E8%83%BD%E5%90%A6%E8%AE%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2840. 判断通过操作能否让字符串相等 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2840.%20%E5%88%A4%E6%96%AD%E9%80%9A%E8%BF%87%E6%93%8D%E4%BD%9C%E8%83%BD%E5%90%A6%E8%AE%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2840.%20%E5%88%A4%E6%96%AD%E9%80%9A%E8%BF%87%E6%93%8D%E4%BD%9C%E8%83%BD%E5%90%A6%E8%AE%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2841. 几乎唯一子数组的最大和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2841.%20%E5%87%A0%E4%B9%8E%E5%94%AF%E4%B8%80%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2841.%20%E5%87%A0%E4%B9%8E%E5%94%AF%E4%B8%80%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2842. 统计一个字符串的 k 子序列美丽值最大的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2842.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%20k%20%E5%AD%90%E5%BA%8F%E5%88%97%E7%BE%8E%E4%B8%BD%E5%80%BC%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2842.%20%E7%BB%9F%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%20k%20%E5%AD%90%E5%BA%8F%E5%88%97%E7%BE%8E%E4%B8%BD%E5%80%BC%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2843. 统计对称整数的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2843.%20%E7%BB%9F%E8%AE%A1%E5%AF%B9%E7%A7%B0%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2843.%20%E7%BB%9F%E8%AE%A1%E5%AF%B9%E7%A7%B0%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2844. 生成特殊数字的最少操作【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2844.%20%E7%94%9F%E6%88%90%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2844.%20%E7%94%9F%E6%88%90%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2845. 统计趣味子数组的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2845.%20%E7%BB%9F%E8%AE%A1%E8%B6%A3%E5%91%B3%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2845.%20%E7%BB%9F%E8%AE%A1%E8%B6%A3%E5%91%B3%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2846. 边权重均等查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2846.%20%E8%BE%B9%E6%9D%83%E9%87%8D%E5%9D%87%E7%AD%89%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2846.%20%E8%BE%B9%E6%9D%83%E9%87%8D%E5%9D%87%E7%AD%89%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2847. 给定数字乘积的最小数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2847.%20%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E4%B9%98%E7%A7%AF%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2847.%20%E7%BB%99%E5%AE%9A%E6%95%B0%E5%AD%97%E4%B9%98%E7%A7%AF%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2848. 与车相交的点【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2848.%20%E4%B8%8E%E8%BD%A6%E7%9B%B8%E4%BA%A4%E7%9A%84%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2848.%20%E4%B8%8E%E8%BD%A6%E7%9B%B8%E4%BA%A4%E7%9A%84%E7%82%B9%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2849. 判断能否在给定时间到达单元格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2849.%20%E5%88%A4%E6%96%AD%E8%83%BD%E5%90%A6%E5%9C%A8%E7%BB%99%E5%AE%9A%E6%97%B6%E9%97%B4%E5%88%B0%E8%BE%BE%E5%8D%95%E5%85%83%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2849.%20%E5%88%A4%E6%96%AD%E8%83%BD%E5%90%A6%E5%9C%A8%E7%BB%99%E5%AE%9A%E6%97%B6%E9%97%B4%E5%88%B0%E8%BE%BE%E5%8D%95%E5%85%83%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2850. 将石头分散到网格图的最少移动次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2850.%20%E5%B0%86%E7%9F%B3%E5%A4%B4%E5%88%86%E6%95%A3%E5%88%B0%E7%BD%91%E6%A0%BC%E5%9B%BE%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2850.%20%E5%B0%86%E7%9F%B3%E5%A4%B4%E5%88%86%E6%95%A3%E5%88%B0%E7%BD%91%E6%A0%BC%E5%9B%BE%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2851. 字符串转换【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2851.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2851.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2852. 所有单元格的远离程度之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2852.%20%E6%89%80%E6%9C%89%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E8%BF%9C%E7%A6%BB%E7%A8%8B%E5%BA%A6%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2852.%20%E6%89%80%E6%9C%89%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E8%BF%9C%E7%A6%BB%E7%A8%8B%E5%BA%A6%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2853. 最高薪水差异【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2853.%20%E6%9C%80%E9%AB%98%E8%96%AA%E6%B0%B4%E5%B7%AE%E5%BC%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2853.%20%E6%9C%80%E9%AB%98%E8%96%AA%E6%B0%B4%E5%B7%AE%E5%BC%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2854. 滚动平均步数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2854.%20%E6%BB%9A%E5%8A%A8%E5%B9%B3%E5%9D%87%E6%AD%A5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2854.%20%E6%BB%9A%E5%8A%A8%E5%B9%B3%E5%9D%87%E6%AD%A5%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2855. 使数组成为递增数组的最少右移次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2855.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%88%90%E4%B8%BA%E9%80%92%E5%A2%9E%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%B3%E7%A7%BB%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2855.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%88%90%E4%B8%BA%E9%80%92%E5%A2%9E%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E5%8F%B3%E7%A7%BB%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2856. 删除数对后的最小数组长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2856.%20%E5%88%A0%E9%99%A4%E6%95%B0%E5%AF%B9%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2856.%20%E5%88%A0%E9%99%A4%E6%95%B0%E5%AF%B9%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2857. 统计距离为 k 的点对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2857.%20%E7%BB%9F%E8%AE%A1%E8%B7%9D%E7%A6%BB%E4%B8%BA%20k%20%E7%9A%84%E7%82%B9%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2857.%20%E7%BB%9F%E8%AE%A1%E8%B7%9D%E7%A6%BB%E4%B8%BA%20k%20%E7%9A%84%E7%82%B9%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2858. 可以到达每一个节点的最少边反转次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2858.%20%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E6%AF%8F%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E8%BE%B9%E5%8F%8D%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2858.%20%E5%8F%AF%E4%BB%A5%E5%88%B0%E8%BE%BE%E6%AF%8F%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E8%BE%B9%E5%8F%8D%E8%BD%AC%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2859. 计算 K 置位下标对应元素的和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2859.%20%E8%AE%A1%E7%AE%97%20K%20%E7%BD%AE%E4%BD%8D%E4%B8%8B%E6%A0%87%E5%AF%B9%E5%BA%94%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2859.%20%E8%AE%A1%E7%AE%97%20K%20%E7%BD%AE%E4%BD%8D%E4%B8%8B%E6%A0%87%E5%AF%B9%E5%BA%94%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2860. 让所有学生保持开心的分组方法数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2860.%20%E8%AE%A9%E6%89%80%E6%9C%89%E5%AD%A6%E7%94%9F%E4%BF%9D%E6%8C%81%E5%BC%80%E5%BF%83%E7%9A%84%E5%88%86%E7%BB%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2860.%20%E8%AE%A9%E6%89%80%E6%9C%89%E5%AD%A6%E7%94%9F%E4%BF%9D%E6%8C%81%E5%BC%80%E5%BF%83%E7%9A%84%E5%88%86%E7%BB%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2861. 最大合金数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2861.%20%E6%9C%80%E5%A4%A7%E5%90%88%E9%87%91%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2861.%20%E6%9C%80%E5%A4%A7%E5%90%88%E9%87%91%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2862. 完全子集的最大元素和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2862.%20%E5%AE%8C%E5%85%A8%E5%AD%90%E9%9B%86%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2862.%20%E5%AE%8C%E5%85%A8%E5%AD%90%E9%9B%86%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2863. 最长半递减子数组的长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2863.%20%E6%9C%80%E9%95%BF%E5%8D%8A%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2863.%20%E6%9C%80%E9%95%BF%E5%8D%8A%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2864. 最大二进制奇数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2864.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%A5%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2864.%20%E6%9C%80%E5%A4%A7%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%A5%87%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2865. 美丽塔 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2865.%20%E7%BE%8E%E4%B8%BD%E5%A1%94%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2865.%20%E7%BE%8E%E4%B8%BD%E5%A1%94%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2866. 美丽塔 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2866.%20%E7%BE%8E%E4%B8%BD%E5%A1%94%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2866.%20%E7%BE%8E%E4%B8%BD%E5%A1%94%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2867. 统计树中的合法路径数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2867.%20%E7%BB%9F%E8%AE%A1%E6%A0%91%E4%B8%AD%E7%9A%84%E5%90%88%E6%B3%95%E8%B7%AF%E5%BE%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2867.%20%E7%BB%9F%E8%AE%A1%E6%A0%91%E4%B8%AD%E7%9A%84%E5%90%88%E6%B3%95%E8%B7%AF%E5%BE%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2868. 单词游戏【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2868.%20%E5%8D%95%E8%AF%8D%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2868.%20%E5%8D%95%E8%AF%8D%E6%B8%B8%E6%88%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2869. 收集元素的最少操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2869.%20%E6%94%B6%E9%9B%86%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2869.%20%E6%94%B6%E9%9B%86%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2870. 使数组为空的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2870.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%BA%E7%A9%BA%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2870.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%BA%E7%A9%BA%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2871. 将数组分割成最多数目的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2871.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2%E6%88%90%E6%9C%80%E5%A4%9A%E6%95%B0%E7%9B%AE%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2871.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2%E6%88%90%E6%9C%80%E5%A4%9A%E6%95%B0%E7%9B%AE%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2872. 可以被 K 整除连通块的最大数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2872.%20%E5%8F%AF%E4%BB%A5%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E8%BF%9E%E9%80%9A%E5%9D%97%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2872.%20%E5%8F%AF%E4%BB%A5%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E8%BF%9E%E9%80%9A%E5%9D%97%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2873. 有序三元组中的最大值 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2873.%20%E6%9C%89%E5%BA%8F%E4%B8%89%E5%85%83%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2873.%20%E6%9C%89%E5%BA%8F%E4%B8%89%E5%85%83%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2874. 有序三元组中的最大值 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2874.%20%E6%9C%89%E5%BA%8F%E4%B8%89%E5%85%83%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2874.%20%E6%9C%89%E5%BA%8F%E4%B8%89%E5%85%83%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2875. 无限数组的最短子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2875.%20%E6%97%A0%E9%99%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2875.%20%E6%97%A0%E9%99%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2876. 有向图访问计数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2876.%20%E6%9C%89%E5%90%91%E5%9B%BE%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2876.%20%E6%9C%89%E5%90%91%E5%9B%BE%E8%AE%BF%E9%97%AE%E8%AE%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2877. 从表中创建 DataFrame【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2877.%20%E4%BB%8E%E8%A1%A8%E4%B8%AD%E5%88%9B%E5%BB%BA%20DataFrame%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2877.%20%E4%BB%8E%E8%A1%A8%E4%B8%AD%E5%88%9B%E5%BB%BA%20DataFrame%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2878. 获取 DataFrame 的大小【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2878.%20%E8%8E%B7%E5%8F%96%20DataFrame%20%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2878.%20%E8%8E%B7%E5%8F%96%20DataFrame%20%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2879. 显示前三行【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2879.%20%E6%98%BE%E7%A4%BA%E5%89%8D%E4%B8%89%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2879.%20%E6%98%BE%E7%A4%BA%E5%89%8D%E4%B8%89%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2880. 数据选取【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2880.%20%E6%95%B0%E6%8D%AE%E9%80%89%E5%8F%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2880.%20%E6%95%B0%E6%8D%AE%E9%80%89%E5%8F%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2881. 创建新列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2881.%20%E5%88%9B%E5%BB%BA%E6%96%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2881.%20%E5%88%9B%E5%BB%BA%E6%96%B0%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2882. 删去重复的行【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2882.%20%E5%88%A0%E5%8E%BB%E9%87%8D%E5%A4%8D%E7%9A%84%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2882.%20%E5%88%A0%E5%8E%BB%E9%87%8D%E5%A4%8D%E7%9A%84%E8%A1%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2883. 删去丢失的数据【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2883.%20%E5%88%A0%E5%8E%BB%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2883.%20%E5%88%A0%E5%8E%BB%E4%B8%A2%E5%A4%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2884. 修改列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2884.%20%E4%BF%AE%E6%94%B9%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2884.%20%E4%BF%AE%E6%94%B9%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2885. 重命名列【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2885.%20%E9%87%8D%E5%91%BD%E5%90%8D%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2885.%20%E9%87%8D%E5%91%BD%E5%90%8D%E5%88%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2886. 改变数据类型【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2886.%20%E6%94%B9%E5%8F%98%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2886.%20%E6%94%B9%E5%8F%98%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2887. 填充缺失值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2887.%20%E5%A1%AB%E5%85%85%E7%BC%BA%E5%A4%B1%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2887.%20%E5%A1%AB%E5%85%85%E7%BC%BA%E5%A4%B1%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2888. 重塑数据：连结【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2888.%20%E9%87%8D%E5%A1%91%E6%95%B0%E6%8D%AE%EF%BC%9A%E8%BF%9E%E7%BB%93%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2888.%20%E9%87%8D%E5%A1%91%E6%95%B0%E6%8D%AE%EF%BC%9A%E8%BF%9E%E7%BB%93%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2889. 数据重塑：透视【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2889.%20%E6%95%B0%E6%8D%AE%E9%87%8D%E5%A1%91%EF%BC%9A%E9%80%8F%E8%A7%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2889.%20%E6%95%B0%E6%8D%AE%E9%87%8D%E5%A1%91%EF%BC%9A%E9%80%8F%E8%A7%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2890. 重塑数据：融合【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2890.%20%E9%87%8D%E5%A1%91%E6%95%B0%E6%8D%AE%EF%BC%9A%E8%9E%8D%E5%90%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2890.%20%E9%87%8D%E5%A1%91%E6%95%B0%E6%8D%AE%EF%BC%9A%E8%9E%8D%E5%90%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2891. 方法链【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2891.%20%E6%96%B9%E6%B3%95%E9%93%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2891.%20%E6%96%B9%E6%B3%95%E9%93%BE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2892. 将相邻元素相乘后得到最小化数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2892.%20%E5%B0%86%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9B%B8%E4%B9%98%E5%90%8E%E5%BE%97%E5%88%B0%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2892.%20%E5%B0%86%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9B%B8%E4%B9%98%E5%90%8E%E5%BE%97%E5%88%B0%E6%9C%80%E5%B0%8F%E5%8C%96%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2893. 计算每个区间内的订单【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2893.%20%E8%AE%A1%E7%AE%97%E6%AF%8F%E4%B8%AA%E5%8C%BA%E9%97%B4%E5%86%85%E7%9A%84%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2893.%20%E8%AE%A1%E7%AE%97%E6%AF%8F%E4%B8%AA%E5%8C%BA%E9%97%B4%E5%86%85%E7%9A%84%E8%AE%A2%E5%8D%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2894. 分类求和并作差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2894.%20%E5%88%86%E7%B1%BB%E6%B1%82%E5%92%8C%E5%B9%B6%E4%BD%9C%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2894.%20%E5%88%86%E7%B1%BB%E6%B1%82%E5%92%8C%E5%B9%B6%E4%BD%9C%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2895. 最小处理时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2895.%20%E6%9C%80%E5%B0%8F%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2895.%20%E6%9C%80%E5%B0%8F%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2896. 执行操作使两个字符串相等【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2896.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2896.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2897. 对数组执行操作使平方和最大【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2897.%20%E5%AF%B9%E6%95%B0%E7%BB%84%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%B9%B3%E6%96%B9%E5%92%8C%E6%9C%80%E5%A4%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2897.%20%E5%AF%B9%E6%95%B0%E7%BB%84%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%B9%B3%E6%96%B9%E5%92%8C%E6%9C%80%E5%A4%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2898. 最大线性股票得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2898.%20%E6%9C%80%E5%A4%A7%E7%BA%BF%E6%80%A7%E8%82%A1%E7%A5%A8%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2898.%20%E6%9C%80%E5%A4%A7%E7%BA%BF%E6%80%A7%E8%82%A1%E7%A5%A8%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2899. 上一个遍历的整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2899.%20%E4%B8%8A%E4%B8%80%E4%B8%AA%E9%81%8D%E5%8E%86%E7%9A%84%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2899.%20%E4%B8%8A%E4%B8%80%E4%B8%AA%E9%81%8D%E5%8E%86%E7%9A%84%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2900. 最长相邻不相等子序列 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2900.%20%E6%9C%80%E9%95%BF%E7%9B%B8%E9%82%BB%E4%B8%8D%E7%9B%B8%E7%AD%89%E5%AD%90%E5%BA%8F%E5%88%97%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2900.%20%E6%9C%80%E9%95%BF%E7%9B%B8%E9%82%BB%E4%B8%8D%E7%9B%B8%E7%AD%89%E5%AD%90%E5%BA%8F%E5%88%97%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 31. 2901~3000\\n\\n- [ ] [2901. 最长相邻不相等子序列 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2901.%20%E6%9C%80%E9%95%BF%E7%9B%B8%E9%82%BB%E4%B8%8D%E7%9B%B8%E7%AD%89%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2901.%20%E6%9C%80%E9%95%BF%E7%9B%B8%E9%82%BB%E4%B8%8D%E7%9B%B8%E7%AD%89%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2902. 和带限制的子多重集合的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2902.%20%E5%92%8C%E5%B8%A6%E9%99%90%E5%88%B6%E7%9A%84%E5%AD%90%E5%A4%9A%E9%87%8D%E9%9B%86%E5%90%88%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2902.%20%E5%92%8C%E5%B8%A6%E9%99%90%E5%88%B6%E7%9A%84%E5%AD%90%E5%A4%9A%E9%87%8D%E9%9B%86%E5%90%88%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2903. 找出满足差值条件的下标 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2903.%20%E6%89%BE%E5%87%BA%E6%BB%A1%E8%B6%B3%E5%B7%AE%E5%80%BC%E6%9D%A1%E4%BB%B6%E7%9A%84%E4%B8%8B%E6%A0%87%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2903.%20%E6%89%BE%E5%87%BA%E6%BB%A1%E8%B6%B3%E5%B7%AE%E5%80%BC%E6%9D%A1%E4%BB%B6%E7%9A%84%E4%B8%8B%E6%A0%87%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2904. 最短且字典序最小的美丽子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2904.%20%E6%9C%80%E7%9F%AD%E4%B8%94%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2904.%20%E6%9C%80%E7%9F%AD%E4%B8%94%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2905. 找出满足差值条件的下标 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2905.%20%E6%89%BE%E5%87%BA%E6%BB%A1%E8%B6%B3%E5%B7%AE%E5%80%BC%E6%9D%A1%E4%BB%B6%E7%9A%84%E4%B8%8B%E6%A0%87%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2905.%20%E6%89%BE%E5%87%BA%E6%BB%A1%E8%B6%B3%E5%B7%AE%E5%80%BC%E6%9D%A1%E4%BB%B6%E7%9A%84%E4%B8%8B%E6%A0%87%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2906. 构造乘积矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2906.%20%E6%9E%84%E9%80%A0%E4%B9%98%E7%A7%AF%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2906.%20%E6%9E%84%E9%80%A0%E4%B9%98%E7%A7%AF%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2907. 价格递增的最大利润三元组 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2907.%20%E4%BB%B7%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E4%B8%89%E5%85%83%E7%BB%84%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2907.%20%E4%BB%B7%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E4%B8%89%E5%85%83%E7%BB%84%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2908. 元素和最小的山形三元组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2908.%20%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84%E5%B1%B1%E5%BD%A2%E4%B8%89%E5%85%83%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2908.%20%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84%E5%B1%B1%E5%BD%A2%E4%B8%89%E5%85%83%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2909. 元素和最小的山形三元组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2909.%20%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84%E5%B1%B1%E5%BD%A2%E4%B8%89%E5%85%83%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2909.%20%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%B0%8F%E7%9A%84%E5%B1%B1%E5%BD%A2%E4%B8%89%E5%85%83%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2910. 合法分组的最少组数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2910.%20%E5%90%88%E6%B3%95%E5%88%86%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2910.%20%E5%90%88%E6%B3%95%E5%88%86%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%91%E7%BB%84%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2911. 得到 K 个半回文串的最少修改次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2911.%20%E5%BE%97%E5%88%B0%20K%20%E4%B8%AA%E5%8D%8A%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E4%BF%AE%E6%94%B9%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2911.%20%E5%BE%97%E5%88%B0%20K%20%E4%B8%AA%E5%8D%8A%E5%9B%9E%E6%96%87%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%91%E4%BF%AE%E6%94%B9%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2912. 在网格上移动到目的地的方法数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2912.%20%E5%9C%A8%E7%BD%91%E6%A0%BC%E4%B8%8A%E7%A7%BB%E5%8A%A8%E5%88%B0%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2912.%20%E5%9C%A8%E7%BD%91%E6%A0%BC%E4%B8%8A%E7%A7%BB%E5%8A%A8%E5%88%B0%E7%9B%AE%E7%9A%84%E5%9C%B0%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2913. 子数组不同元素数目的平方和 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2913.%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E7%9A%84%E5%B9%B3%E6%96%B9%E5%92%8C%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2913.%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E7%9A%84%E5%B9%B3%E6%96%B9%E5%92%8C%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2914. 使二进制字符串变美丽的最少修改次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2914.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E7%BE%8E%E4%B8%BD%E7%9A%84%E6%9C%80%E5%B0%91%E4%BF%AE%E6%94%B9%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2914.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E7%BE%8E%E4%B8%BD%E7%9A%84%E6%9C%80%E5%B0%91%E4%BF%AE%E6%94%B9%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2915. 和为目标值的最长子序列的长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2915.%20%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2915.%20%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2916. 子数组不同元素数目的平方和 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2916.%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E7%9A%84%E5%B9%B3%E6%96%B9%E5%92%8C%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2916.%20%E5%AD%90%E6%95%B0%E7%BB%84%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E7%9A%84%E5%B9%B3%E6%96%B9%E5%92%8C%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2917. 找出数组中的 K-or 值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2917.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%20K-or%20%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2917.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%20K-or%20%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2918. 数组的最小相等和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2918.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9B%B8%E7%AD%89%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2918.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9B%B8%E7%AD%89%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2919. 使数组变美的最小增量运算数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2919.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8F%98%E7%BE%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A2%9E%E9%87%8F%E8%BF%90%E7%AE%97%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2919.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8F%98%E7%BE%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A2%9E%E9%87%8F%E8%BF%90%E7%AE%97%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2920. 收集所有金币可获得的最大积分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2920.%20%E6%94%B6%E9%9B%86%E6%89%80%E6%9C%89%E9%87%91%E5%B8%81%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%A7%AF%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2920.%20%E6%94%B6%E9%9B%86%E6%89%80%E6%9C%89%E9%87%91%E5%B8%81%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E7%A7%AF%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2921. 价格递增的最大利润三元组 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2921.%20%E4%BB%B7%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E4%B8%89%E5%85%83%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2921.%20%E4%BB%B7%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E4%B8%89%E5%85%83%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2922. 市场分析 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2922.%20%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2922.%20%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2923. 找到冠军 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2923.%20%E6%89%BE%E5%88%B0%E5%86%A0%E5%86%9B%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2923.%20%E6%89%BE%E5%88%B0%E5%86%A0%E5%86%9B%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2924. 找到冠军 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2924.%20%E6%89%BE%E5%88%B0%E5%86%A0%E5%86%9B%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2924.%20%E6%89%BE%E5%88%B0%E5%86%A0%E5%86%9B%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2925. 在树上执行操作以后得到的最大分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2925.%20%E5%9C%A8%E6%A0%91%E4%B8%8A%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%90%8E%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2925.%20%E5%9C%A8%E6%A0%91%E4%B8%8A%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%90%8E%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2926. 平衡子序列的最大和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2926.%20%E5%B9%B3%E8%A1%A1%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2926.%20%E5%B9%B3%E8%A1%A1%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2927. 给小朋友们分糖果 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2927.%20%E7%BB%99%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC%E5%88%86%E7%B3%96%E6%9E%9C%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2927.%20%E7%BB%99%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC%E5%88%86%E7%B3%96%E6%9E%9C%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2928. 给小朋友们分糖果 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2928.%20%E7%BB%99%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC%E5%88%86%E7%B3%96%E6%9E%9C%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2928.%20%E7%BB%99%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC%E5%88%86%E7%B3%96%E6%9E%9C%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2929. 给小朋友们分糖果 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2929.%20%E7%BB%99%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC%E5%88%86%E7%B3%96%E6%9E%9C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2929.%20%E7%BB%99%E5%B0%8F%E6%9C%8B%E5%8F%8B%E4%BB%AC%E5%88%86%E7%B3%96%E6%9E%9C%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2930. 重新排列后包含指定子字符串的字符串数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2930.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E5%8C%85%E5%90%AB%E6%8C%87%E5%AE%9A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2930.%20%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E5%8C%85%E5%90%AB%E6%8C%87%E5%AE%9A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2931. 购买物品的最大开销【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2931.%20%E8%B4%AD%E4%B9%B0%E7%89%A9%E5%93%81%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%80%E9%94%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2931.%20%E8%B4%AD%E4%B9%B0%E7%89%A9%E5%93%81%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%80%E9%94%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2932. 找出强数对的最大异或值 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2932.%20%E6%89%BE%E5%87%BA%E5%BC%BA%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2932.%20%E6%89%BE%E5%87%BA%E5%BC%BA%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2933. 高访问员工【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2933.%20%E9%AB%98%E8%AE%BF%E9%97%AE%E5%91%98%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2933.%20%E9%AB%98%E8%AE%BF%E9%97%AE%E5%91%98%E5%B7%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2934. 最大化数组末位元素的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2934.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E6%9C%AB%E4%BD%8D%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2934.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E6%9C%AB%E4%BD%8D%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2935. 找出强数对的最大异或值 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2935.%20%E6%89%BE%E5%87%BA%E5%BC%BA%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2935.%20%E6%89%BE%E5%87%BA%E5%BC%BA%E6%95%B0%E5%AF%B9%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2936. 包含相等值数字块的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2936.%20%E5%8C%85%E5%90%AB%E7%9B%B8%E7%AD%89%E5%80%BC%E6%95%B0%E5%AD%97%E5%9D%97%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2936.%20%E5%8C%85%E5%90%AB%E7%9B%B8%E7%AD%89%E5%80%BC%E6%95%B0%E5%AD%97%E5%9D%97%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2937. 使三个字符串相等【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2937.%20%E4%BD%BF%E4%B8%89%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2937.%20%E4%BD%BF%E4%B8%89%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E7%AD%89%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2938. 区分黑球与白球【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2938.%20%E5%8C%BA%E5%88%86%E9%BB%91%E7%90%83%E4%B8%8E%E7%99%BD%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2938.%20%E5%8C%BA%E5%88%86%E9%BB%91%E7%90%83%E4%B8%8E%E7%99%BD%E7%90%83%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2939. 最大异或乘积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2939.%20%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2939.%20%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E4%B9%98%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2940. 找到 Alice 和 Bob 可以相遇的建筑【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2940.%20%E6%89%BE%E5%88%B0%20Alice%20%E5%92%8C%20Bob%20%E5%8F%AF%E4%BB%A5%E7%9B%B8%E9%81%87%E7%9A%84%E5%BB%BA%E7%AD%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2940.%20%E6%89%BE%E5%88%B0%20Alice%20%E5%92%8C%20Bob%20%E5%8F%AF%E4%BB%A5%E7%9B%B8%E9%81%87%E7%9A%84%E5%BB%BA%E7%AD%91%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2941. 子数组的最大 GCD-Sum【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2941.%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%20GCD-Sum%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2941.%20%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%20GCD-Sum%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2942. 查找包含给定字符的单词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2942.%20%E6%9F%A5%E6%89%BE%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E5%AD%97%E7%AC%A6%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2942.%20%E6%9F%A5%E6%89%BE%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E5%AD%97%E7%AC%A6%E7%9A%84%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2943. 最大化网格图中正方形空洞的面积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2943.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%A9%BA%E6%B4%9E%E7%9A%84%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2943.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E7%BD%91%E6%A0%BC%E5%9B%BE%E4%B8%AD%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%A9%BA%E6%B4%9E%E7%9A%84%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2944. 购买水果需要的最少金币数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2944.%20%E8%B4%AD%E4%B9%B0%E6%B0%B4%E6%9E%9C%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E9%87%91%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2944.%20%E8%B4%AD%E4%B9%B0%E6%B0%B4%E6%9E%9C%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E9%87%91%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2945. 找到最大非递减数组的长度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2945.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2945.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E7%BB%84%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2946. 循环移位后的矩阵相似检查【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2946.%20%E5%BE%AA%E7%8E%AF%E7%A7%BB%E4%BD%8D%E5%90%8E%E7%9A%84%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%BC%BC%E6%A3%80%E6%9F%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2946.%20%E5%BE%AA%E7%8E%AF%E7%A7%BB%E4%BD%8D%E5%90%8E%E7%9A%84%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%BC%BC%E6%A3%80%E6%9F%A5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2947. 统计美丽子字符串 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2947.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2947.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2948. 交换得到字典序最小的数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2948.%20%E4%BA%A4%E6%8D%A2%E5%BE%97%E5%88%B0%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2948.%20%E4%BA%A4%E6%8D%A2%E5%BE%97%E5%88%B0%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2949. 统计美丽子字符串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2949.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2949.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2950. 可整除子串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2950.%20%E5%8F%AF%E6%95%B4%E9%99%A4%E5%AD%90%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2950.%20%E5%8F%AF%E6%95%B4%E9%99%A4%E5%AD%90%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2951. 找出峰值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2951.%20%E6%89%BE%E5%87%BA%E5%B3%B0%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2951.%20%E6%89%BE%E5%87%BA%E5%B3%B0%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2952. 需要添加的硬币的最小数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2952.%20%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E7%A1%AC%E5%B8%81%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2952.%20%E9%9C%80%E8%A6%81%E6%B7%BB%E5%8A%A0%E7%9A%84%E7%A1%AC%E5%B8%81%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2953. 统计完全子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2953.%20%E7%BB%9F%E8%AE%A1%E5%AE%8C%E5%85%A8%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2953.%20%E7%BB%9F%E8%AE%A1%E5%AE%8C%E5%85%A8%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2954. 统计感冒序列的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2954.%20%E7%BB%9F%E8%AE%A1%E6%84%9F%E5%86%92%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2954.%20%E7%BB%9F%E8%AE%A1%E6%84%9F%E5%86%92%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2955. 同端子串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2955.%20%E5%90%8C%E7%AB%AF%E5%AD%90%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2955.%20%E5%90%8C%E7%AB%AF%E5%AD%90%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2956. 找到两个数组中的公共元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2956.%20%E6%89%BE%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%AC%E5%85%B1%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2956.%20%E6%89%BE%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%AC%E5%85%B1%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2957. 消除相邻近似相等字符【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2957.%20%E6%B6%88%E9%99%A4%E7%9B%B8%E9%82%BB%E8%BF%91%E4%BC%BC%E7%9B%B8%E7%AD%89%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2957.%20%E6%B6%88%E9%99%A4%E7%9B%B8%E9%82%BB%E8%BF%91%E4%BC%BC%E7%9B%B8%E7%AD%89%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2958. 最多 K 个重复元素的最长子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2958.%20%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2958.%20%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2959. 关闭分部的可行集合数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2959.%20%E5%85%B3%E9%97%AD%E5%88%86%E9%83%A8%E7%9A%84%E5%8F%AF%E8%A1%8C%E9%9B%86%E5%90%88%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2959.%20%E5%85%B3%E9%97%AD%E5%88%86%E9%83%A8%E7%9A%84%E5%8F%AF%E8%A1%8C%E9%9B%86%E5%90%88%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2960. 统计已测试设备【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2960.%20%E7%BB%9F%E8%AE%A1%E5%B7%B2%E6%B5%8B%E8%AF%95%E8%AE%BE%E5%A4%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2960.%20%E7%BB%9F%E8%AE%A1%E5%B7%B2%E6%B5%8B%E8%AF%95%E8%AE%BE%E5%A4%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2961. 双模幂运算【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2961.%20%E5%8F%8C%E6%A8%A1%E5%B9%82%E8%BF%90%E7%AE%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2961.%20%E5%8F%8C%E6%A8%A1%E5%B9%82%E8%BF%90%E7%AE%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2962. 统计最大元素出现至少 K 次的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2962.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%87%BA%E7%8E%B0%E8%87%B3%E5%B0%91%20K%20%E6%AC%A1%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2962.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%87%BA%E7%8E%B0%E8%87%B3%E5%B0%91%20K%20%E6%AC%A1%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2963. 统计好分割方案的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2963.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E5%88%86%E5%89%B2%E6%96%B9%E6%A1%88%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2963.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E5%88%86%E5%89%B2%E6%96%B9%E6%A1%88%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2964. 可被整除的三元组数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2964.%20%E5%8F%AF%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2964.%20%E5%8F%AF%E8%A2%AB%E6%95%B4%E9%99%A4%E7%9A%84%E4%B8%89%E5%85%83%E7%BB%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2965. 找出缺失和重复的数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2965.%20%E6%89%BE%E5%87%BA%E7%BC%BA%E5%A4%B1%E5%92%8C%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2965.%20%E6%89%BE%E5%87%BA%E7%BC%BA%E5%A4%B1%E5%92%8C%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2966. 划分数组并满足最大差限制【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2966.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E5%B9%B6%E6%BB%A1%E8%B6%B3%E6%9C%80%E5%A4%A7%E5%B7%AE%E9%99%90%E5%88%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2966.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E5%B9%B6%E6%BB%A1%E8%B6%B3%E6%9C%80%E5%A4%A7%E5%B7%AE%E9%99%90%E5%88%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2967. 使数组成为等数数组的最小代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2967.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%88%90%E4%B8%BA%E7%AD%89%E6%95%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2967.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E6%88%90%E4%B8%BA%E7%AD%89%E6%95%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2968. 执行操作使频率分数最大【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2968.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E9%A2%91%E7%8E%87%E5%88%86%E6%95%B0%E6%9C%80%E5%A4%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2968.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E9%A2%91%E7%8E%87%E5%88%86%E6%95%B0%E6%9C%80%E5%A4%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2969. 购买水果需要的最少金币数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2969.%20%E8%B4%AD%E4%B9%B0%E6%B0%B4%E6%9E%9C%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E9%87%91%E5%B8%81%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2969.%20%E8%B4%AD%E4%B9%B0%E6%B0%B4%E6%9E%9C%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E9%87%91%E5%B8%81%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2970. 统计移除递增子数组的数目 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2970.%20%E7%BB%9F%E8%AE%A1%E7%A7%BB%E9%99%A4%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2970.%20%E7%BB%9F%E8%AE%A1%E7%A7%BB%E9%99%A4%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2971. 找到最大周长的多边形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2971.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E5%91%A8%E9%95%BF%E7%9A%84%E5%A4%9A%E8%BE%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2971.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%A4%A7%E5%91%A8%E9%95%BF%E7%9A%84%E5%A4%9A%E8%BE%B9%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2972. 统计移除递增子数组的数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2972.%20%E7%BB%9F%E8%AE%A1%E7%A7%BB%E9%99%A4%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2972.%20%E7%BB%9F%E8%AE%A1%E7%A7%BB%E9%99%A4%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2973. 树中每个节点放置的金币数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2973.%20%E6%A0%91%E4%B8%AD%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E6%94%BE%E7%BD%AE%E7%9A%84%E9%87%91%E5%B8%81%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2973.%20%E6%A0%91%E4%B8%AD%E6%AF%8F%E4%B8%AA%E8%8A%82%E7%82%B9%E6%94%BE%E7%BD%AE%E7%9A%84%E9%87%91%E5%B8%81%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2974. 最小数字游戏【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2974.%20%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2974.%20%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2975. 移除栅栏得到的正方形田地的最大面积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2975.%20%E7%A7%BB%E9%99%A4%E6%A0%85%E6%A0%8F%E5%BE%97%E5%88%B0%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%94%B0%E5%9C%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2975.%20%E7%A7%BB%E9%99%A4%E6%A0%85%E6%A0%8F%E5%BE%97%E5%88%B0%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E7%94%B0%E5%9C%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2976. 转换字符串的最小成本 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2976.%20%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2976.%20%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2977. 转换字符串的最小成本 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2977.%20%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2977.%20%E8%BD%AC%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2978. 对称坐标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2978.%20%E5%AF%B9%E7%A7%B0%E5%9D%90%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2978.%20%E5%AF%B9%E7%A7%B0%E5%9D%90%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2979. 最贵的无法购买的商品【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2979.%20%E6%9C%80%E8%B4%B5%E7%9A%84%E6%97%A0%E6%B3%95%E8%B4%AD%E4%B9%B0%E7%9A%84%E5%95%86%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2979.%20%E6%9C%80%E8%B4%B5%E7%9A%84%E6%97%A0%E6%B3%95%E8%B4%AD%E4%B9%B0%E7%9A%84%E5%95%86%E5%93%81%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2980. 检查按位或是否存在尾随零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2980.%20%E6%A3%80%E6%9F%A5%E6%8C%89%E4%BD%8D%E6%88%96%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%B0%BE%E9%9A%8F%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2980.%20%E6%A3%80%E6%9F%A5%E6%8C%89%E4%BD%8D%E6%88%96%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%B0%BE%E9%9A%8F%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2981. 找出出现至少三次的最长特殊子字符串 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2981.%20%E6%89%BE%E5%87%BA%E5%87%BA%E7%8E%B0%E8%87%B3%E5%B0%91%E4%B8%89%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2981.%20%E6%89%BE%E5%87%BA%E5%87%BA%E7%8E%B0%E8%87%B3%E5%B0%91%E4%B8%89%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2982. 找出出现至少三次的最长特殊子字符串 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2982.%20%E6%89%BE%E5%87%BA%E5%87%BA%E7%8E%B0%E8%87%B3%E5%B0%91%E4%B8%89%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2982.%20%E6%89%BE%E5%87%BA%E5%87%BA%E7%8E%B0%E8%87%B3%E5%B0%91%E4%B8%89%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2983. 回文串重新排列查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2983.%20%E5%9B%9E%E6%96%87%E4%B8%B2%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2983.%20%E5%9B%9E%E6%96%87%E4%B8%B2%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2984. 找到每座城市的高峰通话时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2984.%20%E6%89%BE%E5%88%B0%E6%AF%8F%E5%BA%A7%E5%9F%8E%E5%B8%82%E7%9A%84%E9%AB%98%E5%B3%B0%E9%80%9A%E8%AF%9D%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2984.%20%E6%89%BE%E5%88%B0%E6%AF%8F%E5%BA%A7%E5%9F%8E%E5%B8%82%E7%9A%84%E9%AB%98%E5%B3%B0%E9%80%9A%E8%AF%9D%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2985. 计算订单平均商品数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2985.%20%E8%AE%A1%E7%AE%97%E8%AE%A2%E5%8D%95%E5%B9%B3%E5%9D%87%E5%95%86%E5%93%81%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2985.%20%E8%AE%A1%E7%AE%97%E8%AE%A2%E5%8D%95%E5%B9%B3%E5%9D%87%E5%95%86%E5%93%81%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2986. 找到第三笔交易【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2986.%20%E6%89%BE%E5%88%B0%E7%AC%AC%E4%B8%89%E7%AC%94%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2986.%20%E6%89%BE%E5%88%B0%E7%AC%AC%E4%B8%89%E7%AC%94%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2987. 寻找房价最贵的城市【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2987.%20%E5%AF%BB%E6%89%BE%E6%88%BF%E4%BB%B7%E6%9C%80%E8%B4%B5%E7%9A%84%E5%9F%8E%E5%B8%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2987.%20%E5%AF%BB%E6%89%BE%E6%88%BF%E4%BB%B7%E6%9C%80%E8%B4%B5%E7%9A%84%E5%9F%8E%E5%B8%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2988. 最大部门的经理【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2988.%20%E6%9C%80%E5%A4%A7%E9%83%A8%E9%97%A8%E7%9A%84%E7%BB%8F%E7%90%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2988.%20%E6%9C%80%E5%A4%A7%E9%83%A8%E9%97%A8%E7%9A%84%E7%BB%8F%E7%90%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2989. 班级表现【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2989.%20%E7%8F%AD%E7%BA%A7%E8%A1%A8%E7%8E%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2989.%20%E7%8F%AD%E7%BA%A7%E8%A1%A8%E7%8E%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2990. 贷款类型【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2990.%20%E8%B4%B7%E6%AC%BE%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2990.%20%E8%B4%B7%E6%AC%BE%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2991. 最好的三家酒庄【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2991.%20%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%89%E5%AE%B6%E9%85%92%E5%BA%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2991.%20%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%89%E5%AE%B6%E9%85%92%E5%BA%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2992. 自整除排列的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2992.%20%E8%87%AA%E6%95%B4%E9%99%A4%E6%8E%92%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2992.%20%E8%87%AA%E6%95%B4%E9%99%A4%E6%8E%92%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2993. 发生在周五的交易 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2993.%20%E5%8F%91%E7%94%9F%E5%9C%A8%E5%91%A8%E4%BA%94%E7%9A%84%E4%BA%A4%E6%98%93%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2993.%20%E5%8F%91%E7%94%9F%E5%9C%A8%E5%91%A8%E4%BA%94%E7%9A%84%E4%BA%A4%E6%98%93%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2994. 发生在周五的交易 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2994.%20%E5%8F%91%E7%94%9F%E5%9C%A8%E5%91%A8%E4%BA%94%E7%9A%84%E4%BA%A4%E6%98%93%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2994.%20%E5%8F%91%E7%94%9F%E5%9C%A8%E5%91%A8%E4%BA%94%E7%9A%84%E4%BA%A4%E6%98%93%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2995. 观众变主播【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2995.%20%E8%A7%82%E4%BC%97%E5%8F%98%E4%B8%BB%E6%92%AD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2995.%20%E8%A7%82%E4%BC%97%E5%8F%98%E4%B8%BB%E6%92%AD%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [2996. 大于等于顺序前缀和的最小缺失整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/2996.%20%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E9%A1%BA%E5%BA%8F%E5%89%8D%E7%BC%80%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BC%BA%E5%A4%B1%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2996.%20%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%E9%A1%BA%E5%BA%8F%E5%89%8D%E7%BC%80%E5%92%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BC%BA%E5%A4%B1%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [2997. 使数组异或和等于 K 的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2997.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E5%92%8C%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2997.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%BC%82%E6%88%96%E5%92%8C%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2998. 使 X 和 Y 相等的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/2998.%20%E4%BD%BF%20X%20%E5%92%8C%20Y%20%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2998.%20%E4%BD%BF%20X%20%E5%92%8C%20Y%20%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [2999. 统计强大整数的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/2999.%20%E7%BB%9F%E8%AE%A1%E5%BC%BA%E5%A4%A7%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/2999.%20%E7%BB%9F%E8%AE%A1%E5%BC%BA%E5%A4%A7%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3000. 对角线最长的矩形的面积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3000.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E6%9C%80%E9%95%BF%E7%9A%84%E7%9F%A9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3000.%20%E5%AF%B9%E8%A7%92%E7%BA%BF%E6%9C%80%E9%95%BF%E7%9A%84%E7%9F%A9%E5%BD%A2%E7%9A%84%E9%9D%A2%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 32. 3001~3100\\n\\n- [ ] [3001. 捕获黑皇后需要的最少移动次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3001.%20%E6%8D%95%E8%8E%B7%E9%BB%91%E7%9A%87%E5%90%8E%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3001.%20%E6%8D%95%E8%8E%B7%E9%BB%91%E7%9A%87%E5%90%8E%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3002. 移除后集合的最多元素数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3002.%20%E7%A7%BB%E9%99%A4%E5%90%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%9C%80%E5%A4%9A%E5%85%83%E7%B4%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3002.%20%E7%A7%BB%E9%99%A4%E5%90%8E%E9%9B%86%E5%90%88%E7%9A%84%E6%9C%80%E5%A4%9A%E5%85%83%E7%B4%A0%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3003. 执行操作后的最大分割数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3003.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E5%89%B2%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3003.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E5%89%B2%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3004. 相同颜色的最大子树【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3004.%20%E7%9B%B8%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3004.%20%E7%9B%B8%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%A0%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3005. 最大频率元素计数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3005.%20%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E5%85%83%E7%B4%A0%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3005.%20%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E5%85%83%E7%B4%A0%E8%AE%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3006. 找出数组中的美丽下标 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3006.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BE%8E%E4%B8%BD%E4%B8%8B%E6%A0%87%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3006.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BE%8E%E4%B8%BD%E4%B8%8B%E6%A0%87%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3007. 价值和小于等于 K 的最大数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3007.%20%E4%BB%B7%E5%80%BC%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3007.%20%E4%BB%B7%E5%80%BC%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3008. 找出数组中的美丽下标 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3008.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BE%8E%E4%B8%BD%E4%B8%8B%E6%A0%87%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3008.%20%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BE%8E%E4%B8%BD%E4%B8%8B%E6%A0%87%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3009. 折线图上的最大交点数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3009.%20%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%A4%E7%82%B9%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3009.%20%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BA%A4%E7%82%B9%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3010. 将数组分成最小总代价的子数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3010.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E6%9C%80%E5%B0%8F%E6%80%BB%E4%BB%A3%E4%BB%B7%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3010.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E6%9C%80%E5%B0%8F%E6%80%BB%E4%BB%A3%E4%BB%B7%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3011. 判断一个数组是否可以变为有序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3011.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%8F%98%E4%B8%BA%E6%9C%89%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3011.%20%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%8F%98%E4%B8%BA%E6%9C%89%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3012. 通过操作使数组长度最小【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3012.%20%E9%80%9A%E8%BF%87%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3012.%20%E9%80%9A%E8%BF%87%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3013. 将数组分成最小总代价的子数组 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3013.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E6%9C%80%E5%B0%8F%E6%80%BB%E4%BB%A3%E4%BB%B7%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3013.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E6%88%90%E6%9C%80%E5%B0%8F%E6%80%BB%E4%BB%A3%E4%BB%B7%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3014. 输入单词需要的最少按键次数 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3014.%20%E8%BE%93%E5%85%A5%E5%8D%95%E8%AF%8D%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%8C%89%E9%94%AE%E6%AC%A1%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3014.%20%E8%BE%93%E5%85%A5%E5%8D%95%E8%AF%8D%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%8C%89%E9%94%AE%E6%AC%A1%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3015. 按距离统计房屋对数目 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3015.%20%E6%8C%89%E8%B7%9D%E7%A6%BB%E7%BB%9F%E8%AE%A1%E6%88%BF%E5%B1%8B%E5%AF%B9%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3015.%20%E6%8C%89%E8%B7%9D%E7%A6%BB%E7%BB%9F%E8%AE%A1%E6%88%BF%E5%B1%8B%E5%AF%B9%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3016. 输入单词需要的最少按键次数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3016.%20%E8%BE%93%E5%85%A5%E5%8D%95%E8%AF%8D%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%8C%89%E9%94%AE%E6%AC%A1%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3016.%20%E8%BE%93%E5%85%A5%E5%8D%95%E8%AF%8D%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%8C%89%E9%94%AE%E6%AC%A1%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3017. 按距离统计房屋对数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3017.%20%E6%8C%89%E8%B7%9D%E7%A6%BB%E7%BB%9F%E8%AE%A1%E6%88%BF%E5%B1%8B%E5%AF%B9%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3017.%20%E6%8C%89%E8%B7%9D%E7%A6%BB%E7%BB%9F%E8%AE%A1%E6%88%BF%E5%B1%8B%E5%AF%B9%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3018. 可处理的最大删除操作数 I【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3018.%20%E5%8F%AF%E5%A4%84%E7%90%86%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E6%95%B0%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3018.%20%E5%8F%AF%E5%A4%84%E7%90%86%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E6%95%B0%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3019. 按键变更的次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3019.%20%E6%8C%89%E9%94%AE%E5%8F%98%E6%9B%B4%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3019.%20%E6%8C%89%E9%94%AE%E5%8F%98%E6%9B%B4%E7%9A%84%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3020. 子集中元素的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3020.%20%E5%AD%90%E9%9B%86%E4%B8%AD%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3020.%20%E5%AD%90%E9%9B%86%E4%B8%AD%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3021. Alice 和 Bob 玩鲜花游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3021.%20Alice%20%E5%92%8C%20Bob%20%E7%8E%A9%E9%B2%9C%E8%8A%B1%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3021.%20Alice%20%E5%92%8C%20Bob%20%E7%8E%A9%E9%B2%9C%E8%8A%B1%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3022. 给定操作次数内使剩余元素的或值最小【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3022.%20%E7%BB%99%E5%AE%9A%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E5%86%85%E4%BD%BF%E5%89%A9%E4%BD%99%E5%85%83%E7%B4%A0%E7%9A%84%E6%88%96%E5%80%BC%E6%9C%80%E5%B0%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3022.%20%E7%BB%99%E5%AE%9A%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E5%86%85%E4%BD%BF%E5%89%A9%E4%BD%99%E5%85%83%E7%B4%A0%E7%9A%84%E6%88%96%E5%80%BC%E6%9C%80%E5%B0%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3023. 在无限流中寻找模式 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3023.%20%E5%9C%A8%E6%97%A0%E9%99%90%E6%B5%81%E4%B8%AD%E5%AF%BB%E6%89%BE%E6%A8%A1%E5%BC%8F%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3023.%20%E5%9C%A8%E6%97%A0%E9%99%90%E6%B5%81%E4%B8%AD%E5%AF%BB%E6%89%BE%E6%A8%A1%E5%BC%8F%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3024. 三角形类型【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3024.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3024.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E7%B1%BB%E5%9E%8B%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3025. 人员站位的方案数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3025.%20%E4%BA%BA%E5%91%98%E7%AB%99%E4%BD%8D%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3025.%20%E4%BA%BA%E5%91%98%E7%AB%99%E4%BD%8D%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3026. 最大好子数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3026.%20%E6%9C%80%E5%A4%A7%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3026.%20%E6%9C%80%E5%A4%A7%E5%A5%BD%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3027. 人员站位的方案数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3027.%20%E4%BA%BA%E5%91%98%E7%AB%99%E4%BD%8D%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3027.%20%E4%BA%BA%E5%91%98%E7%AB%99%E4%BD%8D%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3028. 边界上的蚂蚁【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3028.%20%E8%BE%B9%E7%95%8C%E4%B8%8A%E7%9A%84%E8%9A%82%E8%9A%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3028.%20%E8%BE%B9%E7%95%8C%E4%B8%8A%E7%9A%84%E8%9A%82%E8%9A%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3029. 将单词恢复初始状态所需的最短时间 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3029.%20%E5%B0%86%E5%8D%95%E8%AF%8D%E6%81%A2%E5%A4%8D%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3029.%20%E5%B0%86%E5%8D%95%E8%AF%8D%E6%81%A2%E5%A4%8D%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3030. 找出网格的区域平均强度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3030.%20%E6%89%BE%E5%87%BA%E7%BD%91%E6%A0%BC%E7%9A%84%E5%8C%BA%E5%9F%9F%E5%B9%B3%E5%9D%87%E5%BC%BA%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3030.%20%E6%89%BE%E5%87%BA%E7%BD%91%E6%A0%BC%E7%9A%84%E5%8C%BA%E5%9F%9F%E5%B9%B3%E5%9D%87%E5%BC%BA%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3031. 将单词恢复初始状态所需的最短时间 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3031.%20%E5%B0%86%E5%8D%95%E8%AF%8D%E6%81%A2%E5%A4%8D%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3031.%20%E5%B0%86%E5%8D%95%E8%AF%8D%E6%81%A2%E5%A4%8D%E5%88%9D%E5%A7%8B%E7%8A%B6%E6%80%81%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3032. 统计各位数字都不同的数字个数 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3032.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E9%83%BD%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E5%AD%97%E4%B8%AA%E6%95%B0%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3032.%20%E7%BB%9F%E8%AE%A1%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E9%83%BD%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E5%AD%97%E4%B8%AA%E6%95%B0%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3033. 修改矩阵【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3033.%20%E4%BF%AE%E6%94%B9%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3033.%20%E4%BF%AE%E6%94%B9%E7%9F%A9%E9%98%B5%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3034. 匹配模式数组的子数组数目 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3034.%20%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3034.%20%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3035. 回文字符串的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3035.%20%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3035.%20%E5%9B%9E%E6%96%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3036. 匹配模式数组的子数组数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3036.%20%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3036.%20%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E6%95%B0%E7%BB%84%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3037. 在无限流中寻找模式 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3037.%20%E5%9C%A8%E6%97%A0%E9%99%90%E6%B5%81%E4%B8%AD%E5%AF%BB%E6%89%BE%E6%A8%A1%E5%BC%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3037.%20%E5%9C%A8%E6%97%A0%E9%99%90%E6%B5%81%E4%B8%AD%E5%AF%BB%E6%89%BE%E6%A8%A1%E5%BC%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3038. 相同分数的最大操作数目 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3038.%20%E7%9B%B8%E5%90%8C%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%93%8D%E4%BD%9C%E6%95%B0%E7%9B%AE%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3038.%20%E7%9B%B8%E5%90%8C%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%93%8D%E4%BD%9C%E6%95%B0%E7%9B%AE%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3039. 进行操作使字符串为空【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3039.%20%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%BA%E7%A9%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3039.%20%E8%BF%9B%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%BA%E7%A9%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3040. 相同分数的最大操作数目 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3040.%20%E7%9B%B8%E5%90%8C%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%93%8D%E4%BD%9C%E6%95%B0%E7%9B%AE%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3040.%20%E7%9B%B8%E5%90%8C%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%93%8D%E4%BD%9C%E6%95%B0%E7%9B%AE%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3041. 修改数组后最大化数组中的连续元素数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3041.%20%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3041.%20%E4%BF%AE%E6%94%B9%E6%95%B0%E7%BB%84%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E8%BF%9E%E7%BB%AD%E5%85%83%E7%B4%A0%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3042. 统计前后缀下标对 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3042.%20%E7%BB%9F%E8%AE%A1%E5%89%8D%E5%90%8E%E7%BC%80%E4%B8%8B%E6%A0%87%E5%AF%B9%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3042.%20%E7%BB%9F%E8%AE%A1%E5%89%8D%E5%90%8E%E7%BC%80%E4%B8%8B%E6%A0%87%E5%AF%B9%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3043. 最长公共前缀的长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3043.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3043.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3044. 出现频率最高的质数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3044.%20%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3044.%20%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E8%B4%A8%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3045. 统计前后缀下标对 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3045.%20%E7%BB%9F%E8%AE%A1%E5%89%8D%E5%90%8E%E7%BC%80%E4%B8%8B%E6%A0%87%E5%AF%B9%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3045.%20%E7%BB%9F%E8%AE%A1%E5%89%8D%E5%90%8E%E7%BC%80%E4%B8%8B%E6%A0%87%E5%AF%B9%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3046. 分割数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3046.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3046.%20%E5%88%86%E5%89%B2%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3047. 求交集区域内的最大正方形面积【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3047.%20%E6%B1%82%E4%BA%A4%E9%9B%86%E5%8C%BA%E5%9F%9F%E5%86%85%E7%9A%84%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%96%B9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3047.%20%E6%B1%82%E4%BA%A4%E9%9B%86%E5%8C%BA%E5%9F%9F%E5%86%85%E7%9A%84%E6%9C%80%E5%A4%A7%E6%AD%A3%E6%96%B9%E5%BD%A2%E9%9D%A2%E7%A7%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3048. 标记所有下标的最早秒数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3048.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E4%B8%8B%E6%A0%87%E7%9A%84%E6%9C%80%E6%97%A9%E7%A7%92%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3048.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E4%B8%8B%E6%A0%87%E7%9A%84%E6%9C%80%E6%97%A9%E7%A7%92%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3049. 标记所有下标的最早秒数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3049.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E4%B8%8B%E6%A0%87%E7%9A%84%E6%9C%80%E6%97%A9%E7%A7%92%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3049.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E4%B8%8B%E6%A0%87%E7%9A%84%E6%9C%80%E6%97%A9%E7%A7%92%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3050. 披萨配料成本分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3050.%20%E6%8A%AB%E8%90%A8%E9%85%8D%E6%96%99%E6%88%90%E6%9C%AC%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3050.%20%E6%8A%AB%E8%90%A8%E9%85%8D%E6%96%99%E6%88%90%E6%9C%AC%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3051. 寻找数据科学家职位的候选人【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3051.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E8%81%8C%E4%BD%8D%E7%9A%84%E5%80%99%E9%80%89%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3051.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E8%81%8C%E4%BD%8D%E7%9A%84%E5%80%99%E9%80%89%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3052. 最大化商品【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3052.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E5%95%86%E5%93%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3052.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E5%95%86%E5%93%81%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3053. 根据长度分类三角形【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3053.%20%E6%A0%B9%E6%8D%AE%E9%95%BF%E5%BA%A6%E5%88%86%E7%B1%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3053.%20%E6%A0%B9%E6%8D%AE%E9%95%BF%E5%BA%A6%E5%88%86%E7%B1%BB%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3054. 二叉树节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3054.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3054.%20%E4%BA%8C%E5%8F%89%E6%A0%91%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3055. 最高欺诈百分位数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3055.%20%E6%9C%80%E9%AB%98%E6%AC%BA%E8%AF%88%E7%99%BE%E5%88%86%E4%BD%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3055.%20%E6%9C%80%E9%AB%98%E6%AC%BA%E8%AF%88%E7%99%BE%E5%88%86%E4%BD%8D%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3056. 快照分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3056.%20%E5%BF%AB%E7%85%A7%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3056.%20%E5%BF%AB%E7%85%A7%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3057. 员工项目分配【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3057.%20%E5%91%98%E5%B7%A5%E9%A1%B9%E7%9B%AE%E5%88%86%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3057.%20%E5%91%98%E5%B7%A5%E9%A1%B9%E7%9B%AE%E5%88%86%E9%85%8D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3058. 没有共同朋友的朋友【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3058.%20%E6%B2%A1%E6%9C%89%E5%85%B1%E5%90%8C%E6%9C%8B%E5%8F%8B%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3058.%20%E6%B2%A1%E6%9C%89%E5%85%B1%E5%90%8C%E6%9C%8B%E5%8F%8B%E7%9A%84%E6%9C%8B%E5%8F%8B%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3059. 找到所有不同的邮件域名【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3059.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E9%82%AE%E4%BB%B6%E5%9F%9F%E5%90%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3059.%20%E6%89%BE%E5%88%B0%E6%89%80%E6%9C%89%E4%B8%8D%E5%90%8C%E7%9A%84%E9%82%AE%E4%BB%B6%E5%9F%9F%E5%90%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3060. 时间范围内的用户活动【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3060.%20%E6%97%B6%E9%97%B4%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E7%94%A8%E6%88%B7%E6%B4%BB%E5%8A%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3060.%20%E6%97%B6%E9%97%B4%E8%8C%83%E5%9B%B4%E5%86%85%E7%9A%84%E7%94%A8%E6%88%B7%E6%B4%BB%E5%8A%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3061. 计算滞留雨水【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3061.%20%E8%AE%A1%E7%AE%97%E6%BB%9E%E7%95%99%E9%9B%A8%E6%B0%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3061.%20%E8%AE%A1%E7%AE%97%E6%BB%9E%E7%95%99%E9%9B%A8%E6%B0%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3062. 链表游戏的获胜者【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3062.%20%E9%93%BE%E8%A1%A8%E6%B8%B8%E6%88%8F%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3062.%20%E9%93%BE%E8%A1%A8%E6%B8%B8%E6%88%8F%E7%9A%84%E8%8E%B7%E8%83%9C%E8%80%85%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3063. 链表频率【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3063.%20%E9%93%BE%E8%A1%A8%E9%A2%91%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3063.%20%E9%93%BE%E8%A1%A8%E9%A2%91%E7%8E%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3064. 使用按位查询猜测数字 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3064.%20%E4%BD%BF%E7%94%A8%E6%8C%89%E4%BD%8D%E6%9F%A5%E8%AF%A2%E7%8C%9C%E6%B5%8B%E6%95%B0%E5%AD%97%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3064.%20%E4%BD%BF%E7%94%A8%E6%8C%89%E4%BD%8D%E6%9F%A5%E8%AF%A2%E7%8C%9C%E6%B5%8B%E6%95%B0%E5%AD%97%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3065. 超过阈值的最少操作数 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3065.%20%E8%B6%85%E8%BF%87%E9%98%88%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3065.%20%E8%B6%85%E8%BF%87%E9%98%88%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3066. 超过阈值的最少操作数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3066.%20%E8%B6%85%E8%BF%87%E9%98%88%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3066.%20%E8%B6%85%E8%BF%87%E9%98%88%E5%80%BC%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3067. 在带权树网络中统计可连接服务器对数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3067.%20%E5%9C%A8%E5%B8%A6%E6%9D%83%E6%A0%91%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%BB%9F%E8%AE%A1%E5%8F%AF%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3067.%20%E5%9C%A8%E5%B8%A6%E6%9D%83%E6%A0%91%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%BB%9F%E8%AE%A1%E5%8F%AF%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AF%B9%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3068. 最大节点价值之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3068.%20%E6%9C%80%E5%A4%A7%E8%8A%82%E7%82%B9%E4%BB%B7%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3068.%20%E6%9C%80%E5%A4%A7%E8%8A%82%E7%82%B9%E4%BB%B7%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3069. 将元素分配到两个数组中 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3069.%20%E5%B0%86%E5%85%83%E7%B4%A0%E5%88%86%E9%85%8D%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3069.%20%E5%B0%86%E5%85%83%E7%B4%A0%E5%88%86%E9%85%8D%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3070. 元素和小于等于 k 的子矩阵的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3070.%20%E5%85%83%E7%B4%A0%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20k%20%E7%9A%84%E5%AD%90%E7%9F%A9%E9%98%B5%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3070.%20%E5%85%83%E7%B4%A0%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%AD%89%E4%BA%8E%20k%20%E7%9A%84%E5%AD%90%E7%9F%A9%E9%98%B5%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3071. 在矩阵上写出字母 Y 所需的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3071.%20%E5%9C%A8%E7%9F%A9%E9%98%B5%E4%B8%8A%E5%86%99%E5%87%BA%E5%AD%97%E6%AF%8D%20Y%20%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3071.%20%E5%9C%A8%E7%9F%A9%E9%98%B5%E4%B8%8A%E5%86%99%E5%87%BA%E5%AD%97%E6%AF%8D%20Y%20%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3072. 将元素分配到两个数组中 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3072.%20%E5%B0%86%E5%85%83%E7%B4%A0%E5%88%86%E9%85%8D%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3072.%20%E5%B0%86%E5%85%83%E7%B4%A0%E5%88%86%E9%85%8D%E5%88%B0%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E4%B8%AD%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3073. 最大递增三元组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3073.%20%E6%9C%80%E5%A4%A7%E9%80%92%E5%A2%9E%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3073.%20%E6%9C%80%E5%A4%A7%E9%80%92%E5%A2%9E%E4%B8%89%E5%85%83%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3074. 重新分装苹果【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3074.%20%E9%87%8D%E6%96%B0%E5%88%86%E8%A3%85%E8%8B%B9%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3074.%20%E9%87%8D%E6%96%B0%E5%88%86%E8%A3%85%E8%8B%B9%E6%9E%9C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3075. 幸福值最大化的选择方案【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3075.%20%E5%B9%B8%E7%A6%8F%E5%80%BC%E6%9C%80%E5%A4%A7%E5%8C%96%E7%9A%84%E9%80%89%E6%8B%A9%E6%96%B9%E6%A1%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3075.%20%E5%B9%B8%E7%A6%8F%E5%80%BC%E6%9C%80%E5%A4%A7%E5%8C%96%E7%9A%84%E9%80%89%E6%8B%A9%E6%96%B9%E6%A1%88%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3076. 数组中的最短非公共子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3076.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E9%9D%9E%E5%85%AC%E5%85%B1%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3076.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E9%9D%9E%E5%85%AC%E5%85%B1%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3077. K 个不相交子数组的最大能量值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3077.%20K%20%E4%B8%AA%E4%B8%8D%E7%9B%B8%E4%BA%A4%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E8%83%BD%E9%87%8F%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3077.%20K%20%E4%B8%AA%E4%B8%8D%E7%9B%B8%E4%BA%A4%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E8%83%BD%E9%87%8F%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3078. 矩阵中的字母数字模式匹配 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3078.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3078.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3079. 求出加密整数的和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3079.%20%E6%B1%82%E5%87%BA%E5%8A%A0%E5%AF%86%E6%95%B4%E6%95%B0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3079.%20%E6%B1%82%E5%87%BA%E5%8A%A0%E5%AF%86%E6%95%B4%E6%95%B0%E7%9A%84%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3080. 执行操作标记数组中的元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3080.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E6%A0%87%E8%AE%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3080.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E6%A0%87%E8%AE%B0%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3081. 替换字符串中的问号使分数最小【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3081.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E9%97%AE%E5%8F%B7%E4%BD%BF%E5%88%86%E6%95%B0%E6%9C%80%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3081.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E9%97%AE%E5%8F%B7%E4%BD%BF%E5%88%86%E6%95%B0%E6%9C%80%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3082. 求出所有子序列的能量和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3082.%20%E6%B1%82%E5%87%BA%E6%89%80%E6%9C%89%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E8%83%BD%E9%87%8F%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3082.%20%E6%B1%82%E5%87%BA%E6%89%80%E6%9C%89%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E8%83%BD%E9%87%8F%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3083. 字符串及其反转中是否存在同一子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3083.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8A%E5%85%B6%E5%8F%8D%E8%BD%AC%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%90%8C%E4%B8%80%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3083.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8A%E5%85%B6%E5%8F%8D%E8%BD%AC%E4%B8%AD%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8%E5%90%8C%E4%B8%80%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3084. 统计以给定字符开头和结尾的子字符串总数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3084.%20%E7%BB%9F%E8%AE%A1%E4%BB%A5%E7%BB%99%E5%AE%9A%E5%AD%97%E7%AC%A6%E5%BC%80%E5%A4%B4%E5%92%8C%E7%BB%93%E5%B0%BE%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3084.%20%E7%BB%9F%E8%AE%A1%E4%BB%A5%E7%BB%99%E5%AE%9A%E5%AD%97%E7%AC%A6%E5%BC%80%E5%A4%B4%E5%92%8C%E7%BB%93%E5%B0%BE%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3085. 成为 K 特殊字符串需要删除的最少字符数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3085.%20%E6%88%90%E4%B8%BA%20K%20%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E5%88%A0%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3085.%20%E6%88%90%E4%B8%BA%20K%20%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E5%88%A0%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3086. 拾起 K 个 1 需要的最少行动次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3086.%20%E6%8B%BE%E8%B5%B7%20K%20%E4%B8%AA%201%20%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E8%A1%8C%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3086.%20%E6%8B%BE%E8%B5%B7%20K%20%E4%B8%AA%201%20%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E8%A1%8C%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3087. 查找热门话题标签【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3087.%20%E6%9F%A5%E6%89%BE%E7%83%AD%E9%97%A8%E8%AF%9D%E9%A2%98%E6%A0%87%E7%AD%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3087.%20%E6%9F%A5%E6%89%BE%E7%83%AD%E9%97%A8%E8%AF%9D%E9%A2%98%E6%A0%87%E7%AD%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3088. 使字符串反回文【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3088.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E5%9B%9E%E6%96%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3088.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%8D%E5%9B%9E%E6%96%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3089. 查找突发行为【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3089.%20%E6%9F%A5%E6%89%BE%E7%AA%81%E5%8F%91%E8%A1%8C%E4%B8%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3089.%20%E6%9F%A5%E6%89%BE%E7%AA%81%E5%8F%91%E8%A1%8C%E4%B8%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3090. 每个字符最多出现两次的最长子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3090.%20%E6%AF%8F%E4%B8%AA%E5%AD%97%E7%AC%A6%E6%9C%80%E5%A4%9A%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3090.%20%E6%AF%8F%E4%B8%AA%E5%AD%97%E7%AC%A6%E6%9C%80%E5%A4%9A%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3091. 执行操作使数据元素之和大于等于 K【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3091.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0%E4%B9%8B%E5%92%8C%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%20K%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3091.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E4%BD%BF%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0%E4%B9%8B%E5%92%8C%E5%A4%A7%E4%BA%8E%E7%AD%89%E4%BA%8E%20K%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3092. 最高频率的 ID【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3092.%20%E6%9C%80%E9%AB%98%E9%A2%91%E7%8E%87%E7%9A%84%20ID%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3092.%20%E6%9C%80%E9%AB%98%E9%A2%91%E7%8E%87%E7%9A%84%20ID%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3093. 最长公共后缀查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3093.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%90%8E%E7%BC%80%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3093.%20%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%90%8E%E7%BC%80%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3094. 使用按位查询猜测数字 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3094.%20%E4%BD%BF%E7%94%A8%E6%8C%89%E4%BD%8D%E6%9F%A5%E8%AF%A2%E7%8C%9C%E6%B5%8B%E6%95%B0%E5%AD%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3094.%20%E4%BD%BF%E7%94%A8%E6%8C%89%E4%BD%8D%E6%9F%A5%E8%AF%A2%E7%8C%9C%E6%B5%8B%E6%95%B0%E5%AD%97%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3095. 或值至少 K 的最短子数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3095.%20%E6%88%96%E5%80%BC%E8%87%B3%E5%B0%91%20K%20%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3095.%20%E6%88%96%E5%80%BC%E8%87%B3%E5%B0%91%20K%20%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3096. 得到更多分数的最少关卡数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3096.%20%E5%BE%97%E5%88%B0%E6%9B%B4%E5%A4%9A%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E5%85%B3%E5%8D%A1%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3096.%20%E5%BE%97%E5%88%B0%E6%9B%B4%E5%A4%9A%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E5%85%B3%E5%8D%A1%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3097. 或值至少为 K 的最短子数组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3097.%20%E6%88%96%E5%80%BC%E8%87%B3%E5%B0%91%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3097.%20%E6%88%96%E5%80%BC%E8%87%B3%E5%B0%91%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3098. 求出所有子序列的能量和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3098.%20%E6%B1%82%E5%87%BA%E6%89%80%E6%9C%89%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E8%83%BD%E9%87%8F%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3098.%20%E6%B1%82%E5%87%BA%E6%89%80%E6%9C%89%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E8%83%BD%E9%87%8F%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3099. 哈沙德数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3099.%20%E5%93%88%E6%B2%99%E5%BE%B7%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3099.%20%E5%93%88%E6%B2%99%E5%BE%B7%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3100. 换水问题 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3100.%20%E6%8D%A2%E6%B0%B4%E9%97%AE%E9%A2%98%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3100.%20%E6%8D%A2%E6%B0%B4%E9%97%AE%E9%A2%98%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 33. 3101~3200\\n\\n- [ ] [3101. 交替子数组计数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3101.%20%E4%BA%A4%E6%9B%BF%E5%AD%90%E6%95%B0%E7%BB%84%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3101.%20%E4%BA%A4%E6%9B%BF%E5%AD%90%E6%95%B0%E7%BB%84%E8%AE%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3102. 最小化曼哈顿距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3102.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3102.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3103. 查找热门话题标签 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3103.%20%E6%9F%A5%E6%89%BE%E7%83%AD%E9%97%A8%E8%AF%9D%E9%A2%98%E6%A0%87%E7%AD%BE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3103.%20%E6%9F%A5%E6%89%BE%E7%83%AD%E9%97%A8%E8%AF%9D%E9%A2%98%E6%A0%87%E7%AD%BE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3104. 查找最长的自包含子串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3104.%20%E6%9F%A5%E6%89%BE%E6%9C%80%E9%95%BF%E7%9A%84%E8%87%AA%E5%8C%85%E5%90%AB%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3104.%20%E6%9F%A5%E6%89%BE%E6%9C%80%E9%95%BF%E7%9A%84%E8%87%AA%E5%8C%85%E5%90%AB%E5%AD%90%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3105. 最长的严格递增或递减子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3105.%20%E6%9C%80%E9%95%BF%E7%9A%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E6%88%96%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3105.%20%E6%9C%80%E9%95%BF%E7%9A%84%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E6%88%96%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3106. 满足距离约束且字典序最小的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3106.%20%E6%BB%A1%E8%B6%B3%E8%B7%9D%E7%A6%BB%E7%BA%A6%E6%9D%9F%E4%B8%94%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3106.%20%E6%BB%A1%E8%B6%B3%E8%B7%9D%E7%A6%BB%E7%BA%A6%E6%9D%9F%E4%B8%94%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3107. 使数组中位数等于 K 的最少操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3107.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3107.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E7%AD%89%E4%BA%8E%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3108. 带权图里旅途的最小代价【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3108.%20%E5%B8%A6%E6%9D%83%E5%9B%BE%E9%87%8C%E6%97%85%E9%80%94%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3108.%20%E5%B8%A6%E6%9D%83%E5%9B%BE%E9%87%8C%E6%97%85%E9%80%94%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3109. 查找排列的下标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3109.%20%E6%9F%A5%E6%89%BE%E6%8E%92%E5%88%97%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3109.%20%E6%9F%A5%E6%89%BE%E6%8E%92%E5%88%97%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3110. 字符串的分数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3110.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3110.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%86%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3111. 覆盖所有点的最少矩形数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3111.%20%E8%A6%86%E7%9B%96%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E7%9F%A9%E5%BD%A2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3111.%20%E8%A6%86%E7%9B%96%E6%89%80%E6%9C%89%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E7%9F%A9%E5%BD%A2%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3112. 访问消失节点的最少时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3112.%20%E8%AE%BF%E9%97%AE%E6%B6%88%E5%A4%B1%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3112.%20%E8%AE%BF%E9%97%AE%E6%B6%88%E5%A4%B1%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3113. 边界元素是最大值的子数组数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3113.%20%E8%BE%B9%E7%95%8C%E5%85%83%E7%B4%A0%E6%98%AF%E6%9C%80%E5%A4%A7%E5%80%BC%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3113.%20%E8%BE%B9%E7%95%8C%E5%85%83%E7%B4%A0%E6%98%AF%E6%9C%80%E5%A4%A7%E5%80%BC%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3114. 替换字符可以得到的最晚时间【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3114.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E6%99%9A%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3114.%20%E6%9B%BF%E6%8D%A2%E5%AD%97%E7%AC%A6%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E6%99%9A%E6%97%B6%E9%97%B4%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3115. 质数的最大距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3115.%20%E8%B4%A8%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3115.%20%E8%B4%A8%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3116. 单面值组合的第 K 小金额【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3116.%20%E5%8D%95%E9%9D%A2%E5%80%BC%E7%BB%84%E5%90%88%E7%9A%84%E7%AC%AC%20K%20%E5%B0%8F%E9%87%91%E9%A2%9D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3116.%20%E5%8D%95%E9%9D%A2%E5%80%BC%E7%BB%84%E5%90%88%E7%9A%84%E7%AC%AC%20K%20%E5%B0%8F%E9%87%91%E9%A2%9D%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3117. 划分数组得到最小的值之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3117.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E5%BE%97%E5%88%B0%E6%9C%80%E5%B0%8F%E7%9A%84%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3117.%20%E5%88%92%E5%88%86%E6%95%B0%E7%BB%84%E5%BE%97%E5%88%B0%E6%9C%80%E5%B0%8F%E7%9A%84%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3118. 发生在周五的交易 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3118.%20%E5%8F%91%E7%94%9F%E5%9C%A8%E5%91%A8%E4%BA%94%E7%9A%84%E4%BA%A4%E6%98%93%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3118.%20%E5%8F%91%E7%94%9F%E5%9C%A8%E5%91%A8%E4%BA%94%E7%9A%84%E4%BA%A4%E6%98%93%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3119. 最大数量的可修复坑洼【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3119.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E7%9A%84%E5%8F%AF%E4%BF%AE%E5%A4%8D%E5%9D%91%E6%B4%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3119.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E7%9A%84%E5%8F%AF%E4%BF%AE%E5%A4%8D%E5%9D%91%E6%B4%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3120. 统计特殊字母的数量 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3120.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%97%E6%AF%8D%E7%9A%84%E6%95%B0%E9%87%8F%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3120.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%97%E6%AF%8D%E7%9A%84%E6%95%B0%E9%87%8F%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3121. 统计特殊字母的数量 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3121.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%97%E6%AF%8D%E7%9A%84%E6%95%B0%E9%87%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3121.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%97%E6%AF%8D%E7%9A%84%E6%95%B0%E9%87%8F%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3122. 使矩阵满足条件的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3122.%20%E4%BD%BF%E7%9F%A9%E9%98%B5%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3122.%20%E4%BD%BF%E7%9F%A9%E9%98%B5%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3123. 最短路径中的边【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3123.%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%9A%84%E8%BE%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3123.%20%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E4%B8%AD%E7%9A%84%E8%BE%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3124. 查找最长的电话【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3124.%20%E6%9F%A5%E6%89%BE%E6%9C%80%E9%95%BF%E7%9A%84%E7%94%B5%E8%AF%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3124.%20%E6%9F%A5%E6%89%BE%E6%9C%80%E9%95%BF%E7%9A%84%E7%94%B5%E8%AF%9D%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3125. 使得按位与结果为 0 的最大数字【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3125.%20%E4%BD%BF%E5%BE%97%E6%8C%89%E4%BD%8D%E4%B8%8E%E7%BB%93%E6%9E%9C%E4%B8%BA%200%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3125.%20%E4%BD%BF%E5%BE%97%E6%8C%89%E4%BD%8D%E4%B8%8E%E7%BB%93%E6%9E%9C%E4%B8%BA%200%20%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%AD%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3126. 服务器利用时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3126.%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%A9%E7%94%A8%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3126.%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%A9%E7%94%A8%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3127. 构造相同颜色的正方形【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3127.%20%E6%9E%84%E9%80%A0%E7%9B%B8%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3127.%20%E6%9E%84%E9%80%A0%E7%9B%B8%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%AD%A3%E6%96%B9%E5%BD%A2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3128. 直角三角形【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3128.%20%E7%9B%B4%E8%A7%92%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3128.%20%E7%9B%B4%E8%A7%92%E4%B8%89%E8%A7%92%E5%BD%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3129. 找出所有稳定的二进制数组 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3129.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E7%A8%B3%E5%AE%9A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3129.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E7%A8%B3%E5%AE%9A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3130. 找出所有稳定的二进制数组 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3130.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E7%A8%B3%E5%AE%9A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3130.%20%E6%89%BE%E5%87%BA%E6%89%80%E6%9C%89%E7%A8%B3%E5%AE%9A%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3131. 找出与数组相加的整数 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3131.%20%E6%89%BE%E5%87%BA%E4%B8%8E%E6%95%B0%E7%BB%84%E7%9B%B8%E5%8A%A0%E7%9A%84%E6%95%B4%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3131.%20%E6%89%BE%E5%87%BA%E4%B8%8E%E6%95%B0%E7%BB%84%E7%9B%B8%E5%8A%A0%E7%9A%84%E6%95%B4%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3132. 找出与数组相加的整数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3132.%20%E6%89%BE%E5%87%BA%E4%B8%8E%E6%95%B0%E7%BB%84%E7%9B%B8%E5%8A%A0%E7%9A%84%E6%95%B4%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3132.%20%E6%89%BE%E5%87%BA%E4%B8%8E%E6%95%B0%E7%BB%84%E7%9B%B8%E5%8A%A0%E7%9A%84%E6%95%B4%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3133. 数组最后一个元素的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3133.%20%E6%95%B0%E7%BB%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3133.%20%E6%95%B0%E7%BB%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3134. 找出唯一性数组的中位数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3134.%20%E6%89%BE%E5%87%BA%E5%94%AF%E4%B8%80%E6%80%A7%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3134.%20%E6%89%BE%E5%87%BA%E5%94%AF%E4%B8%80%E6%80%A7%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3135. 通过添加或删除结尾字符来同化字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3135.%20%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E7%BB%93%E5%B0%BE%E5%AD%97%E7%AC%A6%E6%9D%A5%E5%90%8C%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3135.%20%E9%80%9A%E8%BF%87%E6%B7%BB%E5%8A%A0%E6%88%96%E5%88%A0%E9%99%A4%E7%BB%93%E5%B0%BE%E5%AD%97%E7%AC%A6%E6%9D%A5%E5%90%8C%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3136. 有效单词【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3136.%20%E6%9C%89%E6%95%88%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3136.%20%E6%9C%89%E6%95%88%E5%8D%95%E8%AF%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3137. K 周期字符串需要的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3137.%20K%20%E5%91%A8%E6%9C%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3137.%20K%20%E5%91%A8%E6%9C%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3138. 同位字符串连接的最小长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3138.%20%E5%90%8C%E4%BD%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%9C%80%E5%B0%8F%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3138.%20%E5%90%8C%E4%BD%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E7%9A%84%E6%9C%80%E5%B0%8F%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3139. 使数组中所有元素相等的最小开销【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3139.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3139.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BC%80%E9%94%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3140. 连续空余座位 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3140.%20%E8%BF%9E%E7%BB%AD%E7%A9%BA%E4%BD%99%E5%BA%A7%E4%BD%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3140.%20%E8%BF%9E%E7%BB%AD%E7%A9%BA%E4%BD%99%E5%BA%A7%E4%BD%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3141. 最大汉明距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3141.%20%E6%9C%80%E5%A4%A7%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3141.%20%E6%9C%80%E5%A4%A7%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3142. 判断矩阵是否满足条件【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3142.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5%E6%98%AF%E5%90%A6%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3142.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5%E6%98%AF%E5%90%A6%E6%BB%A1%E8%B6%B3%E6%9D%A1%E4%BB%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3143. 正方形中的最多点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3143.%20%E6%AD%A3%E6%96%B9%E5%BD%A2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%9A%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3143.%20%E6%AD%A3%E6%96%B9%E5%BD%A2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%9A%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3144. 分割字符频率相等的最少子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3144.%20%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E9%A2%91%E7%8E%87%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3144.%20%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E9%A2%91%E7%8E%87%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3145. 大数组元素的乘积【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3145.%20%E5%A4%A7%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3145.%20%E5%A4%A7%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3146. 两个字符串的排列差【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3146.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3146.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E5%B7%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3147. 从魔法师身上吸取的最大能量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3147.%20%E4%BB%8E%E9%AD%94%E6%B3%95%E5%B8%88%E8%BA%AB%E4%B8%8A%E5%90%B8%E5%8F%96%E7%9A%84%E6%9C%80%E5%A4%A7%E8%83%BD%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3147.%20%E4%BB%8E%E9%AD%94%E6%B3%95%E5%B8%88%E8%BA%AB%E4%B8%8A%E5%90%B8%E5%8F%96%E7%9A%84%E6%9C%80%E5%A4%A7%E8%83%BD%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3148. 矩阵中的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3148.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3148.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3149. 找出分数最低的排列【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3149.%20%E6%89%BE%E5%87%BA%E5%88%86%E6%95%B0%E6%9C%80%E4%BD%8E%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3149.%20%E6%89%BE%E5%87%BA%E5%88%86%E6%95%B0%E6%9C%80%E4%BD%8E%E7%9A%84%E6%8E%92%E5%88%97%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3150. 无效的推文 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3150.%20%E6%97%A0%E6%95%88%E7%9A%84%E6%8E%A8%E6%96%87%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3150.%20%E6%97%A0%E6%95%88%E7%9A%84%E6%8E%A8%E6%96%87%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3151. 特殊数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3151.%20%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3151.%20%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3152. 特殊数组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3152.%20%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3152.%20%E7%89%B9%E6%AE%8A%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3153. 所有数对中数位差之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3153.%20%E6%89%80%E6%9C%89%E6%95%B0%E5%AF%B9%E4%B8%AD%E6%95%B0%E4%BD%8D%E5%B7%AE%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3153.%20%E6%89%80%E6%9C%89%E6%95%B0%E5%AF%B9%E4%B8%AD%E6%95%B0%E4%BD%8D%E5%B7%AE%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3154. 到达第 K 级台阶的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3154.%20%E5%88%B0%E8%BE%BE%E7%AC%AC%20K%20%E7%BA%A7%E5%8F%B0%E9%98%B6%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3154.%20%E5%88%B0%E8%BE%BE%E7%AC%AC%20K%20%E7%BA%A7%E5%8F%B0%E9%98%B6%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3155. 可升级服务器的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3155.%20%E5%8F%AF%E5%8D%87%E7%BA%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3155.%20%E5%8F%AF%E5%8D%87%E7%BA%A7%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3156. 员工任务持续时间和并发任务【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3156.%20%E5%91%98%E5%B7%A5%E4%BB%BB%E5%8A%A1%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E5%92%8C%E5%B9%B6%E5%8F%91%E4%BB%BB%E5%8A%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3156.%20%E5%91%98%E5%B7%A5%E4%BB%BB%E5%8A%A1%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E5%92%8C%E5%B9%B6%E5%8F%91%E4%BB%BB%E5%8A%A1%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3157. 找到具有最小和的树的层数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3157.%20%E6%89%BE%E5%88%B0%E5%85%B7%E6%9C%89%E6%9C%80%E5%B0%8F%E5%92%8C%E7%9A%84%E6%A0%91%E7%9A%84%E5%B1%82%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3157.%20%E6%89%BE%E5%88%B0%E5%85%B7%E6%9C%89%E6%9C%80%E5%B0%8F%E5%92%8C%E7%9A%84%E6%A0%91%E7%9A%84%E5%B1%82%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3158. 求出出现两次数字的 XOR 值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3158.%20%E6%B1%82%E5%87%BA%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E6%95%B0%E5%AD%97%E7%9A%84%20XOR%20%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3158.%20%E6%B1%82%E5%87%BA%E5%87%BA%E7%8E%B0%E4%B8%A4%E6%AC%A1%E6%95%B0%E5%AD%97%E7%9A%84%20XOR%20%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3159. 查询数组中元素的出现位置【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3159.%20%E6%9F%A5%E8%AF%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%BA%E7%8E%B0%E4%BD%8D%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3159.%20%E6%9F%A5%E8%AF%A2%E6%95%B0%E7%BB%84%E4%B8%AD%E5%85%83%E7%B4%A0%E7%9A%84%E5%87%BA%E7%8E%B0%E4%BD%8D%E7%BD%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3160. 所有球里面不同颜色的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3160.%20%E6%89%80%E6%9C%89%E7%90%83%E9%87%8C%E9%9D%A2%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3160.%20%E6%89%80%E6%9C%89%E7%90%83%E9%87%8C%E9%9D%A2%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3161. 物块放置查询【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3161.%20%E7%89%A9%E5%9D%97%E6%94%BE%E7%BD%AE%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3161.%20%E7%89%A9%E5%9D%97%E6%94%BE%E7%BD%AE%E6%9F%A5%E8%AF%A2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3162. 优质数对的总数 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3162.%20%E4%BC%98%E8%B4%A8%E6%95%B0%E5%AF%B9%E7%9A%84%E6%80%BB%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3162.%20%E4%BC%98%E8%B4%A8%E6%95%B0%E5%AF%B9%E7%9A%84%E6%80%BB%E6%95%B0%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3163. 压缩字符串 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3163.%20%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3163.%20%E5%8E%8B%E7%BC%A9%E5%AD%97%E7%AC%A6%E4%B8%B2%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3164. 优质数对的总数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3164.%20%E4%BC%98%E8%B4%A8%E6%95%B0%E5%AF%B9%E7%9A%84%E6%80%BB%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3164.%20%E4%BC%98%E8%B4%A8%E6%95%B0%E5%AF%B9%E7%9A%84%E6%80%BB%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3165. 不包含相邻元素的子序列的最大和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3165.%20%E4%B8%8D%E5%8C%85%E5%90%AB%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3165.%20%E4%B8%8D%E5%8C%85%E5%90%AB%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3166. 计算停车费与时长【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3166.%20%E8%AE%A1%E7%AE%97%E5%81%9C%E8%BD%A6%E8%B4%B9%E4%B8%8E%E6%97%B6%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3166.%20%E8%AE%A1%E7%AE%97%E5%81%9C%E8%BD%A6%E8%B4%B9%E4%B8%8E%E6%97%B6%E9%95%BF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3167. 字符串的更好压缩【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3167.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9B%B4%E5%A5%BD%E5%8E%8B%E7%BC%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3167.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9B%B4%E5%A5%BD%E5%8E%8B%E7%BC%A9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3168. 候诊室中的最少椅子数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3168.%20%E5%80%99%E8%AF%8A%E5%AE%A4%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%91%E6%A4%85%E5%AD%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3168.%20%E5%80%99%E8%AF%8A%E5%AE%A4%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%91%E6%A4%85%E5%AD%90%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3169. 无需开会的工作日【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3169.%20%E6%97%A0%E9%9C%80%E5%BC%80%E4%BC%9A%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%97%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3169.%20%E6%97%A0%E9%9C%80%E5%BC%80%E4%BC%9A%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%97%A5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3170. 删除星号以后字典序最小的字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3170.%20%E5%88%A0%E9%99%A4%E6%98%9F%E5%8F%B7%E4%BB%A5%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3170.%20%E5%88%A0%E9%99%A4%E6%98%9F%E5%8F%B7%E4%BB%A5%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3171. 找到按位或最接近 K 的子数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3171.%20%E6%89%BE%E5%88%B0%E6%8C%89%E4%BD%8D%E6%88%96%E6%9C%80%E6%8E%A5%E8%BF%91%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3171.%20%E6%89%BE%E5%88%B0%E6%8C%89%E4%BD%8D%E6%88%96%E6%9C%80%E6%8E%A5%E8%BF%91%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3172. 第二天验证【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3172.%20%E7%AC%AC%E4%BA%8C%E5%A4%A9%E9%AA%8C%E8%AF%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3172.%20%E7%AC%AC%E4%BA%8C%E5%A4%A9%E9%AA%8C%E8%AF%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3173. 相邻元素的按位或【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3173.%20%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%8C%89%E4%BD%8D%E6%88%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3173.%20%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%8C%89%E4%BD%8D%E6%88%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3174. 清除数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3174.%20%E6%B8%85%E9%99%A4%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3174.%20%E6%B8%85%E9%99%A4%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3175. 找到连续赢 K 场比赛的第一位玩家【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3175.%20%E6%89%BE%E5%88%B0%E8%BF%9E%E7%BB%AD%E8%B5%A2%20K%20%E5%9C%BA%E6%AF%94%E8%B5%9B%E7%9A%84%E7%AC%AC%E4%B8%80%E4%BD%8D%E7%8E%A9%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3175.%20%E6%89%BE%E5%88%B0%E8%BF%9E%E7%BB%AD%E8%B5%A2%20K%20%E5%9C%BA%E6%AF%94%E8%B5%9B%E7%9A%84%E7%AC%AC%E4%B8%80%E4%BD%8D%E7%8E%A9%E5%AE%B6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3176. 求出最长好子序列 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3176.%20%E6%B1%82%E5%87%BA%E6%9C%80%E9%95%BF%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3176.%20%E6%B1%82%E5%87%BA%E6%9C%80%E9%95%BF%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3177. 求出最长好子序列 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3177.%20%E6%B1%82%E5%87%BA%E6%9C%80%E9%95%BF%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3177.%20%E6%B1%82%E5%87%BA%E6%9C%80%E9%95%BF%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3178. 找出 K 秒后拿着球的孩子【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3178.%20%E6%89%BE%E5%87%BA%20K%20%E7%A7%92%E5%90%8E%E6%8B%BF%E7%9D%80%E7%90%83%E7%9A%84%E5%AD%A9%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3178.%20%E6%89%BE%E5%87%BA%20K%20%E7%A7%92%E5%90%8E%E6%8B%BF%E7%9D%80%E7%90%83%E7%9A%84%E5%AD%A9%E5%AD%90%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3179. K 秒后第 N 个元素的值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3179.%20K%20%E7%A7%92%E5%90%8E%E7%AC%AC%20N%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3179.%20K%20%E7%A7%92%E5%90%8E%E7%AC%AC%20N%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3180. 执行操作可获得的最大总奖励 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3180.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%A5%96%E5%8A%B1%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3180.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%A5%96%E5%8A%B1%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3181. 执行操作可获得的最大总奖励 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3181.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%A5%96%E5%8A%B1%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3181.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%8F%AF%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%A5%96%E5%8A%B1%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3182. 查找得分最高的学生【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3182.%20%E6%9F%A5%E6%89%BE%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3182.%20%E6%9F%A5%E6%89%BE%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3183. 达到总和的方法数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3183.%20%E8%BE%BE%E5%88%B0%E6%80%BB%E5%92%8C%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3183.%20%E8%BE%BE%E5%88%B0%E6%80%BB%E5%92%8C%E7%9A%84%E6%96%B9%E6%B3%95%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3184. 构成整天的下标对数目 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3184.%20%E6%9E%84%E6%88%90%E6%95%B4%E5%A4%A9%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3184.%20%E6%9E%84%E6%88%90%E6%95%B4%E5%A4%A9%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3185. 构成整天的下标对数目 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3185.%20%E6%9E%84%E6%88%90%E6%95%B4%E5%A4%A9%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3185.%20%E6%9E%84%E6%88%90%E6%95%B4%E5%A4%A9%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3186. 施咒的最大总伤害【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3186.%20%E6%96%BD%E5%92%92%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E4%BC%A4%E5%AE%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3186.%20%E6%96%BD%E5%92%92%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E4%BC%A4%E5%AE%B3%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3187. 数组中的峰值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3187.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%B3%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3187.%20%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%B3%B0%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3188. 查找得分最高的学生 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3188.%20%E6%9F%A5%E6%89%BE%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E5%AD%A6%E7%94%9F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3188.%20%E6%9F%A5%E6%89%BE%E5%BE%97%E5%88%86%E6%9C%80%E9%AB%98%E7%9A%84%E5%AD%A6%E7%94%9F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3189. 得到一个和平棋盘的最少步骤【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3189.%20%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E5%92%8C%E5%B9%B3%E6%A3%8B%E7%9B%98%E7%9A%84%E6%9C%80%E5%B0%91%E6%AD%A5%E9%AA%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3189.%20%E5%BE%97%E5%88%B0%E4%B8%80%E4%B8%AA%E5%92%8C%E5%B9%B3%E6%A3%8B%E7%9B%98%E7%9A%84%E6%9C%80%E5%B0%91%E6%AD%A5%E9%AA%A4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3190. 使所有元素都可以被 3 整除的最少操作数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3190.%20%E4%BD%BF%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E5%8F%AF%E4%BB%A5%E8%A2%AB%203%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3190.%20%E4%BD%BF%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E9%83%BD%E5%8F%AF%E4%BB%A5%E8%A2%AB%203%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3191. 使二进制数组全部等于 1 的最少操作次数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3191.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%E5%85%A8%E9%83%A8%E7%AD%89%E4%BA%8E%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3191.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%E5%85%A8%E9%83%A8%E7%AD%89%E4%BA%8E%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3192. 使二进制数组全部等于 1 的最少操作次数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3192.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%E5%85%A8%E9%83%A8%E7%AD%89%E4%BA%8E%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3192.%20%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%E5%85%A8%E9%83%A8%E7%AD%89%E4%BA%8E%201%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3193. 统计逆序对的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3193.%20%E7%BB%9F%E8%AE%A1%E9%80%86%E5%BA%8F%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3193.%20%E7%BB%9F%E8%AE%A1%E9%80%86%E5%BA%8F%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3194. 最小元素和最大元素的最小平均值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3194.%20%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3194.%20%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B9%B3%E5%9D%87%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3195. 包含所有 1 的最小矩形面积 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3195.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%201%20%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3195.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%201%20%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3196. 最大化子数组的总成本【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3196.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%80%BB%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3196.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%80%BB%E6%88%90%E6%9C%AC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3197. 包含所有 1 的最小矩形面积 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3197.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%201%20%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3197.%20%E5%8C%85%E5%90%AB%E6%89%80%E6%9C%89%201%20%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9F%A9%E5%BD%A2%E9%9D%A2%E7%A7%AF%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3198. 查找每个州的城市【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3198.%20%E6%9F%A5%E6%89%BE%E6%AF%8F%E4%B8%AA%E5%B7%9E%E7%9A%84%E5%9F%8E%E5%B8%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3198.%20%E6%9F%A5%E6%89%BE%E6%AF%8F%E4%B8%AA%E5%B7%9E%E7%9A%84%E5%9F%8E%E5%B8%82%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3199. 用偶数异或设置位计数三元组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3199.%20%E7%94%A8%E5%81%B6%E6%95%B0%E5%BC%82%E6%88%96%E8%AE%BE%E7%BD%AE%E4%BD%8D%E8%AE%A1%E6%95%B0%E4%B8%89%E5%85%83%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3199.%20%E7%94%A8%E5%81%B6%E6%95%B0%E5%BC%82%E6%88%96%E8%AE%BE%E7%BD%AE%E4%BD%8D%E8%AE%A1%E6%95%B0%E4%B8%89%E5%85%83%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3200. 三角形的最大高度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3200.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E9%AB%98%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3200.%20%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E9%AB%98%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 34. 3201~3300\\n\\n- [ ] [3201. 找出有效子序列的最大长度 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3201.%20%E6%89%BE%E5%87%BA%E6%9C%89%E6%95%88%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3201.%20%E6%89%BE%E5%87%BA%E6%9C%89%E6%95%88%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3202. 找出有效子序列的最大长度 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3202.%20%E6%89%BE%E5%87%BA%E6%9C%89%E6%95%88%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3202.%20%E6%89%BE%E5%87%BA%E6%9C%89%E6%95%88%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3203. 合并两棵树后的最小直径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3203.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E6%A3%B5%E6%A0%91%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9B%B4%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3203.%20%E5%90%88%E5%B9%B6%E4%B8%A4%E6%A3%B5%E6%A0%91%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E7%9B%B4%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3204. 按位用户权限分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3204.%20%E6%8C%89%E4%BD%8D%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3204.%20%E6%8C%89%E4%BD%8D%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3205. 最大数组跳跃得分 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3205.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E7%BB%84%E8%B7%B3%E8%B7%83%E5%BE%97%E5%88%86%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3205.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E7%BB%84%E8%B7%B3%E8%B7%83%E5%BE%97%E5%88%86%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3206. 交替组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3206.%20%E4%BA%A4%E6%9B%BF%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3206.%20%E4%BA%A4%E6%9B%BF%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3207. 与敌人战斗后的最大分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3207.%20%E4%B8%8E%E6%95%8C%E4%BA%BA%E6%88%98%E6%96%97%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3207.%20%E4%B8%8E%E6%95%8C%E4%BA%BA%E6%88%98%E6%96%97%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3208. 交替组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3208.%20%E4%BA%A4%E6%9B%BF%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3208.%20%E4%BA%A4%E6%9B%BF%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3209. 子数组按位与值为 K 的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3209.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%8C%89%E4%BD%8D%E4%B8%8E%E5%80%BC%E4%B8%BA%20K%20%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3209.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%8C%89%E4%BD%8D%E4%B8%8E%E5%80%BC%E4%B8%BA%20K%20%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3210. 找出加密后的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3210.%20%E6%89%BE%E5%87%BA%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3210.%20%E6%89%BE%E5%87%BA%E5%8A%A0%E5%AF%86%E5%90%8E%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3211. 生成不含相邻零的二进制字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3211.%20%E7%94%9F%E6%88%90%E4%B8%8D%E5%90%AB%E7%9B%B8%E9%82%BB%E9%9B%B6%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3211.%20%E7%94%9F%E6%88%90%E4%B8%8D%E5%90%AB%E7%9B%B8%E9%82%BB%E9%9B%B6%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3212. 统计 X 和 Y 频数相等的子矩阵数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3212.%20%E7%BB%9F%E8%AE%A1%20X%20%E5%92%8C%20Y%20%E9%A2%91%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E7%9F%A9%E9%98%B5%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3212.%20%E7%BB%9F%E8%AE%A1%20X%20%E5%92%8C%20Y%20%E9%A2%91%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E7%9F%A9%E9%98%B5%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3213. 最小代价构造字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3213.%20%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E6%9E%84%E9%80%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3213.%20%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E6%9E%84%E9%80%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3214. 同比增长率【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3214.%20%E5%90%8C%E6%AF%94%E5%A2%9E%E9%95%BF%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3214.%20%E5%90%8C%E6%AF%94%E5%A2%9E%E9%95%BF%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3215. 用偶数异或设置位计数三元组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3215.%20%E7%94%A8%E5%81%B6%E6%95%B0%E5%BC%82%E6%88%96%E8%AE%BE%E7%BD%AE%E4%BD%8D%E8%AE%A1%E6%95%B0%E4%B8%89%E5%85%83%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3215.%20%E7%94%A8%E5%81%B6%E6%95%B0%E5%BC%82%E6%88%96%E8%AE%BE%E7%BD%AE%E4%BD%8D%E8%AE%A1%E6%95%B0%E4%B8%89%E5%85%83%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3216. 交换后字典序最小的字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3216.%20%E4%BA%A4%E6%8D%A2%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3216.%20%E4%BA%A4%E6%8D%A2%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3217. 从链表中移除在数组中存在的节点【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3217.%20%E4%BB%8E%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E5%AD%98%E5%9C%A8%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3217.%20%E4%BB%8E%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%A7%BB%E9%99%A4%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E5%AD%98%E5%9C%A8%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3218. 切蛋糕的最小总开销 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3218.%20%E5%88%87%E8%9B%8B%E7%B3%95%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%BC%80%E9%94%80%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3218.%20%E5%88%87%E8%9B%8B%E7%B3%95%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%BC%80%E9%94%80%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3219. 切蛋糕的最小总开销 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3219.%20%E5%88%87%E8%9B%8B%E7%B3%95%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%BC%80%E9%94%80%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3219.%20%E5%88%87%E8%9B%8B%E7%B3%95%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%BC%80%E9%94%80%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3220. 奇数和偶数交易【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3220.%20%E5%A5%87%E6%95%B0%E5%92%8C%E5%81%B6%E6%95%B0%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3220.%20%E5%A5%87%E6%95%B0%E5%92%8C%E5%81%B6%E6%95%B0%E4%BA%A4%E6%98%93%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3221. 最大数组跳跃得分 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3221.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E7%BB%84%E8%B7%B3%E8%B7%83%E5%BE%97%E5%88%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3221.%20%E6%9C%80%E5%A4%A7%E6%95%B0%E7%BB%84%E8%B7%B3%E8%B7%83%E5%BE%97%E5%88%86%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3222. 求出硬币游戏的赢家【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3222.%20%E6%B1%82%E5%87%BA%E7%A1%AC%E5%B8%81%E6%B8%B8%E6%88%8F%E7%9A%84%E8%B5%A2%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3222.%20%E6%B1%82%E5%87%BA%E7%A1%AC%E5%B8%81%E6%B8%B8%E6%88%8F%E7%9A%84%E8%B5%A2%E5%AE%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3223. 操作后字符串的最短长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3223.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3223.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3224. 使差值相等的最少数组改动次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3224.%20%E4%BD%BF%E5%B7%AE%E5%80%BC%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%95%B0%E7%BB%84%E6%94%B9%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3224.%20%E4%BD%BF%E5%B7%AE%E5%80%BC%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%95%B0%E7%BB%84%E6%94%B9%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3225. 网格图操作后的最大分数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3225.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3225.%20%E7%BD%91%E6%A0%BC%E5%9B%BE%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3226. 使两个整数相等的位更改次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3226.%20%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E4%BD%8D%E6%9B%B4%E6%94%B9%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3226.%20%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E4%BD%8D%E6%9B%B4%E6%94%B9%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3227. 字符串元音游戏【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3227.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%85%83%E9%9F%B3%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3227.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%85%83%E9%9F%B3%E6%B8%B8%E6%88%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3228. 将 1 移动到末尾的最大操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3228.%20%E5%B0%86%201%20%E7%A7%BB%E5%8A%A8%E5%88%B0%E6%9C%AB%E5%B0%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3228.%20%E5%B0%86%201%20%E7%A7%BB%E5%8A%A8%E5%88%B0%E6%9C%AB%E5%B0%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3229. 使数组等于目标数组所需的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3229.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3229.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E6%95%B0%E7%BB%84%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3230. 客户购买行为分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3230.%20%E5%AE%A2%E6%88%B7%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3230.%20%E5%AE%A2%E6%88%B7%E8%B4%AD%E4%B9%B0%E8%A1%8C%E4%B8%BA%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3231. 要删除的递增子序列的最小数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3231.%20%E8%A6%81%E5%88%A0%E9%99%A4%E7%9A%84%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3231.%20%E8%A6%81%E5%88%A0%E9%99%A4%E7%9A%84%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3232. 判断是否可以赢得数字游戏【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3232.%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%B5%A2%E5%BE%97%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3232.%20%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%B5%A2%E5%BE%97%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3233. 统计不是特殊数字的数字数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3233.%20%E7%BB%9F%E8%AE%A1%E4%B8%8D%E6%98%AF%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3233.%20%E7%BB%9F%E8%AE%A1%E4%B8%8D%E6%98%AF%E7%89%B9%E6%AE%8A%E6%95%B0%E5%AD%97%E7%9A%84%E6%95%B0%E5%AD%97%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3234. 统计 1 显著的字符串的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3234.%20%E7%BB%9F%E8%AE%A1%201%20%E6%98%BE%E8%91%97%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3234.%20%E7%BB%9F%E8%AE%A1%201%20%E6%98%BE%E8%91%97%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3235. 判断矩形的两个角落是否可达【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3235.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E5%BD%A2%E7%9A%84%E4%B8%A4%E4%B8%AA%E8%A7%92%E8%90%BD%E6%98%AF%E5%90%A6%E5%8F%AF%E8%BE%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3235.%20%E5%88%A4%E6%96%AD%E7%9F%A9%E5%BD%A2%E7%9A%84%E4%B8%A4%E4%B8%AA%E8%A7%92%E8%90%BD%E6%98%AF%E5%90%A6%E5%8F%AF%E8%BE%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3236. 首席执行官下属层级【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3236.%20%E9%A6%96%E5%B8%AD%E6%89%A7%E8%A1%8C%E5%AE%98%E4%B8%8B%E5%B1%9E%E5%B1%82%E7%BA%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3236.%20%E9%A6%96%E5%B8%AD%E6%89%A7%E8%A1%8C%E5%AE%98%E4%B8%8B%E5%B1%9E%E5%B1%82%E7%BA%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3237. Alt 和 Tab 模拟【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3237.%20Alt%20%E5%92%8C%20Tab%20%E6%A8%A1%E6%8B%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3237.%20Alt%20%E5%92%8C%20Tab%20%E6%A8%A1%E6%8B%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3238. 求出胜利玩家的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3238.%20%E6%B1%82%E5%87%BA%E8%83%9C%E5%88%A9%E7%8E%A9%E5%AE%B6%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3238.%20%E6%B1%82%E5%87%BA%E8%83%9C%E5%88%A9%E7%8E%A9%E5%AE%B6%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3239. 最少翻转次数使二进制矩阵回文 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3239.%20%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%9B%9E%E6%96%87%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3239.%20%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%9B%9E%E6%96%87%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3240. 最少翻转次数使二进制矩阵回文 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3240.%20%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%9B%9E%E6%96%87%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3240.%20%E6%9C%80%E5%B0%91%E7%BF%BB%E8%BD%AC%E6%AC%A1%E6%95%B0%E4%BD%BF%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E5%9B%9E%E6%96%87%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3241. 标记所有节点需要的时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3241.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E9%9C%80%E8%A6%81%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3241.%20%E6%A0%87%E8%AE%B0%E6%89%80%E6%9C%89%E8%8A%82%E7%82%B9%E9%9C%80%E8%A6%81%E7%9A%84%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3242. 设计相邻元素求和服务【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3242.%20%E8%AE%BE%E8%AE%A1%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E6%B1%82%E5%92%8C%E6%9C%8D%E5%8A%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3242.%20%E8%AE%BE%E8%AE%A1%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E6%B1%82%E5%92%8C%E6%9C%8D%E5%8A%A1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3243. 新增道路查询后的最短距离 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3243.%20%E6%96%B0%E5%A2%9E%E9%81%93%E8%B7%AF%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3243.%20%E6%96%B0%E5%A2%9E%E9%81%93%E8%B7%AF%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3244. 新增道路查询后的最短距离 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3244.%20%E6%96%B0%E5%A2%9E%E9%81%93%E8%B7%AF%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3244.%20%E6%96%B0%E5%A2%9E%E9%81%93%E8%B7%AF%E6%9F%A5%E8%AF%A2%E5%90%8E%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3245. 交替组 III【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3245.%20%E4%BA%A4%E6%9B%BF%E7%BB%84%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3245.%20%E4%BA%A4%E6%9B%BF%E7%BB%84%20III%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3246. 英超积分榜排名【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3246.%20%E8%8B%B1%E8%B6%85%E7%A7%AF%E5%88%86%E6%A6%9C%E6%8E%92%E5%90%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3246.%20%E8%8B%B1%E8%B6%85%E7%A7%AF%E5%88%86%E6%A6%9C%E6%8E%92%E5%90%8D%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3247. 奇数和子序列的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3247.%20%E5%A5%87%E6%95%B0%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3247.%20%E5%A5%87%E6%95%B0%E5%92%8C%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3248. 矩阵中的蛇【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3248.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%9B%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3248.%20%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%9B%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3249. 统计好节点的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3249.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3249.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3250. 单调数组对的数目 I【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3250.%20%E5%8D%95%E8%B0%83%E6%95%B0%E7%BB%84%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3250.%20%E5%8D%95%E8%B0%83%E6%95%B0%E7%BB%84%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3251. 单调数组对的数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3251.%20%E5%8D%95%E8%B0%83%E6%95%B0%E7%BB%84%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3251.%20%E5%8D%95%E8%B0%83%E6%95%B0%E7%BB%84%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3252. 英超积分榜排名 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3252.%20%E8%8B%B1%E8%B6%85%E7%A7%AF%E5%88%86%E6%A6%9C%E6%8E%92%E5%90%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3252.%20%E8%8B%B1%E8%B6%85%E7%A7%AF%E5%88%86%E6%A6%9C%E6%8E%92%E5%90%8D%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3253. 最小代价构造字符串（简单）【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3253.%20%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E6%9E%84%E9%80%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E7%AE%80%E5%8D%95%EF%BC%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3253.%20%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E6%9E%84%E9%80%A0%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%88%E7%AE%80%E5%8D%95%EF%BC%89%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3254. 长度为 K 的子数组的能量值 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3254.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E8%83%BD%E9%87%8F%E5%80%BC%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3254.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E8%83%BD%E9%87%8F%E5%80%BC%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3255. 长度为 K 的子数组的能量值 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3255.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E8%83%BD%E9%87%8F%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3255.%20%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E8%83%BD%E9%87%8F%E5%80%BC%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3256. 放三个车的价值之和最大 I【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3256.%20%E6%94%BE%E4%B8%89%E4%B8%AA%E8%BD%A6%E7%9A%84%E4%BB%B7%E5%80%BC%E4%B9%8B%E5%92%8C%E6%9C%80%E5%A4%A7%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3256.%20%E6%94%BE%E4%B8%89%E4%B8%AA%E8%BD%A6%E7%9A%84%E4%BB%B7%E5%80%BC%E4%B9%8B%E5%92%8C%E6%9C%80%E5%A4%A7%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3257. 放三个车的价值之和最大 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3257.%20%E6%94%BE%E4%B8%89%E4%B8%AA%E8%BD%A6%E7%9A%84%E4%BB%B7%E5%80%BC%E4%B9%8B%E5%92%8C%E6%9C%80%E5%A4%A7%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3257.%20%E6%94%BE%E4%B8%89%E4%B8%AA%E8%BD%A6%E7%9A%84%E4%BB%B7%E5%80%BC%E4%B9%8B%E5%92%8C%E6%9C%80%E5%A4%A7%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3258. 统计满足 K 约束的子字符串数量 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3258.%20%E7%BB%9F%E8%AE%A1%E6%BB%A1%E8%B6%B3%20K%20%E7%BA%A6%E6%9D%9F%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E9%87%8F%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3258.%20%E7%BB%9F%E8%AE%A1%E6%BB%A1%E8%B6%B3%20K%20%E7%BA%A6%E6%9D%9F%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E9%87%8F%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3259. 超级饮料的最大强化能量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3259.%20%E8%B6%85%E7%BA%A7%E9%A5%AE%E6%96%99%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%BA%E5%8C%96%E8%83%BD%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3259.%20%E8%B6%85%E7%BA%A7%E9%A5%AE%E6%96%99%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%BA%E5%8C%96%E8%83%BD%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3260. 找出最大的 N 位 K 回文数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3260.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%A4%A7%E7%9A%84%20N%20%E4%BD%8D%20K%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3260.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%A4%A7%E7%9A%84%20N%20%E4%BD%8D%20K%20%E5%9B%9E%E6%96%87%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3261. 统计满足 K 约束的子字符串数量 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3261.%20%E7%BB%9F%E8%AE%A1%E6%BB%A1%E8%B6%B3%20K%20%E7%BA%A6%E6%9D%9F%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3261.%20%E7%BB%9F%E8%AE%A1%E6%BB%A1%E8%B6%B3%20K%20%E7%BA%A6%E6%9D%9F%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E9%87%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3262. 查找重叠的班次【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3262.%20%E6%9F%A5%E6%89%BE%E9%87%8D%E5%8F%A0%E7%9A%84%E7%8F%AD%E6%AC%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3262.%20%E6%9F%A5%E6%89%BE%E9%87%8D%E5%8F%A0%E7%9A%84%E7%8F%AD%E6%AC%A1%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3263. 将双链表转换为数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3263.%20%E5%B0%86%E5%8F%8C%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3263.%20%E5%B0%86%E5%8F%8C%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3264. K 次乘运算后的最终数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3264.%20K%20%E6%AC%A1%E4%B9%98%E8%BF%90%E7%AE%97%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3264.%20K%20%E6%AC%A1%E4%B9%98%E8%BF%90%E7%AE%97%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3265. 统计近似相等数对 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3265.%20%E7%BB%9F%E8%AE%A1%E8%BF%91%E4%BC%BC%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3265.%20%E7%BB%9F%E8%AE%A1%E8%BF%91%E4%BC%BC%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3266. K 次乘运算后的最终数组 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3266.%20K%20%E6%AC%A1%E4%B9%98%E8%BF%90%E7%AE%97%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E6%95%B0%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3266.%20K%20%E6%AC%A1%E4%B9%98%E8%BF%90%E7%AE%97%E5%90%8E%E7%9A%84%E6%9C%80%E7%BB%88%E6%95%B0%E7%BB%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3267. 统计近似相等数对 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3267.%20%E7%BB%9F%E8%AE%A1%E8%BF%91%E4%BC%BC%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3267.%20%E7%BB%9F%E8%AE%A1%E8%BF%91%E4%BC%BC%E7%9B%B8%E7%AD%89%E6%95%B0%E5%AF%B9%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3268. 查找重叠的班次 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3268.%20%E6%9F%A5%E6%89%BE%E9%87%8D%E5%8F%A0%E7%9A%84%E7%8F%AD%E6%AC%A1%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3268.%20%E6%9F%A5%E6%89%BE%E9%87%8D%E5%8F%A0%E7%9A%84%E7%8F%AD%E6%AC%A1%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3269. 构建两个递增数组【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3269.%20%E6%9E%84%E5%BB%BA%E4%B8%A4%E4%B8%AA%E9%80%92%E5%A2%9E%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3269.%20%E6%9E%84%E5%BB%BA%E4%B8%A4%E4%B8%AA%E9%80%92%E5%A2%9E%E6%95%B0%E7%BB%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3270. 求出数字答案【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3270.%20%E6%B1%82%E5%87%BA%E6%95%B0%E5%AD%97%E7%AD%94%E6%A1%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3270.%20%E6%B1%82%E5%87%BA%E6%95%B0%E5%AD%97%E7%AD%94%E6%A1%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3271. 哈希分割字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3271.%20%E5%93%88%E5%B8%8C%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3271.%20%E5%93%88%E5%B8%8C%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3272. 统计好整数的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3272.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3272.%20%E7%BB%9F%E8%AE%A1%E5%A5%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3273. 对 Bob 造成的最少伤害【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3273.%20%E5%AF%B9%20Bob%20%E9%80%A0%E6%88%90%E7%9A%84%E6%9C%80%E5%B0%91%E4%BC%A4%E5%AE%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3273.%20%E5%AF%B9%20Bob%20%E9%80%A0%E6%88%90%E7%9A%84%E6%9C%80%E5%B0%91%E4%BC%A4%E5%AE%B3%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3274. 检查棋盘方格颜色是否相同【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3274.%20%E6%A3%80%E6%9F%A5%E6%A3%8B%E7%9B%98%E6%96%B9%E6%A0%BC%E9%A2%9C%E8%89%B2%E6%98%AF%E5%90%A6%E7%9B%B8%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3274.%20%E6%A3%80%E6%9F%A5%E6%A3%8B%E7%9B%98%E6%96%B9%E6%A0%BC%E9%A2%9C%E8%89%B2%E6%98%AF%E5%90%A6%E7%9B%B8%E5%90%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3275. 第 K 近障碍物查询【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3275.%20%E7%AC%AC%20K%20%E8%BF%91%E9%9A%9C%E7%A2%8D%E7%89%A9%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3275.%20%E7%AC%AC%20K%20%E8%BF%91%E9%9A%9C%E7%A2%8D%E7%89%A9%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3276. 选择矩阵中单元格的最大得分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3276.%20%E9%80%89%E6%8B%A9%E7%9F%A9%E9%98%B5%E4%B8%AD%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3276.%20%E9%80%89%E6%8B%A9%E7%9F%A9%E9%98%B5%E4%B8%AD%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3277. 查询子数组最大异或值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3277.%20%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3277.%20%E6%9F%A5%E8%AF%A2%E5%AD%90%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%BC%82%E6%88%96%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3278. 寻找数据科学家职位的候选人 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3278.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E8%81%8C%E4%BD%8D%E7%9A%84%E5%80%99%E9%80%89%E4%BA%BA%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3278.%20%E5%AF%BB%E6%89%BE%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6%E8%81%8C%E4%BD%8D%E7%9A%84%E5%80%99%E9%80%89%E4%BA%BA%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3279. 活塞占据的最大总区域【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3279.%20%E6%B4%BB%E5%A1%9E%E5%8D%A0%E6%8D%AE%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%8C%BA%E5%9F%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3279.%20%E6%B4%BB%E5%A1%9E%E5%8D%A0%E6%8D%AE%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%8C%BA%E5%9F%9F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3280. 将日期转换为二进制表示【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3280.%20%E5%B0%86%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3280.%20%E5%B0%86%E6%97%A5%E6%9C%9F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3281. 范围内整数的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3281.%20%E8%8C%83%E5%9B%B4%E5%86%85%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3281.%20%E8%8C%83%E5%9B%B4%E5%86%85%E6%95%B4%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3282. 到达数组末尾的最大得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3282.%20%E5%88%B0%E8%BE%BE%E6%95%B0%E7%BB%84%E6%9C%AB%E5%B0%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3282.%20%E5%88%B0%E8%BE%BE%E6%95%B0%E7%BB%84%E6%9C%AB%E5%B0%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3283. 吃掉所有兵需要的最多移动次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3283.%20%E5%90%83%E6%8E%89%E6%89%80%E6%9C%89%E5%85%B5%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%A4%9A%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3283.%20%E5%90%83%E6%8E%89%E6%89%80%E6%9C%89%E5%85%B5%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%A4%9A%E7%A7%BB%E5%8A%A8%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3284. 连续子数组的和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3284.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3284.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3285. 找到稳定山的下标【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3285.%20%E6%89%BE%E5%88%B0%E7%A8%B3%E5%AE%9A%E5%B1%B1%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3285.%20%E6%89%BE%E5%88%B0%E7%A8%B3%E5%AE%9A%E5%B1%B1%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3286. 穿越网格图的安全路径【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3286.%20%E7%A9%BF%E8%B6%8A%E7%BD%91%E6%A0%BC%E5%9B%BE%E7%9A%84%E5%AE%89%E5%85%A8%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3286.%20%E7%A9%BF%E8%B6%8A%E7%BD%91%E6%A0%BC%E5%9B%BE%E7%9A%84%E5%AE%89%E5%85%A8%E8%B7%AF%E5%BE%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3287. 求出数组中最大序列值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3287.%20%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%BA%8F%E5%88%97%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3287.%20%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%BA%8F%E5%88%97%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3288. 最长上升路径的长度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3288.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E8%B7%AF%E5%BE%84%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3288.%20%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E8%B7%AF%E5%BE%84%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3289. 数字小镇中的捣蛋鬼【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3289.%20%E6%95%B0%E5%AD%97%E5%B0%8F%E9%95%87%E4%B8%AD%E7%9A%84%E6%8D%A3%E8%9B%8B%E9%AC%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3289.%20%E6%95%B0%E5%AD%97%E5%B0%8F%E9%95%87%E4%B8%AD%E7%9A%84%E6%8D%A3%E8%9B%8B%E9%AC%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3290. 最高乘法得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3290.%20%E6%9C%80%E9%AB%98%E4%B9%98%E6%B3%95%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3290.%20%E6%9C%80%E9%AB%98%E4%B9%98%E6%B3%95%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3291. 形成目标字符串需要的最少字符串数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3291.%20%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3291.%20%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3292. 形成目标字符串需要的最少字符串数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3292.%20%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3292.%20%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3293. 计算产品最终价格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3293.%20%E8%AE%A1%E7%AE%97%E4%BA%A7%E5%93%81%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3293.%20%E8%AE%A1%E7%AE%97%E4%BA%A7%E5%93%81%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3294. 将双链表转换为数组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3294.%20%E5%B0%86%E5%8F%8C%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3294.%20%E5%B0%86%E5%8F%8C%E9%93%BE%E8%A1%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3295. 举报垃圾信息【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3295.%20%E4%B8%BE%E6%8A%A5%E5%9E%83%E5%9C%BE%E4%BF%A1%E6%81%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3295.%20%E4%B8%BE%E6%8A%A5%E5%9E%83%E5%9C%BE%E4%BF%A1%E6%81%AF%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3296. 移山所需的最少秒数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3296.%20%E7%A7%BB%E5%B1%B1%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%92%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3296.%20%E7%A7%BB%E5%B1%B1%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E7%A7%92%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3297. 统计重新排列后包含另一个字符串的子字符串数目 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3297.%20%E7%BB%9F%E8%AE%A1%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E5%8C%85%E5%90%AB%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3297.%20%E7%BB%9F%E8%AE%A1%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E5%8C%85%E5%90%AB%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3298. 统计重新排列后包含另一个字符串的子字符串数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3298.%20%E7%BB%9F%E8%AE%A1%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E5%8C%85%E5%90%AB%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3298.%20%E7%BB%9F%E8%AE%A1%E9%87%8D%E6%96%B0%E6%8E%92%E5%88%97%E5%90%8E%E5%8C%85%E5%90%AB%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3299. 连续子序列的和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3299.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3299.%20%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3300. 替换为数位和以后的最小元素【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3300.%20%E6%9B%BF%E6%8D%A2%E4%B8%BA%E6%95%B0%E4%BD%8D%E5%92%8C%E4%BB%A5%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3300.%20%E6%9B%BF%E6%8D%A2%E4%B8%BA%E6%95%B0%E4%BD%8D%E5%92%8C%E4%BB%A5%E5%90%8E%E7%9A%84%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n\\n## 35. 3301~3400\\n\\n- [ ] [3301. 高度互不相同的最大塔高和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3301.%20%E9%AB%98%E5%BA%A6%E4%BA%92%E4%B8%8D%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%A1%94%E9%AB%98%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3301.%20%E9%AB%98%E5%BA%A6%E4%BA%92%E4%B8%8D%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E5%A4%A7%E5%A1%94%E9%AB%98%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3302. 字典序最小的合法序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3302.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%90%88%E6%B3%95%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3302.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%90%88%E6%B3%95%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3303. 第一个几乎相等子字符串的下标【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3303.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%A0%E4%B9%8E%E7%9B%B8%E7%AD%89%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3303.%20%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%87%A0%E4%B9%8E%E7%9B%B8%E7%AD%89%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E4%B8%8B%E6%A0%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3304. 找出第 K 个字符 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3304.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3304.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3305. 元音辅音字符串计数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3305.%20%E5%85%83%E9%9F%B3%E8%BE%85%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%AE%A1%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3305.%20%E5%85%83%E9%9F%B3%E8%BE%85%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%AE%A1%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3306. 元音辅音字符串计数 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3306.%20%E5%85%83%E9%9F%B3%E8%BE%85%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%AE%A1%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3306.%20%E5%85%83%E9%9F%B3%E8%BE%85%E9%9F%B3%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%AE%A1%E6%95%B0%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3307. 找出第 K 个字符 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3307.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3307.%20%E6%89%BE%E5%87%BA%E7%AC%AC%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3308. 寻找表现最佳的司机【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3308.%20%E5%AF%BB%E6%89%BE%E8%A1%A8%E7%8E%B0%E6%9C%80%E4%BD%B3%E7%9A%84%E5%8F%B8%E6%9C%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3308.%20%E5%AF%BB%E6%89%BE%E8%A1%A8%E7%8E%B0%E6%9C%80%E4%BD%B3%E7%9A%84%E5%8F%B8%E6%9C%BA%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3309. 连接二进制表示可形成的最大数值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3309.%20%E8%BF%9E%E6%8E%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E5%8F%AF%E5%BD%A2%E6%88%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3309.%20%E8%BF%9E%E6%8E%A5%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%A1%A8%E7%A4%BA%E5%8F%AF%E5%BD%A2%E6%88%90%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3310. 移除可疑的方法【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3310.%20%E7%A7%BB%E9%99%A4%E5%8F%AF%E7%96%91%E7%9A%84%E6%96%B9%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3310.%20%E7%A7%BB%E9%99%A4%E5%8F%AF%E7%96%91%E7%9A%84%E6%96%B9%E6%B3%95%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3311. 构造符合图结构的二维矩阵【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3311.%20%E6%9E%84%E9%80%A0%E7%AC%A6%E5%90%88%E5%9B%BE%E7%BB%93%E6%9E%84%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3311.%20%E6%9E%84%E9%80%A0%E7%AC%A6%E5%90%88%E5%9B%BE%E7%BB%93%E6%9E%84%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3312. 查询排序后的最大公约数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3312.%20%E6%9F%A5%E8%AF%A2%E6%8E%92%E5%BA%8F%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3312.%20%E6%9F%A5%E8%AF%A2%E6%8E%92%E5%BA%8F%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3313. 查找树中最后标记的节点【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3313.%20%E6%9F%A5%E6%89%BE%E6%A0%91%E4%B8%AD%E6%9C%80%E5%90%8E%E6%A0%87%E8%AE%B0%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3313.%20%E6%9F%A5%E6%89%BE%E6%A0%91%E4%B8%AD%E6%9C%80%E5%90%8E%E6%A0%87%E8%AE%B0%E7%9A%84%E8%8A%82%E7%82%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3314. 构造最小位运算数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3314.%20%E6%9E%84%E9%80%A0%E6%9C%80%E5%B0%8F%E4%BD%8D%E8%BF%90%E7%AE%97%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3314.%20%E6%9E%84%E9%80%A0%E6%9C%80%E5%B0%8F%E4%BD%8D%E8%BF%90%E7%AE%97%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3315. 构造最小位运算数组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3315.%20%E6%9E%84%E9%80%A0%E6%9C%80%E5%B0%8F%E4%BD%8D%E8%BF%90%E7%AE%97%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3315.%20%E6%9E%84%E9%80%A0%E6%9C%80%E5%B0%8F%E4%BD%8D%E8%BF%90%E7%AE%97%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3316. 从原字符串里进行删除操作的最多次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3316.%20%E4%BB%8E%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E8%BF%9B%E8%A1%8C%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E7%9A%84%E6%9C%80%E5%A4%9A%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3316.%20%E4%BB%8E%E5%8E%9F%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%87%8C%E8%BF%9B%E8%A1%8C%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C%E7%9A%84%E6%9C%80%E5%A4%9A%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3317. 安排活动的方案数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3317.%20%E5%AE%89%E6%8E%92%E6%B4%BB%E5%8A%A8%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3317.%20%E5%AE%89%E6%8E%92%E6%B4%BB%E5%8A%A8%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3318. 计算子数组的 x-sum I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3318.%20%E8%AE%A1%E7%AE%97%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%20x-sum%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3318.%20%E8%AE%A1%E7%AE%97%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%20x-sum%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3319. 第 K 大的完美二叉子树的大小【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3319.%20%E7%AC%AC%20K%20%E5%A4%A7%E7%9A%84%E5%AE%8C%E7%BE%8E%E4%BA%8C%E5%8F%89%E5%AD%90%E6%A0%91%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3319.%20%E7%AC%AC%20K%20%E5%A4%A7%E7%9A%84%E5%AE%8C%E7%BE%8E%E4%BA%8C%E5%8F%89%E5%AD%90%E6%A0%91%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3320. 统计能获胜的出招序列数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3320.%20%E7%BB%9F%E8%AE%A1%E8%83%BD%E8%8E%B7%E8%83%9C%E7%9A%84%E5%87%BA%E6%8B%9B%E5%BA%8F%E5%88%97%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3320.%20%E7%BB%9F%E8%AE%A1%E8%83%BD%E8%8E%B7%E8%83%9C%E7%9A%84%E5%87%BA%E6%8B%9B%E5%BA%8F%E5%88%97%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3321. 计算子数组的 x-sum II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3321.%20%E8%AE%A1%E7%AE%97%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%20x-sum%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3321.%20%E8%AE%A1%E7%AE%97%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%20x-sum%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3322. 英超积分榜排名 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3322.%20%E8%8B%B1%E8%B6%85%E7%A7%AF%E5%88%86%E6%A6%9C%E6%8E%92%E5%90%8D%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3322.%20%E8%8B%B1%E8%B6%85%E7%A7%AF%E5%88%86%E6%A6%9C%E6%8E%92%E5%90%8D%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3323. 通过插入区间最小化连通组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3323.%20%E9%80%9A%E8%BF%87%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4%E6%9C%80%E5%B0%8F%E5%8C%96%E8%BF%9E%E9%80%9A%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3323.%20%E9%80%9A%E8%BF%87%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4%E6%9C%80%E5%B0%8F%E5%8C%96%E8%BF%9E%E9%80%9A%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3324. 出现在屏幕上的字符串序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3324.%20%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%B1%8F%E5%B9%95%E4%B8%8A%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3324.%20%E5%87%BA%E7%8E%B0%E5%9C%A8%E5%B1%8F%E5%B9%95%E4%B8%8A%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3325. 字符至少出现 K 次的子字符串 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3325.%20%E5%AD%97%E7%AC%A6%E8%87%B3%E5%B0%91%E5%87%BA%E7%8E%B0%20K%20%E6%AC%A1%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3325.%20%E5%AD%97%E7%AC%A6%E8%87%B3%E5%B0%91%E5%87%BA%E7%8E%B0%20K%20%E6%AC%A1%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3326. 使数组非递减的最少除法操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3326.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E9%9D%9E%E9%80%92%E5%87%8F%E7%9A%84%E6%9C%80%E5%B0%91%E9%99%A4%E6%B3%95%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3326.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E9%9D%9E%E9%80%92%E5%87%8F%E7%9A%84%E6%9C%80%E5%B0%91%E9%99%A4%E6%B3%95%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3327. 判断 DFS 字符串是否是回文串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3327.%20%E5%88%A4%E6%96%AD%20DFS%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%98%AF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3327.%20%E5%88%A4%E6%96%AD%20DFS%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%98%AF%E5%90%A6%E6%98%AF%E5%9B%9E%E6%96%87%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3328. 查找每个州的城市 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3328.%20%E6%9F%A5%E6%89%BE%E6%AF%8F%E4%B8%AA%E5%B7%9E%E7%9A%84%E5%9F%8E%E5%B8%82%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3328.%20%E6%9F%A5%E6%89%BE%E6%AF%8F%E4%B8%AA%E5%B7%9E%E7%9A%84%E5%9F%8E%E5%B8%82%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3329. 字符至少出现 K 次的子字符串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3329.%20%E5%AD%97%E7%AC%A6%E8%87%B3%E5%B0%91%E5%87%BA%E7%8E%B0%20K%20%E6%AC%A1%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3329.%20%E5%AD%97%E7%AC%A6%E8%87%B3%E5%B0%91%E5%87%BA%E7%8E%B0%20K%20%E6%AC%A1%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3330. 找到初始输入字符串 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3330.%20%E6%89%BE%E5%88%B0%E5%88%9D%E5%A7%8B%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3330.%20%E6%89%BE%E5%88%B0%E5%88%9D%E5%A7%8B%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3331. 修改后子树的大小【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3331.%20%E4%BF%AE%E6%94%B9%E5%90%8E%E5%AD%90%E6%A0%91%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3331.%20%E4%BF%AE%E6%94%B9%E5%90%8E%E5%AD%90%E6%A0%91%E7%9A%84%E5%A4%A7%E5%B0%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3332. 旅客可以得到的最多点数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3332.%20%E6%97%85%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%9A%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3332.%20%E6%97%85%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E7%9A%84%E6%9C%80%E5%A4%9A%E7%82%B9%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3333. 找到初始输入字符串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3333.%20%E6%89%BE%E5%88%B0%E5%88%9D%E5%A7%8B%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3333.%20%E6%89%BE%E5%88%B0%E5%88%9D%E5%A7%8B%E8%BE%93%E5%85%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3334. 数组的最大因子得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3334.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9B%A0%E5%AD%90%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3334.%20%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%9B%A0%E5%AD%90%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3335. 字符串转换后的长度 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3335.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%E9%95%BF%E5%BA%A6%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3335.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%E9%95%BF%E5%BA%A6%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3336. 最大公约数相等的子序列数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3336.%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3336.%20%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3337. 字符串转换后的长度 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3337.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%E9%95%BF%E5%BA%A6%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3337.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%E9%95%BF%E5%BA%A6%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3338. 第二高的薪水 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3338.%20%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3338.%20%E7%AC%AC%E4%BA%8C%E9%AB%98%E7%9A%84%E8%96%AA%E6%B0%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3339. 查找 K 偶数数组的数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3339.%20%E6%9F%A5%E6%89%BE%20K%20%E5%81%B6%E6%95%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3339.%20%E6%9F%A5%E6%89%BE%20K%20%E5%81%B6%E6%95%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3340. 检查平衡字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3340.%20%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3340.%20%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3341. 到达最后一个房间的最少时间 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3341.%20%E5%88%B0%E8%BE%BE%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%88%BF%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3341.%20%E5%88%B0%E8%BE%BE%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%88%BF%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3342. 到达最后一个房间的最少时间 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3342.%20%E5%88%B0%E8%BE%BE%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%88%BF%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3342.%20%E5%88%B0%E8%BE%BE%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%88%BF%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3343. 统计平衡排列的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3343.%20%E7%BB%9F%E8%AE%A1%E5%B9%B3%E8%A1%A1%E6%8E%92%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3343.%20%E7%BB%9F%E8%AE%A1%E5%B9%B3%E8%A1%A1%E6%8E%92%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3344. 最大尺寸数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3344.%20%E6%9C%80%E5%A4%A7%E5%B0%BA%E5%AF%B8%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3344.%20%E6%9C%80%E5%A4%A7%E5%B0%BA%E5%AF%B8%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3345. 最小可整除数位乘积 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3345.%20%E6%9C%80%E5%B0%8F%E5%8F%AF%E6%95%B4%E9%99%A4%E6%95%B0%E4%BD%8D%E4%B9%98%E7%A7%AF%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3345.%20%E6%9C%80%E5%B0%8F%E5%8F%AF%E6%95%B4%E9%99%A4%E6%95%B0%E4%BD%8D%E4%B9%98%E7%A7%AF%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3346. 执行操作后元素的最高频率 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3346.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E9%AB%98%E9%A2%91%E7%8E%87%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3346.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E9%AB%98%E9%A2%91%E7%8E%87%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3347. 执行操作后元素的最高频率 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3347.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E9%AB%98%E9%A2%91%E7%8E%87%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3347.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E9%AB%98%E9%A2%91%E7%8E%87%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3348. 最小可整除数位乘积 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3348.%20%E6%9C%80%E5%B0%8F%E5%8F%AF%E6%95%B4%E9%99%A4%E6%95%B0%E4%BD%8D%E4%B9%98%E7%A7%AF%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3348.%20%E6%9C%80%E5%B0%8F%E5%8F%AF%E6%95%B4%E9%99%A4%E6%95%B0%E4%BD%8D%E4%B9%98%E7%A7%AF%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3349. 检测相邻递增子数组 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3349.%20%E6%A3%80%E6%B5%8B%E7%9B%B8%E9%82%BB%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3349.%20%E6%A3%80%E6%B5%8B%E7%9B%B8%E9%82%BB%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3350. 检测相邻递增子数组 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3350.%20%E6%A3%80%E6%B5%8B%E7%9B%B8%E9%82%BB%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3350.%20%E6%A3%80%E6%B5%8B%E7%9B%B8%E9%82%BB%E9%80%92%E5%A2%9E%E5%AD%90%E6%95%B0%E7%BB%84%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3351. 好子序列的元素之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3351.%20%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%85%83%E7%B4%A0%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3351.%20%E5%A5%BD%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E5%85%83%E7%B4%A0%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3352. 统计小于 N 的 K 可约简整数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3352.%20%E7%BB%9F%E8%AE%A1%E5%B0%8F%E4%BA%8E%20N%20%E7%9A%84%20K%20%E5%8F%AF%E7%BA%A6%E7%AE%80%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3352.%20%E7%BB%9F%E8%AE%A1%E5%B0%8F%E4%BA%8E%20N%20%E7%9A%84%20K%20%E5%8F%AF%E7%BA%A6%E7%AE%80%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3353. 最小总操作数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3353.%20%E6%9C%80%E5%B0%8F%E6%80%BB%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3353.%20%E6%9C%80%E5%B0%8F%E6%80%BB%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3354. 使数组元素等于零【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3354.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%AD%89%E4%BA%8E%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3354.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%AD%89%E4%BA%8E%E9%9B%B6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3355. 零数组变换 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3355.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3355.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3356. 零数组变换 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3356.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3356.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3357. 最小化相邻元素的最大差值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3357.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3357.%20%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3358. 评分为 NULL 的图书【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3358.%20%E8%AF%84%E5%88%86%E4%B8%BA%20NULL%20%E7%9A%84%E5%9B%BE%E4%B9%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3358.%20%E8%AF%84%E5%88%86%E4%B8%BA%20NULL%20%E7%9A%84%E5%9B%BE%E4%B9%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3359. 查找最大元素不超过 K 的有序子矩阵【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3359.%20%E6%9F%A5%E6%89%BE%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E4%B8%8D%E8%B6%85%E8%BF%87%20K%20%E7%9A%84%E6%9C%89%E5%BA%8F%E5%AD%90%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3359.%20%E6%9F%A5%E6%89%BE%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E4%B8%8D%E8%B6%85%E8%BF%87%20K%20%E7%9A%84%E6%9C%89%E5%BA%8F%E5%AD%90%E7%9F%A9%E9%98%B5%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3360. 移除石头游戏【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3360.%20%E7%A7%BB%E9%99%A4%E7%9F%B3%E5%A4%B4%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3360.%20%E7%A7%BB%E9%99%A4%E7%9F%B3%E5%A4%B4%E6%B8%B8%E6%88%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3361. 两个字符串的切换距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3361.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%87%E6%8D%A2%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3361.%20%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%87%E6%8D%A2%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3362. 零数组变换 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3362.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3362.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3363. 最多可收集的水果数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3363.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E6%94%B6%E9%9B%86%E7%9A%84%E6%B0%B4%E6%9E%9C%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3363.%20%E6%9C%80%E5%A4%9A%E5%8F%AF%E6%94%B6%E9%9B%86%E7%9A%84%E6%B0%B4%E6%9E%9C%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3364. 最小正和子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3364.%20%E6%9C%80%E5%B0%8F%E6%AD%A3%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3364.%20%E6%9C%80%E5%B0%8F%E6%AD%A3%E5%92%8C%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3365. 重排子字符串以形成目标字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3365.%20%E9%87%8D%E6%8E%92%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BB%A5%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3365.%20%E9%87%8D%E6%8E%92%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BB%A5%E5%BD%A2%E6%88%90%E7%9B%AE%E6%A0%87%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3366. 最小数组和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3366.%20%E6%9C%80%E5%B0%8F%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3366.%20%E6%9C%80%E5%B0%8F%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3367. 移除边之后的权重最大和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3367.%20%E7%A7%BB%E9%99%A4%E8%BE%B9%E4%B9%8B%E5%90%8E%E7%9A%84%E6%9D%83%E9%87%8D%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3367.%20%E7%A7%BB%E9%99%A4%E8%BE%B9%E4%B9%8B%E5%90%8E%E7%9A%84%E6%9D%83%E9%87%8D%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3368. 首字母大写【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3368.%20%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3368.%20%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3369. 设计数组统计跟踪器【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3369.%20%E8%AE%BE%E8%AE%A1%E6%95%B0%E7%BB%84%E7%BB%9F%E8%AE%A1%E8%B7%9F%E8%B8%AA%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3369.%20%E8%AE%BE%E8%AE%A1%E6%95%B0%E7%BB%84%E7%BB%9F%E8%AE%A1%E8%B7%9F%E8%B8%AA%E5%99%A8%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3370. 仅含置位位的最小整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3370.%20%E4%BB%85%E5%90%AB%E7%BD%AE%E4%BD%8D%E4%BD%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3370.%20%E4%BB%85%E5%90%AB%E7%BD%AE%E4%BD%8D%E4%BD%8D%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3371. 识别数组中的最大异常值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3371.%20%E8%AF%86%E5%88%AB%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E5%B8%B8%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3371.%20%E8%AF%86%E5%88%AB%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BC%82%E5%B8%B8%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3372. 连接两棵树后最大目标节点数目 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3372.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E6%A3%B5%E6%A0%91%E5%90%8E%E6%9C%80%E5%A4%A7%E7%9B%AE%E6%A0%87%E8%8A%82%E7%82%B9%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3372.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E6%A3%B5%E6%A0%91%E5%90%8E%E6%9C%80%E5%A4%A7%E7%9B%AE%E6%A0%87%E8%8A%82%E7%82%B9%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3373. 连接两棵树后最大目标节点数目 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3373.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E6%A3%B5%E6%A0%91%E5%90%8E%E6%9C%80%E5%A4%A7%E7%9B%AE%E6%A0%87%E8%8A%82%E7%82%B9%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3373.%20%E8%BF%9E%E6%8E%A5%E4%B8%A4%E6%A3%B5%E6%A0%91%E5%90%8E%E6%9C%80%E5%A4%A7%E7%9B%AE%E6%A0%87%E8%8A%82%E7%82%B9%E6%95%B0%E7%9B%AE%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3374. 首字母大写 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3374.%20%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3374.%20%E9%A6%96%E5%AD%97%E6%AF%8D%E5%A4%A7%E5%86%99%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3375. 使数组的值全部为 K 的最少操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3375.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC%E5%85%A8%E9%83%A8%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3375.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC%E5%85%A8%E9%83%A8%E4%B8%BA%20K%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3376. 破解锁的最少时间 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3376.%20%E7%A0%B4%E8%A7%A3%E9%94%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3376.%20%E7%A0%B4%E8%A7%A3%E9%94%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3377. 使两个整数相等的数位操作【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3377.%20%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%95%B0%E4%BD%8D%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3377.%20%E4%BD%BF%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%95%B0%E4%BD%8D%E6%93%8D%E4%BD%9C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3378. 统计最小公倍数图中的连通块数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3378.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%BF%9E%E9%80%9A%E5%9D%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3378.%20%E7%BB%9F%E8%AE%A1%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E5%9B%BE%E4%B8%AD%E7%9A%84%E8%BF%9E%E9%80%9A%E5%9D%97%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3379. 转换数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3379.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3379.%20%E8%BD%AC%E6%8D%A2%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3380. 用点构造面积最大的矩形 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3380.%20%E7%94%A8%E7%82%B9%E6%9E%84%E9%80%A0%E9%9D%A2%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3380.%20%E7%94%A8%E7%82%B9%E6%9E%84%E9%80%A0%E9%9D%A2%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3381. 长度可被 K 整除的子数组的最大元素和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3381.%20%E9%95%BF%E5%BA%A6%E5%8F%AF%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3381.%20%E9%95%BF%E5%BA%A6%E5%8F%AF%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3382. 用点构造面积最大的矩形 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3382.%20%E7%94%A8%E7%82%B9%E6%9E%84%E9%80%A0%E9%9D%A2%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3382.%20%E7%94%A8%E7%82%B9%E6%9E%84%E9%80%A0%E9%9D%A2%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E7%9F%A9%E5%BD%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3383. 施法所需最低符文数量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3383.%20%E6%96%BD%E6%B3%95%E6%89%80%E9%9C%80%E6%9C%80%E4%BD%8E%E7%AC%A6%E6%96%87%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3383.%20%E6%96%BD%E6%B3%95%E6%89%80%E9%9C%80%E6%9C%80%E4%BD%8E%E7%AC%A6%E6%96%87%E6%95%B0%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3384. 球队传球成功的优势得分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3384.%20%E7%90%83%E9%98%9F%E4%BC%A0%E7%90%83%E6%88%90%E5%8A%9F%E7%9A%84%E4%BC%98%E5%8A%BF%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3384.%20%E7%90%83%E9%98%9F%E4%BC%A0%E7%90%83%E6%88%90%E5%8A%9F%E7%9A%84%E4%BC%98%E5%8A%BF%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3385. 破解锁的最少时间 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3385.%20%E7%A0%B4%E8%A7%A3%E9%94%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3385.%20%E7%A0%B4%E8%A7%A3%E9%94%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3386. 按下时间最长的按钮【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3386.%20%E6%8C%89%E4%B8%8B%E6%97%B6%E9%97%B4%E6%9C%80%E9%95%BF%E7%9A%84%E6%8C%89%E9%92%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3386.%20%E6%8C%89%E4%B8%8B%E6%97%B6%E9%97%B4%E6%9C%80%E9%95%BF%E7%9A%84%E6%8C%89%E9%92%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3387. 两天自由外汇交易后的最大货币数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3387.%20%E4%B8%A4%E5%A4%A9%E8%87%AA%E7%94%B1%E5%A4%96%E6%B1%87%E4%BA%A4%E6%98%93%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B4%A7%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3387.%20%E4%B8%A4%E5%A4%A9%E8%87%AA%E7%94%B1%E5%A4%96%E6%B1%87%E4%BA%A4%E6%98%93%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B4%A7%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3388. 统计数组中的美丽分割【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3388.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%88%86%E5%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3388.%20%E7%BB%9F%E8%AE%A1%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E7%BE%8E%E4%B8%BD%E5%88%86%E5%89%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3389. 使字符频率相等的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3389.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E9%A2%91%E7%8E%87%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3389.%20%E4%BD%BF%E5%AD%97%E7%AC%A6%E9%A2%91%E7%8E%87%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3390. Longest Team Pass Streak【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3390.%20Longest%20Team%20Pass%20Streak%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3390.%20Longest%20Team%20Pass%20Streak%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3391. 设计一个高效的层跟踪三维二进制矩阵【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3391.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E6%95%88%E7%9A%84%E5%B1%82%E8%B7%9F%E8%B8%AA%E4%B8%89%E7%BB%B4%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3391.%20%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%AB%98%E6%95%88%E7%9A%84%E5%B1%82%E8%B7%9F%E8%B8%AA%E4%B8%89%E7%BB%B4%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%9F%A9%E9%98%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3392. 统计符合条件长度为 3 的子数组数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3392.%20%E7%BB%9F%E8%AE%A1%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E9%95%BF%E5%BA%A6%E4%B8%BA%203%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3392.%20%E7%BB%9F%E8%AE%A1%E7%AC%A6%E5%90%88%E6%9D%A1%E4%BB%B6%E9%95%BF%E5%BA%A6%E4%B8%BA%203%20%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3393. 统计异或值为给定值的路径数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3393.%20%E7%BB%9F%E8%AE%A1%E5%BC%82%E6%88%96%E5%80%BC%E4%B8%BA%E7%BB%99%E5%AE%9A%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3393.%20%E7%BB%9F%E8%AE%A1%E5%BC%82%E6%88%96%E5%80%BC%E4%B8%BA%E7%BB%99%E5%AE%9A%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3394. 判断网格图能否被切割成块【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3394.%20%E5%88%A4%E6%96%AD%E7%BD%91%E6%A0%BC%E5%9B%BE%E8%83%BD%E5%90%A6%E8%A2%AB%E5%88%87%E5%89%B2%E6%88%90%E5%9D%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3394.%20%E5%88%A4%E6%96%AD%E7%BD%91%E6%A0%BC%E5%9B%BE%E8%83%BD%E5%90%A6%E8%A2%AB%E5%88%87%E5%89%B2%E6%88%90%E5%9D%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3395. 唯一中间众数子序列 I【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3395.%20%E5%94%AF%E4%B8%80%E4%B8%AD%E9%97%B4%E4%BC%97%E6%95%B0%E5%AD%90%E5%BA%8F%E5%88%97%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3395.%20%E5%94%AF%E4%B8%80%E4%B8%AD%E9%97%B4%E4%BC%97%E6%95%B0%E5%AD%90%E5%BA%8F%E5%88%97%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3396. 使数组元素互不相同所需的最少操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3396.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E4%BA%92%E4%B8%8D%E7%9B%B8%E5%90%8C%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3396.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E4%BA%92%E4%B8%8D%E7%9B%B8%E5%90%8C%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3397. 执行操作后不同元素的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3397.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3397.%20%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%E5%90%8E%E4%B8%8D%E5%90%8C%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3398. 字符相同的最短子字符串 I【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3398.%20%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3398.%20%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3399. 字符相同的最短子字符串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3399.%20%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3399.%20%E5%AD%97%E7%AC%A6%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3400. 右移后的最大匹配索引数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3400.%20%E5%8F%B3%E7%A7%BB%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D%E7%B4%A2%E5%BC%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3400.%20%E5%8F%B3%E7%A7%BB%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D%E7%B4%A2%E5%BC%95%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 36. 3401~3500\\n\\n- [ ] [3401. 寻找环形礼物交换链【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3401.%20%E5%AF%BB%E6%89%BE%E7%8E%AF%E5%BD%A2%E7%A4%BC%E7%89%A9%E4%BA%A4%E6%8D%A2%E9%93%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3401.%20%E5%AF%BB%E6%89%BE%E7%8E%AF%E5%BD%A2%E7%A4%BC%E7%89%A9%E4%BA%A4%E6%8D%A2%E9%93%BE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3402. 使每一列严格递增的最少操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3402.%20%E4%BD%BF%E6%AF%8F%E4%B8%80%E5%88%97%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3402.%20%E4%BD%BF%E6%AF%8F%E4%B8%80%E5%88%97%E4%B8%A5%E6%A0%BC%E9%80%92%E5%A2%9E%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3403. 从盒子中找出字典序最大的字符串 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3403.%20%E4%BB%8E%E7%9B%92%E5%AD%90%E4%B8%AD%E6%89%BE%E5%87%BA%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3403.%20%E4%BB%8E%E7%9B%92%E5%AD%90%E4%B8%AD%E6%89%BE%E5%87%BA%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3404. 统计特殊子序列的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3404.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3404.%20%E7%BB%9F%E8%AE%A1%E7%89%B9%E6%AE%8A%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3405. 统计恰好有 K 个相等相邻元素的数组数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3405.%20%E7%BB%9F%E8%AE%A1%E6%81%B0%E5%A5%BD%E6%9C%89%20K%20%E4%B8%AA%E7%9B%B8%E7%AD%89%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3405.%20%E7%BB%9F%E8%AE%A1%E6%81%B0%E5%A5%BD%E6%9C%89%20K%20%E4%B8%AA%E7%9B%B8%E7%AD%89%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3406. 从盒子中找出字典序最大的字符串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3406.%20%E4%BB%8E%E7%9B%92%E5%AD%90%E4%B8%AD%E6%89%BE%E5%87%BA%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3406.%20%E4%BB%8E%E7%9B%92%E5%AD%90%E4%B8%AD%E6%89%BE%E5%87%BA%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%A4%A7%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3407. 子字符串匹配模式【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3407.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3407.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3408. 设计任务管理器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3408.%20%E8%AE%BE%E8%AE%A1%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3408.%20%E8%AE%BE%E8%AE%A1%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3409. 最长相邻绝对差递减子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3409.%20%E6%9C%80%E9%95%BF%E7%9B%B8%E9%82%BB%E7%BB%9D%E5%AF%B9%E5%B7%AE%E9%80%92%E5%87%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3409.%20%E6%9C%80%E9%95%BF%E7%9B%B8%E9%82%BB%E7%BB%9D%E5%AF%B9%E5%B7%AE%E9%80%92%E5%87%8F%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3410. 删除所有值为某个元素后的最大子数组和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3410.%20%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E5%80%BC%E4%B8%BA%E6%9F%90%E4%B8%AA%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3410.%20%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89%E5%80%BC%E4%B8%BA%E6%9F%90%E4%B8%AA%E5%85%83%E7%B4%A0%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3411. 最长乘积等价子数组【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3411.%20%E6%9C%80%E9%95%BF%E4%B9%98%E7%A7%AF%E7%AD%89%E4%BB%B7%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3411.%20%E6%9C%80%E9%95%BF%E4%B9%98%E7%A7%AF%E7%AD%89%E4%BB%B7%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3412. 计算字符串的镜像分数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3412.%20%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%9C%E5%83%8F%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3412.%20%E8%AE%A1%E7%AE%97%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E9%95%9C%E5%83%8F%E5%88%86%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3413. 收集连续 K 个袋子可以获得的最多硬币数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3413.%20%E6%94%B6%E9%9B%86%E8%BF%9E%E7%BB%AD%20K%20%E4%B8%AA%E8%A2%8B%E5%AD%90%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%9A%E7%A1%AC%E5%B8%81%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3413.%20%E6%94%B6%E9%9B%86%E8%BF%9E%E7%BB%AD%20K%20%E4%B8%AA%E8%A2%8B%E5%AD%90%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%9A%E7%A1%AC%E5%B8%81%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3414. 不重叠区间的最大得分【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3414.%20%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3414.%20%E4%B8%8D%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%BE%97%E5%88%86%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3415. 查找具有三个连续数字的产品【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3415.%20%E6%9F%A5%E6%89%BE%E5%85%B7%E6%9C%89%E4%B8%89%E4%B8%AA%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%AD%97%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3415.%20%E6%9F%A5%E6%89%BE%E5%85%B7%E6%9C%89%E4%B8%89%E4%B8%AA%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%AD%97%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3416. 唯一中间众数子序列 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3416.%20%E5%94%AF%E4%B8%80%E4%B8%AD%E9%97%B4%E4%BC%97%E6%95%B0%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3416.%20%E5%94%AF%E4%B8%80%E4%B8%AD%E9%97%B4%E4%BC%97%E6%95%B0%E5%AD%90%E5%BA%8F%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3417. 跳过交替单元格的之字形遍历【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3417.%20%E8%B7%B3%E8%BF%87%E4%BA%A4%E6%9B%BF%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E4%B9%8B%E5%AD%97%E5%BD%A2%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3417.%20%E8%B7%B3%E8%BF%87%E4%BA%A4%E6%9B%BF%E5%8D%95%E5%85%83%E6%A0%BC%E7%9A%84%E4%B9%8B%E5%AD%97%E5%BD%A2%E9%81%8D%E5%8E%86%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3418. 机器人可以获得的最大金币数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3418.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%87%91%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3418.%20%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%AF%E4%BB%A5%E8%8E%B7%E5%BE%97%E7%9A%84%E6%9C%80%E5%A4%A7%E9%87%91%E5%B8%81%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3419. 图的最大边权的最小值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3419.%20%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BE%B9%E6%9D%83%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3419.%20%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BE%B9%E6%9D%83%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3420. 统计 K 次操作以内得到非递减子数组的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3420.%20%E7%BB%9F%E8%AE%A1%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%86%85%E5%BE%97%E5%88%B0%E9%9D%9E%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3420.%20%E7%BB%9F%E8%AE%A1%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%86%85%E5%BE%97%E5%88%B0%E9%9D%9E%E9%80%92%E5%87%8F%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3421. 查找进步的学生【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3421.%20%E6%9F%A5%E6%89%BE%E8%BF%9B%E6%AD%A5%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3421.%20%E6%9F%A5%E6%89%BE%E8%BF%9B%E6%AD%A5%E7%9A%84%E5%AD%A6%E7%94%9F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3422. 将子数组元素变为相等所需的最小操作数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3422.%20%E5%B0%86%E5%AD%90%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%98%E4%B8%BA%E7%9B%B8%E7%AD%89%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3422.%20%E5%B0%86%E5%AD%90%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%8F%98%E4%B8%BA%E7%9B%B8%E7%AD%89%E6%89%80%E9%9C%80%E7%9A%84%E6%9C%80%E5%B0%8F%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3423. 循环数组中相邻元素的最大差值【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3423.%20%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3423.%20%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9B%B8%E9%82%BB%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3424. 将数组变相同的最小代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3424.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%8F%98%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3424.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%8F%98%E7%9B%B8%E5%90%8C%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3425. 最长特殊路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3425.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3425.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3426. 所有安放棋子方案的曼哈顿距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3426.%20%E6%89%80%E6%9C%89%E5%AE%89%E6%94%BE%E6%A3%8B%E5%AD%90%E6%96%B9%E6%A1%88%E7%9A%84%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3426.%20%E6%89%80%E6%9C%89%E5%AE%89%E6%94%BE%E6%A3%8B%E5%AD%90%E6%96%B9%E6%A1%88%E7%9A%84%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3427. 变长子数组求和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3427.%20%E5%8F%98%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3427.%20%E5%8F%98%E9%95%BF%E5%AD%90%E6%95%B0%E7%BB%84%E6%B1%82%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3428. 最多 K 个元素的子序列的最值之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3428.%20%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3428.%20%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E6%9C%80%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3429. 粉刷房子 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3429.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3429.%20%E7%B2%89%E5%88%B7%E6%88%BF%E5%AD%90%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3430. 最多 K 个元素的子数组的最值之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3430.%20%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3430.%20%E6%9C%80%E5%A4%9A%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%80%BC%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3431. 对数字排序的最小解锁下标【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3431.%20%E5%AF%B9%E6%95%B0%E5%AD%97%E6%8E%92%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E8%A7%A3%E9%94%81%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3431.%20%E5%AF%B9%E6%95%B0%E5%AD%97%E6%8E%92%E5%BA%8F%E7%9A%84%E6%9C%80%E5%B0%8F%E8%A7%A3%E9%94%81%E4%B8%8B%E6%A0%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3432. 统计元素和差值为偶数的分区方案【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3432.%20%E7%BB%9F%E8%AE%A1%E5%85%83%E7%B4%A0%E5%92%8C%E5%B7%AE%E5%80%BC%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E5%88%86%E5%8C%BA%E6%96%B9%E6%A1%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3432.%20%E7%BB%9F%E8%AE%A1%E5%85%83%E7%B4%A0%E5%92%8C%E5%B7%AE%E5%80%BC%E4%B8%BA%E5%81%B6%E6%95%B0%E7%9A%84%E5%88%86%E5%8C%BA%E6%96%B9%E6%A1%88%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3433. 统计用户被提及情况【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3433.%20%E7%BB%9F%E8%AE%A1%E7%94%A8%E6%88%B7%E8%A2%AB%E6%8F%90%E5%8F%8A%E6%83%85%E5%86%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3433.%20%E7%BB%9F%E8%AE%A1%E7%94%A8%E6%88%B7%E8%A2%AB%E6%8F%90%E5%8F%8A%E6%83%85%E5%86%B5%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3434. 子数组操作后的最大频率【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3434.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3434.%20%E5%AD%90%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3435. 最短公共超序列的字母出现频率【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3435.%20%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E8%B6%85%E5%BA%8F%E5%88%97%E7%9A%84%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3435.%20%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E8%B6%85%E5%BA%8F%E5%88%97%E7%9A%84%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3436. 查找合法邮箱【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3436.%20%E6%9F%A5%E6%89%BE%E5%90%88%E6%B3%95%E9%82%AE%E7%AE%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3436.%20%E6%9F%A5%E6%89%BE%E5%90%88%E6%B3%95%E9%82%AE%E7%AE%B1%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3437. 全排列 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3437.%20%E5%85%A8%E6%8E%92%E5%88%97%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3437.%20%E5%85%A8%E6%8E%92%E5%88%97%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3438. 找到字符串中合法的相邻数字【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3438.%20%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%90%88%E6%B3%95%E7%9A%84%E7%9B%B8%E9%82%BB%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3438.%20%E6%89%BE%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E5%90%88%E6%B3%95%E7%9A%84%E7%9B%B8%E9%82%BB%E6%95%B0%E5%AD%97%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3439. 重新安排会议得到最多空余时间 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3439.%20%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E4%BC%9A%E8%AE%AE%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%9A%E7%A9%BA%E4%BD%99%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3439.%20%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E4%BC%9A%E8%AE%AE%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%9A%E7%A9%BA%E4%BD%99%E6%97%B6%E9%97%B4%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3440. 重新安排会议得到最多空余时间 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3440.%20%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E4%BC%9A%E8%AE%AE%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%9A%E7%A9%BA%E4%BD%99%E6%97%B6%E9%97%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3440.%20%E9%87%8D%E6%96%B0%E5%AE%89%E6%8E%92%E4%BC%9A%E8%AE%AE%E5%BE%97%E5%88%B0%E6%9C%80%E5%A4%9A%E7%A9%BA%E4%BD%99%E6%97%B6%E9%97%B4%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3441. 变成好标题的最少代价【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3441.%20%E5%8F%98%E6%88%90%E5%A5%BD%E6%A0%87%E9%A2%98%E7%9A%84%E6%9C%80%E5%B0%91%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3441.%20%E5%8F%98%E6%88%90%E5%A5%BD%E6%A0%87%E9%A2%98%E7%9A%84%E6%9C%80%E5%B0%91%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3442. 奇偶频次间的最大差值 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3442.%20%E5%A5%87%E5%81%B6%E9%A2%91%E6%AC%A1%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3442.%20%E5%A5%87%E5%81%B6%E9%A2%91%E6%AC%A1%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3443. K 次修改后的最大曼哈顿距离【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3443.%20K%20%E6%AC%A1%E4%BF%AE%E6%94%B9%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3443.%20K%20%E6%AC%A1%E4%BF%AE%E6%94%B9%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E6%9B%BC%E5%93%88%E9%A1%BF%E8%B7%9D%E7%A6%BB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3444. 使数组包含目标值倍数的最少增量【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3444.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8C%85%E5%90%AB%E7%9B%AE%E6%A0%87%E5%80%BC%E5%80%8D%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E5%A2%9E%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3444.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%8C%85%E5%90%AB%E7%9B%AE%E6%A0%87%E5%80%BC%E5%80%8D%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%91%E5%A2%9E%E9%87%8F%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3445. 奇偶频次间的最大差值 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3445.%20%E5%A5%87%E5%81%B6%E9%A2%91%E6%AC%A1%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3445.%20%E5%A5%87%E5%81%B6%E9%A2%91%E6%AC%A1%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3446. 按对角线进行矩阵排序【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3446.%20%E6%8C%89%E5%AF%B9%E8%A7%92%E7%BA%BF%E8%BF%9B%E8%A1%8C%E7%9F%A9%E9%98%B5%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3446.%20%E6%8C%89%E5%AF%B9%E8%A7%92%E7%BA%BF%E8%BF%9B%E8%A1%8C%E7%9F%A9%E9%98%B5%E6%8E%92%E5%BA%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3447. 将元素分配给有约束条件的组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3447.%20%E5%B0%86%E5%85%83%E7%B4%A0%E5%88%86%E9%85%8D%E7%BB%99%E6%9C%89%E7%BA%A6%E6%9D%9F%E6%9D%A1%E4%BB%B6%E7%9A%84%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3447.%20%E5%B0%86%E5%85%83%E7%B4%A0%E5%88%86%E9%85%8D%E7%BB%99%E6%9C%89%E7%BA%A6%E6%9D%9F%E6%9D%A1%E4%BB%B6%E7%9A%84%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3448. 统计可以被最后一个数位整除的子字符串数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3448.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%95%B0%E4%BD%8D%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3448.%20%E7%BB%9F%E8%AE%A1%E5%8F%AF%E4%BB%A5%E8%A2%AB%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E6%95%B0%E4%BD%8D%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3449. 最大化游戏分数的最小值【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3449.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E6%B8%B8%E6%88%8F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3449.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E6%B8%B8%E6%88%8F%E5%88%86%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3450. 一张长椅上的最多学生【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3450.%20%E4%B8%80%E5%BC%A0%E9%95%BF%E6%A4%85%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%9A%E5%AD%A6%E7%94%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3450.%20%E4%B8%80%E5%BC%A0%E9%95%BF%E6%A4%85%E4%B8%8A%E7%9A%84%E6%9C%80%E5%A4%9A%E5%AD%A6%E7%94%9F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3451. 查找无效的 IP 地址【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3451.%20%E6%9F%A5%E6%89%BE%E6%97%A0%E6%95%88%E7%9A%84%20IP%20%E5%9C%B0%E5%9D%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3451.%20%E6%9F%A5%E6%89%BE%E6%97%A0%E6%95%88%E7%9A%84%20IP%20%E5%9C%B0%E5%9D%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3452. 好数字之和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3452.%20%E5%A5%BD%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3452.%20%E5%A5%BD%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3453. 分割正方形 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3453.%20%E5%88%86%E5%89%B2%E6%AD%A3%E6%96%B9%E5%BD%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3453.%20%E5%88%86%E5%89%B2%E6%AD%A3%E6%96%B9%E5%BD%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3454. 分割正方形 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3454.%20%E5%88%86%E5%89%B2%E6%AD%A3%E6%96%B9%E5%BD%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3454.%20%E5%88%86%E5%89%B2%E6%AD%A3%E6%96%B9%E5%BD%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3455. 最短匹配子字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3455.%20%E6%9C%80%E7%9F%AD%E5%8C%B9%E9%85%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3455.%20%E6%9C%80%E7%9F%AD%E5%8C%B9%E9%85%8D%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3456. 找出长度为 K 的特殊子字符串【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3456.%20%E6%89%BE%E5%87%BA%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3456.%20%E6%89%BE%E5%87%BA%E9%95%BF%E5%BA%A6%E4%B8%BA%20K%20%E7%9A%84%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3457. 吃披萨【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3457.%20%E5%90%83%E6%8A%AB%E8%90%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3457.%20%E5%90%83%E6%8A%AB%E8%90%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3458. 选择 K 个互不重叠的特殊子字符串【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3458.%20%E9%80%89%E6%8B%A9%20K%20%E4%B8%AA%E4%BA%92%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3458.%20%E9%80%89%E6%8B%A9%20K%20%E4%B8%AA%E4%BA%92%E4%B8%8D%E9%87%8D%E5%8F%A0%E7%9A%84%E7%89%B9%E6%AE%8A%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3459. 最长 V 形对角线段的长度【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3459.%20%E6%9C%80%E9%95%BF%20V%20%E5%BD%A2%E5%AF%B9%E8%A7%92%E7%BA%BF%E6%AE%B5%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3459.%20%E6%9C%80%E9%95%BF%20V%20%E5%BD%A2%E5%AF%B9%E8%A7%92%E7%BA%BF%E6%AE%B5%E7%9A%84%E9%95%BF%E5%BA%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3460. 最多删除一次后的最长公共前缀【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3460.%20%E6%9C%80%E5%A4%9A%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3460.%20%E6%9C%80%E5%A4%9A%E5%88%A0%E9%99%A4%E4%B8%80%E6%AC%A1%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3461. 判断操作后字符串中的数字是否相等 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3461.%20%E5%88%A4%E6%96%AD%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3461.%20%E5%88%A4%E6%96%AD%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3462. 提取至多 K 个元素的最大总和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3462.%20%E6%8F%90%E5%8F%96%E8%87%B3%E5%A4%9A%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3462.%20%E6%8F%90%E5%8F%96%E8%87%B3%E5%A4%9A%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%A4%A7%E6%80%BB%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3463. 判断操作后字符串中的数字是否相等 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3463.%20%E5%88%A4%E6%96%AD%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3463.%20%E5%88%A4%E6%96%AD%E6%93%8D%E4%BD%9C%E5%90%8E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97%E6%98%AF%E5%90%A6%E7%9B%B8%E7%AD%89%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3464. 正方形上的点之间的最大距离【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3464.%20%E6%AD%A3%E6%96%B9%E5%BD%A2%E4%B8%8A%E7%9A%84%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3464.%20%E6%AD%A3%E6%96%B9%E5%BD%A2%E4%B8%8A%E7%9A%84%E7%82%B9%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3465. 查找具有有效序列号的产品【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3465.%20%E6%9F%A5%E6%89%BE%E5%85%B7%E6%9C%89%E6%9C%89%E6%95%88%E5%BA%8F%E5%88%97%E5%8F%B7%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3465.%20%E6%9F%A5%E6%89%BE%E5%85%B7%E6%9C%89%E6%9C%89%E6%95%88%E5%BA%8F%E5%88%97%E5%8F%B7%E7%9A%84%E4%BA%A7%E5%93%81%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3466. 最大硬币收集量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3466.%20%E6%9C%80%E5%A4%A7%E7%A1%AC%E5%B8%81%E6%94%B6%E9%9B%86%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3466.%20%E6%9C%80%E5%A4%A7%E7%A1%AC%E5%B8%81%E6%94%B6%E9%9B%86%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3467. 将数组按照奇偶性转化【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3467.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%8C%89%E7%85%A7%E5%A5%87%E5%81%B6%E6%80%A7%E8%BD%AC%E5%8C%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3467.%20%E5%B0%86%E6%95%B0%E7%BB%84%E6%8C%89%E7%85%A7%E5%A5%87%E5%81%B6%E6%80%A7%E8%BD%AC%E5%8C%96%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3468. 可行数组的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3468.%20%E5%8F%AF%E8%A1%8C%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3468.%20%E5%8F%AF%E8%A1%8C%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3469. 移除所有数组元素的最小代价【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3469.%20%E7%A7%BB%E9%99%A4%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3469.%20%E7%A7%BB%E9%99%A4%E6%89%80%E6%9C%89%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3470. 全排列 IV【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3470.%20%E5%85%A8%E6%8E%92%E5%88%97%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3470.%20%E5%85%A8%E6%8E%92%E5%88%97%20IV%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3471. 找出最大的几近缺失整数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3471.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%A4%A7%E7%9A%84%E5%87%A0%E8%BF%91%E7%BC%BA%E5%A4%B1%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3471.%20%E6%89%BE%E5%87%BA%E6%9C%80%E5%A4%A7%E7%9A%84%E5%87%A0%E8%BF%91%E7%BC%BA%E5%A4%B1%E6%95%B4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3472. 至多 K 次操作后的最长回文子序列【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3472.%20%E8%87%B3%E5%A4%9A%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3472.%20%E8%87%B3%E5%A4%9A%20K%20%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E5%BA%8F%E5%88%97%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3473. 长度至少为 M 的 K 个子数组之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3473.%20%E9%95%BF%E5%BA%A6%E8%87%B3%E5%B0%91%E4%B8%BA%20M%20%E7%9A%84%20K%20%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3473.%20%E9%95%BF%E5%BA%A6%E8%87%B3%E5%B0%91%E4%B8%BA%20M%20%E7%9A%84%20K%20%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3474. 字典序最小的生成字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3474.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E7%94%9F%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3474.%20%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E7%94%9F%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3475. DNA 模式识别【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3475.%20DNA%20%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3475.%20DNA%20%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3476. 最大化任务分配的利润【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3476.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E4%BB%BB%E5%8A%A1%E5%88%86%E9%85%8D%E7%9A%84%E5%88%A9%E6%B6%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3476.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E4%BB%BB%E5%8A%A1%E5%88%86%E9%85%8D%E7%9A%84%E5%88%A9%E6%B6%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3477. 水果成篮 II【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3477.%20%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3477.%20%E6%B0%B4%E6%9E%9C%E6%88%90%E7%AF%AE%20II%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3478. 选出和最大的 K 个元素【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3478.%20%E9%80%89%E5%87%BA%E5%92%8C%E6%9C%80%E5%A4%A7%E7%9A%84%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3478.%20%E9%80%89%E5%87%BA%E5%92%8C%E6%9C%80%E5%A4%A7%E7%9A%84%20K%20%E4%B8%AA%E5%85%83%E7%B4%A0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3479. 将水果装入篮子 III【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3479.%20%E5%B0%86%E6%B0%B4%E6%9E%9C%E8%A3%85%E5%85%A5%E7%AF%AE%E5%AD%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3479.%20%E5%B0%86%E6%B0%B4%E6%9E%9C%E8%A3%85%E5%85%A5%E7%AF%AE%E5%AD%90%20III%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3480. 删除一个冲突对后最大子数组数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3480.%20%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%86%B2%E7%AA%81%E5%AF%B9%E5%90%8E%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3480.%20%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%86%B2%E7%AA%81%E5%AF%B9%E5%90%8E%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3481. 应用替换【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3481.%20%E5%BA%94%E7%94%A8%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3481.%20%E5%BA%94%E7%94%A8%E6%9B%BF%E6%8D%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3482. 分析组织层级【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3482.%20%E5%88%86%E6%9E%90%E7%BB%84%E7%BB%87%E5%B1%82%E7%BA%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3482.%20%E5%88%86%E6%9E%90%E7%BB%84%E7%BB%87%E5%B1%82%E7%BA%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3483. 不同三位偶数的数目【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3483.%20%E4%B8%8D%E5%90%8C%E4%B8%89%E4%BD%8D%E5%81%B6%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3483.%20%E4%B8%8D%E5%90%8C%E4%B8%89%E4%BD%8D%E5%81%B6%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3484. 设计电子表格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3484.%20%E8%AE%BE%E8%AE%A1%E7%94%B5%E5%AD%90%E8%A1%A8%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3484.%20%E8%AE%BE%E8%AE%A1%E7%94%B5%E5%AD%90%E8%A1%A8%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3485. 删除元素后 K 个字符串的最长公共前缀【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3485.%20%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E5%90%8E%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3485.%20%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0%E5%90%8E%20K%20%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3486. 最长特殊路径 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3486.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E8%B7%AF%E5%BE%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3486.%20%E6%9C%80%E9%95%BF%E7%89%B9%E6%AE%8A%E8%B7%AF%E5%BE%84%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3487. 删除后的最大子数组元素和【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3487.%20%E5%88%A0%E9%99%A4%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3487.%20%E5%88%A0%E9%99%A4%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E5%92%8C%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3488. 距离最小相等元素查询【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3488.%20%E8%B7%9D%E7%A6%BB%E6%9C%80%E5%B0%8F%E7%9B%B8%E7%AD%89%E5%85%83%E7%B4%A0%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3488.%20%E8%B7%9D%E7%A6%BB%E6%9C%80%E5%B0%8F%E7%9B%B8%E7%AD%89%E5%85%83%E7%B4%A0%E6%9F%A5%E8%AF%A2%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3489. 零数组变换 IV【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3489.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3489.%20%E9%9B%B6%E6%95%B0%E7%BB%84%E5%8F%98%E6%8D%A2%20IV%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3490. 统计美丽整数的数目【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3490.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3490.%20%E7%BB%9F%E8%AE%A1%E7%BE%8E%E4%B8%BD%E6%95%B4%E6%95%B0%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3491. 电话号码前缀【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3491.%20%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3491.%20%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E5%89%8D%E7%BC%80%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3492. 船上可以装载的最大集装箱数量【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3492.%20%E8%88%B9%E4%B8%8A%E5%8F%AF%E4%BB%A5%E8%A3%85%E8%BD%BD%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9B%86%E8%A3%85%E7%AE%B1%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3492.%20%E8%88%B9%E4%B8%8A%E5%8F%AF%E4%BB%A5%E8%A3%85%E8%BD%BD%E7%9A%84%E6%9C%80%E5%A4%A7%E9%9B%86%E8%A3%85%E7%AE%B1%E6%95%B0%E9%87%8F%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3493. 属性图【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3493.%20%E5%B1%9E%E6%80%A7%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3493.%20%E5%B1%9E%E6%80%A7%E5%9B%BE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3494. 酿造药水需要的最少总时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3494.%20%E9%85%BF%E9%80%A0%E8%8D%AF%E6%B0%B4%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3494.%20%E9%85%BF%E9%80%A0%E8%8D%AF%E6%B0%B4%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%91%E6%80%BB%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3495. 使数组元素都变为零的最少操作次数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3495.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E9%83%BD%E5%8F%98%E4%B8%BA%E9%9B%B6%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3495.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E9%83%BD%E5%8F%98%E4%B8%BA%E9%9B%B6%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3496. 最大化配对删除后的得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3496.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E9%85%8D%E5%AF%B9%E5%88%A0%E9%99%A4%E5%90%8E%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3496.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E9%85%8D%E5%AF%B9%E5%88%A0%E9%99%A4%E5%90%8E%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3497. 分析订阅转化【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3497.%20%E5%88%86%E6%9E%90%E8%AE%A2%E9%98%85%E8%BD%AC%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3497.%20%E5%88%86%E6%9E%90%E8%AE%A2%E9%98%85%E8%BD%AC%E5%8C%96%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3498. 字符串的反转度【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3498.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3498.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%8F%8D%E8%BD%AC%E5%BA%A6%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3499. 操作后最大活跃区段数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3499.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E6%B4%BB%E8%B7%83%E5%8C%BA%E6%AE%B5%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3499.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E6%B4%BB%E8%B7%83%E5%8C%BA%E6%AE%B5%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3500. 将数组分割为子数组的最小代价【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3500.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2%E4%B8%BA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3500.%20%E5%B0%86%E6%95%B0%E7%BB%84%E5%88%86%E5%89%B2%E4%B8%BA%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BB%A3%E4%BB%B7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n\\n## 37. 3501~3600\\n\\n- [ ] [3501. 操作后最大活跃区段数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3501.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E6%B4%BB%E8%B7%83%E5%8C%BA%E6%AE%B5%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3501.%20%E6%93%8D%E4%BD%9C%E5%90%8E%E6%9C%80%E5%A4%A7%E6%B4%BB%E8%B7%83%E5%8C%BA%E6%AE%B5%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3502. 到达每个位置的最小费用【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3502.%20%E5%88%B0%E8%BE%BE%E6%AF%8F%E4%B8%AA%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3502.%20%E5%88%B0%E8%BE%BE%E6%AF%8F%E4%B8%AA%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%9C%80%E5%B0%8F%E8%B4%B9%E7%94%A8%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3503. 子字符串连接后的最长回文串 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3503.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3503.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3504. 子字符串连接后的最长回文串 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3504.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3504.%20%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9E%E6%8E%A5%E5%90%8E%E7%9A%84%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3505. 使 K 个子数组内元素相等的最少操作数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3505.%20%E4%BD%BF%20K%20%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E5%86%85%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3505.%20%E4%BD%BF%20K%20%E4%B8%AA%E5%AD%90%E6%95%B0%E7%BB%84%E5%86%85%E5%85%83%E7%B4%A0%E7%9B%B8%E7%AD%89%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3506. 查找消除细菌菌株所需时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3506.%20%E6%9F%A5%E6%89%BE%E6%B6%88%E9%99%A4%E7%BB%86%E8%8F%8C%E8%8F%8C%E6%A0%AA%E6%89%80%E9%9C%80%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3506.%20%E6%9F%A5%E6%89%BE%E6%B6%88%E9%99%A4%E7%BB%86%E8%8F%8C%E8%8F%8C%E6%A0%AA%E6%89%80%E9%9C%80%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3507. 移除最小数对使数组有序 I【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3507.%20%E7%A7%BB%E9%99%A4%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AF%B9%E4%BD%BF%E6%95%B0%E7%BB%84%E6%9C%89%E5%BA%8F%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3507.%20%E7%A7%BB%E9%99%A4%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AF%B9%E4%BD%BF%E6%95%B0%E7%BB%84%E6%9C%89%E5%BA%8F%20I%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3508. 设计路由器【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3508.%20%E8%AE%BE%E8%AE%A1%E8%B7%AF%E7%94%B1%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3508.%20%E8%AE%BE%E8%AE%A1%E8%B7%AF%E7%94%B1%E5%99%A8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3509. 最大化交错和为 K 的子序列乘积【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3509.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E4%BA%A4%E9%94%99%E5%92%8C%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3509.%20%E6%9C%80%E5%A4%A7%E5%8C%96%E4%BA%A4%E9%94%99%E5%92%8C%E4%B8%BA%20K%20%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97%E4%B9%98%E7%A7%AF%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3510. 移除最小数对使数组有序 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3510.%20%E7%A7%BB%E9%99%A4%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AF%B9%E4%BD%BF%E6%95%B0%E7%BB%84%E6%9C%89%E5%BA%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3510.%20%E7%A7%BB%E9%99%A4%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AF%B9%E4%BD%BF%E6%95%B0%E7%BB%84%E6%9C%89%E5%BA%8F%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3511. 构造正数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3511.%20%E6%9E%84%E9%80%A0%E6%AD%A3%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3511.%20%E6%9E%84%E9%80%A0%E6%AD%A3%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3512. 使数组和能被 K 整除的最少操作次数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3512.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%92%8C%E8%83%BD%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3512.%20%E4%BD%BF%E6%95%B0%E7%BB%84%E5%92%8C%E8%83%BD%E8%A2%AB%20K%20%E6%95%B4%E9%99%A4%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3513. 不同 XOR 三元组的数目 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3513.%20%E4%B8%8D%E5%90%8C%20XOR%20%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3513.%20%E4%B8%8D%E5%90%8C%20XOR%20%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3514. 不同 XOR 三元组的数目 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3514.%20%E4%B8%8D%E5%90%8C%20XOR%20%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3514.%20%E4%B8%8D%E5%90%8C%20XOR%20%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%95%B0%E7%9B%AE%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3515. 带权树中的最短路径【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3515.%20%E5%B8%A6%E6%9D%83%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3515.%20%E5%B8%A6%E6%9D%83%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3516. 找到最近的人【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3516.%20%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3516.%20%E6%89%BE%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E4%BA%BA%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3517. 最小回文排列 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3517.%20%E6%9C%80%E5%B0%8F%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3517.%20%E6%9C%80%E5%B0%8F%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3518. 最小回文排列 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3518.%20%E6%9C%80%E5%B0%8F%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3518.%20%E6%9C%80%E5%B0%8F%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3519. 统计逐位非递减的整数【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3519.%20%E7%BB%9F%E8%AE%A1%E9%80%90%E4%BD%8D%E9%9D%9E%E9%80%92%E5%87%8F%E7%9A%84%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3519.%20%E7%BB%9F%E8%AE%A1%E9%80%90%E4%BD%8D%E9%9D%9E%E9%80%92%E5%87%8F%E7%9A%84%E6%95%B4%E6%95%B0%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3520. 逆序对计数的最小阈值【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3520.%20%E9%80%86%E5%BA%8F%E5%AF%B9%E8%AE%A1%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E9%98%88%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3520.%20%E9%80%86%E5%BA%8F%E5%AF%B9%E8%AE%A1%E6%95%B0%E7%9A%84%E6%9C%80%E5%B0%8F%E9%98%88%E5%80%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3521. 查找推荐产品对【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3521.%20%E6%9F%A5%E6%89%BE%E6%8E%A8%E8%8D%90%E4%BA%A7%E5%93%81%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3521.%20%E6%9F%A5%E6%89%BE%E6%8E%A8%E8%8D%90%E4%BA%A7%E5%93%81%E5%AF%B9%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3522. 执行指令后的得分【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3522.%20%E6%89%A7%E8%A1%8C%E6%8C%87%E4%BB%A4%E5%90%8E%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3522.%20%E6%89%A7%E8%A1%8C%E6%8C%87%E4%BB%A4%E5%90%8E%E7%9A%84%E5%BE%97%E5%88%86%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3523. 非递减数组的最大长度【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3523.%20%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3523.%20%E9%9D%9E%E9%80%92%E5%87%8F%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3524. 求出数组的 X 值 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3524.%20%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%20X%20%E5%80%BC%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3524.%20%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%20X%20%E5%80%BC%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3525. 求出数组的 X 值 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3525.%20%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%20X%20%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3525.%20%E6%B1%82%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%20X%20%E5%80%BC%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3526. 范围异或查询与子数组反转【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3526.%20%E8%8C%83%E5%9B%B4%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2%E4%B8%8E%E5%AD%90%E6%95%B0%E7%BB%84%E5%8F%8D%E8%BD%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3526.%20%E8%8C%83%E5%9B%B4%E5%BC%82%E6%88%96%E6%9F%A5%E8%AF%A2%E4%B8%8E%E5%AD%90%E6%95%B0%E7%BB%84%E5%8F%8D%E8%BD%AC%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3527. 找到最常见的回答【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3527.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9E%E7%AD%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3527.%20%E6%89%BE%E5%88%B0%E6%9C%80%E5%B8%B8%E8%A7%81%E7%9A%84%E5%9B%9E%E7%AD%94%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3528. 单位转换 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3528.%20%E5%8D%95%E4%BD%8D%E8%BD%AC%E6%8D%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3528.%20%E5%8D%95%E4%BD%8D%E8%BD%AC%E6%8D%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3529. 统计水平子串和垂直子串重叠格子的数目【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3529.%20%E7%BB%9F%E8%AE%A1%E6%B0%B4%E5%B9%B3%E5%AD%90%E4%B8%B2%E5%92%8C%E5%9E%82%E7%9B%B4%E5%AD%90%E4%B8%B2%E9%87%8D%E5%8F%A0%E6%A0%BC%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3529.%20%E7%BB%9F%E8%AE%A1%E6%B0%B4%E5%B9%B3%E5%AD%90%E4%B8%B2%E5%92%8C%E5%9E%82%E7%9B%B4%E5%AD%90%E4%B8%B2%E9%87%8D%E5%8F%A0%E6%A0%BC%E5%AD%90%E7%9A%84%E6%95%B0%E7%9B%AE%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3530. 有向无环图中合法拓扑排序的最大利润【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3530.%20%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE%E4%B8%AD%E5%90%88%E6%B3%95%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3530.%20%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE%E4%B8%AD%E5%90%88%E6%B3%95%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3531. 统计被覆盖的建筑【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3531.%20%E7%BB%9F%E8%AE%A1%E8%A2%AB%E8%A6%86%E7%9B%96%E7%9A%84%E5%BB%BA%E7%AD%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3531.%20%E7%BB%9F%E8%AE%A1%E8%A2%AB%E8%A6%86%E7%9B%96%E7%9A%84%E5%BB%BA%E7%AD%91%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3532. 针对图的路径存在性查询 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3532.%20%E9%92%88%E5%AF%B9%E5%9B%BE%E7%9A%84%E8%B7%AF%E5%BE%84%E5%AD%98%E5%9C%A8%E6%80%A7%E6%9F%A5%E8%AF%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3532.%20%E9%92%88%E5%AF%B9%E5%9B%BE%E7%9A%84%E8%B7%AF%E5%BE%84%E5%AD%98%E5%9C%A8%E6%80%A7%E6%9F%A5%E8%AF%A2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3533. 判断连接可整除性【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3533.%20%E5%88%A4%E6%96%AD%E8%BF%9E%E6%8E%A5%E5%8F%AF%E6%95%B4%E9%99%A4%E6%80%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3533.%20%E5%88%A4%E6%96%AD%E8%BF%9E%E6%8E%A5%E5%8F%AF%E6%95%B4%E9%99%A4%E6%80%A7%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3534. 针对图的路径存在性查询 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3534.%20%E9%92%88%E5%AF%B9%E5%9B%BE%E7%9A%84%E8%B7%AF%E5%BE%84%E5%AD%98%E5%9C%A8%E6%80%A7%E6%9F%A5%E8%AF%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3534.%20%E9%92%88%E5%AF%B9%E5%9B%BE%E7%9A%84%E8%B7%AF%E5%BE%84%E5%AD%98%E5%9C%A8%E6%80%A7%E6%9F%A5%E8%AF%A2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3535. 单位转换 II【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3535.%20%E5%8D%95%E4%BD%8D%E8%BD%AC%E6%8D%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3535.%20%E5%8D%95%E4%BD%8D%E8%BD%AC%E6%8D%A2%20II%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3536. 两个数字的最大乘积【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3536.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3536.%20%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3537. 填充特殊网格【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3537.%20%E5%A1%AB%E5%85%85%E7%89%B9%E6%AE%8A%E7%BD%91%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3537.%20%E5%A1%AB%E5%85%85%E7%89%B9%E6%AE%8A%E7%BD%91%E6%A0%BC%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3538. 合并得到最小旅行时间【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3538.%20%E5%90%88%E5%B9%B6%E5%BE%97%E5%88%B0%E6%9C%80%E5%B0%8F%E6%97%85%E8%A1%8C%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3538.%20%E5%90%88%E5%B9%B6%E5%BE%97%E5%88%B0%E6%9C%80%E5%B0%8F%E6%97%85%E8%A1%8C%E6%97%B6%E9%97%B4%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3539. 魔法序列的数组乘积之和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3539.%20%E9%AD%94%E6%B3%95%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%BB%84%E4%B9%98%E7%A7%AF%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3539.%20%E9%AD%94%E6%B3%95%E5%BA%8F%E5%88%97%E7%9A%84%E6%95%B0%E7%BB%84%E4%B9%98%E7%A7%AF%E4%B9%8B%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3540. 访问所有房屋的最短时间【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3540.%20%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E6%88%BF%E5%B1%8B%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3540.%20%E8%AE%BF%E9%97%AE%E6%89%80%E6%9C%89%E6%88%BF%E5%B1%8B%E7%9A%84%E6%9C%80%E7%9F%AD%E6%97%B6%E9%97%B4%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3541. 找到频率最高的元音和辅音【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3541.%20%E6%89%BE%E5%88%B0%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E5%85%83%E9%9F%B3%E5%92%8C%E8%BE%85%E9%9F%B3%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3541.%20%E6%89%BE%E5%88%B0%E9%A2%91%E7%8E%87%E6%9C%80%E9%AB%98%E7%9A%84%E5%85%83%E9%9F%B3%E5%92%8C%E8%BE%85%E9%9F%B3%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3542. 将所有元素变为 0 的最少操作次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3542.%20%E5%B0%86%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%8F%98%E4%B8%BA%200%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3542.%20%E5%B0%86%E6%89%80%E6%9C%89%E5%85%83%E7%B4%A0%E5%8F%98%E4%B8%BA%200%20%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3543. K 条边路径的最大边权和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3543.%20K%20%E6%9D%A1%E8%BE%B9%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BE%B9%E6%9D%83%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3543.%20K%20%E6%9D%A1%E8%BE%B9%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%A4%A7%E8%BE%B9%E6%9D%83%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3544. 子树反转和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3544.%20%E5%AD%90%E6%A0%91%E5%8F%8D%E8%BD%AC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3544.%20%E5%AD%90%E6%A0%91%E5%8F%8D%E8%BD%AC%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3545. 不同字符数量最多为 K 时的最少删除数【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3545.%20%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E6%95%B0%E9%87%8F%E6%9C%80%E5%A4%9A%E4%B8%BA%20K%20%E6%97%B6%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3545.%20%E4%B8%8D%E5%90%8C%E5%AD%97%E7%AC%A6%E6%95%B0%E9%87%8F%E6%9C%80%E5%A4%9A%E4%B8%BA%20K%20%E6%97%B6%E7%9A%84%E6%9C%80%E5%B0%91%E5%88%A0%E9%99%A4%E6%95%B0%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3546. 等和矩阵分割 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3546.%20%E7%AD%89%E5%92%8C%E7%9F%A9%E9%98%B5%E5%88%86%E5%89%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3546.%20%E7%AD%89%E5%92%8C%E7%9F%A9%E9%98%B5%E5%88%86%E5%89%B2%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3547. 图中边值的最大和【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3547.%20%E5%9B%BE%E4%B8%AD%E8%BE%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3547.%20%E5%9B%BE%E4%B8%AD%E8%BE%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3548. 等和矩阵分割 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3548.%20%E7%AD%89%E5%92%8C%E7%9F%A9%E9%98%B5%E5%88%86%E5%89%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3548.%20%E7%AD%89%E5%92%8C%E7%9F%A9%E9%98%B5%E5%88%86%E5%89%B2%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3549. 两个多项式相乘【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3549.%20%E4%B8%A4%E4%B8%AA%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%9B%B8%E4%B9%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3549.%20%E4%B8%A4%E4%B8%AA%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%9B%B8%E4%B9%98%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3550. 数位和等于下标的最小下标【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3550.%20%E6%95%B0%E4%BD%8D%E5%92%8C%E7%AD%89%E4%BA%8E%E4%B8%8B%E6%A0%87%E7%9A%84%E6%9C%80%E5%B0%8F%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3550.%20%E6%95%B0%E4%BD%8D%E5%92%8C%E7%AD%89%E4%BA%8E%E4%B8%8B%E6%A0%87%E7%9A%84%E6%9C%80%E5%B0%8F%E4%B8%8B%E6%A0%87%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3551. 数位和排序需要的最小交换次数【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3551.%20%E6%95%B0%E4%BD%8D%E5%92%8C%E6%8E%92%E5%BA%8F%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3551.%20%E6%95%B0%E4%BD%8D%E5%92%8C%E6%8E%92%E5%BA%8F%E9%9C%80%E8%A6%81%E7%9A%84%E6%9C%80%E5%B0%8F%E4%BA%A4%E6%8D%A2%E6%AC%A1%E6%95%B0%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3552. 网格传送门旅游【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3552.%20%E7%BD%91%E6%A0%BC%E4%BC%A0%E9%80%81%E9%97%A8%E6%97%85%E6%B8%B8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3552.%20%E7%BD%91%E6%A0%BC%E4%BC%A0%E9%80%81%E9%97%A8%E6%97%85%E6%B8%B8%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3553. 包含给定路径的最小带权子树 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3553.%20%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B8%A6%E6%9D%83%E5%AD%90%E6%A0%91%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3553.%20%E5%8C%85%E5%90%AB%E7%BB%99%E5%AE%9A%E8%B7%AF%E5%BE%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%B8%A6%E6%9D%83%E5%AD%90%E6%A0%91%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3554. 查找类别推荐对【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3554.%20%E6%9F%A5%E6%89%BE%E7%B1%BB%E5%88%AB%E6%8E%A8%E8%8D%90%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3554.%20%E6%9F%A5%E6%89%BE%E7%B1%BB%E5%88%AB%E6%8E%A8%E8%8D%90%E5%AF%B9%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3555. 排序每个滑动窗口中最小的子数组【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3555.%20%E6%8E%92%E5%BA%8F%E6%AF%8F%E4%B8%AA%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3555.%20%E6%8E%92%E5%BA%8F%E6%AF%8F%E4%B8%AA%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%AD%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3556. 最大质数子字符串之和【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3556.%20%E6%9C%80%E5%A4%A7%E8%B4%A8%E6%95%B0%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3556.%20%E6%9C%80%E5%A4%A7%E8%B4%A8%E6%95%B0%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B9%8B%E5%92%8C%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3557. 不相交子字符串的最大数量【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3557.%20%E4%B8%8D%E7%9B%B8%E4%BA%A4%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3557.%20%E4%B8%8D%E7%9B%B8%E4%BA%A4%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3558. 给边赋权值的方案数 I【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3558.%20%E7%BB%99%E8%BE%B9%E8%B5%8B%E6%9D%83%E5%80%BC%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3558.%20%E7%BB%99%E8%BE%B9%E8%B5%8B%E6%9D%83%E5%80%BC%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20I%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3559. 给边赋权值的方案数 II【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3559.%20%E7%BB%99%E8%BE%B9%E8%B5%8B%E6%9D%83%E5%80%BC%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3559.%20%E7%BB%99%E8%BE%B9%E8%B5%8B%E6%9D%83%E5%80%BC%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0%20II%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3560. 木材运输的最小成本【简单】](https://tdahuyou.github.io/TNotes.leetcode/notes/3560.%20%E6%9C%A8%E6%9D%90%E8%BF%90%E8%BE%93%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3560.%20%E6%9C%A8%E6%9D%90%E8%BF%90%E8%BE%93%E7%9A%84%E6%9C%80%E5%B0%8F%E6%88%90%E6%9C%AC%E3%80%90%E7%AE%80%E5%8D%95%E3%80%91/README#1--概述)\\n- [ ] [3561. 移除相邻字符【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3561.%20%E7%A7%BB%E9%99%A4%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3561.%20%E7%A7%BB%E9%99%A4%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n- [ ] [3562. 折扣价交易股票的最大利润【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3562.%20%E6%8A%98%E6%89%A3%E4%BB%B7%E4%BA%A4%E6%98%93%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3562.%20%E6%8A%98%E6%89%A3%E4%BB%B7%E4%BA%A4%E6%98%93%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3563. 移除相邻字符后字典序最小的字符串【困难】](https://tdahuyou.github.io/TNotes.leetcode/notes/3563.%20%E7%A7%BB%E9%99%A4%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3563.%20%E7%A7%BB%E9%99%A4%E7%9B%B8%E9%82%BB%E5%AD%97%E7%AC%A6%E5%90%8E%E5%AD%97%E5%85%B8%E5%BA%8F%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%90%E5%9B%B0%E9%9A%BE%E3%80%91/README#1--概述)\\n- [ ] [3564. 季节性销售分析【中等】](https://tdahuyou.github.io/TNotes.leetcode/notes/3564.%20%E5%AD%A3%E8%8A%82%E6%80%A7%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README)\\n  - [1. 📝 概述](https://tdahuyou.github.io/TNotes.leetcode/notes/3564.%20%E5%AD%A3%E8%8A%82%E6%80%A7%E9%94%80%E5%94%AE%E5%88%86%E6%9E%90%E3%80%90%E4%B8%AD%E7%AD%89%E3%80%91/README#1--概述)\\n\\n## 38. 3601-3700\\n\\n- [ ] [3606. 优惠券校验器](https://tdahuyou.github.io/TNotes.leetcode/notes/3606.%20%E4%BC%98%E6%83%A0%E5%88%B8%E6%A0%A1%E9%AA%8C%E5%99%A8/README)\\n  - [1. 📝 Description](https://tdahuyou.github.io/TNotes.leetcode/notes/3606.%20%E4%BC%98%E6%83%A0%E5%88%B8%E6%A0%A1%E9%AA%8C%E5%99%A8/README#1--description)\\n  - [2. 🎯 Solutions.1 - 暴力解法](https://tdahuyou.github.io/TNotes.leetcode/notes/3606.%20%E4%BC%98%E6%83%A0%E5%88%B8%E6%A0%A1%E9%AA%8C%E5%99%A8/README#2--solutions1---暴力解法)\\n  - [3. 🔗 References](https://tdahuyou.github.io/TNotes.leetcode/notes/3606.%20%E4%BC%98%E6%83%A0%E5%88%B8%E6%A0%A1%E9%AA%8C%E5%99%A8/README#3--references)\\n","doneNotesID":["9996","9999","0001","0002","0003","0015","0026","0069","0070","0083","0100","0101","0104","0108","0121","0228","0268","0303","0349","0350","0414","0448","0455","0495","0500","0509","0561","0566","0599","0605","0628","0748","0804","0819","0873","0929","0953","1002","1436","1684","2085","2099","2108","2114","2133","2144","2273","2299","2399","2418","2451","2506","2648","2695","2744"],"doneNotesLen":55}');
const data = JSON.parse('{"1000":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"109d4329-dc0e-4997-9f6c-7f33b2ce59e2","redirect":"notes/1000. 合并石头的最低成本【困难】/README"},"1001":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0de102a0-72fe-4764-afc5-41df74ebdf81","redirect":"notes/1001. 网格照明【困难】/README"},"1002":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"6ad9855a-0dbe-4ca0-b43b-d4de016ba8fa","redirect":"notes/1002. 查找共用字符【简单】/README"},"1003":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8d564a3-219c-4929-9f5c-1214e271c6ce","redirect":"notes/1003. 检查替换后的词是否有效【中等】/README"},"1004":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e153996c-0dd3-4b6a-bb3e-54868fc21a66","redirect":"notes/1004. 最大连续1的个数 III【中等】/README"},"1005":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66e646b7-84e3-4282-a2d3-fb8c0ec83fbf","redirect":"notes/1005. K 次取反后最大化的数组和【简单】/README"},"1006":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"044a4f2b-bb9b-4eda-a558-63edff852117","redirect":"notes/1006. 笨阶乘【中等】/README"},"1007":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d1968deb-e387-4c9e-af21-15e2770a7343","redirect":"notes/1007. 行相等的最少多米诺旋转【中等】/README"},"1008":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5dc6e538-552e-4a93-954d-1361bbf9aeea","redirect":"notes/1008. 前序遍历构造二叉搜索树【中等】/README"},"1009":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c38fae0-c790-4f5b-916c-3502ed6778ec","redirect":"notes/1009. 十进制整数的反码【简单】/README"},"1010":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"762ef31e-d432-4dd8-8875-c085930a8c22","redirect":"notes/1010. 总持续时间可被 60 整除的歌曲【中等】/README"},"1011":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c7d22b76-4ef0-4924-9d8d-ec751638d8d1","redirect":"notes/1011. 在 D 天内送达包裹的能力【中等】/README"},"1012":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"340cbb1e-2d58-4309-a180-85adbd053bcc","redirect":"notes/1012. 至少有 1 位重复的数字【困难】/README"},"1013":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e30a8db8-7299-4cfc-b08a-0d13d003186a","redirect":"notes/1013. 将数组分成和相等的三个部分【简单】/README"},"1014":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"52a6fb01-a231-4776-9aad-7da04aa9f0cd","redirect":"notes/1014. 最佳观光组合【中等】/README"},"1015":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"188b7ef0-ff9d-4cf3-9220-e4147a597739","redirect":"notes/1015. 可被 K 整除的最小整数【中等】/README"},"1016":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab190a0e-f50b-4dc7-b31c-4582f2f53b7c","redirect":"notes/1016. 子串能表示从 1 到 N 数字的二进制串【中等】/README"},"1017":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e61f9c50-b87c-4a8d-8746-055e103d9926","redirect":"notes/1017. 负二进制转换【中等】/README"},"1018":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ef189e4-6bd6-44cc-bea0-2e26305a708c","redirect":"notes/1018. 可被 5 整除的二进制前缀【简单】/README"},"1019":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30b54d81-c5f6-4d3c-a262-ffacec9a2b5e","redirect":"notes/1019. 链表中的下一个更大节点【中等】/README"},"1020":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c52de859-c8ca-465a-8210-0a5d23bc9256","redirect":"notes/1020. 飞地的数量【中等】/README"},"1021":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"272e5b18-c647-404d-8ad4-8b43730fd886","redirect":"notes/1021. 删除最外层的括号【简单】/README"},"1022":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d4a7cdc-b160-405b-ba23-dab8fa7ace3a","redirect":"notes/1022. 从根到叶的二进制数之和【简单】/README"},"1023":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"14fbfc24-597e-4d63-8dde-f355b7befc4b","redirect":"notes/1023. 驼峰式匹配【中等】/README"},"1024":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5496d7ba-9346-4cf6-aced-42f619c0c546","redirect":"notes/1024. 视频拼接【中等】/README"},"1025":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d80f9093-5c63-45ca-a220-b94e091c754a","redirect":"notes/1025. 除数博弈【简单】/README"},"1026":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06d25d7e-fe2f-4f3b-85fe-fad0ff3763b4","redirect":"notes/1026. 节点与其祖先之间的最大差值【中等】/README"},"1027":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4ab22129-6f8c-4646-ae82-952bbe0d9a02","redirect":"notes/1027. 最长等差数列【中等】/README"},"1028":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"178f7a5f-9690-4ed0-bb07-e9587743fcf8","redirect":"notes/1028. 从先序遍历还原二叉树【困难】/README"},"1029":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"274c38aa-0ef9-4cd0-8f3f-a5bce121eb2d","redirect":"notes/1029. 两地调度【中等】/README"},"1030":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19c7c1b1-e868-4c46-a065-acf9836b90f9","redirect":"notes/1030. 距离顺序排列矩阵单元格【简单】/README"},"1031":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ddf5a2ae-52c9-4af9-90ea-7c07f6d1dd13","redirect":"notes/1031. 两个非重叠子数组的最大和【中等】/README"},"1032":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf1bfc22-3ccb-444e-9bf8-40dd4e56a357","redirect":"notes/1032. 字符流【困难】/README"},"1033":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b09e9ee1-4d98-4a4c-bce5-6a7833280aaa","redirect":"notes/1033. 移动石子直到连续【中等】/README"},"1034":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3270aff-be98-4ddd-8052-775dc8238eaa","redirect":"notes/1034. 边界着色【中等】/README"},"1035":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"672e9e4c-563d-4694-bedf-ade947cbf503","redirect":"notes/1035. 不相交的线【中等】/README"},"1036":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58be3415-fca6-4f34-9254-8da764a292ee","redirect":"notes/1036. 逃离大迷宫【困难】/README"},"1037":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ae7d45c-d0b5-4e4d-86c0-d872d63ff3cc","redirect":"notes/1037. 有效的回旋镖【简单】/README"},"1038":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c942dcf7-0bd2-43fb-a17d-5e19ff54a7b8","redirect":"notes/1038. 从二叉搜索树到更大和树【中等】/README"},"1039":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5fd14d4-6025-4eb3-b52c-9abf1455d678","redirect":"notes/1039. 多边形三角剖分的最低得分【中等】/README"},"1040":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc2c7673-9e8e-4b56-b0c8-070532ad1bab","redirect":"notes/1040. 移动石子直到连续 II【中等】/README"},"1041":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89724203-9bc7-4863-b3ce-d8bbfe3c4446","redirect":"notes/1041. 困于环中的机器人【中等】/README"},"1042":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"643e94aa-7713-48c1-a17d-c6f93ba7c732","redirect":"notes/1042. 不邻接植花【中等】/README"},"1043":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55dea5af-1f9f-4584-9932-4c1e7d17d068","redirect":"notes/1043. 分隔数组以得到最大和【中等】/README"},"1044":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d6b3ae6-9ba9-448e-aef6-2dcbab719912","redirect":"notes/1044. 最长重复子串【困难】/README"},"1045":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f42a5022-a76a-496c-ac84-92980214b56a","redirect":"notes/1045. 买下所有产品的客户【中等】/README"},"1046":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f238eb9-9726-4fe4-915a-9bd758424fa6","redirect":"notes/1046. 最后一块石头的重量【简单】/README"},"1047":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6e0e4c9-212e-4d68-b785-85a320fc1d4d","redirect":"notes/1047. 删除字符串中的所有相邻重复项【简单】/README"},"1048":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ca95ba5-4ef0-41db-907a-7a24d3021f21","redirect":"notes/1048. 最长字符串链【中等】/README"},"1049":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4693a887-4773-439f-bd33-4593ac3a9b82","redirect":"notes/1049. 最后一块石头的重量 II【中等】/README"},"1050":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f72cefa-eb0b-4a93-9df8-77851b6b8ed7","redirect":"notes/1050. 合作过至少三次的演员和导演【简单】/README"},"1051":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31a44c94-e3c4-40a4-88ff-5ff678b4b84b","redirect":"notes/1051. 高度检查器【简单】/README"},"1052":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9745b0d7-f2bc-4ec9-86f9-2075e35bf20a","redirect":"notes/1052. 爱生气的书店老板【中等】/README"},"1053":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eadaa2e5-f2d1-4d10-836b-0c1c125ec66e","redirect":"notes/1053. 交换一次的先前排列【中等】/README"},"1054":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d60b1b6-ca07-47cd-a2db-2c6600357fb5","redirect":"notes/1054. 距离相等的条形码【中等】/README"},"1055":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c0bde2b-acc3-4245-a9c0-c5b581f62677","redirect":"notes/1055. 形成字符串的最短路径【中等】/README"},"1056":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"60393242-aa05-40eb-bb97-d87911c9c4ba","redirect":"notes/1056. 易混淆数【简单】/README"},"1057":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"13c3664a-cd6a-4237-b06e-51157c565426","redirect":"notes/1057. 校园自行车分配【中等】/README"},"1058":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d965f184-9eef-4b35-83bc-8b9ed34c25f2","redirect":"notes/1058. 最小化舍入误差以满足目标【中等】/README"},"1059":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3cddcbc-71e8-403c-b4e5-c340967b0840","redirect":"notes/1059. 从始点到终点的所有路径【中等】/README"},"1060":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01b44b58-728e-44d7-a869-5660359ba128","redirect":"notes/1060. 有序数组中的缺失元素【中等】/README"},"1061":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66b5cdbc-70ae-4446-afb9-432497695eec","redirect":"notes/1061. 按字典序排列最小的等效字符串【中等】/README"},"1062":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b37ce82-d978-4dbf-a894-3026f5c16be7","redirect":"notes/1062. 最长重复子串【中等】/README"},"1063":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b29ed70-3300-4c5b-8a2e-6e60440e7aa0","redirect":"notes/1063. 有效子数组的数目【困难】/README"},"1064":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ce3428d-a6da-4aaa-a541-25586b45ec4c","redirect":"notes/1064. 不动点【简单】/README"},"1065":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e651e617-bb49-4c12-84ce-6ce46628cfb8","redirect":"notes/1065. 字符串的索引对【简单】/README"},"1066":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d8503aa-0974-476f-a6b3-5a7c8dcb9dde","redirect":"notes/1066. 校园自行车分配 II【中等】/README"},"1067":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7baaca0c-dd94-4e0c-8a17-28288f8a3ae9","redirect":"notes/1067. 范围内的数字计数【困难】/README"},"1068":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f487c4a7-fcf4-4ae1-92d4-956563b872d7","redirect":"notes/1068. 产品销售分析 I【简单】/README"},"1069":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c051dbc-248c-4e0d-9694-cf9b3282e5c8","redirect":"notes/1069. 产品销售分析 II【简单】/README"},"1070":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63021457-1cc4-41a3-a7f1-c7c8dfd5d61c","redirect":"notes/1070. 产品销售分析 III【中等】/README"},"1071":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab98420f-afb4-44f5-a854-965525a8d6f6","redirect":"notes/1071. 字符串的最大公因子【简单】/README"},"1072":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32b632ae-beb7-4c21-a191-f7bb6525a050","redirect":"notes/1072. 按列翻转得到最大值等行数【中等】/README"},"1073":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db0c8a9e-164c-4f05-ad2e-01889c141107","redirect":"notes/1073. 负二进制数相加【中等】/README"},"1074":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1019406d-07a3-458b-b46f-fc96a3a5d817","redirect":"notes/1074. 元素和为目标值的子矩阵数量【困难】/README"},"1075":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3d5a82b-8233-4245-b219-72c67253e58b","redirect":"notes/1075. 项目员工 I【简单】/README"},"1076":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8329f6ac-2bc1-4ac1-89f3-3892f51e511d","redirect":"notes/1076. 项目员工II【简单】/README"},"1077":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09ad9033-ea52-4fb9-9509-514dcae53ce3","redirect":"notes/1077. 项目员工 III【中等】/README"},"1078":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0456bfff-9301-45dd-a045-64f1436f35f9","redirect":"notes/1078. Bigram 分词【简单】/README"},"1079":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b63d8dfd-23ab-45a0-80da-333a5fd2be74","redirect":"notes/1079. 活字印刷【中等】/README"},"1080":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f456a73-c819-4ed7-b145-13c26939a2e4","redirect":"notes/1080. 根到叶路径上的不足节点【中等】/README"},"1081":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86ce4e4b-d9bd-44bd-a68a-34e05b8bca11","redirect":"notes/1081. 不同字符的最小子序列【中等】/README"},"1082":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"60e18e23-1380-4162-906f-fe9ba461f498","redirect":"notes/1082. 销售分析 I【简单】/README"},"1083":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0a0338b-0513-4e1c-b833-60aaf8014a70","redirect":"notes/1083. 销售分析 II【简单】/README"},"1084":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"835dd9c7-c0c5-4949-ad38-318d8691dd9f","redirect":"notes/1084. 销售分析 III【简单】/README"},"1085":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"429b0fd3-c2de-4c5a-8ea4-33f721b1a9b8","redirect":"notes/1085. 最小元素各数位之和【简单】/README"},"1086":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0c3064f5-5bf9-4bd9-9d12-825058965c00","redirect":"notes/1086. 前五科的均分【简单】/README"},"1087":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"251de652-ee10-4992-a5e0-4b80137c2868","redirect":"notes/1087. 花括号展开【中等】/README"},"1088":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb207647-dc99-469e-a6d8-763c82470ee0","redirect":"notes/1088. 易混淆数 II【困难】/README"},"1089":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2525839c-a625-4156-bdc5-055a42ab1ca1","redirect":"notes/1089. 复写零【简单】/README"},"1090":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6d05abd-0b2f-4bb5-a972-51c2f5125c80","redirect":"notes/1090. 受标签影响的最大值【中等】/README"},"1091":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1da6571f-d059-47af-897e-91426746835d","redirect":"notes/1091. 二进制矩阵中的最短路径【中等】/README"},"1092":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7dc3be82-acf4-460d-9ce5-819a2ddc9718","redirect":"notes/1092. 最短公共超序列【困难】/README"},"1093":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7706af9-6cb5-4a99-9ae5-777f674b5d7b","redirect":"notes/1093. 大样本统计【中等】/README"},"1094":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9ad0453d-757f-4442-b2a4-de14a41e5405","redirect":"notes/1094. 拼车【中等】/README"},"1095":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4ab81006-c623-427b-a1fb-cb7c4823e16e","redirect":"notes/1095. 山脉数组中查找目标值【困难】/README"},"1096":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a30160c-bbfa-49f7-aa66-bcd03bb0124f","redirect":"notes/1096. 花括号展开 II【困难】/README"},"1097":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d75f164f-dd86-4c2b-bad7-9ebe3560e601","redirect":"notes/1097. 游戏玩法分析 V【困难】/README"},"1098":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"910435df-a652-44ad-a237-d7364ead94fa","redirect":"notes/1098. 小众书籍【中等】/README"},"1099":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0abf82a9-7003-4dd7-a9ad-4edaaba4c0ac","redirect":"notes/1099. 小于 K 的两数之和【简单】/README"},"1100":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01c01b4e-c8f7-4559-84c5-d6b2640fed34","redirect":"notes/1100. 长度为 K 的无重复字符子串【中等】/README"},"1101":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f931510-cb3d-4f93-90ef-1663ba1c3e00","redirect":"notes/1101. 彼此熟识的最早时间【中等】/README"},"1102":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0faec352-3ba0-4a93-aaf8-d5b4fe7974e6","redirect":"notes/1102. 得分最高的路径【中等】/README"},"1103":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c27a26f7-6d05-46aa-ae7a-00495b2120d0","redirect":"notes/1103. 分糖果 II【简单】/README"},"1104":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"82901bf5-957c-4389-a860-0369fcb6d217","redirect":"notes/1104. 二叉树寻路【中等】/README"},"1105":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c762402-528b-4d87-b52c-96c91e1a484b","redirect":"notes/1105. 填充书架【中等】/README"},"1106":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ecbb7751-d51b-4def-a1fc-336a082a288a","redirect":"notes/1106. 解析布尔表达式【困难】/README"},"1107":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7259d9f5-b4b3-4ade-b624-728a23750867","redirect":"notes/1107. 每日新用户统计【中等】/README"},"1108":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0c1f6e2-6d49-429c-8164-2b4bc5d051bf","redirect":"notes/1108. IP 地址无效化【简单】/README"},"1109":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab54d956-a680-4d6a-8ea9-67cbdc4a439a","redirect":"notes/1109. 航班预订统计【中等】/README"},"1110":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae0bbfbd-145d-4e04-83bd-bbdb690664ed","redirect":"notes/1110. 删点成林【中等】/README"},"1111":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71f765c5-6f9a-44e1-8f0a-af60b018486c","redirect":"notes/1111. 有效括号的嵌套深度【中等】/README"},"1112":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ce827b0-7197-40af-a320-e239ff307fe7","redirect":"notes/1112. 每位学生的最高成绩【中等】/README"},"1113":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab9520a0-a1c0-499f-81c6-33969db24594","redirect":"notes/1113. 报告的记录【简单】/README"},"1114":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5e48482-63d0-4fb6-836b-9717c252adcc","redirect":"notes/1114. 按序打印【简单】/README"},"1115":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d43bd15-a1ef-4d12-a179-6708777e906d","redirect":"notes/1115. 交替打印 FooBar【中等】/README"},"1116":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00058d7d-3255-4d5d-a073-3e13850ca78a","redirect":"notes/1116. 打印零与奇偶数【中等】/README"},"1117":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4bf355b-45e2-45fc-9dc8-69aad6221ca7","redirect":"notes/1117. H2O 生成【中等】/README"},"1118":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1bd4eeb5-bf12-4920-9a8d-cc1e835e89d5","redirect":"notes/1118. 一月有多少天【简单】/README"},"1119":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34f84529-2f51-4b63-a9b3-13ddebc32444","redirect":"notes/1119. 删去字符串中的元音【简单】/README"},"1120":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"50d9b3de-d3cd-40c8-a442-4867a2c1dfd2","redirect":"notes/1120. 子树的最大平均值【中等】/README"},"1121":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e9f628d-d57f-4348-9ebf-f4336daf5e3d","redirect":"notes/1121. 将数组分成几个递增序列【困难】/README"},"1122":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"564f27de-11d3-4714-9dd2-3b55347c882c","redirect":"notes/1122. 数组的相对排序【简单】/README"},"1123":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9512bb21-3666-4206-8868-50f9285969db","redirect":"notes/1123. 最深叶节点的最近公共祖先【中等】/README"},"1124":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a7d7636-1c9b-48dc-87b7-758cbd853fc2","redirect":"notes/1124. 表现良好的最长时间段【中等】/README"},"1125":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2181f83c-3ae7-4cbe-b33c-145a8f22c160","redirect":"notes/1125. 最小的必要团队【困难】/README"},"1126":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fb4124ac-2f1c-45f0-ae43-a2f2fcb4a6c7","redirect":"notes/1126. 查询活跃业务【中等】/README"},"1127":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"237e8c96-3150-4e28-8b32-650a4a02a871","redirect":"notes/1127. 用户购买平台【困难】/README"},"1128":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee38d8ff-6414-4c78-9a32-f4e1b14af754","redirect":"notes/1128. 等价多米诺骨牌对的数量【简单】/README"},"1129":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d615fbe3-9a5b-469d-9512-df4e0361e0c8","redirect":"notes/1129. 颜色交替的最短路径【中等】/README"},"1130":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ea0a899-a1ad-4af3-bd6c-c533e0dc71e5","redirect":"notes/1130. 叶值的最小代价生成树【中等】/README"},"1131":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ead7fcee-e142-409c-ade6-77db1da01aed","redirect":"notes/1131. 绝对值表达式的最大值【中等】/README"},"1132":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3665691-bee2-4310-a8ed-3793390365da","redirect":"notes/1132. 报告的记录 II【中等】/README"},"1133":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd8f193f-0d81-4698-b34e-10c5c2e90432","redirect":"notes/1133. 最大唯一数【简单】/README"},"1134":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9924a195-cb74-447d-98b6-730e872bd632","redirect":"notes/1134. 阿姆斯特朗数【简单】/README"},"1135":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"379b1e80-30a4-45dd-81d5-a2132f861b15","redirect":"notes/1135. 最低成本连通所有城市【中等】/README"},"1136":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1dd15f69-bb53-48df-b7ca-33c4bb4ed8fa","redirect":"notes/1136. 并行课程【中等】/README"},"1137":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"69cde7d2-777c-4e5f-b453-06c2fe0786ed","redirect":"notes/1137. 第 N 个泰波那契数【简单】/README"},"1138":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9cb639b-84a7-47c9-b450-5628648a37e1","redirect":"notes/1138. 字母板上的路径【中等】/README"},"1139":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e872398-7cc1-4f39-b276-a968fda9f039","redirect":"notes/1139. 最大的以 1 为边界的正方形【中等】/README"},"1140":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07a3cc54-bcff-41eb-947e-9f323a08e475","redirect":"notes/1140. 石子游戏 II【中等】/README"},"1141":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f8028d7-6898-4c7a-a9d5-bcb0f41b5683","redirect":"notes/1141. 查询近30天活跃用户数【简单】/README"},"1142":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5d151e49-3f6e-4a70-8582-8b9399140fe5","redirect":"notes/1142. 过去30天的用户活动 II【简单】/README"},"1143":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"76b19eb8-c6af-4df2-9954-16fc7a2ede43","redirect":"notes/1143. 最长公共子序列【中等】/README"},"1144":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31321938-e863-4845-a8ef-ebaab0218499","redirect":"notes/1144. 递减元素使数组呈锯齿状【中等】/README"},"1145":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2bf95c04-d722-4c36-b873-31336c0d2f25","redirect":"notes/1145. 二叉树着色游戏【中等】/README"},"1146":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"574866ee-ae85-4047-9121-be20507f099d","redirect":"notes/1146. 快照数组【中等】/README"},"1147":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9821fe5c-5940-4b62-b86d-7cd27d16149a","redirect":"notes/1147. 段式回文【困难】/README"},"1148":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9d78319-197c-4de1-b50c-b2396cea461a","redirect":"notes/1148. 文章浏览 I【简单】/README"},"1149":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94964eef-ef2d-480e-9950-f02dacb8cc9e","redirect":"notes/1149. 文章浏览 II【中等】/README"},"1150":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa94f33d-f2ca-4e85-9386-12e213107b8e","redirect":"notes/1150. 检查一个数是否在数组中占绝大多数【简单】/README"},"1151":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19a6dc80-8399-48e7-9de9-a510a4b228f5","redirect":"notes/1151. 最少交换次数来组合所有的 1【中等】/README"},"1152":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"087f0389-4958-4ab6-8622-4dc8a21ab065","redirect":"notes/1152. 用户网站访问行为分析【中等】/README"},"1153":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4302e4b6-0da9-4bde-b7a1-26ed414ff7fb","redirect":"notes/1153. 字符串转化【困难】/README"},"1154":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5220b2f8-0c65-401f-a30d-9529975e97e8","redirect":"notes/1154. 一年中的第几天【简单】/README"},"1155":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93ad89fe-3a52-49cf-bc7c-833e45e7ab6c","redirect":"notes/1155. 掷骰子等于目标和的方法数【中等】/README"},"1156":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dd09cf48-3a0a-40bc-93a4-2fc287c690b4","redirect":"notes/1156. 单字符重复子串的最大长度【中等】/README"},"1157":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4075dfd-2f44-4e8e-ac69-4e4dcea64507","redirect":"notes/1157. 子数组中占绝大多数的元素【困难】/README"},"1158":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"08a2a26f-79fa-4c1a-a3c9-e49ab36b1b58","redirect":"notes/1158. 市场分析 I【中等】/README"},"1159":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8dba695e-40bc-4674-a5fa-1d535935e312","redirect":"notes/1159. 市场分析 II【困难】/README"},"1160":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5ce9a4d-e65b-4793-bee0-b22d2c4a9745","redirect":"notes/1160. 拼写单词【简单】/README"},"1161":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ce4fea8-9548-4e0d-aae3-51796e11e880","redirect":"notes/1161. 最大层内元素和【中等】/README"},"1162":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7817a5ce-74e8-4ad6-8d74-b64d5e92c77e","redirect":"notes/1162. 地图分析【中等】/README"},"1163":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d05902a2-a0db-4951-b1c2-2f23b9e0a1ba","redirect":"notes/1163. 按字典序排在最后的子串【困难】/README"},"1164":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3355b916-a7d0-401f-9a8c-6fe51506635d","redirect":"notes/1164. 指定日期的产品价格【中等】/README"},"1165":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02700c83-fd13-4597-ac80-805b3a68b35c","redirect":"notes/1165. 单行键盘【简单】/README"},"1166":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c7e3bf3f-a0bb-4ce6-a76f-cee45c3462e5","redirect":"notes/1166. 设计文件系统【中等】/README"},"1167":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9d21b260-6bf8-4481-884a-c471ef7e3908","redirect":"notes/1167. 连接木棍的最低费用【中等】/README"},"1168":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27723d09-ecf1-4d99-b5eb-dc82069a776b","redirect":"notes/1168. 水资源分配优化【困难】/README"},"1169":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8a3a481-b0af-4db2-8cf2-5fe643334157","redirect":"notes/1169. 查询无效交易【中等】/README"},"1170":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5c5caca-f64a-45eb-a447-c7dcf3a803f5","redirect":"notes/1170. 比较字符串最小字母出现频次【中等】/README"},"1171":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1bd8f651-a5d9-48d2-8792-574235e53505","redirect":"notes/1171. 从链表中删去总和值为零的连续节点【中等】/README"},"1172":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc290f6c-b9f5-4175-9214-4805a1737f79","redirect":"notes/1172. 餐盘栈【困难】/README"},"1173":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef0ccd54-9aee-40c0-b6dc-47c9638836ff","redirect":"notes/1173. 即时食物配送 I【简单】/README"},"1174":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d846474-6880-497a-b9c7-22a7d5beb8e2","redirect":"notes/1174. 即时食物配送 II【中等】/README"},"1175":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b92b1f6-caf6-4e91-b62a-fdd53fc346f6","redirect":"notes/1175. 质数排列【简单】/README"},"1176":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3dde39df-7a70-42ad-a510-b068df7e9af2","redirect":"notes/1176. 健身计划评估【简单】/README"},"1177":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9907a4c2-8c46-4c0d-912e-bae42bfb8a45","redirect":"notes/1177. 构建回文串检测【中等】/README"},"1178":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"628d1462-df3b-4326-ac36-84af3f04c305","redirect":"notes/1178. 猜字谜【困难】/README"},"1179":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d8e3202-91b5-4054-b4ba-3d322f218a41","redirect":"notes/1179. 重新格式化部门表【简单】/README"},"1180":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"13fce49a-d2af-4ade-9448-74be1ce17f44","redirect":"notes/1180. 统计只含单一字母的子串【简单】/README"},"1181":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee44e402-8645-4afc-96e9-93b4c01f592d","redirect":"notes/1181. 前后拼接【中等】/README"},"1182":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a40f862a-9390-4832-8aed-d2f5236fa2f8","redirect":"notes/1182. 与目标颜色间的最短距离【中等】/README"},"1183":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c55572c-df5e-4691-a9c5-954b391089b7","redirect":"notes/1183. 矩阵中 1 的最大数量【困难】/README"},"1184":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b426054-29fe-4d72-859e-f20f6e0fc789","redirect":"notes/1184. 公交站间的距离【简单】/README"},"1185":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dcd9e7db-a8ba-48ef-a31f-2949b9d3a6ba","redirect":"notes/1185. 一周中的第几天【简单】/README"},"1186":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc8c9ad0-3c91-4537-af03-1aff970671d7","redirect":"notes/1186. 删除一次得到子数组最大和【中等】/README"},"1187":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6bd20a6f-45e0-4097-8e3c-386f01c22fc6","redirect":"notes/1187. 使数组严格递增【困难】/README"},"1188":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f25a1118-6122-4de1-bd3a-51be90e32379","redirect":"notes/1188. 设计有限阻塞队列【中等】/README"},"1189":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a60f80a-f334-4cf5-b66e-5451912a75fe","redirect":"notes/1189. “气球” 的最大数量【简单】/README"},"1190":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07e7dede-9caf-4aa1-9279-2a4c10b743d0","redirect":"notes/1190. 反转每对括号间的子串【中等】/README"},"1191":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"97607036-bd07-4e96-abc2-73ff530f820f","redirect":"notes/1191. K 次串联后最大子数组之和【中等】/README"},"1192":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b9b267d-7066-41e1-8aae-3bae43ebd21d","redirect":"notes/1192. 查找集群内的关键连接【困难】/README"},"1193":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8d98898-d2a3-494c-a020-cbb77a303076","redirect":"notes/1193. 每月交易 I【中等】/README"},"1194":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"03dfb892-9905-499b-af85-bdab91cd3cb6","redirect":"notes/1194. 锦标赛优胜者【困难】/README"},"1195":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e070c1c-3bc1-438a-9ab1-d605f7d97a2c","redirect":"notes/1195. 交替打印字符串【中等】/README"},"1196":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"747ff3e3-965d-4382-97a6-7bb285007478","redirect":"notes/1196. 最多可以买到的苹果数量【简单】/README"},"1197":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd60ebcc-f867-4a41-b688-387db9ab9c4e","redirect":"notes/1197. 进击的骑士【中等】/README"},"1198":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6b78440-4ebc-4e5b-91ec-534d99de3208","redirect":"notes/1198. 找出所有行中最小公共元素【中等】/README"},"1199":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a322e44-4a56-42ec-be91-64e504e337ac","redirect":"notes/1199. 建造街区的最短时间【困难】/README"},"1200":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c708b8e5-a693-4d42-8412-b171a18dfb06","redirect":"notes/1200. 最小绝对差【简单】/README"},"1201":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2730d7a7-6391-47b7-b6d5-3163e23f00e8","redirect":"notes/1201. 丑数 III【中等】/README"},"1202":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a2c3cb0-4962-4ddb-8b11-9f0186b3610b","redirect":"notes/1202. 交换字符串中的元素【中等】/README"},"1203":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8066f3a4-f9db-494b-80a9-5292be63a865","redirect":"notes/1203. 项目管理【困难】/README"},"1204":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1ff3f9b-f29a-4033-9817-9e287a868707","redirect":"notes/1204. 最后一个能进入巴士的人【中等】/README"},"1205":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e117131-a592-44ef-b28f-b0e52f2853ea","redirect":"notes/1205. 每月交易 II【中等】/README"},"1206":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdcafb4b-58ae-4328-84f7-f47dacba5129","redirect":"notes/1206. 设计跳表【困难】/README"},"1207":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4390ef64-d6ff-420b-9ad1-de654943c713","redirect":"notes/1207. 独一无二的出现次数【简单】/README"},"1208":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a062564-fc4c-4daf-a32f-862435a1c912","redirect":"notes/1208. 尽可能使字符串相等【中等】/README"},"1209":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ff07901-35f9-42e5-af52-c1279f1ede7f","redirect":"notes/1209. 删除字符串中的所有相邻重复项 II【中等】/README"},"1210":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25b640a8-da1d-47e0-869c-ee3f1b1740b4","redirect":"notes/1210. 穿过迷宫的最少移动次数【困难】/README"},"1211":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5ec2fe0-412d-47ee-9515-cf4c9f4db26c","redirect":"notes/1211. 查询结果的质量和占比【简单】/README"},"1212":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34ad39db-a85c-438f-bf89-76f2372b5862","redirect":"notes/1212. 查询球队积分【中等】/README"},"1213":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f2e8623-a30a-447f-a6f1-f83cf7d55eb5","redirect":"notes/1213. 三个有序数组的交集【简单】/README"},"1214":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"edc6d3a8-a1da-4fb5-b5cb-d9ba9da7aea3","redirect":"notes/1214. 查找两棵二叉搜索树之和【中等】/README"},"1215":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3aad549-8ab9-4048-b722-1ca4eb2a8154","redirect":"notes/1215. 步进数【中等】/README"},"1216":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1289fb23-b027-4ad2-8134-ec30e129aef2","redirect":"notes/1216. 验证回文串 III【困难】/README"},"1217":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71278d04-f233-4134-be90-7874bbeb410a","redirect":"notes/1217. 玩筹码【简单】/README"},"1218":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"91c02f48-e740-4c08-a616-628fc8c28dc5","redirect":"notes/1218. 最长定差子序列【中等】/README"},"1219":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"025c0703-1791-402d-b53e-e1894a8f0c2e","redirect":"notes/1219. 黄金矿工【中等】/README"},"1220":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"578a25f9-6e59-4777-9200-67bd560eb411","redirect":"notes/1220. 统计元音字母序列的数目【困难】/README"},"1221":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02c52766-69e8-426e-be01-cad54f63c704","redirect":"notes/1221. 分割平衡字符串【简单】/README"},"1222":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47c3cbed-e2cb-4486-8e31-8bbf4be41339","redirect":"notes/1222. 可以攻击国王的皇后【中等】/README"},"1223":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f49c2ba-c9cc-4de3-b68a-8330c17749fa","redirect":"notes/1223. 掷骰子模拟【困难】/README"},"1224":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79f4926a-dba8-405e-a39f-dbcacb8cc4f5","redirect":"notes/1224. 最大相等频率【困难】/README"},"1225":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a612da58-1766-42b5-ab5f-5414658ba6bd","redirect":"notes/1225. 报告系统状态的连续日期【困难】/README"},"1226":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"595d420a-9ef3-4193-b48d-430b43e9d6f9","redirect":"notes/1226. 哲学家进餐【中等】/README"},"1227":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42954271-0a7a-4e18-b213-389d5a13c78f","redirect":"notes/1227. 飞机座位分配概率【中等】/README"},"1228":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"838e68f7-8c4d-4040-beb2-2f6a8c3e5d2e","redirect":"notes/1228. 等差数列中缺失的数字【简单】/README"},"1229":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"651096a2-4997-4231-955a-79a358055853","redirect":"notes/1229. 安排会议日程【中等】/README"},"1230":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"326c0f45-e51c-4920-883f-ad02fa8b78d3","redirect":"notes/1230. 抛掷硬币【中等】/README"},"1231":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f83bd7ac-9d8e-48eb-b4a7-0a785f7be6b4","redirect":"notes/1231. 分享巧克力【困难】/README"},"1232":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ea967ea-6770-468c-856e-c6b4b0abd8ba","redirect":"notes/1232. 缀点成线【简单】/README"},"1233":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01731a8a-7660-4ef2-93e8-6af3c49e252c","redirect":"notes/1233. 删除子文件夹【中等】/README"},"1234":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79da11f4-c8b2-441e-a6f5-24bb5d50b20d","redirect":"notes/1234. 替换子串得到平衡字符串【中等】/README"},"1235":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4bbf41e1-a089-4158-b1f6-32c9ecf19c17","redirect":"notes/1235. 规划兼职工作【困难】/README"},"1236":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"182b2646-4b1a-44df-9b19-15ac867ccbbf","redirect":"notes/1236. 网络爬虫【中等】/README"},"1237":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e53045ce-b777-4dfb-ab98-0deafcc8f0a7","redirect":"notes/1237. 找出给定方程的正整数解【中等】/README"},"1238":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f01ad821-01b7-4d9a-bffa-8e5833c5d193","redirect":"notes/1238. 循环码排列【中等】/README"},"1239":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24f4bff9-86ca-4ecc-94fa-849cf150dc2b","redirect":"notes/1239. 串联字符串的最大长度【中等】/README"},"1240":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd036aca-c251-4db6-b40e-dd8f9c774403","redirect":"notes/1240. 铺瓷砖【困难】/README"},"1241":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b7a0c1f-ee06-4a2f-8fd9-6c31cca3350b","redirect":"notes/1241. 每个帖子的评论数【简单】/README"},"1242":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aae62deb-e1db-4e10-9047-ab5b7b5e93d4","redirect":"notes/1242. 多线程网页爬虫【中等】/README"},"1243":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f2172b3-a6e9-4925-b847-93d82c6731dc","redirect":"notes/1243. 数组变换【简单】/README"},"1244":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1fb3dfe5-9375-4131-8511-1a52d1be320a","redirect":"notes/1244. 力扣排行榜【中等】/README"},"1245":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ba2bb05-d03a-4add-a7f2-b211d24e7d7a","redirect":"notes/1245. 树的直径【中等】/README"},"1246":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e10adfa-1f13-4d43-b797-4ab4ca94bab9","redirect":"notes/1246. 删除回文子数组【困难】/README"},"1247":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bcc4a38f-beab-4efb-9955-73787417787a","redirect":"notes/1247. 交换字符使得字符串相同【中等】/README"},"1248":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61330c91-e522-44a5-bbdf-7adaf9d86407","redirect":"notes/1248. 统计「优美子数组」【中等】/README"},"1249":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc77c3db-d5a4-4a1a-8872-c7ba570b2112","redirect":"notes/1249. 移除无效的括号【中等】/README"},"1250":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f9f7bed8-bb33-44ec-96a3-a5a1f393a045","redirect":"notes/1250. 检查「好数组」【困难】/README"},"1251":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec6e6e59-ffd6-4433-a4b5-cbfca5b00390","redirect":"notes/1251. 平均售价【简单】/README"},"1252":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"387e0747-dd59-427b-8772-9ce04175fc3f","redirect":"notes/1252. 奇数值单元格的数目【简单】/README"},"1253":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d4830393-8d7d-4394-be88-5f0298186500","redirect":"notes/1253. 重构 2 行二进制矩阵【中等】/README"},"1254":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12aa8194-8ac9-4497-ae3f-3deb42036b41","redirect":"notes/1254. 统计封闭岛屿的数目【中等】/README"},"1255":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"97b61205-4900-4e99-a0bd-5747920574ce","redirect":"notes/1255. 得分最高的单词集合【困难】/README"},"1256":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a758403f-2400-4ec1-8f08-b19e4e153ac1","redirect":"notes/1256. 加密数字【中等】/README"},"1257":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8feb4f0-258d-4ab5-9905-948ed14595cd","redirect":"notes/1257. 最小公共区域【中等】/README"},"1258":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a86fd5b6-19bf-4019-a8ca-9a1c07d540db","redirect":"notes/1258. 近义词句子【中等】/README"},"1259":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"153693a2-0460-43c1-a5d6-31a1389ee91f","redirect":"notes/1259. 不相交的握手【困难】/README"},"1260":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8f066129-c85c-4cee-a4d5-d71b15417b5b","redirect":"notes/1260. 二维网格迁移【简单】/README"},"1261":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"774fdc3b-52ef-4ee8-afd2-75dc65803fdf","redirect":"notes/1261. 在受污染的二叉树中查找元素【中等】/README"},"1262":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53ef8fdc-3d13-4c74-bf29-31ce6fb85a85","redirect":"notes/1262. 可被三整除的最大和【中等】/README"},"1263":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fd7e6b2-1d07-481f-8da6-bff43dd0c488","redirect":"notes/1263. 推箱子【困难】/README"},"1264":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93dc2f55-a21e-49fe-ac57-6ac16c90b6b2","redirect":"notes/1264. 页面推荐【中等】/README"},"1265":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"823a22ff-5951-449f-a93f-8db2a67ca136","redirect":"notes/1265. 逆序打印不可变链表【中等】/README"},"1266":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20a5277f-95b7-4f33-9a88-9b5339e79d99","redirect":"notes/1266. 访问所有点的最小时间【简单】/README"},"1267":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"137f1b57-ba90-423a-ba7a-7f9172c272c4","redirect":"notes/1267. 统计参与通信的服务器【中等】/README"},"1268":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"462ea2d1-2ad0-4ff7-a82c-7ffa30f08fc6","redirect":"notes/1268. 搜索推荐系统【中等】/README"},"1269":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"273c11c7-ba8a-4299-b437-0c6d1c13d25d","redirect":"notes/1269. 停在原地的方案数【困难】/README"},"1270":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d64c8dc8-5313-466d-98bc-95bed2ce57f7","redirect":"notes/1270. 向公司 CEO 汇报工作的所有人【中等】/README"},"1271":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bee9f98-c115-459d-b501-4e0ce56a6e80","redirect":"notes/1271. 十六进制魔术数字【简单】/README"},"1272":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41a57a9a-c282-4314-bae7-87a724107521","redirect":"notes/1272. 删除区间【中等】/README"},"1273":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f0aee55d-031f-4fc1-963b-4f7065a8e9c6","redirect":"notes/1273. 删除树节点【中等】/README"},"1274":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd87d4e5-0ef5-434a-aa15-76d0729bdf6f","redirect":"notes/1274. 矩形内船只的数目【困难】/README"},"1275":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec675c1e-c9b8-4ebc-8d37-4627c7fa9287","redirect":"notes/1275. 找出井字棋的获胜者【简单】/README"},"1276":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7f34b1d-3149-407c-b43a-807e8e683b33","redirect":"notes/1276. 不浪费原料的汉堡制作方案【中等】/README"},"1277":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be6f97ff-b933-437d-8b5e-c1117bf1136a","redirect":"notes/1277. 统计全为 1 的正方形子矩阵【中等】/README"},"1278":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"40e5d28e-25ce-47df-a9e9-0764eca9803e","redirect":"notes/1278. 分割回文串 III【困难】/README"},"1279":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa90f8ef-3e5f-49bf-9312-aaa3b59f675c","redirect":"notes/1279. 红绿灯路口【简单】/README"},"1280":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7544719f-cc6f-44bc-b73b-3b26c5416fad","redirect":"notes/1280. 学生们参加各科测试的次数【简单】/README"},"1281":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48f58393-01ac-4488-92d6-38ef021fe120","redirect":"notes/1281. 整数的各位积和之差【简单】/README"},"1282":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fd1b3a0-b4e1-475f-89d1-fc5ddc0acc85","redirect":"notes/1282. 用户分组【中等】/README"},"1283":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"410726a7-c198-450c-92d7-bd07688db32c","redirect":"notes/1283. 使结果不超过阈值的最小除数【中等】/README"},"1284":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0ff0145-f40d-4e00-b7d0-68f7d4737dd5","redirect":"notes/1284. 转化为全零矩阵的最少反转次数【困难】/README"},"1285":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fd4ce60-4ac3-44f6-9ad3-e92c0deafdc0","redirect":"notes/1285. 找到连续区间的开始和结束数字【中等】/README"},"1286":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b073a1e2-07ff-47d5-a362-e8ee02da0600","redirect":"notes/1286. 字母组合迭代器【中等】/README"},"1287":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bc49e85-387c-40ff-afd9-00287de6b159","redirect":"notes/1287. 有序数组中出现次数超过百分之25的元素【简单】/README"},"1288":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e0a9ebd-7b7e-46e1-be38-f3e8ed4e1660","redirect":"notes/1288. 删除被覆盖区间【中等】/README"},"1289":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30c5e86d-bdc7-4721-b080-303947e1a5f8","redirect":"notes/1289. 下降路径最小和 II【困难】/README"},"1290":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9964e1ba-72c1-437b-aa1f-a5c467558e65","redirect":"notes/1290. 二进制链表转整数【简单】/README"},"1291":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02634670-7476-4b2e-b15e-1ad91bc45367","redirect":"notes/1291. 顺次数【中等】/README"},"1292":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b4b4feca-dd2b-49b8-aa8c-d0ec60a63c32","redirect":"notes/1292. 元素和小于等于阈值的正方形的最大边长【中等】/README"},"1293":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a8ea78d7-7693-48d2-83e0-267dbf2dfea5","redirect":"notes/1293. 网格中的最短路径【困难】/README"},"1294":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"13ec38e0-961d-40c4-92d8-255de121fcbf","redirect":"notes/1294. 不同国家的天气类型【简单】/README"},"1295":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be6e3e9b-e69c-47a1-8963-914d8994b838","redirect":"notes/1295. 统计位数为偶数的数字【简单】/README"},"1296":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"782c4675-8543-4505-b64b-d90a67746b15","redirect":"notes/1296. 划分数组为连续数字的集合【中等】/README"},"1297":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d748e3ce-a196-4ac2-8054-c16bb2d733ff","redirect":"notes/1297. 子串的最大出现次数【中等】/README"},"1298":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5530b46c-b19b-4c57-9706-7a7896114471","redirect":"notes/1298. 你能从盒子里获得的最大糖果数【困难】/README"},"1299":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e226743-0010-41b5-bb8b-f2a40a508f20","redirect":"notes/1299. 将每个元素替换为右侧最大元素【简单】/README"},"1300":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d83e160-0d0a-4324-aa4d-30fff5ac22f8","redirect":"notes/1300. 转变数组后最接近目标值的数组和【中等】/README"},"1301":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1a2aa2e-9e47-4004-be68-4d6541ff0bbf","redirect":"notes/1301. 最大得分的路径数目【困难】/README"},"1302":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1adfc274-13ff-4383-8d23-b2896db7ae3d","redirect":"notes/1302. 层数最深叶子节点的和【中等】/README"},"1303":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"88de8a64-3e1b-4102-b5e3-e1407a0b173b","redirect":"notes/1303. 求团队人数【简单】/README"},"1304":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"08085cab-1889-4089-aa10-ac072cb6a8cf","redirect":"notes/1304. 和为零的 N 个不同整数【简单】/README"},"1305":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5955d18f-0270-4d2c-9c34-c1f068a49425","redirect":"notes/1305. 两棵二叉搜索树中的所有元素【中等】/README"},"1306":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42ff12bf-753a-4d19-b299-abfc885be680","redirect":"notes/1306. 跳跃游戏 III【中等】/README"},"1307":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86985743-34fa-41a7-9862-c9f0b1b34791","redirect":"notes/1307. 口算难题【困难】/README"},"1308":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e5a3575-cca5-4e5d-b729-d160660fe84c","redirect":"notes/1308. 不同性别每日分数总计【中等】/README"},"1309":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dd84d705-582a-4c92-a4c6-7f45819d3dbe","redirect":"notes/1309. 解码字母到整数映射【简单】/README"},"1310":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c5b70d87-16f0-4dec-9e7e-515d1c5abf28","redirect":"notes/1310. 子数组异或查询【中等】/README"},"1311":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a879e42-447f-4778-8136-acbb48b0a866","redirect":"notes/1311. 获取你好友已观看的视频【中等】/README"},"1312":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e08a2a37-c00b-4e07-8e08-78447bb8c561","redirect":"notes/1312. 让字符串成为回文串的最少插入次数【困难】/README"},"1313":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d76324c1-da12-48c2-8bbc-bd9ec384567f","redirect":"notes/1313. 解压缩编码列表【简单】/README"},"1314":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"988f7a99-ed87-4e78-8cdd-3c8acb17d5b6","redirect":"notes/1314. 矩阵区域和【中等】/README"},"1315":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90f59bfa-c788-4678-80aa-35363e98343f","redirect":"notes/1315. 祖父节点值为偶数的节点和【中等】/README"},"1316":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5a8d7d7-75e2-4682-99ff-642956bdfdaa","redirect":"notes/1316. 不同的循环子字符串【困难】/README"},"1317":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9edbc83b-1e13-44c5-ba7c-1a8fa10cf78a","redirect":"notes/1317. 将整数转换为两个无零整数的和【简单】/README"},"1318":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1eed49a2-01f9-49fc-afdf-c955b29580a8","redirect":"notes/1318. 或运算的最小翻转次数【中等】/README"},"1319":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7392bbb-d286-4bd5-8420-fb206688d62d","redirect":"notes/1319. 连通网络的操作次数【中等】/README"},"1320":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b23386ee-77c3-45f9-8dd9-1b58731f5386","redirect":"notes/1320. 二指输入的的最小距离【困难】/README"},"1321":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3faa1ae6-8179-47e9-9fb6-edacf4d2b575","redirect":"notes/1321. 餐馆营业额变化增长【中等】/README"},"1322":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66cedbb7-dc69-4aa0-8b52-8a1fede82467","redirect":"notes/1322. 广告效果【简单】/README"},"1323":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38600b8c-da26-4f21-93e0-ee49ec06539c","redirect":"notes/1323. 6 和 9 组成的最大数字【简单】/README"},"1324":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ff3bc56c-015e-4198-ab6d-a994c6e256f1","redirect":"notes/1324. 竖直打印单词【中等】/README"},"1325":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c96ac296-67b5-443c-b9fb-e8f6b47b9e67","redirect":"notes/1325. 删除给定值的叶子节点【中等】/README"},"1326":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"064f9f07-25e5-4d4c-ac10-841e0e5ebedb","redirect":"notes/1326. 灌溉花园的最少水龙头数目【困难】/README"},"1327":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a48e1d6-5942-4adb-ab36-82eed8e8b1b2","redirect":"notes/1327. 列出指定时间段内所有的下单产品【简单】/README"},"1328":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3295431c-785f-49c7-a2f0-a59fc6b9b72d","redirect":"notes/1328. 破坏回文串【中等】/README"},"1329":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"394da3e5-4810-42ba-875d-e1b312ada288","redirect":"notes/1329. 将矩阵按对角线排序【中等】/README"},"1330":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f2c647e2-c5f6-43b8-ba8d-53f13d1aa6be","redirect":"notes/1330. 翻转子数组得到最大的数组值【困难】/README"},"1331":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2181b211-781d-44d5-bd81-600a2b91530b","redirect":"notes/1331. 数组序号转换【简单】/README"},"1332":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0923dd2-1698-44b1-b801-ddb9df09326e","redirect":"notes/1332. 删除回文子序列【简单】/README"},"1333":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c73a1500-5346-4ca8-896a-3513eba3b630","redirect":"notes/1333. 餐厅过滤器【中等】/README"},"1334":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a91f109f-df85-486d-8d48-29810b508987","redirect":"notes/1334. 阈值距离内邻居最少的城市【中等】/README"},"1335":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f76baaf-dbdd-4c5d-9e75-9404d9d2b46d","redirect":"notes/1335. 工作计划的最低难度【困难】/README"},"1336":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4b69323-25ba-4975-99b1-bfc5c58b7d6a","redirect":"notes/1336. 每次访问的交易次数【困难】/README"},"1337":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7943862d-3f60-4184-928a-aee74ab36ae3","redirect":"notes/1337. 矩阵中战斗力最弱的 K 行【简单】/README"},"1338":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2b49d0f-5afa-41f6-bfce-23af192e4f8d","redirect":"notes/1338. 数组大小减半【中等】/README"},"1339":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b585a43-bf94-468b-91fa-1f9472245508","redirect":"notes/1339. 分裂二叉树的最大乘积【中等】/README"},"1340":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30934ddc-c932-4c4e-a22e-234ef9d8e43d","redirect":"notes/1340. 跳跃游戏 V【困难】/README"},"1341":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"021d9621-9b3f-456d-8393-198a7f1f146d","redirect":"notes/1341. 电影评分【中等】/README"},"1342":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7e87091-341f-4201-ae3e-4c194d3fe9c1","redirect":"notes/1342. 将数字变成 0 的操作次数【简单】/README"},"1343":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f1c5cf7a-ef49-40d2-be3f-feb8158eb4f3","redirect":"notes/1343. 大小为 K 且平均值大于等于阈值的子数组数目【中等】/README"},"1344":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56716a99-1447-45d3-83be-4d578844195a","redirect":"notes/1344. 时钟指针的夹角【中等】/README"},"1345":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d21e74d-0b7f-4d04-ae57-2684dd1a8a84","redirect":"notes/1345. 跳跃游戏 IV【困难】/README"},"1346":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54056016-e9ad-4dbe-8ddf-59a557f7d430","redirect":"notes/1346. 检查整数及其两倍数是否存在【简单】/README"},"1347":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b4c768a8-ecea-4eb2-af25-c45b88c8dcbc","redirect":"notes/1347. 制造字母异位词的最小步骤数【中等】/README"},"1348":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34ef90c3-dea8-4b57-89f8-210f08ae4524","redirect":"notes/1348. 推文计数【中等】/README"},"1349":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ebe553f3-275e-4a82-af71-daa77cea6979","redirect":"notes/1349. 参加考试的最大学生数【困难】/README"},"1350":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d21587ec-ce0c-4402-98f8-5357745721df","redirect":"notes/1350. 院系无效的学生【简单】/README"},"1351":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc830fa2-f140-4620-a2a6-f68db7ae9d5b","redirect":"notes/1351. 统计有序矩阵中的负数【简单】/README"},"1352":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89a687fa-0e69-41b2-a018-0cfa7073624e","redirect":"notes/1352. 最后 K 个数的乘积【中等】/README"},"1353":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c5ef1a4c-02de-46ac-91e5-ae0ff1ab8bd8","redirect":"notes/1353. 最多可以参加的会议数目【中等】/README"},"1354":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e530e66-6891-49d5-a928-4d6ae8ea94a0","redirect":"notes/1354. 多次求和构造目标数组【困难】/README"},"1355":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c0fba26-f84e-4ccc-ac3f-c69479ea48d3","redirect":"notes/1355. 活动参与者【中等】/README"},"1356":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"75bb6d50-d85b-4514-816d-202bfc393c3d","redirect":"notes/1356. 根据数字二进制下 1 的数目排序【简单】/README"},"1357":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22ed0025-637a-42c1-86ab-268a596e2a0e","redirect":"notes/1357. 每隔 n 个顾客打折【中等】/README"},"1358":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a277aed0-6b51-43a8-b4c1-6cd7a8ad41d0","redirect":"notes/1358. 包含所有三种字符的子字符串数目【中等】/README"},"1359":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59a9a9e2-af39-4986-b2a5-50b1bf081b7a","redirect":"notes/1359. 有效的快递序列数目【困难】/README"},"1360":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eaf2bb08-13cb-4b44-b84e-4c9b44bfe85a","redirect":"notes/1360. 日期之间隔几天【简单】/README"},"1361":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e82b57e7-c97d-4f5e-b99f-3cac858d94aa","redirect":"notes/1361. 验证二叉树【中等】/README"},"1362":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"16a3fdbd-c0b6-452b-99f8-5cbf131865b0","redirect":"notes/1362. 最接近的因数【中等】/README"},"1363":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bedae11-a54c-49a2-8edb-53e75a216a39","redirect":"notes/1363. 形成三的最大倍数【困难】/README"},"1364":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee73603b-2fe5-471b-99ce-8be3cba499f4","redirect":"notes/1364. 顾客的可信联系人数量【中等】/README"},"1365":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79242a1b-9a1b-410e-a3f1-b074b6688938","redirect":"notes/1365. 有多少小于当前数字的数字【简单】/README"},"1366":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf78d681-3db3-4939-ad86-1b0b7a6279c8","redirect":"notes/1366. 通过投票对团队排名【中等】/README"},"1367":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07a820a5-3fe3-4e62-a5f9-3d5da68a28c1","redirect":"notes/1367. 二叉树中的链表【中等】/README"},"1368":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8c26f3a9-2b2a-41cf-8224-d643e55a3d51","redirect":"notes/1368. 使网格图至少有一条有效路径的最小代价【困难】/README"},"1369":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"690faff0-9972-472f-a361-190ed2b6ea91","redirect":"notes/1369. 获取最近第二次的活动【困难】/README"},"1370":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b80ea61-0c4c-402c-94fb-a55d9d8b1fdb","redirect":"notes/1370. 上升下降字符串【简单】/README"},"1371":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"352a4468-dd05-43b4-b9c1-2d5f005f2198","redirect":"notes/1371. 每个元音包含偶数次的最长子字符串【中等】/README"},"1372":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67a9ae5d-db5d-4801-8383-319d99541694","redirect":"notes/1372. 二叉树中的最长交错路径【中等】/README"},"1373":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a46a50b-b7f4-4fbf-97de-91cb72ecd76b","redirect":"notes/1373. 二叉搜索子树的最大键值和【困难】/README"},"1374":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0be2a273-4188-4933-9c35-1433c9c74069","redirect":"notes/1374. 生成每种字符都是奇数个的字符串【简单】/README"},"1375":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"28b3e625-7e47-4a33-acb3-1ba87a9fd8ee","redirect":"notes/1375. 二进制字符串前缀一致的次数【中等】/README"},"1376":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"379f09ec-2693-4fba-9df4-6ccdcab8add2","redirect":"notes/1376. 通知所有员工所需的时间【中等】/README"},"1377":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db934997-b77c-4ee0-bf96-dbf747484e0d","redirect":"notes/1377. T 秒后青蛙的位置【困难】/README"},"1378":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d64f04a-fdba-4eb3-a7e1-0ff434d92d58","redirect":"notes/1378. 使用唯一标识码替换员工ID【简单】/README"},"1379":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c74fa32d-232b-468b-ab95-4cec4261ef8a","redirect":"notes/1379. 找出克隆二叉树中的相同节点【简单】/README"},"1380":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"97e05f7e-1981-417a-84f6-d93927294dd1","redirect":"notes/1380. 矩阵中的幸运数【简单】/README"},"1381":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef26a1e0-fac9-4b7c-839f-0d0be0f13b14","redirect":"notes/1381. 设计一个支持增量操作的栈【中等】/README"},"1382":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cfe494e2-5ce1-436b-89cb-9073dffebcb9","redirect":"notes/1382. 将二叉搜索树变平衡【中等】/README"},"1383":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cea71e5b-be01-46c4-9623-eea9bfda00e8","redirect":"notes/1383. 最大的团队表现值【困难】/README"},"1384":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"83ea8562-9db9-403f-921d-305d92487449","redirect":"notes/1384. 按年度列出销售总额【困难】/README"},"1385":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3ef8bbe-c355-4fac-a9ce-7c651d66a87f","redirect":"notes/1385. 两个数组间的距离值【简单】/README"},"1386":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41225c6a-0dde-438a-b869-d539d5e03053","redirect":"notes/1386. 安排电影院座位【中等】/README"},"1387":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0afc5c83-2acc-410e-bb43-86edb9aaf8f8","redirect":"notes/1387. 将整数按权重排序【中等】/README"},"1388":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8cc0aaee-b2da-4500-be5f-e89b422e3b5b","redirect":"notes/1388. 3n 块披萨【困难】/README"},"1389":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66f05562-91d3-48b2-8249-811eeb97c705","redirect":"notes/1389. 按既定顺序创建目标数组【简单】/README"},"1390":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81d74ba4-ad7d-46e4-9419-13c277836805","redirect":"notes/1390. 四因数【中等】/README"},"1391":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9a54713-d923-49eb-9a3c-3efee8ff41e4","redirect":"notes/1391. 检查网格中是否存在有效路径【中等】/README"},"1392":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4603dd04-723b-4855-8853-2dbcc046c3bf","redirect":"notes/1392. 最长快乐前缀【困难】/README"},"1393":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6edd320-64d6-4fad-81f6-37c1ca53bbb7","redirect":"notes/1393. 股票的资本损益【中等】/README"},"1394":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7c7ce1d-df71-4b75-b916-b9ef5f629311","redirect":"notes/1394. 找出数组中的幸运数【简单】/README"},"1395":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"202e013f-c807-4bb9-9e41-557c3121f564","redirect":"notes/1395. 统计作战单位数【中等】/README"},"1396":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7e67fcd-c450-4bb2-bacc-c7b6892e75f4","redirect":"notes/1396. 设计地铁系统【中等】/README"},"1397":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"106bc1ba-d6db-48c3-87cb-365a6e0bc715","redirect":"notes/1397. 找到所有好字符串【困难】/README"},"1398":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"582ca61c-7195-43e7-97bd-05ac9e2cb766","redirect":"notes/1398. 购买了产品 A 和产品 B 却没有购买产品 C 的顾客【中等】/README"},"1399":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66c5362e-967c-44a9-be98-65827140b2b5","redirect":"notes/1399. 统计最大组的数目【简单】/README"},"1400":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8c5149a-6990-4909-88e9-7f739f583f96","redirect":"notes/1400. 构造 K 个回文字符串【中等】/README"},"1401":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be7c9d98-c4b7-489e-ad23-9c4a4b5ab59c","redirect":"notes/1401. 圆和矩形是否有重叠【中等】/README"},"1402":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59155598-0606-4e09-a631-0b1ac3c8a7b1","redirect":"notes/1402. 做菜顺序【困难】/README"},"1403":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80669737-f1bd-4d02-a8ef-82c156d5644b","redirect":"notes/1403. 非递增顺序的最小子序列【简单】/README"},"1404":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87910b0f-1ca7-4ef3-ba21-61ccbd85e732","redirect":"notes/1404. 将二进制表示减到 1 的步骤数【中等】/README"},"1405":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b06eb2fb-fd1a-4e66-b572-46ca5027dee3","redirect":"notes/1405. 最长快乐字符串【中等】/README"},"1406":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"182facfb-14e3-4e68-8cfc-cb78aeec377c","redirect":"notes/1406. 石子游戏 III【困难】/README"},"1407":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"934c2b0a-bcc0-44d8-9cf4-b63f255b25eb","redirect":"notes/1407. 排名靠前的旅行者【简单】/README"},"1408":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"308b3e22-dc69-4872-a9a5-553b1f3e7040","redirect":"notes/1408. 数组中的字符串匹配【简单】/README"},"1409":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30ea238a-3b8f-4b7b-8784-9e8a13903212","redirect":"notes/1409. 查询带键的排列【中等】/README"},"1410":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1dad4912-c650-46d0-87fb-ced08c004ed2","redirect":"notes/1410. HTML 实体解析器【中等】/README"},"1411":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f73fcda7-051c-44ee-bc66-0cabf06e0c85","redirect":"notes/1411. 给 N x 3 网格图涂色的方案数【困难】/README"},"1412":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f675026-60e7-42c2-8cb8-e54b4c42c582","redirect":"notes/1412. 查找成绩处于中游的学生【困难】/README"},"1413":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b21352c0-acfa-40d9-8d3e-a821b4e39351","redirect":"notes/1413. 逐步求和得到正数的最小值【简单】/README"},"1414":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc55b295-ff58-4ba1-aff8-8e5e6a3e1013","redirect":"notes/1414. 和为 K 的最少斐波那契数字数目【中等】/README"},"1415":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15605786-ff74-4d94-ada9-9c490230f919","redirect":"notes/1415. 长度为 n 的开心字符串中字典序第 k 小的字符串【中等】/README"},"1416":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"670d2db6-cc5e-4426-a255-d407c8a0890d","redirect":"notes/1416. 恢复数组【困难】/README"},"1417":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f05fd983-ea21-4cf2-a847-18a164a75b33","redirect":"notes/1417. 重新格式化字符串【简单】/README"},"1418":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19ce1655-6384-4a55-bb26-70c728ff2513","redirect":"notes/1418. 点菜展示表【中等】/README"},"1419":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f87f6e4-068f-4af5-a697-805d03ba8db1","redirect":"notes/1419. 数青蛙【中等】/README"},"1420":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ccf5914b-1b6f-4f90-a9a6-a7f756a0ba1f","redirect":"notes/1420. 生成数组【困难】/README"},"1421":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4984ba7-97a9-45e4-b29d-33e4a41c2774","redirect":"notes/1421. 净现值查询【简单】/README"},"1422":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9cedf841-e63e-41f7-9513-b3e76bda1e5a","redirect":"notes/1422. 分割字符串的最大得分【简单】/README"},"1423":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"504051f2-8428-4a2d-af60-a029063002c5","redirect":"notes/1423. 可获得的最大点数【中等】/README"},"1424":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f29452d3-040f-48d5-a94b-23aeab84cf66","redirect":"notes/1424. 对角线遍历 II【中等】/README"},"1425":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4cf5a9c0-4a51-45f0-9a82-cd36c64ed378","redirect":"notes/1425. 带限制的子序列和【困难】/README"},"1426":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"075a450a-b6b3-4c4a-a273-73815c188260","redirect":"notes/1426. 数元素【简单】/README"},"1427":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79c50f13-98ba-42ef-89d7-0a5971951213","redirect":"notes/1427. 字符串的左右移【简单】/README"},"1428":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2318044b-fe76-4cc4-a840-1eae41a5f6ee","redirect":"notes/1428. 至少有一个 1 的最左端列【中等】/README"},"1429":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"100f6edb-ad58-447f-96c2-5e2b854f9c73","redirect":"notes/1429. 第一个唯一数字【中等】/README"},"1430":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6752feeb-22ab-417b-bca0-95c8278f98b2","redirect":"notes/1430. 判断给定的序列是否是二叉树从根到叶的路径【中等】/README"},"1431":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e7c6aa0-cc84-4c68-954a-79470bae76ed","redirect":"notes/1431. 拥有最多糖果的孩子【简单】/README"},"1432":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0a99261-d20e-4280-8333-606e0a0e85e5","redirect":"notes/1432. 改变一个整数能得到的最大差值【中等】/README"},"1433":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d6f54df-5b66-48db-b27f-48214d6c9f67","redirect":"notes/1433. 检查一个字符串是否可以打破另一个字符串【中等】/README"},"1434":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f7d1d2e-cb4f-496c-ae12-1301720a5c81","redirect":"notes/1434. 每个人戴不同帽子的方案数【困难】/README"},"1435":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d4425372-55f7-400c-a824-ec2626b703f1","redirect":"notes/1435. 制作会话柱状图【简单】/README"},"1436":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"d5279277-d851-41cd-bec9-059c2a091583","redirect":"notes/1436. 旅行终点站【简单】/README"},"1437":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b40a0462-2d35-438d-85d6-f9e5dfd195b5","redirect":"notes/1437. 是否所有 1 都至少相隔 k 个元素【简单】/README"},"1438":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea8a8d79-3ac4-451d-b325-24af9d4cdfe3","redirect":"notes/1438. 绝对差不超过限制的最长连续子数组【中等】/README"},"1439":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c04e66e-7185-4b1b-a4e4-577f7533abfa","redirect":"notes/1439. 有序矩阵中的第 k 个最小数组和【困难】/README"},"1440":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ddb8bd85-e968-4266-954b-7521d86b746e","redirect":"notes/1440. 计算布尔表达式的值【中等】/README"},"1441":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f0ef1ef-c83a-4254-afea-07f2d5157f90","redirect":"notes/1441. 用栈操作构建数组【中等】/README"},"1442":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df27bc16-2031-4ca3-8de8-a64da1153ca4","redirect":"notes/1442. 形成两个异或相等数组的三元组数目【中等】/README"},"1443":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9b3acbf6-c0c2-484e-a12d-d61300906669","redirect":"notes/1443. 收集树上所有苹果的最少时间【中等】/README"},"1444":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ae22bdc-7bae-4d89-93fd-9768b45134bc","redirect":"notes/1444. 切披萨的方案数【困难】/README"},"1445":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a6348ec-5686-48fb-b830-5c9db4524479","redirect":"notes/1445. 苹果和桔子【中等】/README"},"1446":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65698c2d-1697-43d1-8040-5f0d7ccce80d","redirect":"notes/1446. 连续字符【简单】/README"},"1447":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"627babec-cbd6-44fa-94c3-8cf70d1f20bb","redirect":"notes/1447. 最简分数【中等】/README"},"1448":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f36d2b8-9197-4ecc-8d27-a6cb834f44f1","redirect":"notes/1448. 统计二叉树中好节点的数目【中等】/README"},"1449":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ebf183e-e068-4123-ba23-42f2890f247b","redirect":"notes/1449. 数位成本和为目标值的最大数字【困难】/README"},"1450":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e42fccc-6333-4be2-a788-2d6744e1cddd","redirect":"notes/1450. 在既定时间做作业的学生人数【简单】/README"},"1451":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e0e16ca-5e54-4ffa-b061-0992114bc6da","redirect":"notes/1451. 重新排列句子中的单词【中等】/README"},"1452":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a03bb96-f5f2-40ad-930c-0cd1590da5ca","redirect":"notes/1452. 收藏清单【中等】/README"},"1453":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a33ebd9e-0e15-4c60-af66-a771ef9ac5b5","redirect":"notes/1453. 圆形靶内的最大飞镖数量【困难】/README"},"1454":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"52d0e541-83a8-4f98-9962-8e620d1c8c48","redirect":"notes/1454. 活跃用户【中等】/README"},"1455":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"401e38a2-fa0e-4140-aeed-a568455a620a","redirect":"notes/1455. 检查单词是否为句中其他单词的前缀【简单】/README"},"1456":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b229691f-1eae-4492-8438-e6c8d1104448","redirect":"notes/1456. 定长子串中元音的最大数目【中等】/README"},"1457":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5339abe2-f3ae-471a-8af9-5cead0c102ee","redirect":"notes/1457. 二叉树中的伪回文路径【中等】/README"},"1458":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd2da81d-9914-41d6-9fb5-3a5bb65fe50e","redirect":"notes/1458. 两个子序列的最大点积【困难】/README"},"1459":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0dbb05b-d500-4684-872b-f7a22492d600","redirect":"notes/1459. 矩形面积【中等】/README"},"1460":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eac7f4c1-8e32-40c0-b632-ea1f52805265","redirect":"notes/1460. 通过翻转子数组使两个数组相等【简单】/README"},"1461":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9937ac7-ce8f-40da-899d-6bdbbc69178d","redirect":"notes/1461. 检查一个字符串是否包含所有长度为 K 的二进制子串【中等】/README"},"1462":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e154f37e-eb91-4a07-bf24-d0226977b32a","redirect":"notes/1462. 课程表 IV【中等】/README"},"1463":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ad79c338-8355-45fa-9c58-7733204d6426","redirect":"notes/1463. 摘樱桃 II【困难】/README"},"1464":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a56c86fe-5562-4fb8-a88b-fb013ef8d277","redirect":"notes/1464. 数组中两元素的最大乘积【简单】/README"},"1465":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"611ff13a-f07f-4bff-934a-4e9710f1e54a","redirect":"notes/1465. 切割后面积最大的蛋糕【中等】/README"},"1466":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27d64aba-783b-482e-8ca4-30d9ee532bee","redirect":"notes/1466. 重新规划路线【中等】/README"},"1467":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a98c1725-88a6-42c5-954f-7ef5a9e91228","redirect":"notes/1467. 两个盒子中球的颜色数相同的概率【困难】/README"},"1468":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07a14304-1e17-4d3e-b2a4-f1b922afa7a5","redirect":"notes/1468. 计算税后工资【中等】/README"},"1469":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa7dc532-c542-4d27-8cf0-7b8bb1a2bdbb","redirect":"notes/1469. 寻找所有的独生节点【简单】/README"},"1470":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55f440fa-9cc6-4a1d-a083-ba1a996db607","redirect":"notes/1470. 重新排列数组【简单】/README"},"1471":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b50f0bf3-f1f8-4572-8754-615d4a580db7","redirect":"notes/1471. 数组中的 k 个最强值【中等】/README"},"1472":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7dd66b5-aed6-431a-a8e8-fb14f656e2d6","redirect":"notes/1472. 设计浏览器历史记录【中等】/README"},"1473":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31a28669-8250-423b-b48a-25c0db7911ff","redirect":"notes/1473. 粉刷房子 III【困难】/README"},"1474":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a15988b-7764-439f-900d-70c6e4ba68bc","redirect":"notes/1474. 删除链表 M 个节点之后的 N 个节点【简单】/README"},"1475":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29a0861c-1ca2-4ca3-81ab-4601752c7216","redirect":"notes/1475. 商品折扣后的最终价格【简单】/README"},"1476":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bdedc578-fa8d-4825-97f2-b78db64d3fea","redirect":"notes/1476. 子矩形查询【中等】/README"},"1477":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"512adcb8-c586-4c44-b733-67182e995f9d","redirect":"notes/1477. 找两个和为目标值且不重叠的子数组【中等】/README"},"1478":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0448e99e-075b-4cf0-838b-31caf0bafe24","redirect":"notes/1478. 安排邮筒【困难】/README"},"1479":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8aa27952-f9c9-41df-b98b-4b8c5727d4f6","redirect":"notes/1479. 周内每天的销售情况【困难】/README"},"1480":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f809971-a9fd-4684-ab46-5ad4c49f3a9f","redirect":"notes/1480. 一维数组的动态和【简单】/README"},"1481":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a954c8bb-a1b6-4504-af61-d373065687b8","redirect":"notes/1481. 不同整数的最少数目【中等】/README"},"1482":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b7bf0c90-f11b-44aa-a7eb-dd7de35d0d43","redirect":"notes/1482. 制作 m 束花所需的最少天数【中等】/README"},"1483":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09fa3999-9125-470c-9200-9daf209b6296","redirect":"notes/1483. 树节点的第 K 个祖先【困难】/README"},"1484":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ece63bb8-b88b-4317-9dd2-fb15d45b3960","redirect":"notes/1484. 按日期分组销售产品【简单】/README"},"1485":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"82850f71-f136-44a0-9993-42594ae9131e","redirect":"notes/1485. 克隆含随机指针的二叉树【中等】/README"},"1486":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a0ca114-9766-45f0-a850-5d1a356cd538","redirect":"notes/1486. 数组异或操作【简单】/README"},"1487":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3903810a-a44c-48af-b242-0185a6588907","redirect":"notes/1487. 保证文件名唯一【中等】/README"},"1488":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"04aa3886-38e9-4fc3-82aa-0cd873c6fa37","redirect":"notes/1488. 避免洪水泛滥【中等】/README"},"1489":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a1edce2-189e-4eef-ba8b-6d0339f80c92","redirect":"notes/1489. 找到最小生成树里的关键边和伪关键边【困难】/README"},"1490":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"883a2201-2483-4938-8692-43ee6f20186b","redirect":"notes/1490. 克隆 N 叉树【中等】/README"},"1491":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a22cad4-1db9-4d06-bd75-17d41aaba3b4","redirect":"notes/1491. 去掉最低工资和最高工资后的工资平均值【简单】/README"},"1492":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"604e1e2f-4cf8-449a-934c-fdfe3e9bcbc6","redirect":"notes/1492. n 的第 k 个因子【中等】/README"},"1493":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"869c10cb-bf53-4278-909a-c9d9559f3b8a","redirect":"notes/1493. 删掉一个元素以后全为 1 的最长子数组【中等】/README"},"1494":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da3b12fe-ab1a-42d3-bf9e-79f456983824","redirect":"notes/1494. 并行课程 II【困难】/README"},"1495":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"717eb3d3-28f8-41a4-97fe-f587a259a313","redirect":"notes/1495. 上月播放的儿童适宜电影【简单】/README"},"1496":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e0474e7-d815-4368-ad41-ef5f73f3bea2","redirect":"notes/1496. 判断路径是否相交【简单】/README"},"1497":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c9790d1-afca-4ec0-86fb-e111e5334ab2","redirect":"notes/1497. 检查数组对是否可以被 k 整除【中等】/README"},"1498":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85061562-b6ac-48d2-841f-e796c46d6205","redirect":"notes/1498. 满足条件的子序列数目【中等】/README"},"1499":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53994507-87b2-4d7a-a0c9-84c7caa9605e","redirect":"notes/1499. 满足不等式的最大值【困难】/README"},"1500":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a489ec11-9c14-47ca-b9b7-69bccba5abba","redirect":"notes/1500. 设计文件分享系统【中等】/README"},"1501":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7340d440-a4be-4d15-b42c-2e2b0bed3ea9","redirect":"notes/1501. 可以放心投资的国家【中等】/README"},"1502":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2301ea3c-8bd3-4875-84d6-bfb4c6b44216","redirect":"notes/1502. 判断能否形成等差数列【简单】/README"},"1503":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"058c8f3e-2626-4615-a077-158e23514f46","redirect":"notes/1503. 所有蚂蚁掉下来前的最后一刻【中等】/README"},"1504":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45c7a77e-a43e-4337-b511-f17c4124c62a","redirect":"notes/1504. 统计全 1 子矩形【中等】/README"},"1505":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7f37095-57ea-44b1-aae8-f8b411a44355","redirect":"notes/1505. 最多 K 次交换相邻数位后得到的最小整数【困难】/README"},"1506":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d9ffa6ab-bb9c-433b-8691-f9f495dcbd78","redirect":"notes/1506. 找到 N 叉树的根节点【中等】/README"},"1507":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65289890-c1b8-481e-9e62-2588d6d9a3e7","redirect":"notes/1507. 转变日期格式【简单】/README"},"1508":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a026e92-46dc-450b-bbf7-1590b41b5571","redirect":"notes/1508. 子数组和排序后的区间和【中等】/README"},"1509":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"003c17b0-3c05-4822-bced-a2584d509923","redirect":"notes/1509. 三次操作后最大值与最小值的最小差【中等】/README"},"1510":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5c72dd1-bab7-44e1-9426-b315ef49a3be","redirect":"notes/1510. 石子游戏 IV【困难】/README"},"1511":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"283e004e-343d-4935-97fe-988f1dcd923c","redirect":"notes/1511. 消费者下单频率【简单】/README"},"1512":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b4a27f65-5a50-432b-b5e1-c26135eaac4a","redirect":"notes/1512. 好数对的数目【简单】/README"},"1513":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d941c3e6-2950-4678-8887-ce473e819931","redirect":"notes/1513. 仅含 1 的子串数【中等】/README"},"1514":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ea51fca-9699-4b2c-98a0-f95de3c621cd","redirect":"notes/1514. 概率最大的路径【中等】/README"},"1515":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8dd6f34-cd08-4954-b04f-8885332072d6","redirect":"notes/1515. 服务中心的最佳位置【困难】/README"},"1516":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a6be759-057b-4715-8885-a1163e7511e3","redirect":"notes/1516. 移动 N 叉树的子树【困难】/README"},"1517":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"83f62ce4-24f6-4747-a662-6873b78fb07d","redirect":"notes/1517. 查找拥有有效邮箱的用户【简单】/README"},"1518":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58a590a3-9649-4975-964e-2096d3c826e1","redirect":"notes/1518. 换水问题【简单】/README"},"1519":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d803f0c-3a2c-4511-8481-c85bb2f21b38","redirect":"notes/1519. 子树中标签相同的节点数【中等】/README"},"1520":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49a81e1f-bac0-4818-8150-069596d51a1f","redirect":"notes/1520. 最多的不重叠子字符串【困难】/README"},"1521":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4b1f8c3-cff3-4490-92e7-bfbe299b1679","redirect":"notes/1521. 找到最接近目标值的函数值【困难】/README"},"1522":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e6e934cc-e9d3-4975-bd5f-8c7b01578bb7","redirect":"notes/1522. N 叉树的直径【中等】/README"},"1523":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0488ecab-f916-4626-b04a-ebd2220127e5","redirect":"notes/1523. 在区间范围内统计奇数数目【简单】/README"},"1524":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee4d79ef-5c90-441d-a0d9-eed72c43408e","redirect":"notes/1524. 和为奇数的子数组数目【中等】/README"},"1525":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22f76d0e-db1b-4826-9e10-b24a62e512c6","redirect":"notes/1525. 字符串的好分割数目【中等】/README"},"1526":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9298dcfc-4e6c-4ca2-9d92-3302b304d9a0","redirect":"notes/1526. 形成目标数组的子数组最少增加次数【困难】/README"},"1527":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3196f5bf-3f8d-415d-b05d-f0e922d2e115","redirect":"notes/1527. 患某种疾病的患者【简单】/README"},"1528":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4ccb487-c6f1-4cf1-9e66-11df381ecf87","redirect":"notes/1528. 重新排列字符串【简单】/README"},"1529":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b36f9a5-b6d6-44b4-a784-395bb3a0dcb7","redirect":"notes/1529. 最少的后缀翻转次数【中等】/README"},"1530":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"97d2762a-66e0-4ad0-acf6-e7089cc98cf8","redirect":"notes/1530. 好叶子节点对的数量【中等】/README"},"1531":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a42f24ab-f24e-4e88-90f9-ff431ef4c09b","redirect":"notes/1531. 压缩字符串 II【困难】/README"},"1532":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cedc0bc9-601b-48ef-8dda-47b9ff688ce1","redirect":"notes/1532. 最近的三笔订单【中等】/README"},"1533":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc751ff1-1fad-4fe4-b48c-fbb624e7edab","redirect":"notes/1533. 找到最大整数的索引【中等】/README"},"1534":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bde51376-6f6b-4f55-9398-74e8af639d72","redirect":"notes/1534. 统计好三元组【简单】/README"},"1535":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a9d5b52-bea3-44b0-b48c-7b0625c6e14f","redirect":"notes/1535. 找出数组游戏的赢家【中等】/README"},"1536":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80a72e9c-9828-4809-a799-8d6b2f9ec53c","redirect":"notes/1536. 排布二进制网格的最少交换次数【中等】/README"},"1537":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c0a1e22-ce44-4168-b10f-d80648a2125c","redirect":"notes/1537. 最大得分【困难】/README"},"1538":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"16688afa-6159-4946-bb69-8335ac66aba3","redirect":"notes/1538. 找出隐藏数组中出现次数最多的元素【中等】/README"},"1539":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89d42e54-53a2-4549-918a-ed198eb8cac4","redirect":"notes/1539. 第 k 个缺失的正整数【简单】/README"},"1540":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e942cc45-bc42-46db-8624-39f042c222e8","redirect":"notes/1540. K 次操作转变字符串【中等】/README"},"1541":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be613bc2-ff4d-4768-bbea-4a5a98f8ac9c","redirect":"notes/1541. 平衡括号字符串的最少插入次数【中等】/README"},"1542":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fbc02a78-2f1c-4b4f-8c3f-28cddc639ecb","redirect":"notes/1542. 找出最长的超赞子字符串【困难】/README"},"1543":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f9b97de-33c5-4c2c-9134-8f85f60a125d","redirect":"notes/1543. 产品名称格式修复【简单】/README"},"1544":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"767d710f-8ad9-4c24-b32d-6b80869a30ff","redirect":"notes/1544. 整理字符串【简单】/README"},"1545":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b2af68b6-2442-4bb6-bee8-74fc5127ad7a","redirect":"notes/1545. 找出第 N 个二进制字符串中的第 K 位【中等】/README"},"1546":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf12b05b-3901-4d49-8723-f172304a5c83","redirect":"notes/1546. 和为目标值且不重叠的非空子数组的最大数目【中等】/README"},"1547":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"deedada4-fd28-4305-9546-a125cfcba383","redirect":"notes/1547. 切棍子的最小成本【困难】/README"},"1548":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c7940f3-d45d-48c1-a811-d70cdbc65959","redirect":"notes/1548. 图中最相似的路径【困难】/README"},"1549":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e095f5e-2c26-48a8-982b-3dca6fec15c2","redirect":"notes/1549. 每件商品的最新订单【中等】/README"},"1550":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c19f37a-6f44-412e-a569-1fda8985f75c","redirect":"notes/1550. 存在连续三个奇数的数组【简单】/README"},"1551":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f872d990-d6b4-42e1-8de3-7b5161c8c5a6","redirect":"notes/1551. 使数组中所有元素相等的最小操作数【中等】/README"},"1552":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"447727b1-ed41-4220-b099-fb5671452bf5","redirect":"notes/1552. 两球之间的磁力【中等】/README"},"1553":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a7f0e25-0dab-4f14-8d38-9ddf983987bb","redirect":"notes/1553. 吃掉 N 个橘子的最少天数【困难】/README"},"1554":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b8f9a45-6eac-49ee-bf1f-0fd825497f3b","redirect":"notes/1554. 只有一个不同字符的字符串【中等】/README"},"1555":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"74813838-0286-42d0-a033-18f9f768c0e6","redirect":"notes/1555. 银行账户概要【中等】/README"},"1556":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"43c8fea8-a675-4e55-a5cc-d7d655d318ba","redirect":"notes/1556. 千位分隔数【简单】/README"},"1557":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de5e8daa-1a86-4d33-9487-302efc89b872","redirect":"notes/1557. 可以到达所有点的最少点数目【中等】/README"},"1558":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4493ecc0-2c1b-406c-905b-a2341f8497b3","redirect":"notes/1558. 得到目标数组的最少函数调用次数【中等】/README"},"1559":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f560b493-0900-478c-a865-3bc9f9b9183d","redirect":"notes/1559. 二维网格图中探测环【中等】/README"},"1560":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b2f7cbd6-454c-4ea7-9d35-0f0fb6961b65","redirect":"notes/1560. 圆形赛道上经过次数最多的扇区【简单】/README"},"1561":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e811c5c-c7e4-4434-926e-5aa60fd242b3","redirect":"notes/1561. 你可以获得的最大硬币数目【中等】/README"},"1562":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"267e8c33-3808-4eb8-8914-d2333f888d5f","redirect":"notes/1562. 查找大小为 M 的最新分组【中等】/README"},"1563":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd1f93f1-9800-4a19-9043-2cad39c27302","redirect":"notes/1563. 石子游戏 V【困难】/README"},"1564":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47370f4c-7ab9-419e-bfb8-b7731c39d0e3","redirect":"notes/1564. 把箱子放进仓库里 I【中等】/README"},"1565":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9dcb845b-2229-4187-9e78-ab52604d55e2","redirect":"notes/1565. 按月统计订单数与顾客数【简单】/README"},"1566":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7918a97e-2b8d-4e31-8c50-83b1c9ff440a","redirect":"notes/1566. 重复至少 K 次且长度为 M 的模式【简单】/README"},"1567":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bb5828c-5abf-4191-9194-0e858ac70224","redirect":"notes/1567. 乘积为正数的最长子数组长度【中等】/README"},"1568":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9aff7c2d-53ff-49ca-b814-4042d77e7367","redirect":"notes/1568. 使陆地分离的最少天数【困难】/README"},"1569":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3745042c-8662-4ab6-a84a-ea35f2e42a06","redirect":"notes/1569. 将子数组重新排序得到同一个二叉搜索树的方案数【困难】/README"},"1570":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25f44878-4a74-4d48-82cc-81d8ee14432b","redirect":"notes/1570. 两个稀疏向量的点积【中等】/README"},"1571":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c951e60-4576-48c0-9d77-f61734f276b5","redirect":"notes/1571. 仓库经理【简单】/README"},"1572":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85e5ffab-d4ee-4faf-896d-35b16cf7c157","redirect":"notes/1572. 矩阵对角线元素的和【简单】/README"},"1573":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"04aea08d-20de-4ed6-a04a-5b742b8bba3a","redirect":"notes/1573. 分割字符串的方案数【中等】/README"},"1574":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8973cc1-0668-4ee0-8532-89585f0914e7","redirect":"notes/1574. 删除最短的子数组使剩余数组有序【中等】/README"},"1575":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b987da8c-81f1-4d5c-bc21-aa51f5968fe4","redirect":"notes/1575. 统计所有可行路径【困难】/README"},"1576":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5cbb6401-e8bd-4649-9067-41ad65b2395d","redirect":"notes/1576. 替换所有的问号【简单】/README"},"1577":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"634737ad-dbe0-4c02-9278-3c8b3d8ec4ba","redirect":"notes/1577. 数的平方等于两数乘积的方法数【中等】/README"},"1578":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"13a865fa-f019-4715-b365-79cc47bd0fd4","redirect":"notes/1578. 使绳子变成彩色的最短时间【中等】/README"},"1579":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71dc7d10-5842-40d0-a316-b80457a6f855","redirect":"notes/1579. 保证图可完全遍历【困难】/README"},"1580":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6207d4d8-24ef-43f0-a012-15e827361f1d","redirect":"notes/1580. 把箱子放进仓库里 II【中等】/README"},"1581":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c85561e-ef57-4433-9317-2ff62be3a5b5","redirect":"notes/1581. 进店却未进行过交易的顾客【简单】/README"},"1582":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e6f39358-30bd-4e16-8837-d4c0c33ade6d","redirect":"notes/1582. 二进制矩阵中的特殊位置【简单】/README"},"1583":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"410ac148-d497-401f-818a-4f7fa8753064","redirect":"notes/1583. 统计不开心的朋友【中等】/README"},"1584":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a2c85d7-c5aa-469b-99a7-01fe1ef70194","redirect":"notes/1584. 连接所有点的最小费用【中等】/README"},"1585":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34a40fa2-e341-479b-95b8-4a57ff18c880","redirect":"notes/1585. 检查字符串是否可以通过排序子字符串得到另一个字符串【困难】/README"},"1586":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a656a5de-e226-4b83-8c30-2621166318ef","redirect":"notes/1586. 二叉搜索树迭代器 II【中等】/README"},"1587":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d31741f-2b6b-4dea-b075-ef8a676d48fd","redirect":"notes/1587. 银行账户概要 II【简单】/README"},"1588":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e35d097b-f7f8-49c4-a563-9864ead42d77","redirect":"notes/1588. 所有奇数长度子数组的和【简单】/README"},"1589":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a360a9c7-3ec7-46ad-ab15-c2957d508f5f","redirect":"notes/1589. 所有排列中的最大和【中等】/README"},"1590":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92c418fb-20fd-408a-a1f2-9f2ab8e5ab68","redirect":"notes/1590. 使数组和能被 P 整除【中等】/README"},"1591":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67f926c7-26b3-4979-85f6-4fc98bbe47eb","redirect":"notes/1591. 奇怪的打印机 II【困难】/README"},"1592":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d0eae45-a32f-4ece-b936-d28f7e547d4a","redirect":"notes/1592. 重新排列单词间的空格【简单】/README"},"1593":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"73f2d65a-faba-46fe-bd9c-ab4e1a3c2767","redirect":"notes/1593. 拆分字符串使唯一子字符串的数目最大【中等】/README"},"1594":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ab3d37c-b324-420b-b1fe-64d829affcc2","redirect":"notes/1594. 矩阵的最大非负积【中等】/README"},"1595":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6cdda5e6-d10e-4a2d-aecd-d0057d0204ed","redirect":"notes/1595. 连通两组点的最小成本【困难】/README"},"1596":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"140abaf4-8e0f-47bc-bb2a-b8dc55d87061","redirect":"notes/1596. 每位顾客最经常订购的商品【中等】/README"},"1597":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd32f3bc-6f66-46bc-9762-7570fc906aa1","redirect":"notes/1597. 根据中缀表达式构造二叉表达式树【困难】/README"},"1598":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"781be616-41ef-460f-ab96-35907d132df1","redirect":"notes/1598. 文件夹操作日志搜集器【简单】/README"},"1599":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99e283aa-bc46-4d0b-be2b-26de3c144b61","redirect":"notes/1599. 经营摩天轮的最大利润【中等】/README"},"1600":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d6d9cbc-5f0d-4360-9400-024cebf3e5c8","redirect":"notes/1600. 王位继承顺序【中等】/README"},"1601":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b4b3fa4-e83e-45bf-b08c-1aac7c8be529","redirect":"notes/1601. 最多可达成的换楼请求数目【困难】/README"},"1602":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3fcbd5d9-4427-4fcf-8a97-689241513d24","redirect":"notes/1602. 找到二叉树中最近的右侧节点【中等】/README"},"1603":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29ec85e9-3a67-48a8-92eb-d0be36094458","redirect":"notes/1603. 设计停车系统【简单】/README"},"1604":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf7ba64e-d55c-4028-ac8c-395bfb903eb6","redirect":"notes/1604. 警告一小时内使用相同员工卡大于等于三次的人【中等】/README"},"1605":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81c2d61d-de13-4761-a4cd-e0dac8da8a58","redirect":"notes/1605. 给定行和列的和求可行矩阵【中等】/README"},"1606":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f211b80e-4e9e-444e-a494-b459c54e809e","redirect":"notes/1606. 找到处理最多请求的服务器【困难】/README"},"1607":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3ed2400-178b-4b36-bd95-0f5015c9d305","redirect":"notes/1607. 没有卖出的卖家【简单】/README"},"1608":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1afe0d8d-854c-4eea-96b8-4cd2041b3fb4","redirect":"notes/1608. 特殊数组的特征值【简单】/README"},"1609":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4aaebe51-b6a3-4642-a431-af7d94cd079f","redirect":"notes/1609. 奇偶树【中等】/README"},"1610":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54731a11-f75f-40ae-b11a-f2877ddace21","redirect":"notes/1610. 可见点的最大数目【困难】/README"},"1611":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cfc58610-2fa3-4df5-ad3d-1d0088813e13","redirect":"notes/1611. 使整数变为 0 的最少操作次数【困难】/README"},"1612":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ecd8586c-a112-482b-a9ae-a317de83b419","redirect":"notes/1612. 检查两棵二叉表达式树是否等价【中等】/README"},"1613":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71e47445-1280-4625-ac7a-dc10594e009a","redirect":"notes/1613. 找到遗失的ID【中等】/README"},"1614":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d952f107-7cc7-4742-825b-f91d9652d8aa","redirect":"notes/1614. 括号的最大嵌套深度【简单】/README"},"1615":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8da72967-7696-4b14-bc8b-29e7265ab236","redirect":"notes/1615. 最大网络秩【中等】/README"},"1616":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85153614-e7c4-459c-ba32-08d5221b225d","redirect":"notes/1616. 分割两个字符串得到回文串【中等】/README"},"1617":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a61dd2b-f3e7-4d20-b92c-c03d559599e3","redirect":"notes/1617. 统计子树中城市之间最大距离【困难】/README"},"1618":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ad3b0f2e-e80e-4361-b843-f9dbde0476c0","redirect":"notes/1618. 找出适应屏幕的最大字号【中等】/README"},"1619":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"438cf93f-5f77-4ed1-aeb6-1de942bdd50e","redirect":"notes/1619. 删除某些元素后的数组均值【简单】/README"},"1620":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f5cd72f-99bd-4fe7-a075-e469742f72e3","redirect":"notes/1620. 网络信号最好的坐标【中等】/README"},"1621":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9020fa03-5fd2-483e-b9af-0f1c71decdb7","redirect":"notes/1621. 大小为 K 的不重叠线段的数目【中等】/README"},"1622":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b5a777e0-a316-487f-9726-590234898b5a","redirect":"notes/1622. 奇妙序列【困难】/README"},"1623":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eacd187a-cbde-4fa7-aad6-af1c76764724","redirect":"notes/1623. 三人国家代表队【简单】/README"},"1624":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"295be5a6-6f5d-42c8-9719-faaba6a984c3","redirect":"notes/1624. 两个相同字符之间的最长子字符串【简单】/README"},"1625":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"deb68137-66c4-4cf1-8935-95599c8d7fc3","redirect":"notes/1625. 执行操作后字典序最小的字符串【中等】/README"},"1626":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"acb05176-101a-46ff-89fd-75c1be7398da","redirect":"notes/1626. 无矛盾的最佳球队【中等】/README"},"1627":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54327204-32a8-4530-9cdb-795447825797","redirect":"notes/1627. 带阈值的图连通性【困难】/README"},"1628":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b5321d15-6d02-4d21-b73a-39717eb2278a","redirect":"notes/1628. 设计带解析函数的表达式树【中等】/README"},"1629":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc564809-e517-44e8-bd32-b326ef971d9e","redirect":"notes/1629. 按键持续时间最长的键【简单】/README"},"1630":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c3eea598-3a8f-4561-9656-61e169799b3b","redirect":"notes/1630. 等差子数组【中等】/README"},"1631":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de2db4db-1d66-432f-8a96-85d6c4b6bfbe","redirect":"notes/1631. 最小体力消耗路径【中等】/README"},"1632":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21545e87-a92f-4fa5-a670-89b8f242745e","redirect":"notes/1632. 矩阵转换后的秩【困难】/README"},"1633":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b02eb91-0dcd-4f7b-9b5e-2f0d41b5f001","redirect":"notes/1633. 各赛事的用户注册率【简单】/README"},"1634":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4db009b2-dcd6-4168-91a3-21972c78ed44","redirect":"notes/1634. 求两个多项式链表的和【中等】/README"},"1635":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1b9b24d-c5b7-48bc-898a-68e2152a4444","redirect":"notes/1635. Hopper 公司查询 I【困难】/README"},"1636":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2040aa9f-bba0-4af7-8d2f-58b6bec46876","redirect":"notes/1636. 按照频率将数组升序排序【简单】/README"},"1637":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b8f0d484-3f93-4940-afcc-a7463e81f60e","redirect":"notes/1637. 两点之间不包含任何点的最宽垂直区域【简单】/README"},"1638":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fe199c9-5bc3-4374-8197-27eab0204aa5","redirect":"notes/1638. 统计只差一个字符的子串数目【中等】/README"},"1639":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06698929-5663-413b-898f-d562d739dee9","redirect":"notes/1639. 通过给定词典构造目标字符串的方案数【困难】/README"},"1640":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62679daa-86b9-47cf-a539-eaf98413476e","redirect":"notes/1640. 能否连接形成数组【简单】/README"},"1641":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b351b37f-1910-4ced-8445-02dbb9b4152f","redirect":"notes/1641. 统计字典序元音字符串的数目【中等】/README"},"1642":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c474f93-9b41-43eb-afe0-dcf676f2e686","redirect":"notes/1642. 可以到达的最远建筑【中等】/README"},"1643":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"126ff1df-a106-4f34-8860-781b80d67100","redirect":"notes/1643. 第 K 条最小指令【困难】/README"},"1644":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46edb024-7a71-487b-81d4-49a33c887842","redirect":"notes/1644. 二叉树的最近公共祖先 II【中等】/README"},"1645":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e382de5-eb01-4933-bc86-beaed0683cd1","redirect":"notes/1645. Hopper 公司查询 II【困难】/README"},"1646":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c79d41b1-2185-4ff7-9bd8-f7353fdb236c","redirect":"notes/1646. 获取生成数组中的最大值【简单】/README"},"1647":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2614b42b-1651-4494-98ad-d52298a975f1","redirect":"notes/1647. 字符频次唯一的最小删除次数【中等】/README"},"1648":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29c1ec6f-5767-4f9d-a9b1-f7be2954e171","redirect":"notes/1648. 销售价值减少的颜色球【中等】/README"},"1649":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"770048e8-0e47-4c27-9345-8b4f6080c1e0","redirect":"notes/1649. 通过指令创建有序数组【困难】/README"},"1650":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b60da52-bdd3-416f-847b-41f641b208f8","redirect":"notes/1650. 二叉树的最近公共祖先 III【中等】/README"},"1651":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"081ca4ff-e14c-49ea-b160-56b49980c358","redirect":"notes/1651. Hopper 公司查询 III【困难】/README"},"1652":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72ecfc62-45f4-4d23-8a64-afc7c96c0da4","redirect":"notes/1652. 拆炸弹【简单】/README"},"1653":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"297c275b-8c3e-44b6-9888-36a245839e2b","redirect":"notes/1653. 使字符串平衡的最少删除次数【中等】/README"},"1654":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38ccd2dd-07cb-4d92-a2a8-bec5b841ffe0","redirect":"notes/1654. 到家的最少跳跃次数【中等】/README"},"1655":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1db21289-6eac-4a77-841e-c51dd4eae1d8","redirect":"notes/1655. 分配重复整数【困难】/README"},"1656":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a8edb54-d9e4-4688-bc6b-e3184c1f14da","redirect":"notes/1656. 设计有序流【简单】/README"},"1657":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d7f0155-18c7-409d-8c33-1b23140d7f07","redirect":"notes/1657. 确定两个字符串是否接近【中等】/README"},"1658":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"432f2d88-4e46-4331-b75f-febb794c3565","redirect":"notes/1658. 将 x 减到 0 的最小操作数【中等】/README"},"1659":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fabfa210-3b99-46d8-acd7-e9639bba91cc","redirect":"notes/1659. 最大化网格幸福感【困难】/README"},"1660":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7708c931-7318-4425-aaa7-5d1e065e85f3","redirect":"notes/1660. 纠正二叉树【中等】/README"},"1661":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa07fc79-1dca-4b81-933d-43dc5bdfd219","redirect":"notes/1661. 每台机器的进程平均运行时间【简单】/README"},"1662":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a5f4816-4c47-4269-8dfe-1c419da202ee","redirect":"notes/1662. 检查两个字符串数组是否相等【简单】/README"},"1663":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7da78e4-73eb-4631-a7b2-da415d38893d","redirect":"notes/1663. 具有给定数值的最小字符串【中等】/README"},"1664":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed4c8db8-3438-48d7-9b9c-722bf6d73549","redirect":"notes/1664. 生成平衡数组的方案数【中等】/README"},"1665":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3255cdb5-6816-425b-ae77-caa36748a1e2","redirect":"notes/1665. 完成所有任务的最少初始能量【困难】/README"},"1666":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59e7991d-bb12-44d9-8938-d5d552606f13","redirect":"notes/1666. 改变二叉树的根节点【中等】/README"},"1667":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d34f17c7-1dd3-447f-8a6c-14fb67c8e982","redirect":"notes/1667. 修复表中的名字【简单】/README"},"1668":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63c5178e-3f6e-4d27-acfb-be69e4222d21","redirect":"notes/1668. 最大重复子字符串【简单】/README"},"1669":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dbaec158-c47c-4d4d-b5a6-79cce9ed9f21","redirect":"notes/1669. 合并两个链表【中等】/README"},"1670":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f53ac1b6-bddb-4f9d-bb60-d2d2333d5cad","redirect":"notes/1670. 设计前中后队列【中等】/README"},"1671":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8aac96a7-d096-403f-a8b7-d318e7421f2e","redirect":"notes/1671. 得到山形数组的最少删除次数【困难】/README"},"1672":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6966ced3-165e-4281-a2cb-fb4c861ae0f3","redirect":"notes/1672. 最富有客户的资产总量【简单】/README"},"1673":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf41bce3-1cb8-4415-a505-1ece248ddaaf","redirect":"notes/1673. 找出最具竞争力的子序列【中等】/README"},"1674":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85b744b8-98b7-4662-bbce-df50a003a7a8","redirect":"notes/1674. 使数组互补的最少操作次数【中等】/README"},"1675":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc4074c0-9b30-41a0-bab2-521c6c482c6e","redirect":"notes/1675. 数组的最小偏移量【困难】/README"},"1676":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b6e87a9-2472-400a-9236-6037a66489ad","redirect":"notes/1676. 二叉树的最近公共祖先 IV【中等】/README"},"1677":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86a80ae5-a8e0-4fab-af71-f575e387e01a","redirect":"notes/1677. 发票中的产品金额【简单】/README"},"1678":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1298ec66-1a88-4ba2-bada-8b808285fdd0","redirect":"notes/1678. 设计 Goal 解析器【简单】/README"},"1679":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0cfc4433-48ec-4d26-b35b-18371e10dbb0","redirect":"notes/1679. K 和数对的最大数目【中等】/README"},"1680":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2460eb5-ae49-4712-8e62-44d5ece51c87","redirect":"notes/1680. 连接连续二进制数字【中等】/README"},"1681":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b227086-bc5c-415e-922f-4e84a3a323f3","redirect":"notes/1681. 最小不兼容性【困难】/README"},"1682":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"175d3a49-1744-4cdc-82a8-e812a1f80d8c","redirect":"notes/1682. 最长回文子序列 II【中等】/README"},"1683":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"05e94fb3-afed-4bae-9ede-d0df618f7ae2","redirect":"notes/1683. 无效的推文【简单】/README"},"1684":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"d144386c-c750-418f-9f95-3b905a59d92c","redirect":"notes/1684. 统计一致字符串的数目【简单】/README"},"1685":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"44dd330b-6a4d-4cd0-ae73-465e3383283b","redirect":"notes/1685. 有序数组中差绝对值之和【中等】/README"},"1686":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fee2882c-255f-4244-a68e-6bfed2274340","redirect":"notes/1686. 石子游戏 VI【中等】/README"},"1687":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6530703-0dab-4c8b-b672-e831a0a2bf0d","redirect":"notes/1687. 从仓库到码头运输箱子【困难】/README"},"1688":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3223f57e-1793-44c7-af1b-7954e2b93313","redirect":"notes/1688. 比赛中的配对次数【简单】/README"},"1689":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2d6987f-28f4-4ee5-8c39-4e158f9fb5c2","redirect":"notes/1689. 十-二进制数的最少数目【中等】/README"},"1690":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e1652e0-4469-4b11-9484-9b59ff2ea05f","redirect":"notes/1690. 石子游戏 VII【中等】/README"},"1691":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8dc4d56-15cc-4dfa-8147-d020fa0365a7","redirect":"notes/1691. 堆叠长方体的最大高度【困难】/README"},"1692":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9493c27-3005-4f87-886f-dbe6d42d9f39","redirect":"notes/1692. 计算分配糖果的不同方式【困难】/README"},"1693":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"768d8f11-d783-4bd9-8e81-d7e35ec7c0e1","redirect":"notes/1693. 每天的领导和合伙人【简单】/README"},"1694":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63b55b1b-4fa1-43ec-9d9d-2c1c1b7ab1b3","redirect":"notes/1694. 重新格式化电话号码【简单】/README"},"1695":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49a8695b-7724-4d9c-bd87-0cc0b1dd429b","redirect":"notes/1695. 删除子数组的最大得分【中等】/README"},"1696":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e06b27dd-1754-4ffa-9e9b-c725fd082b82","redirect":"notes/1696. 跳跃游戏 VI【中等】/README"},"1697":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6397d3b5-8e21-40cb-86b4-4f315cae58b6","redirect":"notes/1697. 检查边长度限制的路径是否存在【困难】/README"},"1698":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5187ec6a-8ae0-41c0-ac05-5b7acb6562c1","redirect":"notes/1698. 字符串的不同子字符串个数【中等】/README"},"1699":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37daadc2-218d-4722-bf2f-3828f781600b","redirect":"notes/1699. 两人之间的通话次数【中等】/README"},"1700":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15010db8-b665-46fc-a893-b8d674a8e978","redirect":"notes/1700. 无法吃午餐的学生数量【简单】/README"},"1701":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b3c657a-e6fd-4ac1-aca7-bfa038853a7b","redirect":"notes/1701. 平均等待时间【中等】/README"},"1702":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"43d136fd-4c62-4875-8180-86963d25d591","redirect":"notes/1702. 修改后的最大二进制字符串【中等】/README"},"1703":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"020780f5-6b7a-4c16-8c02-09c5dc4b955f","redirect":"notes/1703. 得到连续 K 个 1 的最少相邻交换次数【困难】/README"},"1704":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfb49cae-31e4-40ee-8eec-a83130bcc677","redirect":"notes/1704. 判断字符串的两半是否相似【简单】/README"},"1705":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7328e04f-4c64-4566-85cc-60d2dd2c0419","redirect":"notes/1705. 吃苹果的最大数目【中等】/README"},"1706":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e3499ba-4357-4b4f-a2c8-fbc7dcebfbd7","redirect":"notes/1706. 球会落何处【中等】/README"},"1707":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"08526de4-9633-4176-b8fb-699038e928e5","redirect":"notes/1707. 与数组中元素的最大异或值【困难】/README"},"1708":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"332d14e2-d011-4596-ba4f-b73946c39623","redirect":"notes/1708. 长度为 K 的最大子数组【简单】/README"},"1709":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53acdcac-bf27-4c9a-9929-edbeb2ad0530","redirect":"notes/1709. 访问日期之间最大的空档期【中等】/README"},"1710":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3c83490-5b22-45cc-8985-728ca8d39373","redirect":"notes/1710. 卡车上的最大单元数【简单】/README"},"1711":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2bc4a5d6-b961-415e-8550-679b3d3add86","redirect":"notes/1711. 大餐计数【中等】/README"},"1712":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96633b89-5f19-4900-a519-e3ef5b40247c","redirect":"notes/1712. 将数组分成三个子数组的方案数【中等】/README"},"1713":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a528c1fe-cefa-4f5a-a22d-babb7b1cce76","redirect":"notes/1713. 得到子序列的最少操作次数【困难】/README"},"1714":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9ed1cdd1-59a6-40cb-b826-0b60a263052d","redirect":"notes/1714. 数组中特殊等间距元素的和【困难】/README"},"1715":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02e1a30b-fd24-41f9-900e-47501a572ea6","redirect":"notes/1715. 苹果和橘子的个数【中等】/README"},"1716":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db3d34dc-2049-42b7-b96f-2b14477c230e","redirect":"notes/1716. 计算力扣银行的钱【简单】/README"},"1717":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9d2db0b3-e6a8-466b-9e57-a86884352c54","redirect":"notes/1717. 删除子字符串的最大得分【中等】/README"},"1718":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e90c8438-987e-43f2-9f5c-d45db97998d5","redirect":"notes/1718. 构建字典序最大的可行序列【中等】/README"},"1719":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e550f7f-837c-42b7-bb84-53e4731ee59d","redirect":"notes/1719. 重构一棵树的方案数【困难】/README"},"1720":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"985dd0a7-d887-48ec-9641-cd37d3afeef3","redirect":"notes/1720. 解码异或后的数组【简单】/README"},"1721":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"704166e3-0976-48b0-9350-43e3b3d690be","redirect":"notes/1721. 交换链表中的节点【中等】/README"},"1722":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6fc58c0-bd83-48f4-94b0-ddfcdad80dc8","redirect":"notes/1722. 执行交换操作后的最小汉明距离【中等】/README"},"1723":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6fa0615-ad8f-4e54-ad86-f1c0972ebec8","redirect":"notes/1723. 完成所有工作的最短时间【困难】/README"},"1724":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a0115ad4-2092-42a9-808b-35a7e42453c9","redirect":"notes/1724. 检查边长度限制的路径是否存在 II【困难】/README"},"1725":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1296a4b-1ddc-46bd-b8eb-8c3123d5d17d","redirect":"notes/1725. 可以形成最大正方形的矩形数目【简单】/README"},"1726":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7efb846e-6033-4fb5-b5ee-b44e6bd44c36","redirect":"notes/1726. 同积元组【中等】/README"},"1727":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c7777caf-d4b4-4591-849b-cebc9b2f562b","redirect":"notes/1727. 重新排列后的最大子矩阵【中等】/README"},"1728":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"16830b7a-d9b9-4454-aea1-33a951b8ebaa","redirect":"notes/1728. 猫和老鼠 II【困难】/README"},"1729":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c512d935-1f53-4a6a-b30c-72d756be6d68","redirect":"notes/1729. 求关注者的数量【简单】/README"},"1730":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0662796-b534-4469-9ff6-f08f686ee9bc","redirect":"notes/1730. 获取食物的最短路径【中等】/README"},"1731":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ba24f8a-3734-421b-b959-61913daf9c2b","redirect":"notes/1731. 每位经理的下属员工数量【简单】/README"},"1732":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f951c64-6d53-455a-8265-fdd413b460ff","redirect":"notes/1732. 找到最高海拔【简单】/README"},"1733":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d526bdd-1e9f-41d5-9690-ea2a390fc4d1","redirect":"notes/1733. 需要教语言的最少人数【中等】/README"},"1734":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5174eea5-d72c-4cff-a39c-5c14e64458d2","redirect":"notes/1734. 解码异或后的排列【中等】/README"},"1735":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"831a4c72-d5c4-4ab0-9deb-be36a864152d","redirect":"notes/1735. 生成乘积数组的方案数【困难】/README"},"1736":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d97c292-1306-4ddb-8462-c593440717c5","redirect":"notes/1736. 替换隐藏数字得到的最晚时间【简单】/README"},"1737":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e8d9844-2364-4b9f-9b4e-f69d49de92e3","redirect":"notes/1737. 满足三条件之一需改变的最少字符数【中等】/README"},"1738":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb102fcc-557f-4743-b74b-94c6d013cac3","redirect":"notes/1738. 找出第 K 大的异或坐标值【中等】/README"},"1739":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0881e6b0-19f3-4459-bcd9-4869d2ff6966","redirect":"notes/1739. 放置盒子【困难】/README"},"1740":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ebffea8-50b5-464e-9fd4-9abd3963d7c2","redirect":"notes/1740. 找到二叉树中的距离【中等】/README"},"1741":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c48cb87-5b08-4f00-a909-97a24883e184","redirect":"notes/1741. 查找每个员工花费的总时间【简单】/README"},"1742":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8c7dc47c-874f-46de-9027-bb3b0c004fef","redirect":"notes/1742. 盒子中小球的最大数量【简单】/README"},"1743":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c1cba61-18f9-417a-9351-3aab29d1ca3b","redirect":"notes/1743. 从相邻元素对还原数组【中等】/README"},"1744":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7d8f117-ca67-43bc-a795-e96fbfaa9d3a","redirect":"notes/1744. 你能在你最喜欢的那天吃到你最喜欢的糖果吗？【中等】/README"},"1745":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a43f5c72-272c-419f-bfdf-e11b7dfa1aee","redirect":"notes/1745. 分割回文串 IV【困难】/README"},"1746":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a63b7f4d-00d6-4888-a1b2-028889b05a1f","redirect":"notes/1746. 经过一次操作后的最大子数组和【中等】/README"},"1747":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2eea4e04-7887-456c-9937-f5b0d97d0a0b","redirect":"notes/1747. 应该被禁止的 Leetflex 账户【中等】/README"},"1748":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6176fa3-8607-4d01-9381-5e406b7fe1ea","redirect":"notes/1748. 唯一元素的和【简单】/README"},"1749":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2729ebe7-65bd-4817-8901-33426a3ff171","redirect":"notes/1749. 任意子数组和的绝对值的最大值【中等】/README"},"1750":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7de28f82-1718-466f-921e-7a643143d49f","redirect":"notes/1750. 删除字符串两端相同字符后的最短长度【中等】/README"},"1751":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca0acf5e-9bcc-46d2-91c6-7c5a9c05ba8b","redirect":"notes/1751. 最多可以参加的会议数目 II【困难】/README"},"1752":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31700205-1b0f-48cd-9e48-d5a1188915a2","redirect":"notes/1752. 检查数组是否经排序和轮转得到【简单】/README"},"1753":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22a1818c-f391-4305-a195-1e92fe047e7d","redirect":"notes/1753. 移除石子的最大得分【中等】/README"},"1754":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7693b265-e3da-4b7c-a340-0fd9d48e3a56","redirect":"notes/1754. 构造字典序最大的合并字符串【中等】/README"},"1755":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dd141661-b686-4422-9dac-5db78895b367","redirect":"notes/1755. 最接近目标值的子序列和【困难】/README"},"1756":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7df5b65a-5654-4d7e-a781-a2f89ff1c2eb","redirect":"notes/1756. 设计最近使用（MRU）队列【中等】/README"},"1757":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"83d3b8ab-853e-4e21-a6bc-8ca901189534","redirect":"notes/1757. 可回收且低脂的产品【简单】/README"},"1758":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"295ccd3c-4915-4cac-8ff8-6e30da040bf9","redirect":"notes/1758. 生成交替二进制字符串的最少操作数【简单】/README"},"1759":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e49daf0-b66f-41a7-9979-53efa380108f","redirect":"notes/1759. 统计同质子字符串的数目【中等】/README"},"1760":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"778a986c-db5c-424f-93a8-d62b38d455e6","redirect":"notes/1760. 袋子里最少数目的球【中等】/README"},"1761":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c08cd92e-9c78-4744-b43f-eeb863ecf675","redirect":"notes/1761. 一个图中连通三元组的最小度数【困难】/README"},"1762":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"512b0295-e0b3-40c0-bcd5-028c3df96536","redirect":"notes/1762. 能看到海景的建筑物【中等】/README"},"1763":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c69e7da2-e7d5-44ed-b674-5a8e6181258c","redirect":"notes/1763. 最长的美好子字符串【简单】/README"},"1764":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36778382-a4be-4657-ae08-8d9932cecf7c","redirect":"notes/1764. 通过连接另一个数组的子数组得到一个数组【中等】/README"},"1765":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20ef7d5b-4230-4b4f-9f90-70bcdd39ca6a","redirect":"notes/1765. 地图中的最高点【中等】/README"},"1766":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"686170a0-db08-4f1e-a93c-c85349ff10a2","redirect":"notes/1766. 互质树【困难】/README"},"1767":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0c91712-220a-4cf3-8a7b-2d544830396e","redirect":"notes/1767. 寻找没有被执行的任务对【困难】/README"},"1768":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0c80caf-56f6-465b-bedd-9d289955dea6","redirect":"notes/1768. 交替合并字符串【简单】/README"},"1769":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba48f455-9018-4d66-aa6d-fd89557ef7c4","redirect":"notes/1769. 移动所有球到每个盒子所需的最小操作数【中等】/README"},"1770":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"acbb7734-03e1-422b-8529-a0cf40d9164c","redirect":"notes/1770. 执行乘法运算的最大分数【困难】/README"},"1771":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"75d910ae-47cf-42f3-8a97-ed883ebef86a","redirect":"notes/1771. 由子序列构造的最长回文串的长度【困难】/README"},"1772":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"16c08eb7-cc84-40b3-9dd0-25fc47e7151f","redirect":"notes/1772. 按受欢迎程度排列功能【中等】/README"},"1773":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d49087d-2853-40a6-b091-5d9e707205dd","redirect":"notes/1773. 统计匹配检索规则的物品数量【简单】/README"},"1774":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b5ce27d-9f89-4789-9bca-961e90588d0c","redirect":"notes/1774. 最接近目标价格的甜点成本【中等】/README"},"1775":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c543069-b990-4d9a-87cc-41d4dd4262be","redirect":"notes/1775. 通过最少操作次数使数组的和相等【中等】/README"},"1776":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be98d389-c978-42f4-96e4-3e3a492dd066","redirect":"notes/1776. 车队 II【困难】/README"},"1777":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c735021-980d-4652-bf45-d95bcbb4f82e","redirect":"notes/1777. 每家商店的产品价格【简单】/README"},"1778":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"82e72950-997d-430c-8c5c-5bc7114d7134","redirect":"notes/1778. 未知网格中的最短路径【中等】/README"},"1779":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6671134-11e5-4544-bffc-4cd2aae3fc48","redirect":"notes/1779. 找到最近的有相同 X 或 Y 坐标的点【简单】/README"},"1780":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c066a242-1faf-444a-b914-0d2635ef5c4f","redirect":"notes/1780. 判断一个数字是否可以表示成三的幂的和【中等】/README"},"1781":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"211ad172-bd1e-49a6-b054-f1cdcd12bce4","redirect":"notes/1781. 所有子字符串美丽值之和【中等】/README"},"1782":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8718c0c5-035e-4827-96a3-e608c8e9ef92","redirect":"notes/1782. 统计点对的数目【困难】/README"},"1783":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"267e3f1b-8f1d-4d5e-882c-c06bd8edcee1","redirect":"notes/1783. 大满贯数量【中等】/README"},"1784":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"781937a3-c1ec-49d9-a166-e689856ebfc2","redirect":"notes/1784. 检查二进制字符串字段【简单】/README"},"1785":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8dc3bf07-711c-416d-b2df-c9204831e35e","redirect":"notes/1785. 构成特定和需要添加的最少元素【中等】/README"},"1786":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e752f6a-ab72-4eec-8480-b16af264b526","redirect":"notes/1786. 从第一个节点出发到最后一个节点的受限路径数【中等】/README"},"1787":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3008fd7-a8b4-458c-baf6-35084d67e46e","redirect":"notes/1787. 使所有区间的异或结果为零【困难】/README"},"1788":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"84b8c296-9373-4bbf-a408-a514bc47f761","redirect":"notes/1788. 最大化花园的美观度【困难】/README"},"1789":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3385626e-46bb-4389-8d22-af63e072fd13","redirect":"notes/1789. 员工的直属部门【简单】/README"},"1790":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b29cb5c-bea4-45d5-a62e-ae9f320d7334","redirect":"notes/1790. 仅执行一次字符串交换能否使两个字符串相等【简单】/README"},"1791":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1de804a0-69dd-4e92-9b5e-023a7ddc681e","redirect":"notes/1791. 找出星型图的中心节点【简单】/README"},"1792":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6edaa8fe-8907-4a83-b8ff-c2ff20a4de80","redirect":"notes/1792. 最大平均通过率【中等】/README"},"1793":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b34f5e3-1b3d-40d5-be6a-3932ea648758","redirect":"notes/1793. 好子数组的最大分数【困难】/README"},"1794":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db180c20-2322-4081-bc52-ebee330cce91","redirect":"notes/1794. 统计距离最小的子串对个数【中等】/README"},"1795":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"887cf965-1c4c-45a7-ae7a-479a3bb6a246","redirect":"notes/1795. 每个产品在不同商店的价格【简单】/README"},"1796":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09c241ec-0956-43ce-b800-bf6bf7a56d95","redirect":"notes/1796. 字符串中第二大的数字【简单】/README"},"1797":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8538ce6-9eab-413c-9dd4-c80a6a1740b1","redirect":"notes/1797. 设计一个验证系统【中等】/README"},"1798":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"167844dd-fad9-4c73-8c7c-aacb1e2aa52c","redirect":"notes/1798. 你能构造出连续值的最大数目【中等】/README"},"1799":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9ca5fbb6-156b-4ff1-ad7a-902b6243c9d6","redirect":"notes/1799. N 次操作后的最大分数和【困难】/README"},"1800":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"093b034f-65cc-44db-928f-cdba889a1729","redirect":"notes/1800. 最大升序子数组和【简单】/README"},"1801":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23db16ac-638e-4527-b5fe-60fc35691f27","redirect":"notes/1801. 积压订单中的订单总数【中等】/README"},"1802":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"43c59c22-619d-433a-99bf-c230c4eed061","redirect":"notes/1802. 有界数组中指定下标处的最大值【中等】/README"},"1803":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b3d681a-6b29-46a7-8b7f-52060247dd34","redirect":"notes/1803. 统计异或值在范围内的数对有多少【困难】/README"},"1804":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7c5f032-c2e2-4b66-a389-33b1feb6b789","redirect":"notes/1804. 实现 Trie （前缀树） II【中等】/README"},"1805":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"336cc2ed-e2f6-4079-a53f-a6d0c794c537","redirect":"notes/1805. 字符串中不同整数的数目【简单】/README"},"1806":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a51ba7a-95ad-4769-8118-911d729d69f1","redirect":"notes/1806. 还原排列的最少操作步数【中等】/README"},"1807":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10110cb9-336e-4f21-9322-d51b4fd011fe","redirect":"notes/1807. 替换字符串中的括号内容【中等】/README"},"1808":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8dcc34e0-a30f-4384-bd7d-79e573a0abb5","redirect":"notes/1808. 好因子的最大数目【困难】/README"},"1809":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"beb63a82-7c4b-4d07-bd07-44082b08fd05","redirect":"notes/1809. 没有广告的剧集【简单】/README"},"1810":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20a1ff59-3b39-4399-8858-09b9799e24ba","redirect":"notes/1810. 隐藏网格下的最小消耗路径【中等】/README"},"1811":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4f1ac8d-a8a9-4b1a-afec-f21e9fecff46","redirect":"notes/1811. 寻找面试候选人【中等】/README"},"1812":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"44950941-a210-4f2b-b582-41205927d760","redirect":"notes/1812. 判断国际象棋棋盘中一个格子的颜色【简单】/README"},"1813":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"433fc99b-6011-4aab-b842-8a482fc25099","redirect":"notes/1813. 句子相似性 III【中等】/README"},"1814":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0b2f800-be51-4b43-bda9-8881c2e74b17","redirect":"notes/1814. 统计一个数组中好对子的数目【中等】/README"},"1815":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9ff50bcd-0e05-48ee-a9d9-82c1a169776b","redirect":"notes/1815. 得到新鲜甜甜圈的最多组数【困难】/README"},"1816":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30a757c9-ab96-4e16-bd52-7dd266b05ee5","redirect":"notes/1816. 截断句子【简单】/README"},"1817":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e3248ba-82b3-4c4d-b43e-46aac58dccba","redirect":"notes/1817. 查找用户活跃分钟数【中等】/README"},"1818":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"383cb017-aa00-45be-9ae5-58cae9475058","redirect":"notes/1818. 绝对差值和【中等】/README"},"1819":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b79d0e0-e117-4dc4-8087-e97d71acbf25","redirect":"notes/1819. 序列中不同最大公约数的数目【困难】/README"},"1820":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"afca8422-7b4c-469f-8fef-b9742f56a45f","redirect":"notes/1820. 最多邀请的个数【中等】/README"},"1821":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d225e7e-cc84-49b7-884f-44a4ae3a671d","redirect":"notes/1821. 寻找今年具有正收入的客户【简单】/README"},"1822":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a141ba9-f047-4f81-9c85-df21980bedd7","redirect":"notes/1822. 数组元素积的符号【简单】/README"},"1823":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30b3c835-e98c-437a-8b10-74d5b13f4038","redirect":"notes/1823. 找出游戏的获胜者【中等】/README"},"1824":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"738e19ab-cab0-45c1-98a0-226506682c4f","redirect":"notes/1824. 最少侧跳次数【中等】/README"},"1825":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d1061df5-dd53-4b4d-ac79-01b28e7803a6","redirect":"notes/1825. 求出 MK 平均值【困难】/README"},"1826":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bca00172-3679-458f-8355-7021de830538","redirect":"notes/1826. 有缺陷的传感器【简单】/README"},"1827":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd0e9b6e-a329-481b-a44c-7663efd8001d","redirect":"notes/1827. 最少操作使数组递增【简单】/README"},"1828":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dcd131c2-5ac5-44de-be6e-add465413cc5","redirect":"notes/1828. 统计一个圆中点的数目【中等】/README"},"1829":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b8bdff14-6206-4e70-bbcd-f9fda088dd1a","redirect":"notes/1829. 每个查询的最大异或值【中等】/README"},"1830":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"935504b7-6de3-48cd-959e-9c2c97ca16ff","redirect":"notes/1830. 使字符串有序的最少操作次数【困难】/README"},"1831":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"305550b9-c9c3-4740-a7dd-24c75679c228","redirect":"notes/1831. 每天的最大交易【中等】/README"},"1832":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48dbcee9-32be-4c7b-9cda-3a5ece7e569f","redirect":"notes/1832. 判断句子是否为全字母句【简单】/README"},"1833":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ac6ddc2-1983-4564-9625-be41ea78646e","redirect":"notes/1833. 雪糕的最大数量【中等】/README"},"1834":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8904936b-5683-4737-8d51-ae84bd2513b8","redirect":"notes/1834. 单线程 CPU【中等】/README"},"1835":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b58306c-26b5-4348-8e7c-a9484bd10f8c","redirect":"notes/1835. 所有数对按位与结果的异或和【困难】/README"},"1836":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f876f425-e9b4-42af-bf58-e4d97304d71d","redirect":"notes/1836. 从未排序的链表中移除重复元素【中等】/README"},"1837":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6cb60e9-a315-40e4-abaf-483da8fc3994","redirect":"notes/1837. K 进制表示下的各位数字总和【简单】/README"},"1838":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b379520-02e3-44ad-a0f4-c6e1f8b70f64","redirect":"notes/1838. 最高频元素的频数【中等】/README"},"1839":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a71a48e-6670-42ff-b423-0fef14d915fa","redirect":"notes/1839. 所有元音按顺序排布的最长子字符串【中等】/README"},"1840":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed074398-8076-45ce-8391-63c4d62e4cd6","redirect":"notes/1840. 最高建筑高度【困难】/README"},"1841":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bcb95ae-90f4-4fec-8c7c-99cc6f23f5c8","redirect":"notes/1841. 联赛信息统计【中等】/README"},"1842":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a126c210-4f3d-43ee-b24d-5255fac911d8","redirect":"notes/1842. 下个由相同数字构成的回文串【困难】/README"},"1843":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3cc8a266-e4ec-40e3-861f-ca66368669a2","redirect":"notes/1843. 可疑银行账户【中等】/README"},"1844":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c0a5987-84ac-4523-ade7-f9d783a5311d","redirect":"notes/1844. 将所有数字用字符替换【简单】/README"},"1845":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b6e5385-0caf-4276-94dd-2d6a8c5c2d07","redirect":"notes/1845. 座位预约管理系统【中等】/README"},"1846":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12716d40-b8ab-4a00-b96d-a5c8ef3598a2","redirect":"notes/1846. 减小和重新排列数组后的最大元素【中等】/README"},"1847":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7fae6541-2746-4a37-97e1-5cb7c056e4df","redirect":"notes/1847. 最近的房间【困难】/README"},"1848":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4b3a259-eabd-43dd-b3a2-6442d3a468b5","redirect":"notes/1848. 到目标元素的最小距离【简单】/README"},"1849":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf15bf3c-5f89-4337-a1cc-df7fd96008fc","redirect":"notes/1849. 将字符串拆分为递减的连续值【中等】/README"},"1850":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c603e4db-0421-4063-bd1e-c63c9e58dd3a","redirect":"notes/1850. 邻位交换的最小次数【中等】/README"},"1851":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a88dd56d-c286-4e51-af5f-8296957b3268","redirect":"notes/1851. 包含每个查询的最小区间【困难】/README"},"1852":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2a35599-24ce-4823-a18e-a6148ed6701b","redirect":"notes/1852. 每个子数组的数字种类数【中等】/README"},"1853":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53660e76-2a8a-48ab-ab3b-12d9d5a56495","redirect":"notes/1853. 转换日期格式【简单】/README"},"1854":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9ec1b22-a728-4112-a859-cc3f0fec25a8","redirect":"notes/1854. 人口最多的年份【简单】/README"},"1855":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed7eda7f-082f-494f-a20c-9afeddcf49d7","redirect":"notes/1855. 下标对中的最大距离【中等】/README"},"1856":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b10d1db-9aa7-428f-9898-0d7ff9a0a3d1","redirect":"notes/1856. 子数组最小乘积的最大值【中等】/README"},"1857":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96169697-7a72-40c0-870c-19b26bbc65e2","redirect":"notes/1857. 有向图中最大颜色值【困难】/README"},"1858":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bcde6bd9-4545-44cd-a831-0a51381b498b","redirect":"notes/1858. 包含所有前缀的最长单词【中等】/README"},"1859":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"476b0049-38f6-472f-b80d-6bc9d4a6a7cb","redirect":"notes/1859. 将句子排序【简单】/README"},"1860":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf4b5848-707f-4fe8-a947-6ac1fdea8f72","redirect":"notes/1860. 增长的内存泄露【中等】/README"},"1861":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cad88863-9a30-46a2-b059-69397c446656","redirect":"notes/1861. 旋转盒子【中等】/README"},"1862":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9509b60e-64a1-42f9-bf9f-726c358c795c","redirect":"notes/1862. 向下取整数对和【困难】/README"},"1863":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"236101a3-4fb5-433f-a61e-28e017e28a2c","redirect":"notes/1863. 找出所有子集的异或总和再求和【简单】/README"},"1864":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59ae8147-6d55-458f-995d-7e1141cb74b5","redirect":"notes/1864. 构成交替字符串需要的最小交换次数【中等】/README"},"1865":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86e3fd0f-6843-4421-89a1-e551f9a398ab","redirect":"notes/1865. 找出和为指定值的下标对【中等】/README"},"1866":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"254a1c3b-f53f-4996-8e75-f06633f90662","redirect":"notes/1866. 恰有 K 根木棍可以看到的排列数目【困难】/README"},"1867":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"28538a34-01d9-44db-8cf7-0bd7c55cbb39","redirect":"notes/1867. 最大数量高于平均水平的订单【中等】/README"},"1868":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d34059a-27fe-4f1b-aade-45fb26123925","redirect":"notes/1868. 两个行程编码数组的积【中等】/README"},"1869":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"68e6aefa-3bea-409c-a86b-92451676e6f4","redirect":"notes/1869. 哪种连续子字符串更长【简单】/README"},"1870":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49b93091-2615-4a90-b2e8-78b1f3b0ba72","redirect":"notes/1870. 准时到达的列车最小时速【中等】/README"},"1871":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"50d7aaf4-4ea5-4856-b212-298020746421","redirect":"notes/1871. 跳跃游戏 VII【中等】/README"},"1872":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd2e0d92-4999-48e9-8659-91a8565510c3","redirect":"notes/1872. 石子游戏 VIII【困难】/README"},"1873":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c67125d7-8abc-4fbc-95c5-efde0e8e33e1","redirect":"notes/1873. 计算特殊奖金【简单】/README"},"1874":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8fab4e8f-7c33-431d-bfc5-aa28436bb5a6","redirect":"notes/1874. 两个数组的最小乘积和【中等】/README"},"1875":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd68abe0-f9ff-4982-864e-975f37deb6c6","redirect":"notes/1875. 将工资相同的雇员分组【中等】/README"},"1876":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb68c462-a801-427f-97a2-9ecc1c33e999","redirect":"notes/1876. 长度为三且各字符不同的子字符串【简单】/README"},"1877":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d404b897-be00-4373-b017-cc3bc0ee7adc","redirect":"notes/1877. 数组中最大数对和的最小值【中等】/README"},"1878":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6bcaf8ac-52c2-4cc8-9e19-7845ac1c227c","redirect":"notes/1878. 矩阵中最大的三个菱形和【中等】/README"},"1879":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2e4f2e6-3a38-46a3-8787-df2ebd07756b","redirect":"notes/1879. 两个数组最小的异或值之和【困难】/README"},"1880":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4f9b74a-9e28-4c1b-9d15-b9f2bc3ddaa7","redirect":"notes/1880. 检查某单词是否等于两单词之和【简单】/README"},"1881":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59e574e3-b759-45bd-bb2e-733aaf5bd1da","redirect":"notes/1881. 插入后的最大值【中等】/README"},"1882":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f92d848-20e7-46b3-8776-476eac94df5c","redirect":"notes/1882. 使用服务器处理任务【中等】/README"},"1883":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a6415261-caaa-4397-ad52-057447131dd3","redirect":"notes/1883. 准时抵达会议现场的最小跳过休息次数【困难】/README"},"1884":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"657307c5-fbdf-4eb1-abfa-6246474b6230","redirect":"notes/1884. 鸡蛋掉落-两枚鸡蛋【中等】/README"},"1885":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"16678900-3a86-4aa4-843a-16a8824fdcb9","redirect":"notes/1885. 统计数对【中等】/README"},"1886":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab04f7ef-cd76-4e37-ba6b-2a689162e5e6","redirect":"notes/1886. 判断矩阵经轮转后是否一致【简单】/README"},"1887":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07e3a194-a5f4-4d28-9d64-6047e6ffe445","redirect":"notes/1887. 使数组元素相等的减少操作次数【中等】/README"},"1888":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"558ff945-e7b3-416b-9213-b11d4aebada3","redirect":"notes/1888. 使二进制字符串字符交替的最少反转次数【中等】/README"},"1889":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"17cfab60-d578-4268-abad-92638f40ddae","redirect":"notes/1889. 装包裹的最小浪费空间【困难】/README"},"1890":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6283808-6a2c-44f4-8002-7e261b9dccb5","redirect":"notes/1890. 2020年最后一次登录【简单】/README"},"1891":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f66299a-0593-4312-9d2b-90c62a2a95a9","redirect":"notes/1891. 割绳子【中等】/README"},"1892":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"edda9dbe-b514-4d3a-a29c-f10e6f5d724a","redirect":"notes/1892. 页面推荐Ⅱ【困难】/README"},"1893":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0bd5faa7-b323-492b-9664-6f0b91194645","redirect":"notes/1893. 检查是否区域内所有整数都被覆盖【简单】/README"},"1894":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9cffa3d1-5cb2-4ecc-bc3c-5cf8c113e4b5","redirect":"notes/1894. 找到需要补充粉笔的学生编号【中等】/README"},"1895":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9bde39a-68cf-4eb3-a11a-224a9d1defff","redirect":"notes/1895. 最大的幻方【中等】/README"},"1896":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27856073-a667-4c38-8948-abe300284940","redirect":"notes/1896. 反转表达式值的最少操作次数【困难】/README"},"1897":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c34c7341-93ac-45db-bb70-79e5ef6b0c61","redirect":"notes/1897. 重新分配字符使所有字符串都相等【简单】/README"},"1898":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c57b6c15-b4a4-409b-8cde-3d7b080d0244","redirect":"notes/1898. 可移除字符的最大数目【中等】/README"},"1899":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e1b92b9-ad1d-416e-b97d-9750ceae4fe6","redirect":"notes/1899. 合并若干三元组以形成目标三元组【中等】/README"},"1900":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd5006a1-aba6-4930-a900-8e42bd15b85d","redirect":"notes/1900. 最佳运动员的比拼回合【困难】/README"},"1901":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2d75706-feb4-48b8-ac02-58916949cb74","redirect":"notes/1901. 寻找峰值 II【中等】/README"},"1902":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0228c9ee-8a62-4a05-a67f-9e5bacd6baf6","redirect":"notes/1902. 给定二叉搜索树的插入顺序求深度【中等】/README"},"1903":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d5a2e88-74bb-411d-978b-94b47c962e26","redirect":"notes/1903. 字符串中的最大奇数【简单】/README"},"1904":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"519f6034-1e48-4549-8782-a0b4a4e54b8c","redirect":"notes/1904. 你完成的完整对局数【中等】/README"},"1905":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5815e61-03c7-437e-8b7e-8350ae211409","redirect":"notes/1905. 统计子岛屿【中等】/README"},"1906":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94354a74-5d64-4c84-ba45-60fad6c70153","redirect":"notes/1906. 查询差绝对值的最小值【中等】/README"},"1907":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"661158f7-d9c3-47c3-b662-24818710274c","redirect":"notes/1907. 按分类统计薪水【中等】/README"},"1908":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f5e2154-8875-4eee-9e3c-b62ee31cc5cd","redirect":"notes/1908. Nim 游戏 II【中等】/README"},"1909":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f0671f5-714d-4284-af87-226b9a0c9c92","redirect":"notes/1909. 删除一个元素使数组严格递增【简单】/README"},"1910":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da8bf687-00a9-4576-99d5-ead9456ddada","redirect":"notes/1910. 删除一个字符串中所有出现的给定子字符串【中等】/README"},"1911":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5963541e-95d9-427e-84b1-33cd4dd5e0ac","redirect":"notes/1911. 最大交替子序列和【中等】/README"},"1912":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fbf9a566-cf21-4f93-b2e5-cb16eb9c5811","redirect":"notes/1912. 设计电影租借系统【困难】/README"},"1913":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae2a7dec-42a8-4c49-a7da-a937b43bf13b","redirect":"notes/1913. 两个数对之间的最大乘积差【简单】/README"},"1914":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e702db5-fa06-42b6-885b-62fe8c707717","redirect":"notes/1914. 循环轮转矩阵【中等】/README"},"1915":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46a03857-5ed9-4efd-929c-a8b133a7cccb","redirect":"notes/1915. 最美子字符串的数目【中等】/README"},"1916":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"51e1e908-cb9a-486b-92e5-dac3459b88fd","redirect":"notes/1916. 统计为蚁群构筑房间的不同顺序【困难】/README"},"1917":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4974ab16-d7bf-4186-9c0c-c47cbce0fd8e","redirect":"notes/1917. Leetcodify 好友推荐【困难】/README"},"1918":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0b078948-f123-44cf-ad1a-7d02dc51033e","redirect":"notes/1918. 第 K 小的子数组和【中等】/README"},"1919":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"759e85be-b9d9-4ff1-935f-cb58d0922a1b","redirect":"notes/1919. 兴趣相同的朋友【困难】/README"},"1920":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92437c36-9a44-4551-b4cb-00a8034917a6","redirect":"notes/1920. 基于排列构建数组【简单】/README"},"1921":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e595fc4-be5a-4253-9de0-53781e25eb9c","redirect":"notes/1921. 消灭怪物的最大数量【中等】/README"},"1922":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6858cad-da8c-4469-8b80-8765c8b3d388","redirect":"notes/1922. 统计好数字的数目【中等】/README"},"1923":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"595ecb9c-996a-4e1c-91b7-846882e26fd4","redirect":"notes/1923. 最长公共子路径【困难】/README"},"1924":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd7991cb-8f59-480d-97b4-d7fe7d79235c","redirect":"notes/1924. 安装栅栏 II【困难】/README"},"1925":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8968ef2d-9dca-4dcb-b068-fed2c5db37c7","redirect":"notes/1925. 统计平方和三元组的数目【简单】/README"},"1926":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33af923f-4ff2-4a4d-ba86-9d23e5caf35c","redirect":"notes/1926. 迷宫中离入口最近的出口【中等】/README"},"1927":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3dd56314-8e3d-4f90-810e-de3aae350af7","redirect":"notes/1927. 求和游戏【中等】/README"},"1928":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"160ffc6e-b756-485f-ab86-00278d33dd45","redirect":"notes/1928. 规定时间内到达终点的最小花费【困难】/README"},"1929":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc79c626-e96d-4b10-945a-7ddede2dc56e","redirect":"notes/1929. 数组串联【简单】/README"},"1930":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eeb17610-6f1d-4537-a346-14e7c1801afc","redirect":"notes/1930. 长度为 3 的不同回文子序列【中等】/README"},"1931":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0487694a-515b-4fca-9198-7abf3bb3a63f","redirect":"notes/1931. 用三种不同颜色为网格涂色【困难】/README"},"1932":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4396d0f2-123b-4e00-be26-c6a76fdcc358","redirect":"notes/1932. 合并多棵二叉搜索树【困难】/README"},"1933":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"451d9c27-3075-4b5e-93fe-52d17517356b","redirect":"notes/1933. 判断字符串是否可分解为值均等的子串【简单】/README"},"1934":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd4639f8-f4cb-49a0-807a-e5cad5ed691c","redirect":"notes/1934. 确认率【中等】/README"},"1935":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee2416a3-588b-4b0f-85ff-fb7cef23ad17","redirect":"notes/1935. 可以输入的最大单词数【简单】/README"},"1936":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1da5c6c9-4138-4f2d-b3f6-543dbc0dfe36","redirect":"notes/1936. 新增的最少台阶数【中等】/README"},"1937":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"415ea06d-6fe3-4f3a-9e64-f6969774bac8","redirect":"notes/1937. 扣分后的最大得分【中等】/README"},"1938":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38cb38d4-107e-4aa5-899f-c1623ec3d057","redirect":"notes/1938. 查询最大基因差【困难】/README"},"1939":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24513901-2174-4235-bb9d-29f9b0eda5f3","redirect":"notes/1939. 主动请求确认消息的用户【简单】/README"},"1940":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7a740da-67a9-4ebf-b7c7-2b72f3a22ac1","redirect":"notes/1940. 排序数组之间的最长公共子序列【中等】/README"},"1941":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"feb1315f-c9a8-4793-8c0c-058ce05706d7","redirect":"notes/1941. 检查是否所有字符出现次数相同【简单】/README"},"1942":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9727cba3-36b8-4bf4-a17a-219885fd7cba","redirect":"notes/1942. 最小未被占据椅子的编号【中等】/README"},"1943":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b582bc3b-10ba-4cc0-8370-166f6dd8cafd","redirect":"notes/1943. 描述绘画结果【中等】/README"},"1944":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6bebc871-09c3-4a13-8355-67601fdc4b69","redirect":"notes/1944. 队列中可以看到的人数【困难】/README"},"1945":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2568c99-caf8-4959-84c8-1cbbfb378899","redirect":"notes/1945. 字符串转化后的各位数字之和【简单】/README"},"1946":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"725c6d95-b02f-4e5e-a37f-df0772c87026","redirect":"notes/1946. 子字符串突变后可能得到的最大整数【中等】/README"},"1947":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0168470-e446-44fb-93c4-b2a60861b412","redirect":"notes/1947. 最大兼容性评分和【中等】/README"},"1948":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ecdb808-cd1a-4202-b3a8-c49d18057b0d","redirect":"notes/1948. 删除系统中的重复文件夹【困难】/README"},"1949":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f1a021e7-6062-4c5a-a3a5-3e4954581966","redirect":"notes/1949. 坚定的友谊【中等】/README"},"1950":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0cc80c30-bc9a-49ac-aff8-520974cd5ec4","redirect":"notes/1950. 所有子数组最小值中的最大值【中等】/README"},"1951":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fe74134-018e-4412-a536-b9ae455c7fdb","redirect":"notes/1951. 查询具有最多共同关注者的所有两两结对组【中等】/README"},"1952":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ca7bb5f-56c2-49dc-ac3f-1bab46700219","redirect":"notes/1952. 三除数【简单】/README"},"1953":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"403fffd8-9215-436d-bdb0-b98dbc802222","redirect":"notes/1953. 你可以工作的最大周数【中等】/README"},"1954":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ff8ce13-d67d-41f0-a3fe-e75c8023ccb0","redirect":"notes/1954. 收集足够苹果的最小花园周长【中等】/README"},"1955":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fef223f8-2a27-4583-85e2-19116016cf8d","redirect":"notes/1955. 统计特殊子序列的数目【困难】/README"},"1956":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf0cef8a-a995-4f58-961f-cd683b6f5c7d","redirect":"notes/1956. 感染 K 种病毒所需的最短时间【困难】/README"},"1957":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aec7c77f-f398-4211-a3d7-c085029097fa","redirect":"notes/1957. 删除字符使字符串变好【简单】/README"},"1958":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34cc5b2f-6b44-4dd1-82be-850505f8b6fa","redirect":"notes/1958. 检查操作是否合法【中等】/README"},"1959":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"000e9e6c-02c2-4f62-84b8-1176e30fbc78","redirect":"notes/1959. K 次调整数组大小浪费的最小总空间【中等】/README"},"1960":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0332adcd-b106-43ee-90da-b63698dc95bd","redirect":"notes/1960. 两个回文子字符串长度的最大乘积【困难】/README"},"1961":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3250f4aa-23d0-4512-88eb-f76f0e8668ff","redirect":"notes/1961. 检查字符串是否为数组前缀【简单】/README"},"1962":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"76eb0a1a-71f2-439b-aba8-934fbfbaf004","redirect":"notes/1962. 移除石子使总数最小【中等】/README"},"1963":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"638a10ca-fa84-4751-91d7-bf9efed8500b","redirect":"notes/1963. 使字符串平衡的最小交换次数【中等】/README"},"1964":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"845b432c-0d8d-4d9a-9c7e-545bf1cc723c","redirect":"notes/1964. 找出到每个位置为止最长的有效障碍赛跑路线【困难】/README"},"1965":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9ea3955-5b45-4932-a83b-0e021d3ac041","redirect":"notes/1965. 丢失信息的雇员【简单】/README"},"1966":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22f089b4-b217-42d2-a94f-ba52a2a3b6d9","redirect":"notes/1966. 未排序数组中的可被二分搜索的数【中等】/README"},"1967":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"777cc932-ce82-4d98-b516-6141ea1eb684","redirect":"notes/1967. 作为子字符串出现在单词中的字符串数目【简单】/README"},"1968":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34fae67c-ff3a-4421-8130-7ea52b25994b","redirect":"notes/1968. 构造元素不等于两相邻元素平均值的数组【中等】/README"},"1969":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2129a753-1131-48ab-b42c-bca2719043f8","redirect":"notes/1969. 数组元素的最小非零乘积【中等】/README"},"1970":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"023b9937-40e8-4498-94aa-55bf2fde0d55","redirect":"notes/1970. 你能穿过矩阵的最后一天【困难】/README"},"1971":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3debe7e-fc55-4e75-be25-1d82306fe433","redirect":"notes/1971. 寻找图中是否存在路径【简单】/README"},"1972":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7fb08f2e-149f-4a57-83b6-78d0071a2b49","redirect":"notes/1972. 同一天的第一个电话和最后一个电话【困难】/README"},"1973":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b0cbdf5-6644-4dfe-a873-6168ea48aefb","redirect":"notes/1973. 值等于子节点值之和的节点数量【中等】/README"},"1974":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b4b74cb9-929b-4387-b36b-43e068483e1d","redirect":"notes/1974. 使用特殊打字机键入单词的最少时间【简单】/README"},"1975":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f6784fc5-89ab-45bd-9797-6f02437a2807","redirect":"notes/1975. 最大方阵和【中等】/README"},"1976":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57b6e684-616c-4abc-9f4b-270c60c867a0","redirect":"notes/1976. 到达目的地的方案数【中等】/README"},"1977":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6abbf267-152e-4da3-bb31-7697ff5fc5e3","redirect":"notes/1977. 划分数字的方案数【困难】/README"},"1978":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b9ed2f8-0fdb-4ef0-aef3-191265182764","redirect":"notes/1978. 上级经理已离职的公司员工【简单】/README"},"1979":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b220561-7df2-4a76-9816-430861ff3f48","redirect":"notes/1979. 找出数组的最大公约数【简单】/README"},"1980":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3dfcb94-35c5-4140-a38b-bf783e4d4b6a","redirect":"notes/1980. 找出不同的二进制字符串【中等】/README"},"1981":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dee78e8c-4d6c-42ed-a7fb-1366309c499a","redirect":"notes/1981. 最小化目标值与所选元素的差【中等】/README"},"1982":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6cf4fbe-2c91-4d2d-b02e-917bb0eb0149","redirect":"notes/1982. 从子集的和还原数组【困难】/README"},"1983":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2120741b-cf41-4019-bd30-044212f1d94f","redirect":"notes/1983. 范围和相等的最宽索引对【中等】/README"},"1984":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1a1532c8-38f2-44c4-9a15-beabeb4f41fd","redirect":"notes/1984. 学生分数的最小差值【简单】/README"},"1985":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d9b672b-b649-43ad-82b6-3a91011a6034","redirect":"notes/1985. 找出数组中的第 K 大整数【中等】/README"},"1986":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d666642-c1fc-4b20-bb6e-1ab3f50de037","redirect":"notes/1986. 完成任务的最少工作时间段【中等】/README"},"1987":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87a5aafc-12b7-4e50-bd85-745aa4c6ad6f","redirect":"notes/1987. 不同的好子序列数目【困难】/README"},"1988":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2301fb4-3b2f-40ab-9fa3-89d94cc6a403","redirect":"notes/1988. 找出每所学校的最低分数要求【中等】/README"},"1989":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9835c36a-0153-45fa-97e6-d05b71058f97","redirect":"notes/1989. 捉迷藏中可捕获的最大人数【中等】/README"},"1990":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5cce6fb0-595b-495a-baeb-a2f6aa0a8814","redirect":"notes/1990. 统计实验的数量【中等】/README"},"1991":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"129fc2b6-d917-49ba-be86-cb2800f2aa4c","redirect":"notes/1991. 找到数组的中间位置【简单】/README"},"1992":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85f29f7d-0308-49f9-a555-bdbc41739f88","redirect":"notes/1992. 找到所有的农场组【中等】/README"},"1993":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"015cfc9d-b79d-43b5-9b09-a0c6e9b5c97f","redirect":"notes/1993. 树上的操作【中等】/README"},"1994":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ccd83d3-08bc-47ba-a874-3b28df8a8cd4","redirect":"notes/1994. 好子集的数目【困难】/README"},"1995":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"160f2a83-c8f8-4f09-8ade-3a84da710d01","redirect":"notes/1995. 统计特殊四元组【简单】/README"},"1996":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1bf3e7e3-6791-4ab8-b9f7-35a93bd6ecca","redirect":"notes/1996. 游戏中弱角色的数量【中等】/README"},"1997":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"03343a5d-ff37-4bee-812a-087834717aed","redirect":"notes/1997. 访问完所有房间的第一天【中等】/README"},"1998":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56df7d50-bfe5-4f8f-b8c7-021c58a9d5ec","redirect":"notes/1998. 数组的最大公因数排序【困难】/README"},"1999":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"666b4f6a-a953-4140-a1b4-e8d6b89a9ec5","redirect":"notes/1999. 最小的仅由两个数组成的倍数【中等】/README"},"2000":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"285eeed6-842c-4de1-a1b2-fd1fcb3b76a0","redirect":"notes/2000. 反转单词前缀【简单】/README"},"2001":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c1f89df-5354-407f-b407-8e2fcac2f472","redirect":"notes/2001. 可互换矩形的组数【中等】/README"},"2002":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59e86784-e2fc-41fb-9be5-2ff78ba448a0","redirect":"notes/2002. 两个回文子序列长度的最大乘积【中等】/README"},"2003":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"806187b6-6b3e-4d8b-b46d-7e96f6caac82","redirect":"notes/2003. 每棵子树内缺失的最小基因值【困难】/README"},"2004":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e49843f3-d782-43dc-aa71-50b734c29ed6","redirect":"notes/2004. 职员招聘人数【困难】/README"},"2005":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2021f8e-246b-441a-a19f-9439abdc0eba","redirect":"notes/2005. 斐波那契树的移除子树游戏【困难】/README"},"2006":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2eb96a1-6bc5-4f72-9481-7cfcd34b6ac1","redirect":"notes/2006. 差的绝对值为 K 的数对数目【简单】/README"},"2007":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c17ac5e-cd94-4de3-9dd1-44e3ee8f4d06","redirect":"notes/2007. 从双倍数组中还原原数组【中等】/README"},"2008":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f79d621-8c40-405a-915e-9b9328cd313f","redirect":"notes/2008. 出租车的最大盈利【中等】/README"},"2009":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c2c3588-cb30-488e-a644-a981fff14acf","redirect":"notes/2009. 使数组连续的最少操作数【困难】/README"},"2010":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ee6a708-23f8-46bb-9b47-fa2c9f53a6f5","redirect":"notes/2010. 职员招聘人数 II【困难】/README"},"2011":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5b12cf9-63ed-4c92-a887-a0228bf0c65e","redirect":"notes/2011. 执行操作后的变量值【简单】/README"},"2012":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63728215-7f3d-4af1-8198-b78273075e0f","redirect":"notes/2012. 数组美丽值求和【中等】/README"},"2013":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ab1637f-598c-48fb-b6ee-d9f4b2f5354b","redirect":"notes/2013. 检测正方形【中等】/README"},"2014":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ab5fca3-6a9d-475b-958e-e0ecf103ad37","redirect":"notes/2014. 重复 K 次的最长子序列【困难】/README"},"2015":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eca19726-6859-4ef5-bf3d-98f0568e1b3b","redirect":"notes/2015. 每段建筑物的平均高度【中等】/README"},"2016":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b25c98a-5889-4415-87e0-2eca3aa5eac6","redirect":"notes/2016. 增量元素之间的最大差值【简单】/README"},"2017":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ce81d57e-2959-4a99-8148-e77fd81b671b","redirect":"notes/2017. 网格游戏【中等】/README"},"2018":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a06391dd-c953-4736-a91e-4d6045947d2d","redirect":"notes/2018. 判断单词是否能放入填字游戏内【中等】/README"},"2019":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58601c1c-0697-42bc-8291-5fed7334aa96","redirect":"notes/2019. 解出数学表达式的学生分数【困难】/README"},"2020":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"88bfdd66-31ee-490e-9c7a-63aa43995212","redirect":"notes/2020. 无流量的帐户数【中等】/README"},"2021":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de535e79-b84c-4ff6-9ab7-606012aa9700","redirect":"notes/2021. 街上最亮的位置【中等】/README"},"2022":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"13a6cf51-b49f-4d46-ae6f-f92bae02796d","redirect":"notes/2022. 将一维数组转变成二维数组【简单】/README"},"2023":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be5d3d35-e021-464b-a034-2c61c84dd500","redirect":"notes/2023. 连接后等于目标字符串的字符串对【中等】/README"},"2024":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"995e3a17-0366-464b-99d1-ab05a7f8e666","redirect":"notes/2024. 考试的最大困扰度【中等】/README"},"2025":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"28a514ab-7f40-452f-aa6a-30d3726d4594","redirect":"notes/2025. 分割数组的最多方案数【困难】/README"},"2026":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0c342cd-0f1a-4cf4-b7b8-1c37acec764e","redirect":"notes/2026. 低质量的问题【简单】/README"},"2027":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6656b236-2f4b-46d7-95ef-f333cdb8dc64","redirect":"notes/2027. 转换字符串的最少操作次数【简单】/README"},"2028":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5a69573-bdc6-4c70-a063-5ea3d1de8694","redirect":"notes/2028. 找出缺失的观测数据【中等】/README"},"2029":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"714be332-c7b6-4606-afba-449e0815f4b2","redirect":"notes/2029. 石子游戏 IX【中等】/README"},"2030":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c2b67e3-d7bc-47ef-986d-1d20a0836f39","redirect":"notes/2030. 含特定字母的最小子序列【困难】/README"},"2031":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ee73163-2cf8-47b1-8d67-1b9123decdc0","redirect":"notes/2031. 1 比 0 多的子数组个数【中等】/README"},"2032":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0cf127aa-24bc-48a7-92d6-cc4a050940ef","redirect":"notes/2032. 至少在两个数组中出现的值【简单】/README"},"2033":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15cf2cca-3f74-4aee-a8af-ce515a1451b8","redirect":"notes/2033. 获取单值网格的最小操作数【中等】/README"},"2034":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b43962c-9d59-4168-b6aa-4736f06846f6","redirect":"notes/2034. 股票价格波动【中等】/README"},"2035":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8ff4688-cef7-4e1d-a1dd-6690d008ca3c","redirect":"notes/2035. 将数组分成两个数组并最小化数组和的差【困难】/README"},"2036":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0af94ed6-ffc4-439d-8292-53e92d314ade","redirect":"notes/2036. 最大交替子数组和【中等】/README"},"2037":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a8fea36c-bd39-492a-8a2e-a53437fd0426","redirect":"notes/2037. 使每位学生都有座位的最少移动次数【简单】/README"},"2038":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc186433-3132-4834-bedc-782ab1a12c37","redirect":"notes/2038. 如果相邻两个颜色均相同则删除当前颜色【中等】/README"},"2039":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1653e91d-cc51-49f0-8bce-eb1c93398bc9","redirect":"notes/2039. 网络空闲的时刻【中等】/README"},"2040":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a7ff9fb-feb8-4587-8ed1-75637bdb0ab1","redirect":"notes/2040. 两个有序数组的第 K 小乘积【困难】/README"},"2041":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ff33ce81-819c-40c4-97b6-03ee9a541ca6","redirect":"notes/2041. 面试中被录取的候选人【中等】/README"},"2042":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"266be5b3-7393-4cb5-a444-3135681c1a59","redirect":"notes/2042. 检查句子中的数字是否递增【简单】/README"},"2043":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9d824b2-f49e-4800-a73f-c874e140b827","redirect":"notes/2043. 简易银行系统【中等】/README"},"2044":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c668756-31b7-4528-8822-ebabddbd1c49","redirect":"notes/2044. 统计按位或能得到最大值的子集数目【中等】/README"},"2045":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1465529a-6363-4f72-8e56-60ff715bd0df","redirect":"notes/2045. 到达目的地的第二短时间【困难】/README"},"2046":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"602ce767-ba97-42cd-a93b-769c9b6a221c","redirect":"notes/2046. 给按照绝对值排序的链表排序【中等】/README"},"2047":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f25c4cf-f7f3-425c-b5f9-5429053656e9","redirect":"notes/2047. 句子中的有效单词数【简单】/README"},"2048":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1eeca90b-e754-4871-b1e7-3b1d0880b735","redirect":"notes/2048. 下一个更大的数值平衡数【中等】/README"},"2049":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2172605c-c287-4bfd-b277-885780d0934e","redirect":"notes/2049. 统计最高分的节点数目【中等】/README"},"2050":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f84a318-fe0e-4ff2-b688-bf9342a981a4","redirect":"notes/2050. 并行课程 III【困难】/README"},"2051":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56b38977-2954-4ddf-a112-3e8b9bd43aa6","redirect":"notes/2051. 商店中每个成员的级别【中等】/README"},"2052":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"303df9bd-24c0-465e-948a-a9e5bce646d2","redirect":"notes/2052. 将句子分隔成行的最低成本【中等】/README"},"2053":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"725e1c66-d7ff-4da5-b547-f48fa8f8b01c","redirect":"notes/2053. 数组中第 K 个独一无二的字符串【简单】/README"},"2054":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b58df5e-971d-4c26-8ae4-c35539ca255c","redirect":"notes/2054. 两个最好的不重叠活动【中等】/README"},"2055":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a506b80b-cc55-4a2a-bf3f-82914a2f2553","redirect":"notes/2055. 蜡烛之间的盘子【中等】/README"},"2056":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc0c17a2-0c02-4c90-a0c7-69e24d0273cc","redirect":"notes/2056. 棋盘上有效移动组合的数目【困难】/README"},"2057":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a8d86a5-5890-401d-9674-c1de21b41e19","redirect":"notes/2057. 值相等的最小索引【简单】/README"},"2058":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7aa09ae-e373-4a97-955c-f6a7a41f1268","redirect":"notes/2058. 找出临界点之间的最小和最大距离【中等】/README"},"2059":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"380b567b-4739-4cdb-899d-496be20cdb76","redirect":"notes/2059. 转化数字的最小运算数【中等】/README"},"2060":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8eee97da-298d-4b1f-914d-eeee05f6dac6","redirect":"notes/2060. 同源字符串检测【困难】/README"},"2061":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3060f406-d7ca-4911-8f70-954e38a7c518","redirect":"notes/2061. 扫地机器人清扫过的空间个数【中等】/README"},"2062":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"539c5bcf-2e13-4a6a-9d92-17cc8f8e55bd","redirect":"notes/2062. 统计字符串中的元音子字符串【简单】/README"},"2063":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c82407d8-dbb7-4ebd-8553-2da7a3a9a49e","redirect":"notes/2063. 所有子字符串中的元音【中等】/README"},"2064":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b39f5a7-2ae9-4121-908f-c2e0dd8c8c5e","redirect":"notes/2064. 分配给商店的最多商品的最小值【中等】/README"},"2065":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a505fa93-ec6e-4b47-84db-fe0427086ee8","redirect":"notes/2065. 最大化一张图中的路径价值【困难】/README"},"2066":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f9566920-fff8-456f-89d7-7bb5cc0e8c7a","redirect":"notes/2066. 账户余额【中等】/README"},"2067":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c50981d-6e6b-49ce-8b71-80626a9e1942","redirect":"notes/2067. 等计数子串的数量【中等】/README"},"2068":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7280e5b-af98-4465-986e-8de1abf5d393","redirect":"notes/2068. 检查两个字符串是否几乎相等【简单】/README"},"2069":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3e5d466-55b3-426d-a617-4097ca48307f","redirect":"notes/2069. 模拟行走机器人 II【中等】/README"},"2070":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34bfd87e-8c60-46ab-86ef-fca0656e319a","redirect":"notes/2070. 每一个查询的最大美丽值【中等】/README"},"2071":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"273ecacf-7498-4848-919b-2349e931f721","redirect":"notes/2071. 你可以安排的最多任务数目【困难】/README"},"2072":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1be9a2a-cdc8-4391-bd29-2257c63f3568","redirect":"notes/2072. 赢得比赛的大学【简单】/README"},"2073":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d768a287-2661-498a-9d4f-57ba826018a6","redirect":"notes/2073. 买票需要的时间【简单】/README"},"2074":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"18c5abf9-e352-4019-b516-dd14cbd16a17","redirect":"notes/2074. 反转偶数长度组的节点【中等】/README"},"2075":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7717e882-1731-4c59-a400-449c28d8453e","redirect":"notes/2075. 解码斜向换位密码【中等】/README"},"2076":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71f69ed2-86e7-441c-8ea7-e821f35d8fc5","redirect":"notes/2076. 处理含限制条件的好友请求【困难】/README"},"2077":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"befddec4-ee47-46b5-9bb3-5985e481b9b3","redirect":"notes/2077. 殊途同归【中等】/README"},"2078":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8272979-ab01-42a2-aefd-b7f76bf9ce8f","redirect":"notes/2078. 两栋颜色不同且距离最远的房子【简单】/README"},"2079":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96b91f38-11e0-4b8d-8995-03876ede170e","redirect":"notes/2079. 给植物浇水【中等】/README"},"2080":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24bec05c-9c54-4a02-ab48-1af281bf2f17","redirect":"notes/2080. 区间内查询数字的频率【中等】/README"},"2081":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d896c401-8450-4d79-a00e-3129cd155c52","redirect":"notes/2081. k 镜像数字的和【困难】/README"},"2082":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33862c74-1f6c-43b0-9a18-6e710847049a","redirect":"notes/2082. 富有客户的数量【简单】/README"},"2083":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"634cdaf9-f38e-407f-9ff7-27c988358ba9","redirect":"notes/2083. 求以相同字母开头和结尾的子串总数【中等】/README"},"2084":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5108f66-a0c2-43e0-badf-02d698d0cf57","redirect":"notes/2084. 为订单类型为 0 的客户删除类型为 1 的订单【中等】/README"},"2085":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"eb190b97-ab8a-4e4e-944e-0a852a047878","redirect":"notes/2085. 统计出现过一次的公共字符串【简单】/README"},"2086":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d79ca47-61a0-4cfc-badd-4fa7c0798645","redirect":"notes/2086. 喂食仓鼠的最小食物桶数【中等】/README"},"2087":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c614f5bc-7550-46dc-8479-dc4d55bad4bc","redirect":"notes/2087. 网格图中机器人回家的最小代价【中等】/README"},"2088":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da2ad9ba-8592-4189-82bb-ea75bffbf6b8","redirect":"notes/2088. 统计农场中肥沃金字塔的数目【困难】/README"},"2089":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4042f1b-7f02-4e64-8574-770a19ec23ea","redirect":"notes/2089. 找出数组排序后的目标下标【简单】/README"},"2090":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"445ec0a6-ee34-447a-8429-8c98e52eced0","redirect":"notes/2090. 半径为 k 的子数组平均值【中等】/README"},"2091":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"188978a8-0a89-44f6-9ad9-a0024b639703","redirect":"notes/2091. 从数组中移除最大值和最小值【中等】/README"},"2092":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ed5f408-babd-40d1-82f8-503f9e428e6b","redirect":"notes/2092. 找出知晓秘密的所有专家【困难】/README"},"2093":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22453ddd-8f24-44b4-a7c2-cb6b0575e675","redirect":"notes/2093. 前往目标城市的最小费用【中等】/README"},"2094":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ed42209-3405-456b-9c3b-21ab561096d4","redirect":"notes/2094. 找出 3 位偶数【简单】/README"},"2095":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfaa35f9-7c62-4363-86db-ca30bb0b7ee2","redirect":"notes/2095. 删除链表的中间节点【中等】/README"},"2096":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3970b090-bcb1-4b13-aef7-5056670c2f6d","redirect":"notes/2096. 从二叉树一个节点到另一个节点每一步的方向【中等】/README"},"2097":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"089c9145-d9f8-4291-b56e-f52c11b8cca5","redirect":"notes/2097. 合法重新排列数对【困难】/README"},"2098":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee4a2787-5f0f-481c-beb2-2455f59130be","redirect":"notes/2098. 长度为 K 的最大偶数和子序列【中等】/README"},"2099":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"7df6cdc2-e448-4726-8756-96d15ea0b56c","redirect":"notes/2099. 找到和最大的长度为 K 的子序列【简单】/README"},"2100":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"18ce8643-f2f2-4eee-b3c9-3230aee39b02","redirect":"notes/2100. 适合野炊的日子【中等】/README"},"2101":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6428c364-85d1-401e-8190-6ae829e0417d","redirect":"notes/2101. 引爆最多的炸弹【中等】/README"},"2102":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d358ba77-0ce9-4a0e-8f85-bc86b8935250","redirect":"notes/2102. 序列顺序查询【困难】/README"},"2103":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"490ed2ab-7a7e-4e38-a7e0-d4fc4af51a56","redirect":"notes/2103. 环和杆【简单】/README"},"2104":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7d90d03-9c05-49ed-a670-c0e7a992a8fc","redirect":"notes/2104. 子数组范围和【中等】/README"},"2105":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7fd3a4b4-f65a-4d62-84e5-0691e356a680","redirect":"notes/2105. 给植物浇水 II【中等】/README"},"2106":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"251e431d-16a5-49f7-8f99-ea8df79c5c03","redirect":"notes/2106. 摘水果【困难】/README"},"2107":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b839a20-8f42-4c73-86de-dc80cf732c9c","redirect":"notes/2107. 分享 K 个糖果后独特口味的数量【中等】/README"},"2108":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"f4c8fc99-4f91-447b-88b5-3fcbe77946c3","redirect":"notes/2108. 找出数组中的第一个回文字符串【简单】/README"},"2109":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a3bc807-582f-49c4-b02b-bd25d72ab9a6","redirect":"notes/2109. 向字符串添加空格【中等】/README"},"2110":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f21ceba9-99ab-4dfc-8f2a-66c6fe8689b2","redirect":"notes/2110. 股票平滑下跌阶段的数目【中等】/README"},"2111":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e9aa412-7d94-4952-8696-7c329a200aa5","redirect":"notes/2111. 使数组 K 递增的最少操作次数【困难】/README"},"2112":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e05e12e-ebe1-4ce6-a495-84bc239203a4","redirect":"notes/2112. 最繁忙的机场【中等】/README"},"2113":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ff40978-939b-49ff-ba8b-cadf51cd2de5","redirect":"notes/2113. 查询删除和添加元素后的数组【中等】/README"},"2114":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"3dd5e472-3808-4d77-89f0-d685b0be945b","redirect":"notes/2114. 句子中的最多单词数【简单】/README"},"2115":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e84b8ed-7632-43a8-be56-2dbec8b85444","redirect":"notes/2115. 从给定原材料中找到所有可以做出的菜【中等】/README"},"2116":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89b87764-0471-4b6f-b3b5-edecf91a8696","redirect":"notes/2116. 判断一个括号字符串是否有效【中等】/README"},"2117":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7cf7d2e0-8ef7-4c40-a1d6-8d35ad430765","redirect":"notes/2117. 一个区间内所有数乘积的缩写【困难】/README"},"2118":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3db48bd-ff3e-4cd1-8138-a8b05eabc9d3","redirect":"notes/2118. 建立方程【困难】/README"},"2119":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fd9bf3e-f1ce-407e-bc20-cdbc936324ee","redirect":"notes/2119. 反转两次的数字【简单】/README"},"2120":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f75e4e4-81b1-44ee-bbe1-6adb1eb0d5be","redirect":"notes/2120. 执行所有后缀指令【中等】/README"},"2121":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1ac22a2-d803-4f39-8fd1-0cd632a2a3cc","redirect":"notes/2121. 相同元素的间隔之和【中等】/README"},"2122":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"059a195e-1782-48da-b6b2-caff0c8ac3a0","redirect":"notes/2122. 还原原数组【困难】/README"},"2123":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"481a8945-9054-41f7-a1e3-40d8df6b99a7","redirect":"notes/2123. 使矩阵中的 1 互不相邻的最小操作数【困难】/README"},"2124":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b5834af-e10e-4c2a-87b3-f9b4ced495b8","redirect":"notes/2124. 检查是否所有 A 都在 B 之前【简单】/README"},"2125":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d27640e-89ad-473d-ab56-3505c180700e","redirect":"notes/2125. 银行中的激光束数量【中等】/README"},"2126":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a6b29e6-78d2-4c0d-bb0f-23188d3c3ac2","redirect":"notes/2126. 摧毁小行星【中等】/README"},"2127":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b55ffdc-37c1-4c8f-8489-f03198180535","redirect":"notes/2127. 参加会议的最多员工数【困难】/README"},"2128":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bbc646bc-4f40-4a11-99a0-673df3403db6","redirect":"notes/2128. 通过翻转行或列来去除所有的 1【中等】/README"},"2129":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf38f23d-f34a-4795-8eb8-f1c778f90b0a","redirect":"notes/2129. 将标题首字母大写【简单】/README"},"2130":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a216366-76d1-419d-a744-e8e3246b795b","redirect":"notes/2130. 链表最大孪生和【中等】/README"},"2131":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c329bc79-fc29-463c-8bc2-ba063528391a","redirect":"notes/2131. 连接两字母单词得到的最长回文串【中等】/README"},"2132":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"354ff145-635a-4fe9-814d-7c2f6cf1907f","redirect":"notes/2132. 用邮票贴满网格图【困难】/README"},"2133":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"b718a4fd-9256-40dd-ae07-abb1ebdb1ad3","redirect":"notes/2133. 检查是否每一行每一列都包含全部整数【简单】/README"},"2134":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"baf0345e-972e-4e02-9c8b-07dab40d042c","redirect":"notes/2134. 最少交换次数来组合所有的 1 II【中等】/README"},"2135":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c749197-ab8b-4d76-aa45-47fe891578f8","redirect":"notes/2135. 统计追加字母可以获得的单词数【中等】/README"},"2136":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dd757e45-b62f-4ddf-8d43-a6a39dff44c5","redirect":"notes/2136. 全部开花的最早一天【困难】/README"},"2137":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a495738-062d-49f6-a336-e7b77c2c84d1","redirect":"notes/2137. 通过倒水操作让所有的水桶所含水量相等【中等】/README"},"2138":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d38b1bb4-c4e5-4186-b18f-9a62a87f9bc4","redirect":"notes/2138. 将字符串拆分为若干长度为 k 的组【简单】/README"},"2139":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f6e08a18-bb04-48ff-9d78-507a76afec5c","redirect":"notes/2139. 得到目标值的最少行动次数【中等】/README"},"2140":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"930a5619-d75d-4877-8188-1ead6e5e30c5","redirect":"notes/2140. 解决智力问题【中等】/README"},"2141":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12ea769c-1921-466c-a0e2-03136e4ac1b0","redirect":"notes/2141. 同时运行 N 台电脑的最长时间【困难】/README"},"2142":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed7c7521-8d0e-4ec9-9e3f-4b51f0768b74","redirect":"notes/2142. 每辆车的乘客人数 I【中等】/README"},"2143":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c7435332-fb42-4c46-bc55-10eaf132d8c0","redirect":"notes/2143. 在两个数组的区间中选取数字【困难】/README"},"2144":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"2f8b2df2-8884-4c71-9280-a8cef9a8858c","redirect":"notes/2144. 打折购买糖果的最小开销【简单】/README"},"2145":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb2af4d2-c7fe-46cb-9bdf-18febf8f1328","redirect":"notes/2145. 统计隐藏数组数目【中等】/README"},"2146":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f979d754-9bf6-4acd-9ede-30138f252fce","redirect":"notes/2146. 价格范围内最高排名的 K 样物品【中等】/README"},"2147":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4194fd80-7fc2-4ffb-8973-3b9b9c98018b","redirect":"notes/2147. 分隔长廊的方案数【困难】/README"},"2148":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c60bdda8-4574-4994-be33-66e6bcb7c222","redirect":"notes/2148. 元素计数【简单】/README"},"2149":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71751870-094c-4241-aa5b-ba279a88c62d","redirect":"notes/2149. 按符号重排数组【中等】/README"},"2150":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2d75591-a882-4fef-b317-cb16c7d68e38","redirect":"notes/2150. 找出数组中的所有孤独数字【中等】/README"},"2151":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9982e59-507a-4fa0-a177-c6a7d4d26b84","redirect":"notes/2151. 基于陈述统计最多好人数【困难】/README"},"2152":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3aa4624a-e05b-432b-a4a2-1195ca53db05","redirect":"notes/2152. 穿过所有点的所需最少直线数量【中等】/README"},"2153":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc5b8b85-a22a-4099-9929-2ef20854286d","redirect":"notes/2153. 每辆车的乘客人数 II【困难】/README"},"2154":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"70e00dff-811f-4353-84cb-f2d55098c336","redirect":"notes/2154. 将找到的值乘以 2【简单】/README"},"2155":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1285700b-9fe2-4176-a81b-4b5228346695","redirect":"notes/2155. 分组得分最高的所有下标【中等】/README"},"2156":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4384b4c5-7860-4536-8f1a-f6f8b42965f0","redirect":"notes/2156. 查找给定哈希值的子串【困难】/README"},"2157":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80a1968c-b001-4682-b46b-cc67477ec8e8","redirect":"notes/2157. 字符串分组【困难】/README"},"2158":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8793c5d9-2ab0-497b-bcd8-39f7494f3d1f","redirect":"notes/2158. 每天绘制新区域的数量【困难】/README"},"2159":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31f041cf-3aa0-4d03-addb-2316bbe2145e","redirect":"notes/2159. 分别排序两列【中等】/README"},"2160":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ec5213b-744a-40f5-bc56-4741354b351d","redirect":"notes/2160. 拆分数位后四位数字的最小和【简单】/README"},"2161":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f6723673-ba70-4dde-a7bf-9f1a73b48665","redirect":"notes/2161. 根据给定数字划分数组【中等】/README"},"2162":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7da063e9-dca8-4d25-a562-336d52921ac2","redirect":"notes/2162. 设置时间的最少代价【中等】/README"},"2163":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c29bb31-6318-4dad-8ba5-ba5d0b4ca66e","redirect":"notes/2163. 删除元素后和的最小差值【困难】/README"},"2164":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"82a77ca4-73e8-4f9b-b6aa-36704936af69","redirect":"notes/2164. 对奇偶下标分别排序【简单】/README"},"2165":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2adb3d81-4119-49ef-81ab-b3f23f3294fa","redirect":"notes/2165. 重排数字的最小值【中等】/README"},"2166":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"14017d4e-6e71-46ec-aec1-56925b7b42be","redirect":"notes/2166. 设计位集【中等】/README"},"2167":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"135b73c5-fe97-4a5e-98c8-fa7bec282efc","redirect":"notes/2167. 移除所有载有违禁货物车厢所需的最少时间【困难】/README"},"2168":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b606271-44d9-46cd-a786-04521ce6e454","redirect":"notes/2168. 每个数字的频率都相同的独特子字符串的数量【中等】/README"},"2169":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8db1e2df-e29e-4351-b410-922dd76a3f27","redirect":"notes/2169. 得到 0 的操作数【简单】/README"},"2170":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ebeabb69-a8e2-4271-83fd-4f55fb221ce7","redirect":"notes/2170. 使数组变成交替数组的最少操作数【中等】/README"},"2171":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1114e0c8-9272-4ed8-9b23-f6991bb4380e","redirect":"notes/2171. 拿出最少数目的魔法豆【中等】/README"},"2172":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48403a05-88f5-4a96-9256-ea3823971763","redirect":"notes/2172. 数组的最大与和【困难】/README"},"2173":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af9db74f-6403-45fa-8f52-9ca98029b20c","redirect":"notes/2173. 最多连胜的次数【困难】/README"},"2174":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed5c7e94-395a-4108-94c0-1308c1d138ca","redirect":"notes/2174. 通过翻转行或列来去除所有的 1 II【中等】/README"},"2175":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d97b6755-7b7d-45bd-9352-70e276ff1e8b","redirect":"notes/2175. 世界排名的变化【中等】/README"},"2176":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1a09fef2-7614-4fc7-a057-247a321e403e","redirect":"notes/2176. 统计数组中相等且可以被整除的数对【简单】/README"},"2177":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e094d425-7f99-4ef0-a4bb-7766dd424aa3","redirect":"notes/2177. 找到和为给定整数的三个连续整数【中等】/README"},"2178":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c40710ca-3d1c-4c4b-974e-dbd1754e4865","redirect":"notes/2178. 拆分成最多数目的正偶数之和【中等】/README"},"2179":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2af16b2a-cd55-485c-bf49-c06699ce33fd","redirect":"notes/2179. 统计数组中好三元组数目【困难】/README"},"2180":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f774781d-e10d-4773-bf3b-a88160469cf3","redirect":"notes/2180. 统计各位数字之和为偶数的整数个数【简单】/README"},"2181":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4893cc5b-ca9f-4a46-8616-8119d19315e1","redirect":"notes/2181. 合并零之间的节点【中等】/README"},"2182":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a22a7c5d-8f71-474f-8ebd-e5e59cd16371","redirect":"notes/2182. 构造限制重复的字符串【中等】/README"},"2183":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"03bd63cd-2350-44d1-8596-84a4a60591b1","redirect":"notes/2183. 统计可以被 K 整除的下标对数目【困难】/README"},"2184":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a8d0974-9417-462f-97f9-674acfec1b00","redirect":"notes/2184. 建造坚实的砖墙的方法数【中等】/README"},"2185":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e3a816b-d52b-47a9-83e3-2d2e95a2c2fe","redirect":"notes/2185. 统计包含给定前缀的字符串【简单】/README"},"2186":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2972a125-e27f-4635-a849-274e43123a47","redirect":"notes/2186. 制造字母异位词的最小步骤数 II【中等】/README"},"2187":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"14e5251e-6368-44e9-ba95-598206eb6985","redirect":"notes/2187. 完成旅途的最少时间【中等】/README"},"2188":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9d668101-1774-4a34-acd0-4bdf1ef04970","redirect":"notes/2188. 完成比赛的最少时间【困难】/README"},"2189":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"262b3a12-319f-44bf-88ab-03cb9a1d48fe","redirect":"notes/2189. 建造纸牌屋的方法数【中等】/README"},"2190":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c07e472-da42-41dc-93ee-21910179f91d","redirect":"notes/2190. 数组中紧跟 key 之后出现最频繁的数字【简单】/README"},"2191":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bdea3076-919f-4796-a276-b5dc0c74208d","redirect":"notes/2191. 将杂乱无章的数字排序【中等】/README"},"2192":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56510c6f-caca-4033-9855-6379acd32772","redirect":"notes/2192. 有向无环图中一个节点的所有祖先【中等】/README"},"2193":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2277db6-638d-4809-b53e-b475c84e25c0","redirect":"notes/2193. 得到回文串的最少操作次数【困难】/README"},"2194":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"03f90d84-b4b1-4dfb-8a7b-1ceda41d6131","redirect":"notes/2194. Excel 表中某个范围内的单元格【简单】/README"},"2195":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"200513a7-d687-405f-9543-6f22e863f492","redirect":"notes/2195. 向数组中追加 K 个整数【中等】/README"},"2196":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72ad3869-e175-44de-8363-6abeb0e0aee5","redirect":"notes/2196. 根据描述创建二叉树【中等】/README"},"2197":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"451f0ff9-d65b-413f-b892-64f55d9a8526","redirect":"notes/2197. 替换数组中的非互质数【困难】/README"},"2198":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7dcb6f99-73cd-4575-b407-a520250efb67","redirect":"notes/2198. 单因数三元组【中等】/README"},"2199":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bbc6b95e-c859-4bdc-88e0-335bfb44acea","redirect":"notes/2199. 找到每篇文章的主题【困难】/README"},"2200":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2d86ab6-9a4d-4b24-b386-2abe85f3f51c","redirect":"notes/2200. 找出数组中的所有 K 近邻下标【简单】/README"},"2201":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca025e97-765e-4e89-a227-f5fa7b8d42e8","redirect":"notes/2201. 统计可以提取的工件【中等】/README"},"2202":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2cbcc65-0f6d-4e4d-9ec9-16aed55c3712","redirect":"notes/2202. K 次操作后最大化顶端元素【中等】/README"},"2203":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3cb8582f-6f71-4f03-8fc4-0f37d5bac9bd","redirect":"notes/2203. 得到要求路径的最小带权子图【困难】/README"},"2204":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d3bad62-a02e-4f70-b447-3079737d6003","redirect":"notes/2204. 无向图中到环的距离【困难】/README"},"2205":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd15bad4-db98-4614-9594-571c416eea99","redirect":"notes/2205. 有资格享受折扣的用户数量【简单】/README"},"2206":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f1d0d32f-aa82-42fb-97ab-a5dd2652a118","redirect":"notes/2206. 将数组划分成相等数对【简单】/README"},"2207":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec7e8ec5-1ace-41a3-bfda-1caf32709fdf","redirect":"notes/2207. 字符串中最多数目的子序列【中等】/README"},"2208":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9bb7f2d-eb5a-4d98-a55c-d523729df783","redirect":"notes/2208. 将数组和减半的最少操作次数【中等】/README"},"2209":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ed266d5-4cad-464b-8476-191443408a5d","redirect":"notes/2209. 用地毯覆盖后的最少白色砖块【困难】/README"},"2210":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92b97306-27ca-4e80-842c-203d396334ca","redirect":"notes/2210. 统计数组中峰和谷的数量【简单】/README"},"2211":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8ff06dd-a73c-4101-88d7-e9eba92391c8","redirect":"notes/2211. 统计道路上的碰撞次数【中等】/README"},"2212":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"40c0c4c3-f83b-40bf-bb31-846ef90106bc","redirect":"notes/2212. 射箭比赛中的最大得分【中等】/README"},"2213":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f33e7a9-7cf7-4d4e-bed0-85aee8521bfe","redirect":"notes/2213. 由单个字符重复的最长子字符串【困难】/README"},"2214":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e580094a-2c3d-4b9e-9066-f0591dedb231","redirect":"notes/2214. 通关游戏所需的最低生命值【中等】/README"},"2215":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6df658b6-17e1-4802-aa72-5be5a9acf04b","redirect":"notes/2215. 找出两数组的不同【简单】/README"},"2216":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a16b2eef-8fdd-4ceb-88bc-9f04d18980a5","redirect":"notes/2216. 美化数组的最少删除数【中等】/README"},"2217":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8862d8ed-5250-45e2-ae7c-beebb2db4536","redirect":"notes/2217. 找到指定长度的回文数【中等】/README"},"2218":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3edfbee7-5e54-4563-94ee-1973ca0b1d3f","redirect":"notes/2218. 从栈中取出 K 个硬币的最大面值和【困难】/README"},"2219":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4fca5ee-4f86-4b58-95b8-9c37050c8783","redirect":"notes/2219. 数组的最大总分【中等】/README"},"2220":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c550854-7495-43d4-af78-efb0b9b278b3","redirect":"notes/2220. 转换数字的最少位翻转次数【简单】/README"},"2221":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6413df95-dbc6-45dd-b6a8-b254a913fb40","redirect":"notes/2221. 数组的三角和【中等】/README"},"2222":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c293fdba-3313-4724-b5b8-e972e4b5053e","redirect":"notes/2222. 选择建筑的方案数【中等】/README"},"2223":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee89b30a-0ca8-4246-87a4-3d58888b0ac0","redirect":"notes/2223. 构造字符串的总得分和【困难】/README"},"2224":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42859d7c-aa7c-458e-bf7a-93cd097da60b","redirect":"notes/2224. 转化时间需要的最少操作数【简单】/README"},"2225":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"74369b49-f5e7-438e-a465-e1a735c28df9","redirect":"notes/2225. 找出输掉零场或一场比赛的玩家【中等】/README"},"2226":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34fadf47-4243-4deb-af43-94cdef4c432e","redirect":"notes/2226. 每个小孩最多能分到多少糖果【中等】/README"},"2227":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61af1b78-9777-4215-9420-a67045422edc","redirect":"notes/2227. 加密解密字符串【困难】/README"},"2228":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02e3c6c8-4bfb-44e7-89b3-dd90ad87c7e6","redirect":"notes/2228. 7 天内两次购买的用户【中等】/README"},"2229":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a1c79f4-2a5f-4622-8a7a-e42165d34358","redirect":"notes/2229. 检查数组是否连贯【简单】/README"},"2230":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26da2851-11bf-41b8-8fa2-487ea37dbdcf","redirect":"notes/2230. 查找可享受优惠的用户【简单】/README"},"2231":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdfb3341-6238-4b9f-91b8-13cb000fcde9","redirect":"notes/2231. 按奇偶性交换后的最大数字【简单】/README"},"2232":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e022219d-eb1f-4632-8458-61729418ebb5","redirect":"notes/2232. 向表达式添加括号后的最小结果【中等】/README"},"2233":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"376abf9c-bad4-4ad3-99ed-dea30237508c","redirect":"notes/2233. K 次增加后的最大乘积【中等】/README"},"2234":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b8009c8-42d2-4e90-93e9-f25628d4d98a","redirect":"notes/2234. 花园的最大总美丽值【困难】/README"},"2235":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"740cab54-a5af-4713-8d3b-82158a2746fa","redirect":"notes/2235. 两整数相加【简单】/README"},"2236":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29560285-56b1-4514-b3cd-bf2f4c631e58","redirect":"notes/2236. 判断根结点是否等于子结点之和【简单】/README"},"2237":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2efee11d-959f-4e23-a1de-4586e27891f9","redirect":"notes/2237. 计算街道上满足所需亮度的位置数量【中等】/README"},"2238":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90b8b872-c11c-4367-870e-494fa8f3413e","redirect":"notes/2238. 司机成为乘客的次数【中等】/README"},"2239":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ec40e39-dec0-4d99-8452-d26b22471e94","redirect":"notes/2239. 找到最接近 0 的数字【简单】/README"},"2240":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"18542dd4-0201-496f-964d-df9a6ae666b5","redirect":"notes/2240. 买钢笔和铅笔的方案数【中等】/README"},"2241":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a95b768-2b18-47c8-94c5-473ac06215cf","redirect":"notes/2241. 设计一个 ATM 机器【中等】/README"},"2242":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fb426920-f97e-4c82-b404-2cc2fafa40de","redirect":"notes/2242. 节点序列的最大得分【困难】/README"},"2243":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a4fad07-0bed-4636-a5b5-4d15bcfae663","redirect":"notes/2243. 计算字符串的数字和【简单】/README"},"2244":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"969225cb-ca1e-4b4c-af19-f2b55e4c0004","redirect":"notes/2244. 完成所有任务需要的最少轮数【中等】/README"},"2245":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf6bdbc6-d257-47c6-bbca-95826b690f1c","redirect":"notes/2245. 转角路径的乘积中最多能有几个尾随零【中等】/README"},"2246":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26ece450-174e-4dc0-84b5-34433a6d8135","redirect":"notes/2246. 相邻字符不同的最长路径【困难】/README"},"2247":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0afa2de7-4fe6-48be-9160-3bccf71d47be","redirect":"notes/2247. K 条高速公路的最大旅行费用【困难】/README"},"2248":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdd2d2f2-31aa-4095-97c9-e9de2a7a25a8","redirect":"notes/2248. 多个数组求交集【简单】/README"},"2249":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7bdb0341-581d-4118-8626-d989f6cfa71e","redirect":"notes/2249. 统计圆内格点数目【中等】/README"},"2250":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ecd5623-6470-49f6-8f8c-022647908b0d","redirect":"notes/2250. 统计包含每个点的矩形数目【中等】/README"},"2251":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"83bdb306-ec4b-4359-a1b4-24eb1d431414","redirect":"notes/2251. 花期内花的数目【困难】/README"},"2252":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"68d1f7b2-d607-4794-ba46-1c9ba2349c79","redirect":"notes/2252. 表的动态旋转【困难】/README"},"2253":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22d462cb-8065-4cb5-8caa-c935f4ac37d6","redirect":"notes/2253. 动态取消表的旋转【困难】/README"},"2254":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f345e0bf-7b48-46c4-b927-710c4a0fd926","redirect":"notes/2254. 设计视频共享平台【困难】/README"},"2255":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3973c71c-49f9-4fb0-86fe-6e506daca489","redirect":"notes/2255. 统计是给定字符串前缀的字符串数目【简单】/README"},"2256":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a9aa81a-04db-4016-ac98-3fddd701d16e","redirect":"notes/2256. 最小平均差【中等】/README"},"2257":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fec32d1-e2aa-4813-918f-14a7be7a9c51","redirect":"notes/2257. 统计网格图中没有被保卫的格子数【中等】/README"},"2258":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c37309ef-088b-42d6-8d91-884473bf535b","redirect":"notes/2258. 逃离火灾【困难】/README"},"2259":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41524985-5e78-46b5-a524-5186508a7470","redirect":"notes/2259. 移除指定数字得到的最大结果【简单】/README"},"2260":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29d99ace-6e8d-42b1-a270-bbb1c9d153fc","redirect":"notes/2260. 必须拿起的最小连续卡牌数【中等】/README"},"2261":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"963da992-800b-4afa-bb75-018dc4641913","redirect":"notes/2261. 含最多 K 个可整除元素的子数组【中等】/README"},"2262":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79eebb61-162a-4180-8a48-3c04ff5155c0","redirect":"notes/2262. 字符串的总引力【困难】/README"},"2263":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"829b7944-fe27-4b9b-9051-730d57a0ce4d","redirect":"notes/2263. 数组变为有序的最小操作次数【困难】/README"},"2264":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7cafe7f5-7dee-4375-9365-f4b380362bc5","redirect":"notes/2264. 字符串中最大的 3 位相同数字【简单】/README"},"2265":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45054bc7-573b-4b15-82e7-3fa1f26ceba6","redirect":"notes/2265. 统计值等于子树平均值的节点数【中等】/README"},"2266":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23d6c1ae-cd2f-456d-b4ca-85b5f001d898","redirect":"notes/2266. 统计打字方案数【中等】/README"},"2267":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf40c040-858d-4364-8b81-47b33a029982","redirect":"notes/2267. 检查是否有合法括号字符串路径【困难】/README"},"2268":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00fb3cb7-272b-46e7-be3c-88b908f5e585","redirect":"notes/2268. 最少按键次数【中等】/README"},"2269":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df50688f-4a6d-4109-bdee-a50d1c1259c7","redirect":"notes/2269. 找到一个数字的 K 美丽值【简单】/README"},"2270":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a2bd0ce-dba9-448a-862b-c380fb3c8587","redirect":"notes/2270. 分割数组的方案数【中等】/README"},"2271":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bad962a8-f5a7-446a-a7c7-c45e05c0b8ba","redirect":"notes/2271. 毯子覆盖的最多白色砖块数【中等】/README"},"2272":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9faa968a-f3dd-48c7-97a8-ad5c0dd1dee7","redirect":"notes/2272. 最大波动的子字符串【困难】/README"},"2273":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"17b4019c-7134-4542-87a5-0ee3ece80dd4","redirect":"notes/2273. 移除字母异位词后的结果数组【简单】/README"},"2274":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cab6895f-7536-4b46-b53b-288ece47eade","redirect":"notes/2274. 不含特殊楼层的最大连续楼层数【中等】/README"},"2275":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22549e37-4942-4da3-a020-d2b340a79849","redirect":"notes/2275. 按位与结果大于零的最长组合【中等】/README"},"2276":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1276fafc-3a26-4899-a09d-bddcaccae0a0","redirect":"notes/2276. 统计区间中的整数数目【困难】/README"},"2277":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12d6244b-98ff-4f1a-b748-33fe8839128a","redirect":"notes/2277. 树中最接近路径的节点【困难】/README"},"2278":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"774b105b-e446-4e57-9bb1-70de96c22fa4","redirect":"notes/2278. 字母在字符串中的百分比【简单】/README"},"2279":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a561c5a6-4317-48c4-94f2-a515fb48412c","redirect":"notes/2279. 装满石头的背包的最大数量【中等】/README"},"2280":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ba2bfe0-8f21-4731-afee-cde4c3ac7ed6","redirect":"notes/2280. 表示一个折线图的最少线段数【中等】/README"},"2281":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3de8eb98-fe9e-475c-9827-d76b2b5d6b90","redirect":"notes/2281. 巫师的总力量和【困难】/README"},"2282":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bfb91fd-f700-432f-9323-1ebf8c5f9b49","redirect":"notes/2282. 在一个网格中可以看到的人数【中等】/README"},"2283":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0d64e6d-d6c7-4046-8f84-f7faf62eb021","redirect":"notes/2283. 判断一个数的数字计数是否等于数位的值【简单】/README"},"2284":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfc662bb-9e7c-4d5b-8109-3667504317a2","redirect":"notes/2284. 最多单词数的发件人【中等】/README"},"2285":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99133ccb-a2e0-498d-bc4a-4e72016dcdb4","redirect":"notes/2285. 道路的最大总重要性【中等】/README"},"2286":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"04c35a3c-84b7-4e73-9807-3f489f12bd4d","redirect":"notes/2286. 以组为单位订音乐会的门票【困难】/README"},"2287":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ffbd91db-51d5-46db-b160-481945af5475","redirect":"notes/2287. 重排字符形成目标字符串【简单】/README"},"2288":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49bab004-6b1a-41ec-a614-46df9bf5b9d6","redirect":"notes/2288. 价格减免【中等】/README"},"2289":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4e31da5-a2bf-49c1-a5b7-f44b4a9f0964","redirect":"notes/2289. 使数组按非递减顺序排列【中等】/README"},"2290":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9e84128-d1a1-4647-82c4-8aac7aa55831","redirect":"notes/2290. 到达角落需要移除障碍物的最小数目【困难】/README"},"2291":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"40d28143-bbec-4aa9-939b-9f3f1b1ef2d1","redirect":"notes/2291. 最大股票收益【中等】/README"},"2292":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ba831fd-511a-476c-aad2-5ea8749bc93f","redirect":"notes/2292. 连续两年有 3 个及以上订单的产品【中等】/README"},"2293":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a15fb9e-0237-4807-ad4e-aa6e9f102d3a","redirect":"notes/2293. 极大极小游戏【简单】/README"},"2294":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6fe970ca-c1ac-4536-bcef-ead4c5bcc0ea","redirect":"notes/2294. 划分数组使最大差为 K【中等】/README"},"2295":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d45f686-df15-44e6-9e0a-ba3d40bcee8d","redirect":"notes/2295. 替换数组中的元素【中等】/README"},"2296":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8fc9967e-77e8-406a-b22d-82f75e683194","redirect":"notes/2296. 设计一个文本编辑器【困难】/README"},"2297":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4dde0c73-8c4c-4252-b5ca-b97ec65b83c3","redirect":"notes/2297. 跳跃游戏 VIII【中等】/README"},"2298":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26b4707b-9fe7-4e5a-9a2e-96695a8ab396","redirect":"notes/2298. 周末任务计数【中等】/README"},"2299":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"ca814a07-b7bf-4f37-9002-45cf7c2fb9cb","redirect":"notes/2299. 强密码检验器 II【简单】/README"},"2300":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96f8c79a-bd36-408d-aa69-ff20872d0d51","redirect":"notes/2300. 咒语和药水的成功对数【中等】/README"},"2301":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc4d9cf6-2347-4ae9-8518-30ceb4cac114","redirect":"notes/2301. 替换字符后匹配【困难】/README"},"2302":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd977477-b035-45f5-92d7-a2a49ed849be","redirect":"notes/2302. 统计得分小于 K 的子数组数目【困难】/README"},"2303":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"655583f5-85a7-4eb2-9e89-820b2258fd30","redirect":"notes/2303. 计算应缴税款总额【简单】/README"},"2304":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"def1bb02-b9b8-4b04-bb4a-c91e05c676e7","redirect":"notes/2304. 网格中的最小路径代价【中等】/README"},"2305":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9fbe9681-95b8-4461-a99d-7d2378875811","redirect":"notes/2305. 公平分发饼干【中等】/README"},"2306":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed98a9fb-34c1-4df0-8bff-2ab09d8fca42","redirect":"notes/2306. 公司命名【困难】/README"},"2307":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"70a119e0-dd23-48f8-88af-f8e37e884d47","redirect":"notes/2307. 检查方程中的矛盾之处【困难】/README"},"2308":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42c81330-fb07-46b4-a3c2-3ca0413326ca","redirect":"notes/2308. 按性别排列表格【中等】/README"},"2309":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4877b5db-1650-41e3-ae3e-bcc387130a30","redirect":"notes/2309. 兼具大小写的最好英文字母【简单】/README"},"2310":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"777ee07b-bfdd-48c5-a140-61a0dc43e57a","redirect":"notes/2310. 个位数字为 K 的整数之和【中等】/README"},"2311":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"397ff29f-cd27-4f3d-8def-36b7f1b100c3","redirect":"notes/2311. 小于等于 K 的最长二进制子序列【中等】/README"},"2312":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"885fdeba-e7a0-4cdb-a33e-aebd57e077ed","redirect":"notes/2312. 卖木头块【困难】/README"},"2313":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a79d8a0-4d80-45f5-aeec-451afa279bac","redirect":"notes/2313. 二叉树中得到结果所需的最少翻转次数【困难】/README"},"2314":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45ad28fa-1266-4cd1-93c6-c0e8c115ca83","redirect":"notes/2314. 每个城市最高气温的第一天【中等】/README"},"2315":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"806e644b-abad-48a1-b0d8-632ce1e80e08","redirect":"notes/2315. 统计星号【简单】/README"},"2316":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25c81575-21d2-45e2-a7a1-3b6e5560a924","redirect":"notes/2316. 统计无向图中无法互相到达点对数【中等】/README"},"2317":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00d13ec0-5085-4361-a2fd-8c989b65842a","redirect":"notes/2317. 操作后的最大异或和【中等】/README"},"2318":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f84e0a8c-f27d-4283-bcc4-a71a4ee89351","redirect":"notes/2318. 不同骰子序列的数目【困难】/README"},"2319":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7aa96a6e-672d-4948-b15f-f7ec9de6dbd6","redirect":"notes/2319. 判断矩阵是否是一个 X 矩阵【简单】/README"},"2320":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8046b89d-f5b5-4928-89a1-5b7d0cd5f7ac","redirect":"notes/2320. 统计放置房子的方式数【中等】/README"},"2321":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db08b552-48de-4eb8-9b4e-ddb7d08e34bb","redirect":"notes/2321. 拼接数组的最大分数【困难】/README"},"2322":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4cace35-9e58-4968-a470-b60a8d0192d5","redirect":"notes/2322. 从树中删除边的最小分数【困难】/README"},"2323":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e2c33eb-8b3c-4560-9067-01ce6e53bd33","redirect":"notes/2323. 完成所有工作的最短时间 II【中等】/README"},"2324":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5549db7-9c0a-44bd-b1d1-02bf31348fc2","redirect":"notes/2324. 产品销售分析 IV【中等】/README"},"2325":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5d155eae-5c3c-4229-89b7-7aeeda428f3f","redirect":"notes/2325. 解密消息【简单】/README"},"2326":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23351c18-41c0-4600-9804-9b8c88e52ef5","redirect":"notes/2326. 螺旋矩阵 IV【中等】/README"},"2327":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"388dba61-66f9-4b01-bf93-584e7b2ea3ee","redirect":"notes/2327. 知道秘密的人数【中等】/README"},"2328":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f38fc5dd-480f-4d1a-8f1d-7d5bc6f06eaf","redirect":"notes/2328. 网格图中递增路径的数目【困难】/README"},"2329":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f4089e4-28d1-47b8-a7da-1cfa3e29aa0f","redirect":"notes/2329. 产品销售分析Ⅴ【简单】/README"},"2330":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4610bb88-0d6d-4c6c-9a35-6b51a0d3c003","redirect":"notes/2330. 验证回文串 IV【中等】/README"},"2331":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c2c9a92-c018-484d-a788-109646ed0c0b","redirect":"notes/2331. 计算布尔二叉树的值【简单】/README"},"2332":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1df35288-3a8c-482c-9a6d-546c0e5f0dcc","redirect":"notes/2332. 坐上公交的最晚时间【中等】/README"},"2333":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5d09a96-3497-489a-8b20-d89dec3b970b","redirect":"notes/2333. 最小差值平方和【中等】/README"},"2334":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf93be90-1d06-4935-9484-aec01fd0e330","redirect":"notes/2334. 元素值大于变化阈值的子数组【困难】/README"},"2335":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a43a50f8-84d0-461b-8197-0d9328bdfbca","redirect":"notes/2335. 装满杯子需要的最短总时长【简单】/README"},"2336":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b1578d80-249a-4fab-8cc3-4a430a561179","redirect":"notes/2336. 无限集中的最小数字【中等】/README"},"2337":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ddf2957-2671-45df-bc46-5f7844490edc","redirect":"notes/2337. 移动片段得到字符串【中等】/README"},"2338":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57877bcb-8935-48a6-b3e4-47989dbd260f","redirect":"notes/2338. 统计理想数组的数目【困难】/README"},"2339":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"69746b7d-1cd9-4d3d-a324-582386830f32","redirect":"notes/2339. 联赛的所有比赛【简单】/README"},"2340":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dd0f52a2-9ec7-4ee1-9866-bede2f1b5018","redirect":"notes/2340. 生成有效数组的最少交换次数【中等】/README"},"2341":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5df8e43a-758a-4c41-94b7-6a06899eb935","redirect":"notes/2341. 数组能形成多少数对【简单】/README"},"2342":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7206349-75ee-49b8-9802-7aefd3afcb31","redirect":"notes/2342. 数位和相等数对的最大和【中等】/README"},"2343":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d98a38c-593e-4592-b020-c461b70d1db8","redirect":"notes/2343. 裁剪数字后查询第 K 小的数字【中等】/README"},"2344":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5e6839b-a008-44a5-a81f-4a8ea26c3410","redirect":"notes/2344. 使数组可以被整除的最少删除次数【困难】/README"},"2345":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0bb466d6-0651-479d-98f3-50a228850b1e","redirect":"notes/2345. 寻找可见山的数量【中等】/README"},"2346":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3714d22e-8eae-484b-96db-4216d301581a","redirect":"notes/2346. 以百分比计算排名【中等】/README"},"2347":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f360088-d425-450b-80ce-844037980014","redirect":"notes/2347. 最好的扑克手牌【简单】/README"},"2348":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d325b9c7-71a8-490b-8abf-9a005ce80787","redirect":"notes/2348. 全 0 子数组的数目【中等】/README"},"2349":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0e1a23c-3b61-4509-9009-f21b6f2863ce","redirect":"notes/2349. 设计数字容器系统【中等】/README"},"2350":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2150ee8e-ed63-4d9d-9773-411dc613e1aa","redirect":"notes/2350. 不可能得到的最短骰子序列【困难】/README"},"2351":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79746958-bf6e-4d57-a26b-b6aaacad3dd7","redirect":"notes/2351. 第一个出现两次的字母【简单】/README"},"2352":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"834f14ac-c9e1-4dda-ae18-7cc60e202bda","redirect":"notes/2352. 相等行列对【中等】/README"},"2353":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c18a03c1-deb5-4d5a-bd64-287b2b8f0f3c","redirect":"notes/2353. 设计食物评分系统【中等】/README"},"2354":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c27ead1c-8fc3-42b7-b6dd-52ad104be523","redirect":"notes/2354. 优质数对的数目【困难】/README"},"2355":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"915c65a0-650d-4548-829f-4e1bf295b9cf","redirect":"notes/2355. 你能拿走的最大图书数量【困难】/README"},"2356":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46ecfc75-8e14-4fd4-b7ed-b0b7897fd0b7","redirect":"notes/2356. 每位教师所教授的科目种类的数量【简单】/README"},"2357":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b71c0d3-0309-4214-b6ab-388171a6b5e0","redirect":"notes/2357. 使数组中所有元素都等于零【简单】/README"},"2358":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"049bad8f-db39-473a-ad55-fe2a32551ab4","redirect":"notes/2358. 分组的最大数量【中等】/README"},"2359":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3774d6ae-2f0b-4f1b-8a29-1a1feb32a006","redirect":"notes/2359. 找到离给定两个节点最近的节点【中等】/README"},"2360":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a221cf7d-5529-4634-8d62-a964815c6f28","redirect":"notes/2360. 图中的最长环【困难】/README"},"2361":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22373454-9746-4972-9a0d-e07335f7a93b","redirect":"notes/2361. 乘坐火车路线的最少费用【困难】/README"},"2362":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f84cf36f-5ccc-4f62-a55a-226f5b751d95","redirect":"notes/2362. 生成发票【困难】/README"},"2363":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f6412b4-d4aa-47e5-a185-106b2755bf7d","redirect":"notes/2363. 合并相似的物品【简单】/README"},"2364":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"290d5150-f0f0-4257-b0c4-cfde6b653d96","redirect":"notes/2364. 统计坏数对的数目【中等】/README"},"2365":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"083e0ea3-1df3-42ab-ae95-e4850b7ac893","redirect":"notes/2365. 任务调度器 II【中等】/README"},"2366":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e40559ea-5919-4559-91de-b0fd5c370a44","redirect":"notes/2366. 将数组排序的最少替换次数【困难】/README"},"2367":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"78bb372c-d466-4dc2-9f28-8a0b996a8d6a","redirect":"notes/2367. 等差三元组的数目【简单】/README"},"2368":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19c5e716-3aa9-4a7a-837f-c7e7cf214bc8","redirect":"notes/2368. 受限条件下可到达节点的数目【中等】/README"},"2369":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f914665-996a-4217-bf9e-1db7529caedd","redirect":"notes/2369. 检查数组是否存在有效划分【中等】/README"},"2370":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0049ba87-c1de-4e45-9dba-5f2a384166e1","redirect":"notes/2370. 最长理想子序列【中等】/README"},"2371":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3051df52-c5e3-42a6-ae57-c3336bed35f9","redirect":"notes/2371. 最小化网格中的最大值【困难】/README"},"2372":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc9adaf6-d8ab-43e8-885c-d6560a24cd06","redirect":"notes/2372. 计算每个销售人员的影响力【中等】/README"},"2373":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba29b5b8-0f18-4b8e-8de3-5cdf6e7a15da","redirect":"notes/2373. 矩阵中的局部最大值【简单】/README"},"2374":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e5a028a-dbb5-498e-821a-a0482276d461","redirect":"notes/2374. 边积分最高的节点【中等】/README"},"2375":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fcd4a066-8f02-47aa-9ede-676bdfc4b6f9","redirect":"notes/2375. 根据模式串构造最小数字【中等】/README"},"2376":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bb3d277-0fc9-4a8e-a9d6-84f9533b38f2","redirect":"notes/2376. 统计特殊整数【困难】/README"},"2377":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21984c85-f68f-4466-9085-dbc09f2cecfc","redirect":"notes/2377. 整理奥运表【简单】/README"},"2378":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bdd2b419-7d9d-4537-9f8f-e701ecc29529","redirect":"notes/2378. 选择边来最大化树的得分【中等】/README"},"2379":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d4c1a5bf-95c3-415f-92f0-71c24460b762","redirect":"notes/2379. 得到 K 个黑块的最少涂色次数【简单】/README"},"2380":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8c0c48ee-401d-4902-bcbb-b1ebe875f044","redirect":"notes/2380. 二进制字符串重新安排顺序需要的时间【中等】/README"},"2381":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c047d02a-a07b-47c8-9ce9-acee65f8db49","redirect":"notes/2381. 字母移位 II【中等】/README"},"2382":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62a4d8bc-b8a6-4b13-9d7d-7d4632e4def7","redirect":"notes/2382. 删除操作后的最大子段和【困难】/README"},"2383":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e80081da-01ab-473b-ab29-a1f2aaaf1b9e","redirect":"notes/2383. 赢得比赛需要的最少训练时长【简单】/README"},"2384":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cbc9cec8-500e-423e-8ad0-e5b0de60be4f","redirect":"notes/2384. 最大回文数字【中等】/README"},"2385":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53d58572-45c5-4191-9d22-0bb9d3878a58","redirect":"notes/2385. 感染二叉树需要的总时间【中等】/README"},"2386":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66fffd85-d04d-4239-8f94-cea521798327","redirect":"notes/2386. 找出数组的第 K 大和【困难】/README"},"2387":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba3b00b6-c56c-474b-8a55-16ed4cfef23e","redirect":"notes/2387. 行排序矩阵的中位数【中等】/README"},"2388":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ff35f2a4-c22a-4203-80dd-bf871ea624ee","redirect":"notes/2388. 将表中的空值更改为前一个值【中等】/README"},"2389":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10dfa979-b8b1-4f87-b41f-36b17e24c19f","redirect":"notes/2389. 和有限的最长子序列【简单】/README"},"2390":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca8d1bb7-aa46-44f9-9c01-4fb2bbdd7883","redirect":"notes/2390. 从字符串中移除星号【中等】/README"},"2391":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d45ab0f-fb1c-469b-9a16-f94fe19c014c","redirect":"notes/2391. 收集垃圾的最少总时间【中等】/README"},"2392":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f602297-65f2-473e-bea7-862bd3d5d0fe","redirect":"notes/2392. 给定条件下构造矩阵【困难】/README"},"2393":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85e94407-8519-4c2e-bb88-b6e51917ddee","redirect":"notes/2393. 严格递增的子数组个数【中等】/README"},"2394":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c8623d2-a41f-4da8-9e5d-01702d2a4507","redirect":"notes/2394. 开除员工【中等】/README"},"2395":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5830f516-ee22-42c9-b6a9-904d92fe4e91","redirect":"notes/2395. 和相等的子数组【简单】/README"},"2396":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8ee32c8-c5f2-4d62-9502-1a34e8000fc1","redirect":"notes/2396. 严格回文的数字【中等】/README"},"2397":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"079a1d28-6a4e-4260-8275-5b8e09bed09c","redirect":"notes/2397. 被列覆盖的最多行数【中等】/README"},"2398":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3cb7771d-c0ab-4e83-b814-a8e94b27e8ef","redirect":"notes/2398. 预算内的最多机器人数目【困难】/README"},"2399":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"e26e3315-4566-42d9-bcf7-4cb84c4db3b8","redirect":"notes/2399. 检查相同字母间的距离【简单】/README"},"2400":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"60efea9a-36e8-4554-a933-dcd8053bf53b","redirect":"notes/2400. 恰好移动 k 步到达某一位置的方法数目【中等】/README"},"2401":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d9ade5b4-52a1-4183-8e21-81da9667b8a2","redirect":"notes/2401. 最长优雅子数组【中等】/README"},"2402":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57aa5e0f-7e71-49e5-8e20-b9ff9f2fabb7","redirect":"notes/2402. 会议室 III【困难】/README"},"2403":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c34b6727-b54c-44f0-8ea9-a88661ae37b3","redirect":"notes/2403. 杀死所有怪物的最短时间【困难】/README"},"2404":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2de6cee-db6c-4db1-92aa-4e6647ba68ae","redirect":"notes/2404. 出现最频繁的偶数元素【简单】/README"},"2405":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d82a6fa-6a7b-4b40-99be-015e3f2f0be3","redirect":"notes/2405. 子字符串的最优划分【中等】/README"},"2406":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1ffc362-bb0a-4236-8385-e863a43a5b14","redirect":"notes/2406. 将区间分为最少组数【中等】/README"},"2407":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61ec4f04-c697-4b8b-9b2f-9290f4c98a0c","redirect":"notes/2407. 最长递增子序列 II【困难】/README"},"2408":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0e3efec-3c9a-4619-844f-3c9742fcbbcc","redirect":"notes/2408. 设计 SQL【中等】/README"},"2409":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8c44ec6-b71f-4511-8342-bd5a53572c06","redirect":"notes/2409. 统计共同度过的日子数【简单】/README"},"2410":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f13a0b0-bea5-442d-b316-51bdbc4349fe","redirect":"notes/2410. 运动员和训练师的最大匹配数【中等】/README"},"2411":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7eeaa3bd-8dab-441a-b917-6982a2e64f19","redirect":"notes/2411. 按位或最大的最小子数组长度【中等】/README"},"2412":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"595a9112-3f64-4a59-aa6a-a48986e9953e","redirect":"notes/2412. 完成所有交易的初始最少钱数【困难】/README"},"2413":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b81cbbd4-fdd2-4f22-9b43-4fef582f275c","redirect":"notes/2413. 最小偶倍数【简单】/README"},"2414":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"70b80777-abde-4a03-b88e-195f6ef65c6f","redirect":"notes/2414. 最长的字母序连续子字符串的长度【中等】/README"},"2415":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e995628b-ac55-4d33-b75a-c93133bc1238","redirect":"notes/2415. 反转二叉树的奇数层【中等】/README"},"2416":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a68e075-e326-43e6-855b-ce37d46a0b18","redirect":"notes/2416. 字符串的前缀分数和【困难】/README"},"2417":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7434ec0-e142-41bc-ae45-0434941ffe79","redirect":"notes/2417. 最近的公平整数【中等】/README"},"2418":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"8270c6a9-9db0-4173-8991-8389d94c20ed","redirect":"notes/2418. 按身高排序【简单】/README"},"2419":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d1f65ba6-0802-4252-9999-a85d9ad29215","redirect":"notes/2419. 按位与最大的最长子数组【中等】/README"},"2420":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f168049-fd03-4b65-b502-9450eb45ef5d","redirect":"notes/2420. 找到所有好下标【中等】/README"},"2421":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81845d60-9a8e-4938-8d06-1714e08e011a","redirect":"notes/2421. 好路径的数目【困难】/README"},"2422":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4548b29e-8970-46a8-a0f4-c25d64190cc3","redirect":"notes/2422. 使用合并操作将数组转换为回文序列【中等】/README"},"2423":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a72b04e9-8996-421f-b98f-39f8a72e6300","redirect":"notes/2423. 删除字符使频率相同【简单】/README"},"2424":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a45caa2-a514-4635-b48d-44ff5a4e1788","redirect":"notes/2424. 最长上传前缀【中等】/README"},"2425":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32bcaaf6-df09-46af-beaf-058bfaf83024","redirect":"notes/2425. 所有数对的异或和【中等】/README"},"2426":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"023e057b-0919-4f89-9a5f-3875e082ed30","redirect":"notes/2426. 满足不等式的数对数目【困难】/README"},"2427":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62024d9e-374c-4e1b-8af5-9f5fa9e7b2f2","redirect":"notes/2427. 公因子的数目【简单】/README"},"2428":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fca6d71b-2cd3-40f5-851d-06c656cb588d","redirect":"notes/2428. 沙漏的最大总和【中等】/README"},"2429":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61e12339-104b-4117-a49d-00961716b320","redirect":"notes/2429. 最小异或【中等】/README"},"2430":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10f26526-f227-4467-a23f-9d00d5efdfa5","redirect":"notes/2430. 对字母串可执行的最大删除数【困难】/README"},"2431":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f6496b21-3b7b-469c-909a-fea643fc6fa0","redirect":"notes/2431. 最大限度地提高购买水果的口味【中等】/README"},"2432":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"84dcdefd-f209-4bf0-943f-c2e01c52af3d","redirect":"notes/2432. 处理用时最长的那个任务的员工【简单】/README"},"2433":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56a7ad9e-d58f-4eca-84ea-2a6a68d7904c","redirect":"notes/2433. 找出前缀异或的原始数组【中等】/README"},"2434":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"adbfb31c-5969-4958-af78-e2332a66042b","redirect":"notes/2434. 使用机器人打印字典序最小的字符串【中等】/README"},"2435":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df1d5531-ce34-4f66-bffd-28cd2aea8234","redirect":"notes/2435. 矩阵中和能被 K 整除的路径【困难】/README"},"2436":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37226549-053a-4428-8507-abcd0b3eb3f0","redirect":"notes/2436. 使子数组最大公约数大于一的最小分割数【中等】/README"},"2437":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a6bbe25-30a5-4f95-b02e-a981ad9f92a9","redirect":"notes/2437. 有效时间的数目【简单】/README"},"2438":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd4a39cf-b3a2-4095-a27f-3dbf246307f4","redirect":"notes/2438. 二的幂数组中查询范围内的乘积【中等】/README"},"2439":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd7be0e3-3db3-46fd-8ba2-9785449ea070","redirect":"notes/2439. 最小化数组中的最大值【中等】/README"},"2440":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab290a87-3edf-4ad4-a062-bb3e92d7a8bf","redirect":"notes/2440. 创建价值相同的连通块【困难】/README"},"2441":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d2fc005-8a55-457b-9a43-2f21dc8cac21","redirect":"notes/2441. 与对应负数同时存在的最大正整数【简单】/README"},"2442":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4780ce94-24ae-4443-b718-a0b0264fc25b","redirect":"notes/2442. 反转之后不同整数的数目【中等】/README"},"2443":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"95bfbcf8-b27c-4016-9b94-0f573724cb5d","redirect":"notes/2443. 反转之后的数字和【中等】/README"},"2444":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7577a074-c3c2-46b1-b110-26e94bf4f05b","redirect":"notes/2444. 统计定界子数组的数目【困难】/README"},"2445":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"223819d4-5edd-440e-bc4a-1aad2cf5370f","redirect":"notes/2445. 值为 1 的节点数【中等】/README"},"2446":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e829341-5375-469f-b911-5ce05f29f18d","redirect":"notes/2446. 判断两个事件是否存在冲突【简单】/README"},"2447":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e9112076-2f8e-44aa-83e4-7b93558bf0d4","redirect":"notes/2447. 最大公因数等于 K 的子数组数目【中等】/README"},"2448":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25c720d5-34eb-423e-8128-ce1f997f63b8","redirect":"notes/2448. 使数组相等的最小开销【困难】/README"},"2449":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e72e007b-ef64-4634-9f47-e31f5c8556b0","redirect":"notes/2449. 使数组相似的最少操作次数【困难】/README"},"2450":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"407ab2be-cba4-4f01-8ab1-0a05d30471c7","redirect":"notes/2450. 应用操作后不同二进制字符串的数量【中等】/README"},"2451":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"2aedb6bc-c184-408d-a9b1-33a81c219c4f","redirect":"notes/2451. 差值数组不同的字符串【简单】/README"},"2452":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a982326-8e85-4626-969f-3b0effba673b","redirect":"notes/2452. 距离字典两次编辑以内的单词【中等】/README"},"2453":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bea621ad-c558-4221-bb4f-b205a280b909","redirect":"notes/2453. 摧毁一系列目标【中等】/README"},"2454":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9dfca896-52dd-4ff1-b094-279a0200ce96","redirect":"notes/2454. 下一个更大元素 IV【困难】/README"},"2455":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"39e36924-7dca-43e8-bcc2-2f97474ed391","redirect":"notes/2455. 可被三整除的偶数的平均值【简单】/README"},"2456":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d350e46-442c-438b-a2b5-18ad08bfdeb5","redirect":"notes/2456. 最流行的视频创作者【中等】/README"},"2457":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3cbec37-97a3-484e-a827-1bb8d0ab78c1","redirect":"notes/2457. 美丽整数的最小增量【中等】/README"},"2458":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d3cd7f4-2200-4f68-8777-b6d2272d5cd1","redirect":"notes/2458. 移除子树后的二叉树高度【困难】/README"},"2459":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"08c90594-ddb5-4db4-979a-79c295f5ba61","redirect":"notes/2459. 通过移动项目到空白区域来排序数组【困难】/README"},"2460":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c51565f9-473e-4ce5-967f-c2003fcae623","redirect":"notes/2460. 对数组执行操作【简单】/README"},"2461":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"509d9840-4058-428e-80c5-8318fd4ce91d","redirect":"notes/2461. 长度为 K 子数组中的最大和【中等】/README"},"2462":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d338dc0f-c41f-465e-97e8-ac1a53b5e2c7","redirect":"notes/2462. 雇佣 K 位工人的总代价【中等】/README"},"2463":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3944d408-aef3-4850-81c6-b2968c9ad463","redirect":"notes/2463. 最小移动总距离【困难】/README"},"2464":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c469919-ebf0-4505-b25d-acc42d6cc2a0","redirect":"notes/2464. 有效分割中的最少子数组数目【中等】/README"},"2465":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d3afda2-95a2-40a9-9f9e-dfc951cab7f0","redirect":"notes/2465. 不同的平均值数目【简单】/README"},"2466":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c141123-d5e4-4ba5-8dc6-e230c67ebbfb","redirect":"notes/2466. 统计构造好字符串的方案数【中等】/README"},"2467":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3097a006-88f7-4101-82eb-6abebcd65b3a","redirect":"notes/2467. 树上最大得分和路径【中等】/README"},"2468":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4150799a-1793-4860-b87c-c8c7ebba1831","redirect":"notes/2468. 根据限制分割消息【困难】/README"},"2469":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc51b6af-ae3a-4923-bd38-bd23b2b3cb7d","redirect":"notes/2469. 温度转换【简单】/README"},"2470":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ccc035aa-326b-4b08-a879-6b6c54f99a17","redirect":"notes/2470. 最小公倍数等于 K 的子数组数目【中等】/README"},"2471":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"76b11ccd-ce5b-4b69-b00b-f3866ade6de8","redirect":"notes/2471. 逐层排序二叉树所需的最少操作数目【中等】/README"},"2472":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b051c595-dca2-4c4a-a5e7-1dec3dd703d9","redirect":"notes/2472. 不重叠回文子字符串的最大数目【困难】/README"},"2473":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"328dd8f5-7fc6-445f-a1ab-111d4121a6ae","redirect":"notes/2473. 购买苹果的最低成本【中等】/README"},"2474":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bca6baaf-c21f-4f37-bbef-16b2ec0a046d","redirect":"notes/2474. 购买量严格增加的客户【困难】/README"},"2475":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"934be7c5-3b70-4b95-a073-d1c3cad4a208","redirect":"notes/2475. 数组中不等三元组的数目【简单】/README"},"2476":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb5ab39f-e7c0-496d-b807-f3ea5cfb5bbf","redirect":"notes/2476. 二叉搜索树最近节点查询【中等】/README"},"2477":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"debd22d5-2286-4a3a-9a0f-b715b58232bc","redirect":"notes/2477. 到达首都的最少油耗【中等】/README"},"2478":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ed76790-94ce-49e9-88f0-6e2ec9fed5bd","redirect":"notes/2478. 完美分割的方案数【困难】/README"},"2479":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9605bf5e-fe17-4024-90da-19a12f5a34af","redirect":"notes/2479. 两个不重叠子树的最大异或值【困难】/README"},"2480":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8429ea5b-22dd-4afc-a0e7-3fe982cec768","redirect":"notes/2480. 形成化学键【简单】/README"},"2481":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80fed8ce-9193-4da0-b7a3-2d501b69137b","redirect":"notes/2481. 分割圆的最少切割次数【简单】/README"},"2482":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4abfb07c-0b69-4adf-9dd7-dfda217688a7","redirect":"notes/2482. 行和列中一和零的差值【中等】/README"},"2483":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a04736b-1378-4fb4-a2d4-81ff3bf782d6","redirect":"notes/2483. 商店的最少代价【中等】/README"},"2484":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"956a22d4-2f91-4105-ae92-71629828e1c1","redirect":"notes/2484. 统计回文子序列数目【困难】/README"},"2485":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af72c1cf-bd56-41de-9841-0a7025474bf7","redirect":"notes/2485. 找出中枢整数【简单】/README"},"2486":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2edfa471-9049-4403-97cf-bce546184906","redirect":"notes/2486. 追加字符以获得子序列【中等】/README"},"2487":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c22332f7-8566-4ff7-904f-2769de00852c","redirect":"notes/2487. 从链表中移除节点【中等】/README"},"2488":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3462c245-3b19-4627-b4e3-c22f4ef19f9f","redirect":"notes/2488. 统计中位数为 K 的子数组【困难】/README"},"2489":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2db54f4e-5138-420d-bf82-feb14c5921fc","redirect":"notes/2489. 固定比率的子字符串数【中等】/README"},"2490":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32cace65-17d3-4470-9083-6afc8d917cf6","redirect":"notes/2490. 回环句【简单】/README"},"2491":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c75d264b-8c63-4acd-a3d9-ef4b42dae9a6","redirect":"notes/2491. 划分技能点相等的团队【中等】/README"},"2492":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8c7a298-8916-476c-8cc5-8ee61b87f662","redirect":"notes/2492. 两个城市间路径的最小分数【中等】/README"},"2493":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a71e5a77-57dc-4da7-9b82-6b7c8e0766c5","redirect":"notes/2493. 将节点分成尽可能多的组【困难】/README"},"2494":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d2d31eb-ddb0-4f41-ab2b-e70ef16130c8","redirect":"notes/2494. 合并在同一个大厅重叠的活动【困难】/README"},"2495":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b5ab72b-4be3-4b19-86f1-437b60366fa5","redirect":"notes/2495. 乘积为偶数的子数组数【中等】/README"},"2496":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4caa4b7e-b398-4ad4-84ef-ea812e2db305","redirect":"notes/2496. 数组中字符串的最大值【简单】/README"},"2497":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bdcf8431-a111-4820-935f-946e3ad2c987","redirect":"notes/2497. 图中最大星和【中等】/README"},"2498":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da120f6d-0a57-42a0-a22f-26b250259406","redirect":"notes/2498. 青蛙过河 II【中等】/README"},"2499":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5462755a-68f2-4167-8ae9-b0dba84ce314","redirect":"notes/2499. 让数组不相等的最小总代价【困难】/README"},"2500":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d2b02ed-a1c0-4612-8704-2bc4bc56ec61","redirect":"notes/2500. 删除每行中的最大值【简单】/README"},"2501":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ade925f-0caa-44a7-8835-9ef300b5947c","redirect":"notes/2501. 数组中最长的方波【中等】/README"},"2502":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"798c75be-8497-42ad-ae7a-07090bc549c0","redirect":"notes/2502. 设计内存分配器【中等】/README"},"2503":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a5ee455-07da-46e7-b42f-68fdd2c74b64","redirect":"notes/2503. 矩阵查询可获得的最大分数【困难】/README"},"2504":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b2d7720-4cdd-4292-9bc0-210c0b3b091a","redirect":"notes/2504. 把名字和职业联系起来【简单】/README"},"2505":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24a1a1e8-9afe-40f8-adbf-706d055a3857","redirect":"notes/2505. 所有子序列和的按位或【中等】/README"},"2506":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"88bb0232-b3ce-4cf0-9c93-e03c26d5b566","redirect":"notes/2506. 统计相似字符串对的数目【简单】/README"},"2507":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f5c4808-1cc8-4d8b-b151-dade4a587983","redirect":"notes/2507. 使用质因数之和替换后可以取到的最小值【中等】/README"},"2508":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2dea279d-9db0-41f8-9dfe-61f88eed07f0","redirect":"notes/2508. 添加边使所有节点度数都为偶数【困难】/README"},"2509":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"709f371a-59a2-42d0-ad64-90aa26ec0861","redirect":"notes/2509. 查询树中环的长度【困难】/README"},"2510":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4386584a-a06a-42b5-98b0-f9cfb8ea727c","redirect":"notes/2510. 检查是否有路径经过相同数量的 0 和 1【中等】/README"},"2511":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09a7b87b-1660-43d6-b730-ed720784ebad","redirect":"notes/2511. 最多可以摧毁的敌人城堡数目【简单】/README"},"2512":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5ecbf16-35f3-4485-95f5-0e6062dec73e","redirect":"notes/2512. 奖励最顶尖的 K 名学生【中等】/README"},"2513":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fbb9602-857a-424e-86a5-90b37097a1c9","redirect":"notes/2513. 最小化两个数组中的最大值【中等】/README"},"2514":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15ab8992-e9bc-4cd0-8eb0-feb475e316b0","redirect":"notes/2514. 统计同位异构字符串数目【困难】/README"},"2515":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c6a4eb3-8ccf-486b-b47a-5a699f1a4a18","redirect":"notes/2515. 到目标字符串的最短距离【简单】/README"},"2516":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d4eb644-d711-47be-9068-8523daf0351a","redirect":"notes/2516. 每种字符至少取 K 个【中等】/README"},"2517":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a04db477-7157-4fe0-a63d-91518d7bf76d","redirect":"notes/2517. 礼盒的最大甜蜜度【中等】/README"},"2518":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"827abda7-4287-4840-9923-cb5f5cbdde6c","redirect":"notes/2518. 好分区的数目【困难】/README"},"2519":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b5286ce1-5730-4cda-9093-bbe657cace3e","redirect":"notes/2519. 统计 K-Big 索引的数量【困难】/README"},"2520":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fca95b5-3901-42a5-ab62-41434a576d26","redirect":"notes/2520. 统计能整除数字的位数【简单】/README"},"2521":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37232f90-e18a-4916-b40c-6e44ceabf831","redirect":"notes/2521. 数组乘积中的不同质因数数目【中等】/README"},"2522":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"18d3c070-5b71-4df2-8a09-b4a9d8959c97","redirect":"notes/2522. 将字符串分割成值不超过 K 的子字符串【中等】/README"},"2523":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98916946-a3fe-4433-acf0-df36355c2fa6","redirect":"notes/2523. 范围内最接近的两个质数【中等】/README"},"2524":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f14c69c-3de6-44db-a270-f8b154c6fc01","redirect":"notes/2524. 子数组的最大频率分数【困难】/README"},"2525":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45d87294-de93-479f-b23a-338ed452da58","redirect":"notes/2525. 根据规则将箱子分类【简单】/README"},"2526":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3d8078e-50bc-4a87-93ee-726a48ed2ad1","redirect":"notes/2526. 找到数据流中的连续整数【中等】/README"},"2527":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37a6ffc0-f525-4b53-89dd-c67c9e75c08e","redirect":"notes/2527. 查询数组异或美丽值【中等】/README"},"2528":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9f5559e-5b9c-4821-9155-62a84e461097","redirect":"notes/2528. 最大化城市的最小电量【困难】/README"},"2529":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eff5c0e5-352e-4490-9faf-71e288271a53","redirect":"notes/2529. 正整数和负整数的最大计数【简单】/README"},"2530":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85282a17-6b11-4c3d-bba7-4b2fd7b3419f","redirect":"notes/2530. 执行 K 次操作后的最大分数【中等】/README"},"2531":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"644181a7-fcc7-4ef2-b9b7-ebc7454f4bf1","redirect":"notes/2531. 使字符串中不同字符的数目相等【中等】/README"},"2532":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6000938-0a91-4ef9-a308-c57ad2bbf28b","redirect":"notes/2532. 过桥的时间【困难】/README"},"2533":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"484ff40d-1d45-425e-a924-262c6d261090","redirect":"notes/2533. 好二进制字符串的数量【中等】/README"},"2534":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a3448147-6ee3-45b9-9b27-5607f0273d86","redirect":"notes/2534. 通过门的时间【困难】/README"},"2535":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32b67d13-25b6-44df-9200-9a105cc37b69","redirect":"notes/2535. 数组元素和与数字和的绝对差【简单】/README"},"2536":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00eafc47-7f1f-4fe0-8573-7879f78df998","redirect":"notes/2536. 子矩阵元素加 1【中等】/README"},"2537":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b44b82c-10c4-4612-8e33-ab0285aa1c29","redirect":"notes/2537. 统计好子数组的数目【中等】/README"},"2538":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a67e873e-751b-42d6-83f9-31185ddacb18","redirect":"notes/2538. 最大价值和与最小价值和的差值【困难】/README"},"2539":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"947e80b7-95c8-4a61-a8f4-8ae7f530fea5","redirect":"notes/2539. 好子序列的个数【中等】/README"},"2540":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fc0f2b9-fde1-4285-a01f-0f055b869453","redirect":"notes/2540. 最小公共值【简单】/README"},"2541":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"35ee29ed-3536-4407-8611-abc4425bbab4","redirect":"notes/2541. 使数组中所有元素相等的最小操作数 II【中等】/README"},"2542":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af143738-e65b-4b87-ae8f-b5df90344db3","redirect":"notes/2542. 最大子序列的分数【中等】/README"},"2543":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5d6550a9-9f56-433d-8c1a-e7b3e529b0a1","redirect":"notes/2543. 判断一个点是否可以到达【困难】/README"},"2544":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9b3db9b-2614-4a03-8575-ba393a873260","redirect":"notes/2544. 交替数字和【简单】/README"},"2545":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a421b99-93a9-483e-b7ae-c5bc97ab0f90","redirect":"notes/2545. 根据第 K 场考试的分数排序【中等】/README"},"2546":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdf68fac-3fe6-4358-a695-99c3ec4edeeb","redirect":"notes/2546. 执行逐位运算使字符串相等【中等】/README"},"2547":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7859d28-2e93-4243-a9a7-7b5e94ff33bc","redirect":"notes/2547. 拆分数组的最小代价【困难】/README"},"2548":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b819641d-7d8f-4ca1-9fd7-38417bc8a22c","redirect":"notes/2548. 填满背包的最大价格【中等】/README"},"2549":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79305343-8d6c-41da-85d6-965751da23ba","redirect":"notes/2549. 统计桌面上的不同数字【简单】/README"},"2550":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ebb89bd5-4b18-478d-a61f-e6ff36d723ed","redirect":"notes/2550. 猴子碰撞的方法数【中等】/README"},"2551":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"abe04116-0124-4c77-a4f9-f44d442a1252","redirect":"notes/2551. 将珠子放入背包中【困难】/README"},"2552":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c19467fd-330a-4f2c-bd0e-424393c4e4db","redirect":"notes/2552. 统计上升四元组【困难】/README"},"2553":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"555916ae-7a1e-49d0-92d9-91e755083987","redirect":"notes/2553. 分割数组中数字的数位【简单】/README"},"2554":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a1ce06c1-d807-4675-9358-bfac6f126b39","redirect":"notes/2554. 从一个范围内选择最多整数 I【中等】/README"},"2555":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd7a97fc-07e1-4641-a092-91b4ff346832","redirect":"notes/2555. 两个线段获得的最多奖品【中等】/README"},"2556":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4429373d-8b3b-4fd5-b289-8b277056d80a","redirect":"notes/2556. 二进制矩阵中翻转最多一次使路径不连通【中等】/README"},"2557":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5deca936-1de9-473a-83e4-a812008ffd47","redirect":"notes/2557. 从一个范围内选择最多整数 II【中等】/README"},"2558":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66d048b6-156b-44b1-ba09-ff56d18e3219","redirect":"notes/2558. 从数量最多的堆取走礼物【简单】/README"},"2559":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"35fac6f3-97d3-4f18-9102-2c39dd3565dd","redirect":"notes/2559. 统计范围内的元音字符串数【中等】/README"},"2560":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15c90ded-df18-4f09-9b99-3a4a2660c33b","redirect":"notes/2560. 打家劫舍 IV【中等】/README"},"2561":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99048b94-11db-4103-9849-ea52041d662e","redirect":"notes/2561. 重排水果【困难】/README"},"2562":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e582462e-fd60-4d0e-9e05-0004e19eb24c","redirect":"notes/2562. 找出数组的串联值【简单】/README"},"2563":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f0e54ff-d81c-40bb-862a-2611f0e2a08a","redirect":"notes/2563. 统计公平数对的数目【中等】/README"},"2564":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"507c888f-8078-44fb-98c0-6937abe41795","redirect":"notes/2564. 子字符串异或查询【中等】/README"},"2565":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"772e6792-709f-422f-900f-cb0c29557909","redirect":"notes/2565. 最少得分子序列【困难】/README"},"2566":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6897f785-a64e-4157-895c-5e7a4ea1973d","redirect":"notes/2566. 替换一个数字后的最大差值【简单】/README"},"2567":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"318aee03-6917-4c95-a889-afa795242450","redirect":"notes/2567. 修改两个元素的最小分数【中等】/README"},"2568":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42107441-3bb3-40c6-89b5-cae78fc3f027","redirect":"notes/2568. 最小无法得到的或值【中等】/README"},"2569":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b56fd21-bee9-47fa-a0e3-2f6504d8ff80","redirect":"notes/2569. 更新数组后处理求和查询【困难】/README"},"2570":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef23279b-f9b9-406b-bf02-48fe2e04c0c6","redirect":"notes/2570. 合并两个二维数组 - 求和法【简单】/README"},"2571":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09f40736-a064-40cf-8eb2-18046c4d6544","redirect":"notes/2571. 将整数减少到零需要的最少操作数【中等】/README"},"2572":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9eb1a9c3-1c51-4218-b4a8-ba10c65768f4","redirect":"notes/2572. 无平方子集计数【中等】/README"},"2573":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"84d14b11-5117-4262-b3be-93ae97cc30fc","redirect":"notes/2573. 找出对应 LCP 矩阵的字符串【困难】/README"},"2574":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df317c40-6d11-49c1-8390-b2cca346b44d","redirect":"notes/2574. 左右元素和的差值【简单】/README"},"2575":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7889604b-f535-4f5e-997a-0312d5e6c143","redirect":"notes/2575. 找出字符串的可整除数组【中等】/README"},"2576":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"968fb1ec-ce38-4573-ae28-9a96ccd61398","redirect":"notes/2576. 求出最多标记下标【中等】/README"},"2577":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"76a5a11f-332b-44a4-859d-663a66d47320","redirect":"notes/2577. 在网格图中访问一个格子的最少时间【困难】/README"},"2578":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32ea1ff8-1d91-4d26-a60b-e3abea8b114b","redirect":"notes/2578. 最小和分割【简单】/README"},"2579":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"897b485d-1608-41e0-b749-36901c8ecb59","redirect":"notes/2579. 统计染色格子数【中等】/README"},"2580":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ef02007-612c-4cb7-b256-27e334acaac1","redirect":"notes/2580. 统计将重叠区间合并成组的方案数【中等】/README"},"2581":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"daeae766-5969-458c-be5e-14981987e8c8","redirect":"notes/2581. 统计可能的树根数目【困难】/README"},"2582":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"075412af-b470-4768-b663-bf42a9fdc676","redirect":"notes/2582. 递枕头【简单】/README"},"2583":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d969310f-a82b-4048-86a6-90a1970a2f9d","redirect":"notes/2583. 二叉树中的第 K 大层和【中等】/README"},"2584":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d146cab-3ab4-4aca-a433-111c6a4c0d62","redirect":"notes/2584. 分割数组使乘积互质【困难】/README"},"2585":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa1b7726-963c-4ffc-9bc6-07bbab742299","redirect":"notes/2585. 获得分数的方法数【困难】/README"},"2586":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57cee86a-5b63-4fab-9598-ce841b294c5a","redirect":"notes/2586. 统计范围内的元音字符串数【简单】/README"},"2587":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99cdd5ac-1eb4-4095-a835-639ac2597f88","redirect":"notes/2587. 重排数组以得到最大前缀分数【中等】/README"},"2588":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c3ce40c2-338f-4c8b-a44a-e035a05d1dec","redirect":"notes/2588. 统计美丽子数组数目【中等】/README"},"2589":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e6417356-f23b-4d78-a90d-9bcdc7e6fc80","redirect":"notes/2589. 完成所有任务的最少时间【困难】/README"},"2590":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b284a5c1-cd5c-4e3a-8367-724bbce5a9fb","redirect":"notes/2590. 设计一个待办事项清单【中等】/README"},"2591":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34d78f75-33a7-4cbc-b09e-6e1144ec1afa","redirect":"notes/2591. 将钱分给最多的儿童【简单】/README"},"2592":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6cc3156c-ed53-4877-a22d-e37af215a00a","redirect":"notes/2592. 最大化数组的伟大值【中等】/README"},"2593":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"52d8b292-d2e2-484a-8571-047c922cf75f","redirect":"notes/2593. 标记所有元素后数组的分数【中等】/README"},"2594":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"909b8081-18a9-4491-9f2c-8ebdcab3beff","redirect":"notes/2594. 修车的最少时间【中等】/README"},"2595":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a0cca754-3dcb-4a13-942d-548e653ae8ad","redirect":"notes/2595. 奇偶位数【简单】/README"},"2596":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"feccf1c1-45e8-4ca2-9855-258c6d4db95a","redirect":"notes/2596. 检查骑士巡视方案【中等】/README"},"2597":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e44cad4c-9855-452b-9f35-67a8ef0dbbf9","redirect":"notes/2597. 美丽子集的数目【中等】/README"},"2598":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2efa611d-ec02-4ab2-8686-bf79c28938db","redirect":"notes/2598. 执行操作后的最大 MEX【中等】/README"},"2599":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cec34abc-ce8e-41f4-95a5-783a13dfbb16","redirect":"notes/2599. 使前缀和数组非负【中等】/README"},"2600":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48a0352b-8b57-42d0-a786-1822537d2f2a","redirect":"notes/2600. K 件物品的最大和【简单】/README"},"2601":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"91626a2d-e2ae-43b0-ae59-2da08eb7e701","redirect":"notes/2601. 质数减法运算【中等】/README"},"2602":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c5bb199-21ee-4ca4-bd85-c2358ced7a90","redirect":"notes/2602. 使数组元素全部相等的最少操作次数【中等】/README"},"2603":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b9dc1c2-abe1-4184-82c6-1e16f0506b61","redirect":"notes/2603. 收集树中金币【困难】/README"},"2604":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0742c648-a4d6-486d-b3f8-f87424bc52a4","redirect":"notes/2604. 吃掉所有谷子的最短时间【困难】/README"},"2605":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ece760d5-b452-45df-9dff-cdeaf0657e3f","redirect":"notes/2605. 从两个数字数组里生成最小数字【简单】/README"},"2606":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e989a37f-b1c0-47b0-9f21-2021aa2723de","redirect":"notes/2606. 找到最大开销的子字符串【中等】/README"},"2607":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87994cd8-607e-49fd-93a1-a26908508cc6","redirect":"notes/2607. 使子数组元素和相等【中等】/README"},"2608":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3678152-9cc5-4c8b-bab1-b0915b75f935","redirect":"notes/2608. 图中的最短环【困难】/README"},"2609":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5ed0b8f-917c-4fdd-9180-f04a77c581d5","redirect":"notes/2609. 最长平衡子字符串【简单】/README"},"2610":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5e88cf0-24e3-4b7f-90e1-b847d3aa717c","redirect":"notes/2610. 转换二维数组【中等】/README"},"2611":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2bc28a9-951e-41df-b875-aa7013450178","redirect":"notes/2611. 老鼠和奶酪【中等】/README"},"2612":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6150c2ed-7b50-4ea2-b4d1-0fe4e5b41742","redirect":"notes/2612. 最少翻转操作数【困难】/README"},"2613":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c328aa65-adfb-46ff-8574-ad0ac3ed048e","redirect":"notes/2613. 美数对【困难】/README"},"2614":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"937619c9-cc42-440a-95f5-89acd4e99399","redirect":"notes/2614. 对角线上的质数【简单】/README"},"2615":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a696fb5-6f72-4610-abc2-42064ccd30c7","redirect":"notes/2615. 等值距离和【中等】/README"},"2616":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b0c5c22-fedb-4997-9b00-d6bdff73a8a8","redirect":"notes/2616. 最小化数对的最大差值【中等】/README"},"2617":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f9f815a-2c3a-46e8-b08f-3691b482bdcc","redirect":"notes/2617. 网格图中最少访问的格子数【困难】/README"},"2618":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36c77ef5-d453-4856-9ac8-ad5d90fefa7a","redirect":"notes/2618. 检查是否是类的对象实例【中等】/README"},"2619":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba183ab6-99fb-414b-b0c9-ec13e97e2a88","redirect":"notes/2619. 数组原型对象的最后一个元素【简单】/README"},"2620":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc6e6495-f05d-4536-9e82-5d7b99d79bcf","redirect":"notes/2620. 计数器【简单】/README"},"2621":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33ffb0c3-2075-46c7-9732-1c0ec99da2fd","redirect":"notes/2621. 睡眠函数【简单】/README"},"2622":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3309a5f3-bae2-49ef-b84e-daa08269a3b7","redirect":"notes/2622. 有时间限制的缓存【中等】/README"},"2623":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fe77007b-7b63-404e-b331-44c6933b3037","redirect":"notes/2623. 记忆函数【中等】/README"},"2624":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a03b3aa8-2a9f-4008-bd98-92be29a0cff7","redirect":"notes/2624. 蜗牛排序【中等】/README"},"2625":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e55a244-13c8-43d3-9da8-afad13838c74","redirect":"notes/2625. 扁平化嵌套数组【中等】/README"},"2626":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9214863e-ca67-47dc-bc95-d0cb0f91f0c4","redirect":"notes/2626. 数组归约运算【简单】/README"},"2627":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"424ffab1-b6db-4ff5-8e1e-3701f25c01d5","redirect":"notes/2627. 函数防抖【中等】/README"},"2628":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3438fad-b42b-4edf-9f3b-b29ab58527da","redirect":"notes/2628. 完全相等的 JSON 字符串【中等】/README"},"2629":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b599dd01-dee9-45f4-82aa-06d6189cab62","redirect":"notes/2629. 复合函数【简单】/README"},"2630":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cbdff173-e176-4985-bb91-0029394a3d22","redirect":"notes/2630. 记忆函数 II【困难】/README"},"2631":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d4984b93-055c-4e73-983d-300ca6a22b31","redirect":"notes/2631. 分组【中等】/README"},"2632":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29d9251a-eb1d-40a4-9fc2-3d80b916c673","redirect":"notes/2632. 柯里化【中等】/README"},"2633":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61075b18-b559-4819-8363-d18be5cdbc86","redirect":"notes/2633. 将对象转换为 JSON 字符串【中等】/README"},"2634":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59558755-f821-477a-90db-dea152827ab1","redirect":"notes/2634. 过滤数组中的元素【简单】/README"},"2635":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94553a2d-6386-4563-a2fe-721cfb0a2815","redirect":"notes/2635. 转换数组中的每个元素【简单】/README"},"2636":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9d7b6bc6-de89-4afd-b87f-a8142158d5f2","redirect":"notes/2636. Promise 对象池【中等】/README"},"2637":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45a592df-2d3e-4e37-ae38-b92547cf6171","redirect":"notes/2637. 有时间限制的 Promise 对象【中等】/README"},"2638":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"543a77e7-3605-43c2-a526-46cc003433af","redirect":"notes/2638. 统计 K-Free 子集的总数【中等】/README"},"2639":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ec19d2e-c17c-4ccd-8d98-9fd5f5e1698e","redirect":"notes/2639. 查询网格图中每一列的宽度【简单】/README"},"2640":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"39f2601c-6e03-4755-8edb-a641bb93964c","redirect":"notes/2640. 一个数组所有前缀的分数【中等】/README"},"2641":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55f7bfea-4b3e-49bd-b64d-3c2a5a3e6e4e","redirect":"notes/2641. 二叉树的堂兄弟节点 II【中等】/README"},"2642":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a9b644b-962a-4a99-8d9b-d0f91620c874","redirect":"notes/2642. 设计可以求最短路径的图类【困难】/README"},"2643":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"beba3909-d17a-4df2-ab6f-9e1999252f3b","redirect":"notes/2643. 一最多的行【简单】/README"},"2644":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1dae9ee-a98e-44ea-8f24-34fabd787af8","redirect":"notes/2644. 找出可整除性得分最大的整数【简单】/README"},"2645":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae4b2ee9-4fd7-4fdf-b2a0-80c9ad0725f7","redirect":"notes/2645. 构造有效字符串的最少插入数【中等】/README"},"2646":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a50ee6a-7ccd-4bad-a8fe-a68cc54ac887","redirect":"notes/2646. 最小化旅行的价格总和【困难】/README"},"2647":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f782cf35-ab38-4a1e-adae-387c29ff6312","redirect":"notes/2647. 把三角形染成红色【困难】/README"},"2648":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"b46f5a4b-3937-40d3-a484-53c60b2e8815","redirect":"notes/2648. 生成斐波那契数列【简单】/README"},"2649":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7abdba0a-4e67-4e0f-be95-69dea83ecedf","redirect":"notes/2649. 嵌套数组生成器【中等】/README"},"2650":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1943f257-20eb-44f2-bc46-dc6e8db87ab4","redirect":"notes/2650. 设计可取消函数【困难】/README"},"2651":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0771d132-6442-4eb9-8212-e91b8f4d88dc","redirect":"notes/2651. 计算列车到站时间【简单】/README"},"2652":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6271c6f7-72e2-4230-a24b-8526ea21da29","redirect":"notes/2652. 倍数求和【简单】/README"},"2653":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f34c72fd-71e2-4e8e-8b1b-97b51660db9a","redirect":"notes/2653. 滑动子数组的美丽值【中等】/README"},"2654":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec650528-b437-4307-b0cf-1be0f641a674","redirect":"notes/2654. 使数组所有元素变成 1 的最少操作次数【中等】/README"},"2655":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87685a22-b6ad-4094-84cd-18dc3ba7402f","redirect":"notes/2655. 寻找最大长度的未覆盖区间【中等】/README"},"2656":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d9245b9-3847-4a4f-a236-39aea5b6eb51","redirect":"notes/2656. K 个元素的最大和【简单】/README"},"2657":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec51785c-51d1-4c85-af97-c274e01df106","redirect":"notes/2657. 找到两个数组的前缀公共数组【中等】/README"},"2658":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"721292e7-5c5a-42c1-850f-49d02162577a","redirect":"notes/2658. 网格图中鱼的最大数目【中等】/README"},"2659":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed51d536-f5c8-4ee1-80dc-0b80a3906df4","redirect":"notes/2659. 将数组清空【困难】/README"},"2660":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7f81c37-6d61-475c-b17f-4aa4e1c9dc1f","redirect":"notes/2660. 保龄球游戏的获胜者【简单】/README"},"2661":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"985db9a5-6cd6-49e9-9fca-bef54e034331","redirect":"notes/2661. 找出叠涂元素【中等】/README"},"2662":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"837a1294-52ca-4332-9560-1f47d16d9323","redirect":"notes/2662. 前往目标的最小代价【中等】/README"},"2663":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd3d5b7e-134f-4fb5-9e82-fa5acb51bec4","redirect":"notes/2663. 字典序最小的美丽字符串【困难】/README"},"2664":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb4c5723-bffe-447e-b93f-8b1deff80bc1","redirect":"notes/2664. 巡逻的骑士【中等】/README"},"2665":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ac216b3e-bad0-4abd-b6ad-6164844fb78b","redirect":"notes/2665. 计数器 II【简单】/README"},"2666":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d08ca57c-2e3c-4745-a6f9-167a64621402","redirect":"notes/2666. 只允许一次函数调用【简单】/README"},"2667":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b86c5c2-70f6-4d19-baf4-ccfe2d8a063a","redirect":"notes/2667. 创建 Hello World 函数【简单】/README"},"2668":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"caaccb85-d7ac-412b-b605-90b6ef270631","redirect":"notes/2668. 查询员工当前薪水【简单】/README"},"2669":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"054941e6-08d0-4bdb-a4c0-3727d207c3fb","redirect":"notes/2669. 统计 Spotify 排行榜上艺术家出现次数【简单】/README"},"2670":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1aa553e6-0e26-40d6-b122-b5cbc66aa309","redirect":"notes/2670. 找出不同元素数目差数组【简单】/README"},"2671":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c07adda-04b5-4ea7-aefc-fe068ae0f9e2","redirect":"notes/2671. 频率跟踪器【中等】/README"},"2672":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5bfa1f72-555c-45de-85ec-422681a9e5b2","redirect":"notes/2672. 有相同颜色的相邻元素数目【中等】/README"},"2673":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3015383a-fc37-46b8-9cd1-cd3f82cc8552","redirect":"notes/2673. 使二叉树所有路径值相等的最小代价【中等】/README"},"2674":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a6ce60c-7e47-4325-b32e-ac4eecbb635f","redirect":"notes/2674. 拆分循环链表【中等】/README"},"2675":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"429c5053-c9e9-4de8-aecb-d4e5ccafec96","redirect":"notes/2675. 将对象数组转换为矩阵【困难】/README"},"2676":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a718e90a-b1d6-40c7-9166-ab323ba3817e","redirect":"notes/2676. 节流【中等】/README"},"2677":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36e0a419-2a0f-41bc-87f4-9ed277107d88","redirect":"notes/2677. 分块数组【简单】/README"},"2678":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e33318b-3ec5-430e-bd79-b095911a8963","redirect":"notes/2678. 老人的数目【简单】/README"},"2679":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b3e80a6-3374-4128-8be9-10da3995ac03","redirect":"notes/2679. 矩阵中的和【中等】/README"},"2680":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c616eedd-d1e1-4fd4-aa89-66a85f02f2fd","redirect":"notes/2680. 最大或值【中等】/README"},"2681":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09d0a71f-92de-47d0-8fe8-96d2c5568925","redirect":"notes/2681. 英雄的力量【困难】/README"},"2682":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7acfbd0-9513-41b3-bdb5-eb029b6374e9","redirect":"notes/2682. 找出转圈游戏输家【简单】/README"},"2683":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"560952ae-618a-4a12-ba72-0f9b485a4099","redirect":"notes/2683. 相邻值的按位异或【中等】/README"},"2684":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"16ab6bbc-f4a5-4ef4-b757-fefbe2efdc2d","redirect":"notes/2684. 矩阵中移动的最大次数【中等】/README"},"2685":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9b15504-3d28-4046-8004-d09b2fc9c54e","redirect":"notes/2685. 统计完全连通分量的数量【中等】/README"},"2686":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3ed6965-2fbb-4716-94c1-16fda9c85add","redirect":"notes/2686. 即时食物配送 III【中等】/README"},"2687":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7ebf177-4084-40a8-9e8a-0151a32dcffe","redirect":"notes/2687. 自行车的最后使用时间【简单】/README"},"2688":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e37137aa-1fe3-49ad-802e-5b2a3f84926f","redirect":"notes/2688. 查找活跃用户【中等】/README"},"2689":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0a03b4d-70cf-49e2-ab54-b3187b3c1e8c","redirect":"notes/2689. 从 Rope 树中提取第 K 个字符【简单】/README"},"2690":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f16e79f-067b-4d07-8df9-948ec71aab1d","redirect":"notes/2690. 无穷方法对象【简单】/README"},"2691":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"201b5505-7a4e-4d3c-8b2f-e9a08e89f46f","redirect":"notes/2691. 不可变辅助工具【困难】/README"},"2692":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9c04a01-4c29-4839-a98b-bf32524d8acf","redirect":"notes/2692. 使对象不可变【中等】/README"},"2693":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2742cc62-9798-4509-b296-7e789cecaab9","redirect":"notes/2693. 使用自定义上下文调用函数【中等】/README"},"2694":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c95d6e81-f179-4d4b-a684-01b4f70ae915","redirect":"notes/2694. 事件发射器【中等】/README"},"2695":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"d57ae4dd-7f9b-4e65-b9c5-1f144e821674","redirect":"notes/2695. 包装数组【简单】/README"},"2696":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"941bf6d6-7613-406d-bd56-db0cac84e03c","redirect":"notes/2696. 删除子串后的字符串最小长度【简单】/README"},"2697":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9d946db1-053e-4442-9d64-6406f0db09b7","redirect":"notes/2697. 字典序最小回文串【简单】/README"},"2698":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d88f4e9-2ad1-433c-ab89-cb0b8bb56418","redirect":"notes/2698. 求一个整数的惩罚数【中等】/README"},"2699":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46b226b0-c694-456a-8d56-e3d73b472eeb","redirect":"notes/2699. 修改图中的边权【困难】/README"},"2700":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"730fa172-3f6b-4b3a-9b5e-da1d9d18b011","redirect":"notes/2700. 两个对象之间的差异【中等】/README"},"2701":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07aa6f41-a212-4326-b485-c099100e6f97","redirect":"notes/2701. 连续递增交易【困难】/README"},"2702":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2f579b1-6fc6-42e2-99e6-be1d95070e1e","redirect":"notes/2702. 使数字变为非正数的最小操作次数【困难】/README"},"2703":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d316f7a-2d6b-41af-87b6-e466a2076331","redirect":"notes/2703. 返回传递的参数的长度【简单】/README"},"2704":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e332b77-86bd-443d-9897-d7afbba6226c","redirect":"notes/2704. 相等还是不相等【简单】/README"},"2705":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ccb2685-1319-4468-9824-afe244f7b919","redirect":"notes/2705. 精简对象【中等】/README"},"2706":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db8a4a08-0e3e-4e19-a603-cf2c5c54e2e7","redirect":"notes/2706. 购买两块巧克力【简单】/README"},"2707":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ccb7457-bba9-46a6-8248-d9702daba58d","redirect":"notes/2707. 字符串中的额外字符【中等】/README"},"2708":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fba18a76-8a9c-424d-bb56-8e4d5db6f8fb","redirect":"notes/2708. 一个小组的最大实力值【中等】/README"},"2709":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"250d970b-28f5-4c7f-ab65-83ad6b563e35","redirect":"notes/2709. 最大公约数遍历【困难】/README"},"2710":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a490594-3ed4-4731-bdde-7defffeae1ff","redirect":"notes/2710. 移除字符串中的尾随零【简单】/README"},"2711":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1a199256-e8b2-40f0-9fac-e615af7efa22","redirect":"notes/2711. 对角线上不同值的数量差【中等】/README"},"2712":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"03a5eb92-5ba8-4f82-9500-8605952f92f7","redirect":"notes/2712. 使所有字符相等的最小成本【中等】/README"},"2713":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ed0478f-17be-4c9d-b7a6-fa3533aed2f1","redirect":"notes/2713. 矩阵中严格递增的单元格数【困难】/README"},"2714":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8109d820-732d-47cf-b1a6-22e2820aa066","redirect":"notes/2714. 找到 K 次跨越的最短路径【困难】/README"},"2715":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5e3c73c-b1b2-4866-8342-55849071da10","redirect":"notes/2715. 执行可取消的延迟函数【简单】/README"},"2716":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"52b7f5e7-e3cd-4329-a95a-0d2999c57ff2","redirect":"notes/2716. 最小化字符串长度【简单】/README"},"2717":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df84d473-f235-4d18-b2f1-d1bdb801676e","redirect":"notes/2717. 半有序排列【简单】/README"},"2718":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ff395bfe-169f-4716-8236-e262fb3d2282","redirect":"notes/2718. 查询后矩阵的和【中等】/README"},"2719":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67c36b5f-28d4-4be0-bf1d-5aa7ca229e23","redirect":"notes/2719. 统计整数数目【困难】/README"},"2720":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4d417c7-1cbd-42a2-aa2b-b8f6daafd4ce","redirect":"notes/2720. 受欢迎度百分比【困难】/README"},"2721":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26b84ef9-951c-4694-85d7-21a8204410d8","redirect":"notes/2721. 并行执行异步函数【中等】/README"},"2722":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3026a431-ebe7-4206-a60e-00f5cf5fa564","redirect":"notes/2722. 根据 ID 合并两个数组【中等】/README"},"2723":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"932559d4-3a5c-4bd2-9ece-23620588db6f","redirect":"notes/2723. 两个 Promise 对象相加【简单】/README"},"2724":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12c79942-bcf3-4796-a775-16cd207c94d9","redirect":"notes/2724. 排序方式【简单】/README"},"2725":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c76ce74-c3a7-4c73-b855-74239ec3c499","redirect":"notes/2725. 间隔取消【简单】/README"},"2726":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4de65926-715e-45b4-b70b-21d13ec15ae3","redirect":"notes/2726. 使用方法链的计算器【简单】/README"},"2727":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"231c0368-0ff5-4d06-91fb-3db8bc93153f","redirect":"notes/2727. 判断对象是否为空【简单】/README"},"2728":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9eeb677-89d8-4c7f-a8bd-2657cb53832f","redirect":"notes/2728. 计算一个环形街道上的房屋数量【简单】/README"},"2729":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"76e5920e-bd03-4285-8f87-00100b34cb13","redirect":"notes/2729. 判断一个数是否迷人【简单】/README"},"2730":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30cc12ad-5d69-46b3-9c51-036d66b77632","redirect":"notes/2730. 找到最长的半重复子字符串【中等】/README"},"2731":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c6a8dd3-39ff-4989-a84b-d4476296cf94","redirect":"notes/2731. 移动机器人【中等】/README"},"2732":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"30397021-549f-4688-9da9-f87ca427ea92","redirect":"notes/2732. 找到矩阵中的好子集【困难】/README"},"2733":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"18d34e54-5f56-4b20-9485-00e5119039f0","redirect":"notes/2733. 既不是最小值也不是最大值【简单】/README"},"2734":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12fe81f4-9706-4967-8634-1969e1007b59","redirect":"notes/2734. 执行子串操作后的字典序最小字符串【中等】/README"},"2735":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53c83aa3-5d01-41ad-b3ef-38d398cf200b","redirect":"notes/2735. 收集巧克力【中等】/README"},"2736":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eeb30e92-5ca8-403e-96b3-4d6a81d7eafa","redirect":"notes/2736. 最大和查询【困难】/README"},"2737":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8bf589f0-592e-4781-8112-531e9946d750","redirect":"notes/2737. 找到最近的标记节点【中等】/README"},"2738":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3809ef60-8e46-4f40-8213-04e6c667e85b","redirect":"notes/2738. 统计文本中单词的出现次数【中等】/README"},"2739":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3df1cd44-b6b2-48c4-87c5-e305ef8cdec2","redirect":"notes/2739. 总行驶距离【简单】/README"},"2740":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c5de23c1-148b-4d72-962d-251966e274b5","redirect":"notes/2740. 找出分区值【中等】/README"},"2741":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"83578e67-3c35-4e97-8123-71395bae0477","redirect":"notes/2741. 特别的排列【中等】/README"},"2742":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5bf85f5d-119b-4d41-80d4-ac17351a0320","redirect":"notes/2742. 给墙壁刷油漆【困难】/README"},"2743":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89595a7d-71d6-4e4c-acff-2ab967e4b1df","redirect":"notes/2743. 计算没有重复字符的子字符串数量【中等】/README"},"2744":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"c4125ad4-9b6c-41b5-ab5e-c3a749e22695","redirect":"notes/2744. 最大字符串配对数目【简单】/README"},"2745":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24f00be8-96cb-45be-b8e2-95a43d4949b2","redirect":"notes/2745. 构造最长的新字符串【中等】/README"},"2746":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b03420c-1304-4f06-8d69-137369d43107","redirect":"notes/2746. 字符串连接删减字母【中等】/README"},"2747":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"379cb4eb-7095-46ac-94f0-8c4bf5ff816b","redirect":"notes/2747. 统计没有收到请求的服务器数目【中等】/README"},"2748":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c857cd5b-ca65-4d0a-9eec-47bc054f304f","redirect":"notes/2748. 美丽下标对的数目【简单】/README"},"2749":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f4257d5-f52d-42ca-8758-a70292b6b2b5","redirect":"notes/2749. 得到整数零需要执行的最少操作数【中等】/README"},"2750":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b226afd-b054-423a-a91f-2112469a7590","redirect":"notes/2750. 将数组划分成若干好子数组的方式【中等】/README"},"2751":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba332101-7fb6-4033-8f9f-103f3a09e6c8","redirect":"notes/2751. 机器人碰撞【困难】/README"},"2752":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"baa0c91a-c741-4ac2-ae27-fbdd45f3fbe5","redirect":"notes/2752. 在连续天数上进行了最多交易次数的顾客【困难】/README"},"2753":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23ccf1e2-13f7-40e4-8505-241262955e39","redirect":"notes/2753. 计算一个环形街道上的房屋数量 II【困难】/README"},"2754":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6fa98555-3ba4-4fd3-8a22-064a11a250fd","redirect":"notes/2754. 将函数绑定到上下文【中等】/README"},"2755":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5af9370-e351-47a4-a1ba-7024bf887b27","redirect":"notes/2755. 深度合并两个对象【中等】/README"},"2756":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"068f5517-4722-41ba-9ce4-f326ed931f6f","redirect":"notes/2756. 批处理查询【困难】/README"},"2757":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f18a05af-6266-4580-b62a-b9b6c8f290c7","redirect":"notes/2757. 生成循环数组的值【中等】/README"},"2758":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f419730d-601e-46e6-8894-99f2b49a2cb4","redirect":"notes/2758. 下一天【简单】/README"},"2759":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6fffd8f5-4b9a-4e85-bc42-15859443af59","redirect":"notes/2759. 将 JSON 字符串转换为对象【困难】/README"},"2760":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6327b4fb-7a47-47d8-9fb2-bd240da7d104","redirect":"notes/2760. 最长奇偶子数组【简单】/README"},"2761":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2dcf4db7-8d7d-4f11-84b8-b5aec6358c7a","redirect":"notes/2761. 和等于目标值的质数对【中等】/README"},"2762":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2463e97c-8904-437e-a1e8-2e9c1b9adf0e","redirect":"notes/2762. 不间断子数组【中等】/README"},"2763":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"28e42bb4-79b0-4976-b67d-490f3f989a61","redirect":"notes/2763. 所有子数组中不平衡数字之和【困难】/README"},"2764":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"713926be-08f9-4e6b-b45a-b32c69a889d8","redirect":"notes/2764. 数组是否表示某二叉树的前序遍历【中等】/README"},"2765":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bf6e8bd-ed12-4fee-bc83-8609f7f4a8be","redirect":"notes/2765. 最长交替子数组【简单】/README"},"2766":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fdd746c-7feb-4784-af92-c83b5ff75889","redirect":"notes/2766. 重新放置石块【中等】/README"},"2767":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"479ad857-f310-42cc-b823-490fe47087e5","redirect":"notes/2767. 将字符串分割为最少的美丽子字符串【中等】/README"},"2768":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9566ae37-a5ba-43be-ba6a-3be42223d048","redirect":"notes/2768. 黑格子的数目【中等】/README"},"2769":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdbe5876-9b17-4052-b7cc-caa11bad8bbe","redirect":"notes/2769. 找出最大的可达成数字【简单】/README"},"2770":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e1d4de9-9c0e-446a-84e1-3f9c8020abba","redirect":"notes/2770. 达到末尾下标所需的最大跳跃次数【中等】/README"},"2771":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df705ef4-95ac-464b-b441-4c388f3ff623","redirect":"notes/2771. 构造最长非递减子数组【中等】/README"},"2772":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0b128bb-d1e7-4bfd-b4a8-ed1d7ffa51b5","redirect":"notes/2772. 使数组中的所有元素都等于零【中等】/README"},"2773":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34c8e0ee-dd50-4a28-880e-924dc114d661","redirect":"notes/2773. 特殊二叉树的高度【中等】/README"},"2774":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"69923754-9a65-4716-9c5b-9fe74db393f1","redirect":"notes/2774. 数组的上界【简单】/README"},"2775":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f22ac64c-c162-44ba-a274-f8e771e52b4f","redirect":"notes/2775. 将 undefined 转为 null【中等】/README"},"2776":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c71ef871-75e7-42a2-9313-1f000f6c4243","redirect":"notes/2776. 转换回调函数为 Promise 函数【中等】/README"},"2777":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb2540eb-ff29-48ba-a53a-44a59ab2d56c","redirect":"notes/2777. 日期范围生成器【中等】/README"},"2778":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"108cf1ca-3eef-47fa-9bc6-2ba26b44c4dc","redirect":"notes/2778. 特殊元素平方和【简单】/README"},"2779":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"905cbddd-ad29-4139-8e25-c7e0f4892465","redirect":"notes/2779. 数组的最大美丽值【中等】/README"},"2780":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b5b9ab8-c33c-42ac-8abb-761ecc74e937","redirect":"notes/2780. 合法分割的最小下标【中等】/README"},"2781":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdad9e19-d76f-4521-bc61-52c9b118dc6a","redirect":"notes/2781. 最长合法子字符串的长度【困难】/README"},"2782":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fb1c9ccd-7e8c-45f5-aa74-79e215599ce3","redirect":"notes/2782. 唯一类别的数量【中等】/README"},"2783":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63321b3e-b617-49de-84f7-7b9860444305","redirect":"notes/2783. 航班入座率和等待名单分析【中等】/README"},"2784":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b0f1b05-c784-46df-8c47-06de2da2b73b","redirect":"notes/2784. 检查数组是否是好的【简单】/README"},"2785":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"150adc6e-a937-4e45-bd87-67eb71675333","redirect":"notes/2785. 将字符串中的元音字母排序【中等】/README"},"2786":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e0c1422-639d-4ff0-9138-e70bb86aab49","redirect":"notes/2786. 访问数组中的位置使分数最大【中等】/README"},"2787":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b7cf8815-e843-44b5-b199-6faa1f0fac1c","redirect":"notes/2787. 将一个数字表示成幂的和的方案数【中等】/README"},"2788":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f661aa45-82a5-4813-ae95-c8d77f1480b3","redirect":"notes/2788. 按分隔符拆分字符串【简单】/README"},"2789":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9fb8e50b-5726-4244-b484-35f846877c03","redirect":"notes/2789. 合并后数组中的最大元素【中等】/README"},"2790":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c21488bc-aa08-4cef-85a6-0c6e760c31ba","redirect":"notes/2790. 长度递增组的最大数目【困难】/README"},"2791":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d9b5b0bb-39a0-4a40-a1d6-133090bb32ab","redirect":"notes/2791. 树中可以形成回文的路径数【困难】/README"},"2792":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0fee1157-8e47-4eef-a915-5ab7b9657c49","redirect":"notes/2792. 计算足够大的节点数【困难】/README"},"2793":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b4eab22-b5ad-4a98-8427-12bef023b045","redirect":"notes/2793. 航班机票状态【困难】/README"},"2794":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef7b61e1-6a6a-41ea-ab1d-e91221af533b","redirect":"notes/2794. 从两个数组中创建对象【简单】/README"},"2795":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33d81469-ebb4-44d7-bda2-d62bc293bd2c","redirect":"notes/2795. 并行执行 Promise 以获取独有的结果【中等】/README"},"2796":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2c7c8f1-3558-4b94-9e5c-ff3c3a7bd4ba","redirect":"notes/2796. 重复字符串【简单】/README"},"2797":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d18d7790-3da5-4ac4-9d83-25b44e6c49ad","redirect":"notes/2797. 带有占位符的部分函数【简单】/README"},"2798":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa55b3f2-d088-40e8-bf34-415a268b14d9","redirect":"notes/2798. 满足目标工作时长的员工数目【简单】/README"},"2799":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f95b56ae-643d-4f44-b9e8-1de39faa4809","redirect":"notes/2799. 统计完全子数组的数目【中等】/README"},"2800":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae9c0489-9bf7-4021-8216-3e4335005ce1","redirect":"notes/2800. 包含三个字符串的最短字符串【中等】/README"},"2801":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"370cb8bf-e873-44a6-9b19-93901f7d4cdf","redirect":"notes/2801. 统计范围内的步进数字数目【困难】/README"},"2802":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b5098959-c586-4719-8655-61af7be06ede","redirect":"notes/2802. 找出第 K 个幸运数字【中等】/README"},"2803":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab2b6ba6-f513-479a-95a0-abe9e05f7341","redirect":"notes/2803. 阶乘生成器【简单】/README"},"2804":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96987c02-0d2b-4c56-959f-650136b173f2","redirect":"notes/2804. 数组原型的 forEach 方法【简单】/README"},"2805":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"44556ecd-b52a-4882-ab88-7d0b4fb55cd6","redirect":"notes/2805. 自定义间隔【中等】/README"},"2806":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d21b1ab0-1bb0-47b5-9dd3-2e821b87dfc4","redirect":"notes/2806. 取整购买后的账户余额【简单】/README"},"2807":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"44594af4-4205-4c0c-ae26-33c22a115560","redirect":"notes/2807. 在链表中插入最大公约数【中等】/README"},"2808":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61b64d0c-4265-4f64-a05b-ded5a0f42173","redirect":"notes/2808. 使循环数组所有元素相等的最少秒数【中等】/README"},"2809":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5769096-1092-4fb9-a1c6-23344c7d8316","redirect":"notes/2809. 使数组和小于等于 x 的最少时间【困难】/README"},"2810":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1505f6de-c653-4caa-9aaa-34205efa3e22","redirect":"notes/2810. 故障键盘【简单】/README"},"2811":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ac75bfee-23cd-4d45-a37c-f4a02cb14007","redirect":"notes/2811. 判断是否能拆分数组【中等】/README"},"2812":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2a9e524-fce3-4c86-9ace-14f1673ade4f","redirect":"notes/2812. 找出最安全路径【中等】/README"},"2813":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a750a0c4-9d60-4bbb-a8b5-d8c1f08b77a9","redirect":"notes/2813. 子序列最大优雅度【困难】/README"},"2814":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a74f710b-ef19-4005-9bf8-cdcd5a17d34b","redirect":"notes/2814. 避免淹死并到达目的地的最短时间【困难】/README"},"2815":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6eba251f-d997-4a6e-b7f7-cce7c2724fe1","redirect":"notes/2815. 数组中的最大数对和【简单】/README"},"2816":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3578488d-c97d-4894-b231-ddcb1d4332df","redirect":"notes/2816. 翻倍以链表形式表示的数字【中等】/README"},"2817":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ff12796-6be1-4988-acd8-83ae12dd8a05","redirect":"notes/2817. 限制条件下元素之间的最小绝对差【中等】/README"},"2818":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2729489-ac1f-47cf-bce9-a9d815f1ea3b","redirect":"notes/2818. 操作使得分最大【困难】/README"},"2819":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d38d737-7466-48a1-b850-4ac577ee733e","redirect":"notes/2819. 购买巧克力后的最小相对损失【困难】/README"},"2820":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ff3aa91-346f-4ea9-85cf-b6bae7853544","redirect":"notes/2820. 选举结果【中等】/README"},"2821":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9feb0cc-ec6b-4e11-b42d-44957ab7adc7","redirect":"notes/2821. 延迟每个 Promise 对象的解析【中等】/README"},"2822":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"337b20f7-d6df-4027-8898-a2b7960ef556","redirect":"notes/2822. 对象反转【简单】/README"},"2823":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c25f4f6-f15e-44ef-b78f-8ece5e37b554","redirect":"notes/2823. 深度对象筛选【中等】/README"},"2824":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53623515-fab9-4953-bce7-1ef71ba5e179","redirect":"notes/2824. 统计和小于目标的下标对数目【简单】/README"},"2825":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ba3c71a-d77a-4fd8-a648-0dc53cddee0c","redirect":"notes/2825. 循环增长使字符串子序列等于另一个字符串【中等】/README"},"2826":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36d54eb8-451c-4149-abac-1a015f90d07c","redirect":"notes/2826. 将三个组排序【中等】/README"},"2827":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8016a680-8842-47af-a9bb-d5365a89aeb2","redirect":"notes/2827. 范围中美丽整数的数目【困难】/README"},"2828":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15467200-d484-44ce-9c9a-add6f6b13459","redirect":"notes/2828. 判别首字母缩略词【简单】/README"},"2829":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d913c3c2-b852-4db7-bb09-f8544c029076","redirect":"notes/2829. k-avoiding 数组的最小总和【中等】/README"},"2830":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d20e4174-1288-4d6f-8942-ed9b1be3324f","redirect":"notes/2830. 销售利润最大化【中等】/README"},"2831":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0da12f17-13af-4a61-b1cd-7f469d4935db","redirect":"notes/2831. 找出最长等值子数组【中等】/README"},"2832":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a149083d-cab2-4305-9caf-1485d408d5c7","redirect":"notes/2832. 每个元素为最大值的最大范围【中等】/README"},"2833":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3ccbe78-a9a6-4268-a76e-141fbf9c0adf","redirect":"notes/2833. 距离原点最远的点【简单】/README"},"2834":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7f39a76-a15d-4a5b-b7d6-863d8fd6d963","redirect":"notes/2834. 找出美丽数组的最小和【中等】/README"},"2835":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15e40224-b1c3-4e1f-9a10-d9d689042bdf","redirect":"notes/2835. 使子序列的和等于目标的最少操作次数【困难】/README"},"2836":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8781124-72d8-4f4c-8c59-15067d754427","redirect":"notes/2836. 在传球游戏中最大化函数值【困难】/README"},"2837":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"229e5803-44a1-4f6a-9e88-c68659a16143","redirect":"notes/2837. 总旅行距离【简单】/README"},"2838":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b030db6c-5d95-4ef0-95e9-d2955174b25e","redirect":"notes/2838. 英雄可以获得的最大金币数【中等】/README"},"2839":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9c47924-7967-417c-a41a-8f0c8a356cd3","redirect":"notes/2839. 判断通过操作能否让字符串相等 I【简单】/README"},"2840":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4051d92c-3408-4ea2-a594-ca3be273bea9","redirect":"notes/2840. 判断通过操作能否让字符串相等 II【中等】/README"},"2841":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e7a8065-3ebe-4e7e-9470-c9ed6e994fe7","redirect":"notes/2841. 几乎唯一子数组的最大和【中等】/README"},"2842":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a333ca6-844f-4077-b457-1b1e1f12d33e","redirect":"notes/2842. 统计一个字符串的 k 子序列美丽值最大的数目【困难】/README"},"2843":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c7dfc8f5-5a71-4c24-a094-a73a0600ebb4","redirect":"notes/2843. 统计对称整数的数目【简单】/README"},"2844":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4b4fdfe-6bcb-417e-acfa-5e1e1f86f97e","redirect":"notes/2844. 生成特殊数字的最少操作【中等】/README"},"2845":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3550a6d0-540a-4453-bf26-60b1c75ece7f","redirect":"notes/2845. 统计趣味子数组的数目【中等】/README"},"2846":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ea9a7d3-59cc-4e76-b80c-8e27eb793498","redirect":"notes/2846. 边权重均等查询【困难】/README"},"2847":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ce1a582c-4d40-480d-bca3-093eb5293a1d","redirect":"notes/2847. 给定数字乘积的最小数字【中等】/README"},"2848":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d77ee17d-afed-482c-a783-e388b08853c5","redirect":"notes/2848. 与车相交的点【简单】/README"},"2849":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ab600be-314c-499b-93ec-a3cc9c8d5cb0","redirect":"notes/2849. 判断能否在给定时间到达单元格【中等】/README"},"2850":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8e7de83-c742-4829-a125-79349fac6cd3","redirect":"notes/2850. 将石头分散到网格图的最少移动次数【中等】/README"},"2851":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e09e1406-c5c9-4407-a1d7-e949ec7c3f42","redirect":"notes/2851. 字符串转换【困难】/README"},"2852":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c718e65e-5c9b-47df-9b5a-32cc3a2c0f14","redirect":"notes/2852. 所有单元格的远离程度之和【中等】/README"},"2853":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"858302e3-bec9-4fe7-bde6-5a25eef75fdb","redirect":"notes/2853. 最高薪水差异【简单】/README"},"2854":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1844dccc-6ca6-4120-9060-37311d26e370","redirect":"notes/2854. 滚动平均步数【中等】/README"},"2855":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cbe6bd90-611b-421a-ad92-0889e5eda569","redirect":"notes/2855. 使数组成为递增数组的最少右移次数【简单】/README"},"2856":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f5192bf-cec5-4086-abaf-980e0074d8c5","redirect":"notes/2856. 删除数对后的最小数组长度【中等】/README"},"2857":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93fbee1b-d99e-4cab-8f5a-efd58975fa57","redirect":"notes/2857. 统计距离为 k 的点对【中等】/README"},"2858":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0eabb0b-6da5-4764-83c7-6445f41546a1","redirect":"notes/2858. 可以到达每一个节点的最少边反转次数【困难】/README"},"2859":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e28b75d1-922e-4a20-bba7-33f2cd75b7e5","redirect":"notes/2859. 计算 K 置位下标对应元素的和【简单】/README"},"2860":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a498b810-99ce-4d87-b6e3-e6c190313c1f","redirect":"notes/2860. 让所有学生保持开心的分组方法数【中等】/README"},"2861":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5d7c3eb-2927-4950-9ffd-52a06905eb3b","redirect":"notes/2861. 最大合金数【中等】/README"},"2862":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"35406524-2c19-4dc2-bce0-d32d7b8c9f89","redirect":"notes/2862. 完全子集的最大元素和【困难】/README"},"2863":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4af4b650-49b4-4fef-9590-321cf9f1bf18","redirect":"notes/2863. 最长半递减子数组的长度【中等】/README"},"2864":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a0650722-8b04-469a-b404-f041a34be6ec","redirect":"notes/2864. 最大二进制奇数【简单】/README"},"2865":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"efaf5ea1-a2c3-4cba-8f2f-3c41fd7a2319","redirect":"notes/2865. 美丽塔 I【中等】/README"},"2866":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c342dcf2-de8e-45af-bf5a-55f753542745","redirect":"notes/2866. 美丽塔 II【中等】/README"},"2867":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b7ec1be-8bab-4375-8b08-9ca40c7e26af","redirect":"notes/2867. 统计树中的合法路径数目【困难】/README"},"2868":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a6bedbb-df2b-4772-9242-65fc0e22eb35","redirect":"notes/2868. 单词游戏【困难】/README"},"2869":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3abe02f-16c5-4887-8141-7a8097499a9d","redirect":"notes/2869. 收集元素的最少操作次数【简单】/README"},"2870":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"abae263c-88f6-43a9-a5a4-255b959faf1b","redirect":"notes/2870. 使数组为空的最少操作次数【中等】/README"},"2871":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"208bec2a-82a1-48cb-a075-e8fb3327cb8f","redirect":"notes/2871. 将数组分割成最多数目的子数组【中等】/README"},"2872":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07857d4b-5ec6-4b09-a2f2-61cea9a1d382","redirect":"notes/2872. 可以被 K 整除连通块的最大数目【困难】/README"},"2873":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb0acf82-0868-40f5-98ff-ec561a540125","redirect":"notes/2873. 有序三元组中的最大值 I【简单】/README"},"2874":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"919ca4a8-7d69-4aa5-a391-3c300cc75053","redirect":"notes/2874. 有序三元组中的最大值 II【中等】/README"},"2875":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9fbaa209-6044-4bd3-a729-e7abb37c476f","redirect":"notes/2875. 无限数组的最短子数组【中等】/README"},"2876":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d130e066-d878-4893-a494-3add2946a198","redirect":"notes/2876. 有向图访问计数【困难】/README"},"2877":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df1f947c-d476-40c6-8b04-2acbb7b2f1db","redirect":"notes/2877. 从表中创建 DataFrame【简单】/README"},"2878":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25e7eb50-fa43-4657-88b0-624aedc30189","redirect":"notes/2878. 获取 DataFrame 的大小【简单】/README"},"2879":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"285742d7-98c9-42a7-b981-d8329c9f8a14","redirect":"notes/2879. 显示前三行【简单】/README"},"2880":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"318c4d50-deed-4841-8d6a-10edd3cb0352","redirect":"notes/2880. 数据选取【简单】/README"},"2881":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4bcda629-a27e-44bf-8b74-7c681149702d","redirect":"notes/2881. 创建新列【简单】/README"},"2882":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9fac1ba6-4c59-4c15-a612-ebdc950f73f5","redirect":"notes/2882. 删去重复的行【简单】/README"},"2883":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"74d7f430-4abd-4d8a-9d6b-4f803d53c86f","redirect":"notes/2883. 删去丢失的数据【简单】/README"},"2884":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8697072-9c5a-48f1-82da-0bb81e31054c","redirect":"notes/2884. 修改列【简单】/README"},"2885":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3cd7812c-545a-4d1c-bff0-82de20625e80","redirect":"notes/2885. 重命名列【简单】/README"},"2886":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ed1129f-4d7d-4c82-a290-9d97ce1a7cf4","redirect":"notes/2886. 改变数据类型【简单】/README"},"2887":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6653dcc8-20b3-461d-8cac-8f3e3cf6fd57","redirect":"notes/2887. 填充缺失值【简单】/README"},"2888":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e8688a0-6750-4c35-98de-653f21898cec","redirect":"notes/2888. 重塑数据：连结【简单】/README"},"2889":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf958561-b931-4a5a-a72b-1e281d8fe27e","redirect":"notes/2889. 数据重塑：透视【简单】/README"},"2890":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4b9f98a-9603-4f0f-b339-daf3c327a349","redirect":"notes/2890. 重塑数据：融合【简单】/README"},"2891":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8538e568-dd4d-459a-8303-45b43622c8ec","redirect":"notes/2891. 方法链【简单】/README"},"2892":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"030a70bf-598c-4e94-b6dd-67e3b378b14f","redirect":"notes/2892. 将相邻元素相乘后得到最小化数组【中等】/README"},"2893":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"daca7e68-f7b4-4329-abde-16d14d380a98","redirect":"notes/2893. 计算每个区间内的订单【中等】/README"},"2894":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53cfa746-0235-41ed-a5dd-943385b262dd","redirect":"notes/2894. 分类求和并作差【简单】/README"},"2895":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba50a5ab-c6ba-4fef-ad42-9c2bd419c5a0","redirect":"notes/2895. 最小处理时间【中等】/README"},"2896":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec54aa15-eba5-4dc3-ba47-086a8c620e25","redirect":"notes/2896. 执行操作使两个字符串相等【中等】/README"},"2897":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1851cce6-bb1c-4144-a918-d3febf3d84b1","redirect":"notes/2897. 对数组执行操作使平方和最大【困难】/README"},"2898":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38df77ff-1d06-48b1-91de-836971788e70","redirect":"notes/2898. 最大线性股票得分【中等】/README"},"2899":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f98de87d-f7a8-4a6f-a6c1-aec96c0cd4fc","redirect":"notes/2899. 上一个遍历的整数【简单】/README"},"2900":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94f9eb71-791f-4c49-a68a-c4ef53f7b5ea","redirect":"notes/2900. 最长相邻不相等子序列 I【简单】/README"},"2901":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf89440b-0c73-4d43-8ef4-3dba6bd01c8d","redirect":"notes/2901. 最长相邻不相等子序列 II【中等】/README"},"2902":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"356baaff-d80d-4cd1-b7b6-4923eaa42f8c","redirect":"notes/2902. 和带限制的子多重集合的数目【困难】/README"},"2903":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3f7bc59-c3a2-4616-b278-85683728cf3d","redirect":"notes/2903. 找出满足差值条件的下标 I【简单】/README"},"2904":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"84385909-0be2-4252-920d-668768640927","redirect":"notes/2904. 最短且字典序最小的美丽子字符串【中等】/README"},"2905":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"525fff94-d67c-4810-b958-e1bedb73500e","redirect":"notes/2905. 找出满足差值条件的下标 II【中等】/README"},"2906":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"963b891b-dd8b-47ce-b1ee-78272e36aeeb","redirect":"notes/2906. 构造乘积矩阵【中等】/README"},"2907":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9b432d8-2562-41c1-a24e-273ce907af12","redirect":"notes/2907. 价格递增的最大利润三元组 I【中等】/README"},"2908":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b733729-38e9-4cf1-8211-9c5463072a31","redirect":"notes/2908. 元素和最小的山形三元组 I【简单】/README"},"2909":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8139dc7f-2d43-42c6-b69a-7ee1a4cda0b0","redirect":"notes/2909. 元素和最小的山形三元组 II【中等】/README"},"2910":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b5b88d6d-7436-41cf-abf1-5ba3fc975a35","redirect":"notes/2910. 合法分组的最少组数【中等】/README"},"2911":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85137256-be4c-443c-83e4-15c81684f2d3","redirect":"notes/2911. 得到 K 个半回文串的最少修改次数【困难】/README"},"2912":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"abff311c-37fc-4d55-988b-468ec96c40dd","redirect":"notes/2912. 在网格上移动到目的地的方法数【困难】/README"},"2913":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19eca8ae-7884-462c-8d10-89813f056738","redirect":"notes/2913. 子数组不同元素数目的平方和 I【简单】/README"},"2914":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b69a4af-750c-48e5-93c2-3e9664e6431a","redirect":"notes/2914. 使二进制字符串变美丽的最少修改次数【中等】/README"},"2915":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7125efc2-2c29-40f3-baee-370d7d475e7a","redirect":"notes/2915. 和为目标值的最长子序列的长度【中等】/README"},"2916":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"509483da-6d5d-4d88-afd3-c0cf63f85ec3","redirect":"notes/2916. 子数组不同元素数目的平方和 II【困难】/README"},"2917":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4127d92a-d520-43a8-942c-62a34bb88c78","redirect":"notes/2917. 找出数组中的 K-or 值【简单】/README"},"2918":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1950af55-34a3-40ce-809e-f5cfbb84756b","redirect":"notes/2918. 数组的最小相等和【中等】/README"},"2919":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"449e4396-4aa9-4792-a3d3-69e45fad81dd","redirect":"notes/2919. 使数组变美的最小增量运算数【中等】/README"},"2920":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65f25419-1e01-4352-8693-d8a65b74f23c","redirect":"notes/2920. 收集所有金币可获得的最大积分【困难】/README"},"2921":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a511a7dd-f150-4edc-89ef-66e5f58ca6c2","redirect":"notes/2921. 价格递增的最大利润三元组 II【困难】/README"},"2922":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8c2914b-0a84-4353-90fb-dc3c7ba43bcb","redirect":"notes/2922. 市场分析 III【中等】/README"},"2923":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"150d665b-6b3c-4668-944a-8d212beeca93","redirect":"notes/2923. 找到冠军 I【简单】/README"},"2924":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"600e2e6b-4331-4cac-8522-199eaa016b24","redirect":"notes/2924. 找到冠军 II【中等】/README"},"2925":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98bafcea-4c32-4bef-8763-eb02251e8212","redirect":"notes/2925. 在树上执行操作以后得到的最大分数【中等】/README"},"2926":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"752ce29e-fd46-46ed-b97f-208670639c04","redirect":"notes/2926. 平衡子序列的最大和【困难】/README"},"2927":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c35553be-414a-47ac-bb78-9ca45b4946ba","redirect":"notes/2927. 给小朋友们分糖果 III【困难】/README"},"2928":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3c761e5-cf29-4e3d-a22d-0ebc34d9ee55","redirect":"notes/2928. 给小朋友们分糖果 I【简单】/README"},"2929":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7930374d-4024-4bad-952e-7a96a368980f","redirect":"notes/2929. 给小朋友们分糖果 II【中等】/README"},"2930":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"834745ff-3082-4b27-8fc0-0e15be9f9e94","redirect":"notes/2930. 重新排列后包含指定子字符串的字符串数目【中等】/README"},"2931":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fe441c88-38db-4555-afb0-5cbe127d9318","redirect":"notes/2931. 购买物品的最大开销【困难】/README"},"2932":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef932de2-c4f7-4710-927c-0a69800d2456","redirect":"notes/2932. 找出强数对的最大异或值 I【简单】/README"},"2933":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f88d0058-6617-4b13-8b51-31bbdd0795a7","redirect":"notes/2933. 高访问员工【中等】/README"},"2934":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"488c7107-0113-4aa4-b77a-35efd91ff9aa","redirect":"notes/2934. 最大化数组末位元素的最少操作次数【中等】/README"},"2935":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b49948d3-8792-44eb-b127-b0a723625a53","redirect":"notes/2935. 找出强数对的最大异或值 II【困难】/README"},"2936":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"941c7709-69b2-43cd-ad8d-099b24c2ab37","redirect":"notes/2936. 包含相等值数字块的数量【中等】/README"},"2937":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6917726a-28f8-47fe-9ae5-503cb5204865","redirect":"notes/2937. 使三个字符串相等【简单】/README"},"2938":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8ed07aa-12ed-45e7-bd5a-aea5e05d7925","redirect":"notes/2938. 区分黑球与白球【中等】/README"},"2939":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3dde81e-23e2-47b5-baf1-5869b1b2b26e","redirect":"notes/2939. 最大异或乘积【中等】/README"},"2940":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"babb6a7e-3b13-4c02-be4e-19ce944c3e15","redirect":"notes/2940. 找到 Alice 和 Bob 可以相遇的建筑【困难】/README"},"2941":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f65a7f5c-805e-4d50-b4b5-7b50af8b9cb2","redirect":"notes/2941. 子数组的最大 GCD-Sum【困难】/README"},"2942":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"466fdc75-f237-47ee-913c-bd4aed3910ba","redirect":"notes/2942. 查找包含给定字符的单词【简单】/README"},"2943":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8303cbe-9aad-466b-afce-4c93d86cb1be","redirect":"notes/2943. 最大化网格图中正方形空洞的面积【中等】/README"},"2944":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ade9d0b-6615-404d-bcd2-d89aae441182","redirect":"notes/2944. 购买水果需要的最少金币数【中等】/README"},"2945":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d37d4619-6cdf-4e80-9706-c03189d41844","redirect":"notes/2945. 找到最大非递减数组的长度【困难】/README"},"2946":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d30c0054-d14d-410b-ab9a-b074e81f06af","redirect":"notes/2946. 循环移位后的矩阵相似检查【简单】/README"},"2947":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34fc800b-f8ef-4fb3-b748-a7b437fc000f","redirect":"notes/2947. 统计美丽子字符串 I【中等】/README"},"2948":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cbe0cac2-4bc7-4ada-a619-141a0b3b3e1f","redirect":"notes/2948. 交换得到字典序最小的数组【中等】/README"},"2949":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ad5e75d-c77a-4851-8831-3ff206143b88","redirect":"notes/2949. 统计美丽子字符串 II【困难】/README"},"2950":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"777b135f-415a-41e5-aecf-3732ab3c40e9","redirect":"notes/2950. 可整除子串的数量【中等】/README"},"2951":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1bdaf1c6-7be2-4318-9da8-e5c0866e8997","redirect":"notes/2951. 找出峰值【简单】/README"},"2952":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b69f8ae8-60de-4473-b960-8faf6522e3a0","redirect":"notes/2952. 需要添加的硬币的最小数量【中等】/README"},"2953":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99b342b3-cf2a-440b-bd70-7630bbf7b205","redirect":"notes/2953. 统计完全子字符串【困难】/README"},"2954":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2a3c8ee-e113-48de-b0c6-93d0dc180f1f","redirect":"notes/2954. 统计感冒序列的数目【困难】/README"},"2955":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f30b5c60-3027-49c4-964e-ea199e85efdd","redirect":"notes/2955. 同端子串的数量【中等】/README"},"2956":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93d0611a-b1b7-4352-9156-8a0ccb2df7ea","redirect":"notes/2956. 找到两个数组中的公共元素【简单】/README"},"2957":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"403c089a-a944-4c8c-98df-38b485653a22","redirect":"notes/2957. 消除相邻近似相等字符【中等】/README"},"2958":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d45f67a3-4ba6-48bd-a6ec-b7a0c09fd29f","redirect":"notes/2958. 最多 K 个重复元素的最长子数组【中等】/README"},"2959":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e05c29c-fe67-4a33-9481-8a70828c9925","redirect":"notes/2959. 关闭分部的可行集合数目【困难】/README"},"2960":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c2fd095-6ec3-42b8-8165-a2bee4729087","redirect":"notes/2960. 统计已测试设备【简单】/README"},"2961":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f61fa0c-1512-42c8-904c-117ef7a3b419","redirect":"notes/2961. 双模幂运算【中等】/README"},"2962":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92aef2ad-d9d7-4c7e-a019-221158e3dd0e","redirect":"notes/2962. 统计最大元素出现至少 K 次的子数组【中等】/README"},"2963":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc50b058-296f-4534-84ff-a273f35e89c1","redirect":"notes/2963. 统计好分割方案的数目【困难】/README"},"2964":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c8279f1-b7b7-4003-95b5-e1f520a0e074","redirect":"notes/2964. 可被整除的三元组数量【中等】/README"},"2965":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56223e37-f21c-40c9-af2f-351fbb67f2f0","redirect":"notes/2965. 找出缺失和重复的数字【简单】/README"},"2966":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6683d730-67dd-4902-a89d-2840417416eb","redirect":"notes/2966. 划分数组并满足最大差限制【中等】/README"},"2967":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a283921c-2799-4994-a263-b523b872b595","redirect":"notes/2967. 使数组成为等数数组的最小代价【中等】/README"},"2968":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0697fffa-eb8d-4a1b-8008-4e16658a3991","redirect":"notes/2968. 执行操作使频率分数最大【困难】/README"},"2969":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"538e72c3-3474-4ceb-8366-bfd6c67b8149","redirect":"notes/2969. 购买水果需要的最少金币数 II【困难】/README"},"2970":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c3eb944c-8997-4f71-9475-f4057b9fca87","redirect":"notes/2970. 统计移除递增子数组的数目 I【简单】/README"},"2971":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fb2535c0-815b-4399-b0a8-56487172867c","redirect":"notes/2971. 找到最大周长的多边形【中等】/README"},"2972":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb7af0e6-6a12-4cbe-b7c9-9caa24740035","redirect":"notes/2972. 统计移除递增子数组的数目 II【困难】/README"},"2973":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ff0e73a1-0c46-44b6-a12f-4965ef33c6a1","redirect":"notes/2973. 树中每个节点放置的金币数目【困难】/README"},"2974":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d8c736f-7cb3-4b55-93b2-5bacb2492f8d","redirect":"notes/2974. 最小数字游戏【简单】/README"},"2975":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e98877c-60da-4203-9af1-0c5f71b5b28e","redirect":"notes/2975. 移除栅栏得到的正方形田地的最大面积【中等】/README"},"2976":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a5aebfb-cd36-4bd1-ae85-84bac857a91c","redirect":"notes/2976. 转换字符串的最小成本 I【中等】/README"},"2977":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f37848ed-b77b-456e-96ea-7b3b8224bd83","redirect":"notes/2977. 转换字符串的最小成本 II【困难】/README"},"2978":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a6798f2-5342-4240-88d9-c6e5ed2a0265","redirect":"notes/2978. 对称坐标【中等】/README"},"2979":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fd6ae62-3635-4e66-8f83-3ee4b8c44f3c","redirect":"notes/2979. 最贵的无法购买的商品【中等】/README"},"2980":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b951977-c8be-4d7f-a77e-ea92e4f3dad7","redirect":"notes/2980. 检查按位或是否存在尾随零【简单】/README"},"2981":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ccc4dda-8dc4-49d9-a38c-d85371cd221f","redirect":"notes/2981. 找出出现至少三次的最长特殊子字符串 I【中等】/README"},"2982":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6b28d19-ab56-4e0a-b68e-c38b1b2dd783","redirect":"notes/2982. 找出出现至少三次的最长特殊子字符串 II【中等】/README"},"2983":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62e1e6a0-5aa4-43e6-9339-809f97bc00a1","redirect":"notes/2983. 回文串重新排列查询【困难】/README"},"2984":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2c468e7-c699-49fa-bf44-d67b0aaa7d16","redirect":"notes/2984. 找到每座城市的高峰通话时间【中等】/README"},"2985":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e38c1ca0-1181-43c8-93ae-bbf5f847746b","redirect":"notes/2985. 计算订单平均商品数量【简单】/README"},"2986":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37b7a006-b349-4f46-8c7b-2868307a3ae2","redirect":"notes/2986. 找到第三笔交易【中等】/README"},"2987":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26cf4be6-9e79-44b2-b20d-149a480baf8e","redirect":"notes/2987. 寻找房价最贵的城市【简单】/README"},"2988":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5a6083b-fa26-4392-be92-c4542ae423b4","redirect":"notes/2988. 最大部门的经理【中等】/README"},"2989":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e28d2ff5-b49a-4a4c-aa82-480c97455288","redirect":"notes/2989. 班级表现【中等】/README"},"2990":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96b72226-6f9e-4b34-8bea-fb0686a4d870","redirect":"notes/2990. 贷款类型【简单】/README"},"2991":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f379758-52c5-4ed1-a9fe-f269417fa3ce","redirect":"notes/2991. 最好的三家酒庄【困难】/README"},"2992":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"462ccad5-adac-4212-9357-ed5f5602f347","redirect":"notes/2992. 自整除排列的数量【中等】/README"},"2993":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a625c4e-8783-4fc6-9691-be8a80654b66","redirect":"notes/2993. 发生在周五的交易 I【中等】/README"},"2994":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0afee9cf-43a2-4651-889e-09258bf6de57","redirect":"notes/2994. 发生在周五的交易 II【困难】/README"},"2995":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"707e9bf7-8856-4c26-bd16-5c9d78473176","redirect":"notes/2995. 观众变主播【困难】/README"},"2996":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1b2b292-f789-49e9-8b7f-fdc900517f0b","redirect":"notes/2996. 大于等于顺序前缀和的最小缺失整数【简单】/README"},"2997":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c391943-3396-4da7-b562-1c7c5b24df69","redirect":"notes/2997. 使数组异或和等于 K 的最少操作次数【中等】/README"},"2998":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de243ffc-c928-4ec1-af4d-2976ec6413da","redirect":"notes/2998. 使 X 和 Y 相等的最少操作次数【中等】/README"},"2999":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"895c9e3f-cdfb-4049-9a9e-c31fede1ce75","redirect":"notes/2999. 统计强大整数的数目【困难】/README"},"3000":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c199cb1-7e2b-4244-b571-2e6a0fcfdeeb","redirect":"notes/3000. 对角线最长的矩形的面积【简单】/README"},"3001":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"43927fc4-2e1d-452c-b3a0-2bf82de07ebc","redirect":"notes/3001. 捕获黑皇后需要的最少移动次数【中等】/README"},"3002":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e0d6bd4-401f-4101-8299-aa142b5c7ddf","redirect":"notes/3002. 移除后集合的最多元素数【中等】/README"},"3003":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ced7d5f-2172-4a50-a4ee-8e1b619f8320","redirect":"notes/3003. 执行操作后的最大分割数量【困难】/README"},"3004":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"accfbba3-0dff-4570-810b-8f0a97e2c920","redirect":"notes/3004. 相同颜色的最大子树【中等】/README"},"3005":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c20c3bb-18ab-48c1-b783-16190d06bfc1","redirect":"notes/3005. 最大频率元素计数【简单】/README"},"3006":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f83d0be-5cdb-4be0-a112-7ad2558db912","redirect":"notes/3006. 找出数组中的美丽下标 I【中等】/README"},"3007":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d69f9002-ea43-4b24-9751-84103c14cfe6","redirect":"notes/3007. 价值和小于等于 K 的最大数字【中等】/README"},"3008":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc782c69-3b66-4bd8-ba21-17c9962a13b0","redirect":"notes/3008. 找出数组中的美丽下标 II【困难】/README"},"3009":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf360634-030e-466d-a27a-1f3b306735d2","redirect":"notes/3009. 折线图上的最大交点数量【困难】/README"},"3010":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6264d1dc-7abc-4904-b14a-e731a720ca65","redirect":"notes/3010. 将数组分成最小总代价的子数组 I【简单】/README"},"3011":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3229aec-ff78-4fa0-8703-14abbd4ede2b","redirect":"notes/3011. 判断一个数组是否可以变为有序【中等】/README"},"3012":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f71552d1-d013-4be7-a719-9fcbf594f2ac","redirect":"notes/3012. 通过操作使数组长度最小【中等】/README"},"3013":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3af35fe7-adec-481c-950f-c081235f18ff","redirect":"notes/3013. 将数组分成最小总代价的子数组 II【困难】/README"},"3014":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"edacc13f-0e2c-41f5-ae57-aeee7249379a","redirect":"notes/3014. 输入单词需要的最少按键次数 I【简单】/README"},"3015":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab425813-d50d-4e81-a3ca-c6d2e66f0622","redirect":"notes/3015. 按距离统计房屋对数目 I【中等】/README"},"3016":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"04c21a27-82b6-41c2-aed1-1b9ebcd30d52","redirect":"notes/3016. 输入单词需要的最少按键次数 II【中等】/README"},"3017":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21f87314-c8af-4868-92ff-3049d0cc0c05","redirect":"notes/3017. 按距离统计房屋对数目 II【困难】/README"},"3018":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e679f0e-eede-4031-a434-c39faaee95f5","redirect":"notes/3018. 可处理的最大删除操作数 I【困难】/README"},"3019":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"464db4ec-ea19-4688-ae42-f9b1bda0d4e5","redirect":"notes/3019. 按键变更的次数【简单】/README"},"3020":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b9ebb76-d898-4a71-aeb9-405e903fa2a8","redirect":"notes/3020. 子集中元素的最大数量【中等】/README"},"3021":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a9ed6c1-7b43-46eb-a156-75f686358082","redirect":"notes/3021. Alice 和 Bob 玩鲜花游戏【中等】/README"},"3022":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c1a6c57-e41d-49f3-a1e2-82f353810f41","redirect":"notes/3022. 给定操作次数内使剩余元素的或值最小【困难】/README"},"3023":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66b8151e-d34e-402a-9e6b-2b5c12bd6178","redirect":"notes/3023. 在无限流中寻找模式 I【中等】/README"},"3024":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"40938197-8011-46d6-aca5-bba162fff04b","redirect":"notes/3024. 三角形类型【简单】/README"},"3025":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0b94c2da-77df-4362-befb-421333c4c5f8","redirect":"notes/3025. 人员站位的方案数 I【中等】/README"},"3026":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bf6a0a0-7788-4f3f-b59a-716c11a0c73e","redirect":"notes/3026. 最大好子数组和【中等】/README"},"3027":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3291e11-ad73-496e-b8c5-a5646a1b7aeb","redirect":"notes/3027. 人员站位的方案数 II【困难】/README"},"3028":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e0f7868-8148-40be-9419-2a3bff0210a7","redirect":"notes/3028. 边界上的蚂蚁【简单】/README"},"3029":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2f575a9-a717-429c-a9ad-23e0e9923b5e","redirect":"notes/3029. 将单词恢复初始状态所需的最短时间 I【中等】/README"},"3030":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f2bc1b18-eb8a-4282-b318-579ff9184e8e","redirect":"notes/3030. 找出网格的区域平均强度【中等】/README"},"3031":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4790bb6-35c5-4eb6-bd62-85b270026f01","redirect":"notes/3031. 将单词恢复初始状态所需的最短时间 II【困难】/README"},"3032":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aec633b6-aa5f-4cfc-b8d1-b38a8e74c205","redirect":"notes/3032. 统计各位数字都不同的数字个数 II【简单】/README"},"3033":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a34e36a5-667b-4587-a919-52ac44d3da1b","redirect":"notes/3033. 修改矩阵【简单】/README"},"3034":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f3130c7-618f-431f-b334-062ec5132c41","redirect":"notes/3034. 匹配模式数组的子数组数目 I【中等】/README"},"3035":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8888a802-5c6a-4414-ba95-f43386c55b6f","redirect":"notes/3035. 回文字符串的最大数量【中等】/README"},"3036":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd7deebd-6f62-4ca8-adc6-aceb1728c789","redirect":"notes/3036. 匹配模式数组的子数组数目 II【困难】/README"},"3037":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e8d4765-8efb-49d6-9c0e-99a0ea2d7896","redirect":"notes/3037. 在无限流中寻找模式 II【困难】/README"},"3038":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5aa8e477-ad5e-48ef-acc5-6242f1dd862a","redirect":"notes/3038. 相同分数的最大操作数目 I【简单】/README"},"3039":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"471947a8-29dc-4d6e-bb54-d5435ae80fd6","redirect":"notes/3039. 进行操作使字符串为空【中等】/README"},"3040":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98d97f8c-67ca-4e70-955c-2b2a54ac42f8","redirect":"notes/3040. 相同分数的最大操作数目 II【中等】/README"},"3041":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee2009e7-d6ae-4c2e-924c-3ecf1cf2136f","redirect":"notes/3041. 修改数组后最大化数组中的连续元素数目【困难】/README"},"3042":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eda3de3c-91aa-4813-8915-cff8cd5d0355","redirect":"notes/3042. 统计前后缀下标对 I【简单】/README"},"3043":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a6b12f8-4aba-4edb-a836-d7230f176bb7","redirect":"notes/3043. 最长公共前缀的长度【中等】/README"},"3044":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"781bf336-f87a-444f-b2e7-094bb143a22f","redirect":"notes/3044. 出现频率最高的质数【中等】/README"},"3045":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4d69a40-edf6-49a0-a14d-ce80e3a38345","redirect":"notes/3045. 统计前后缀下标对 II【困难】/README"},"3046":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa9f1256-227c-4aae-afe1-4fcfe82eb5a7","redirect":"notes/3046. 分割数组【简单】/README"},"3047":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db8469c8-7397-4f30-a46e-b540ce911c4c","redirect":"notes/3047. 求交集区域内的最大正方形面积【中等】/README"},"3048":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"29ef0f9f-ba13-46e6-bbd6-c801fcde07a4","redirect":"notes/3048. 标记所有下标的最早秒数 I【中等】/README"},"3049":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81a16b7f-bcb3-4ee2-b196-27f569f1d119","redirect":"notes/3049. 标记所有下标的最早秒数 II【困难】/README"},"3050":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b16280cb-fe7a-4881-9f85-48f4865e56ec","redirect":"notes/3050. 披萨配料成本分析【中等】/README"},"3051":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4ca2608-30ca-458e-a4f3-4356cdd9850a","redirect":"notes/3051. 寻找数据科学家职位的候选人【简单】/README"},"3052":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee796719-f85b-4b9b-a5a1-97cb3acc95d5","redirect":"notes/3052. 最大化商品【困难】/README"},"3053":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"28540792-ecf9-40fe-ac04-c9088852bbd0","redirect":"notes/3053. 根据长度分类三角形【简单】/README"},"3054":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67647352-8a58-4bf4-9a42-d3a7a680134f","redirect":"notes/3054. 二叉树节点【中等】/README"},"3055":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a943dbbc-ca18-488c-9534-a05818dca185","redirect":"notes/3055. 最高欺诈百分位数【中等】/README"},"3056":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"17d1982f-967f-45f3-9628-2dd0537d0285","redirect":"notes/3056. 快照分析【中等】/README"},"3057":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a523e4eb-a5bc-44b9-9af8-9aff41241003","redirect":"notes/3057. 员工项目分配【困难】/README"},"3058":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a5ff98a-295c-49a2-ac06-9cd13a8d7811","redirect":"notes/3058. 没有共同朋友的朋友【中等】/README"},"3059":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d98b651-8625-4d38-b73d-c92b21c794f9","redirect":"notes/3059. 找到所有不同的邮件域名【简单】/README"},"3060":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11450a90-c194-4770-b3c0-46f9043fea26","redirect":"notes/3060. 时间范围内的用户活动【困难】/README"},"3061":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5df4214e-b1e8-4d4f-93e2-98f2ea87cd8a","redirect":"notes/3061. 计算滞留雨水【困难】/README"},"3062":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"13e3e83c-3f63-4aff-be11-457b64177058","redirect":"notes/3062. 链表游戏的获胜者【简单】/README"},"3063":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f5c7a38-c19a-4866-b5ce-af3d897e8df2","redirect":"notes/3063. 链表频率【简单】/README"},"3064":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ff2f51f-3af0-4b89-869f-b8efb3adc1ab","redirect":"notes/3064. 使用按位查询猜测数字 I【中等】/README"},"3065":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea53578b-8ad2-400d-8276-761681b8537d","redirect":"notes/3065. 超过阈值的最少操作数 I【简单】/README"},"3066":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7632423f-edec-4c26-a70f-ba471790d3d5","redirect":"notes/3066. 超过阈值的最少操作数 II【中等】/README"},"3067":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d7d44d5-3249-473e-bfaa-2b52d8a80d81","redirect":"notes/3067. 在带权树网络中统计可连接服务器对数目【中等】/README"},"3068":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5d80994-dfb0-491b-a4a6-de5c47c97b2f","redirect":"notes/3068. 最大节点价值之和【困难】/README"},"3069":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8385109-5478-42c4-bcf1-1aeebdda40fc","redirect":"notes/3069. 将元素分配到两个数组中 I【简单】/README"},"3070":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4ff1d57-041b-41ce-bf95-cf7a0eb694cb","redirect":"notes/3070. 元素和小于等于 k 的子矩阵的数目【中等】/README"},"3071":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e475d6e-8c69-4db2-b6fe-e754260647a0","redirect":"notes/3071. 在矩阵上写出字母 Y 所需的最少操作次数【中等】/README"},"3072":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f8ce70e-ca31-4137-be83-ac53e75329a6","redirect":"notes/3072. 将元素分配到两个数组中 II【困难】/README"},"3073":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c5b6fa9a-27c9-48f6-a6fc-d1dbca049ebf","redirect":"notes/3073. 最大递增三元组【中等】/README"},"3074":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c07f5b2-175c-4f8b-bb89-4a032abe2f2a","redirect":"notes/3074. 重新分装苹果【简单】/README"},"3075":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c31ab17a-98b6-40ac-a9ec-c94ff36796c2","redirect":"notes/3075. 幸福值最大化的选择方案【中等】/README"},"3076":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4368905-b688-4846-8eb6-c35cc0044346","redirect":"notes/3076. 数组中的最短非公共子字符串【中等】/README"},"3077":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b7a332e-9db7-4fa5-816a-0e7efa4d880e","redirect":"notes/3077. K 个不相交子数组的最大能量值【困难】/README"},"3078":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec39d690-b29e-403d-bd60-30fa7df7c262","redirect":"notes/3078. 矩阵中的字母数字模式匹配 I【中等】/README"},"3079":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0bc851a-6971-460c-8138-2b0f8d43661c","redirect":"notes/3079. 求出加密整数的和【简单】/README"},"3080":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"982f9781-4678-40a5-8088-ab5346d60035","redirect":"notes/3080. 执行操作标记数组中的元素【中等】/README"},"3081":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01c8d037-efdd-4f99-bcf9-6621038b65df","redirect":"notes/3081. 替换字符串中的问号使分数最小【中等】/README"},"3082":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e368a09-4ad1-4a6c-b9cf-80fdb0f6811a","redirect":"notes/3082. 求出所有子序列的能量和【困难】/README"},"3083":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2cd1b9e6-f2db-4cf5-bbc8-21df5706f273","redirect":"notes/3083. 字符串及其反转中是否存在同一子字符串【简单】/README"},"3084":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41356c23-d716-47fd-9cff-aea769a1c8a6","redirect":"notes/3084. 统计以给定字符开头和结尾的子字符串总数【中等】/README"},"3085":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"74cadfc9-007b-4e07-b56f-07737f39b953","redirect":"notes/3085. 成为 K 特殊字符串需要删除的最少字符数【中等】/README"},"3086":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa462ef6-5458-4592-8846-33964fb5fa4d","redirect":"notes/3086. 拾起 K 个 1 需要的最少行动次数【困难】/README"},"3087":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae10ba1a-76ae-4189-b389-6bf3fae8b7b4","redirect":"notes/3087. 查找热门话题标签【中等】/README"},"3088":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7ced920-7947-4d81-b33a-1c5fffd1fc2c","redirect":"notes/3088. 使字符串反回文【困难】/README"},"3089":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"547184d6-52c2-403b-8df5-6d485fe71bce","redirect":"notes/3089. 查找突发行为【中等】/README"},"3090":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a7e61a3-16db-410a-91e4-5e058811fc6b","redirect":"notes/3090. 每个字符最多出现两次的最长子字符串【简单】/README"},"3091":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ad44d0dc-399b-4639-bcd4-9e65e62290d2","redirect":"notes/3091. 执行操作使数据元素之和大于等于 K【中等】/README"},"3092":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66796aed-8b30-4c09-9471-0227076cbc5d","redirect":"notes/3092. 最高频率的 ID【中等】/README"},"3093":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a7bec2c-81a3-4852-939c-2618637cfeff","redirect":"notes/3093. 最长公共后缀查询【困难】/README"},"3094":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b62e7b68-a2d9-49e5-ad67-83659b824ae6","redirect":"notes/3094. 使用按位查询猜测数字 II【中等】/README"},"3095":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bbc9cfda-cc93-4988-a268-552f562fe87c","redirect":"notes/3095. 或值至少 K 的最短子数组 I【简单】/README"},"3096":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15c34680-1180-45d2-a801-5d402e5c518e","redirect":"notes/3096. 得到更多分数的最少关卡数目【中等】/README"},"3097":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6dbb4c86-8fdc-4b2e-8f47-8e68c569315e","redirect":"notes/3097. 或值至少为 K 的最短子数组 II【中等】/README"},"3098":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23228b59-87e5-48ac-a94c-040ba73e7656","redirect":"notes/3098. 求出所有子序列的能量和【困难】/README"},"3099":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e4b56c0-b204-4f47-b8f1-9ed3e2875009","redirect":"notes/3099. 哈沙德数【简单】/README"},"3100":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"05eac655-4cbc-4395-aaa0-ddaa6005d156","redirect":"notes/3100. 换水问题 II【中等】/README"},"3101":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02e62a74-6aee-4544-b77f-5a31ff71b787","redirect":"notes/3101. 交替子数组计数【中等】/README"},"3102":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4986b4b4-469a-43b5-8380-e702c5b29b4a","redirect":"notes/3102. 最小化曼哈顿距离【困难】/README"},"3103":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6da3a96a-d2be-4117-a278-78e0378eff13","redirect":"notes/3103. 查找热门话题标签 II【困难】/README"},"3104":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f91ca21f-6d16-4a46-9445-c3bb11bf9b69","redirect":"notes/3104. 查找最长的自包含子串【困难】/README"},"3105":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"801aedec-1bb0-4475-9a4e-3060760019f6","redirect":"notes/3105. 最长的严格递增或递减子数组【简单】/README"},"3106":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5ef1cad-850b-4bd4-9711-a77298cb9a12","redirect":"notes/3106. 满足距离约束且字典序最小的字符串【中等】/README"},"3107":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06d2078f-3393-49ba-a91f-015d7e0bb657","redirect":"notes/3107. 使数组中位数等于 K 的最少操作数【中等】/README"},"3108":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26380737-f61b-4ad9-ac07-d06256646da4","redirect":"notes/3108. 带权图里旅途的最小代价【困难】/README"},"3109":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96ae9428-ce56-4b6e-a148-f95986aef3c9","redirect":"notes/3109. 查找排列的下标【中等】/README"},"3110":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9f782a2-f04a-4f35-b624-60327e571933","redirect":"notes/3110. 字符串的分数【简单】/README"},"3111":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7a8ae90-8876-4263-a889-8fde7732349e","redirect":"notes/3111. 覆盖所有点的最少矩形数目【中等】/README"},"3112":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a6a80584-e343-437b-a6e0-f3a7d214676d","redirect":"notes/3112. 访问消失节点的最少时间【中等】/README"},"3113":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20174c0d-0920-4328-a219-d00c9ccf994f","redirect":"notes/3113. 边界元素是最大值的子数组数目【困难】/README"},"3114":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0225d2c6-9331-4391-bd52-f415dff88814","redirect":"notes/3114. 替换字符可以得到的最晚时间【简单】/README"},"3115":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89731cd1-5db5-42c5-9d4c-2ffcc9d17568","redirect":"notes/3115. 质数的最大距离【中等】/README"},"3116":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41f6fccf-791b-449a-a6b8-d34a3b52ffdd","redirect":"notes/3116. 单面值组合的第 K 小金额【困难】/README"},"3117":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e37f288-8ec8-46ed-962f-0427dc860456","redirect":"notes/3117. 划分数组得到最小的值之和【困难】/README"},"3118":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a0ac81e9-6ff3-4187-a009-217ac88bbad5","redirect":"notes/3118. 发生在周五的交易 III【中等】/README"},"3119":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"badcd984-8437-4aed-91e2-1a27ff8ebeab","redirect":"notes/3119. 最大数量的可修复坑洼【中等】/README"},"3120":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d9260b28-068b-41c5-8c4b-606cad28c652","redirect":"notes/3120. 统计特殊字母的数量 I【简单】/README"},"3121":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b64154f-40b7-4f96-9f41-41d8721149f3","redirect":"notes/3121. 统计特殊字母的数量 II【中等】/README"},"3122":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc42468d-cf3e-4670-a182-457375615cdc","redirect":"notes/3122. 使矩阵满足条件的最少操作次数【中等】/README"},"3123":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4deb7dc4-f128-4c85-84c7-8e3c53288510","redirect":"notes/3123. 最短路径中的边【困难】/README"},"3124":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bbdb7525-e2d3-4e5b-95b8-c789b43ae704","redirect":"notes/3124. 查找最长的电话【中等】/README"},"3125":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b0bb722-5423-417d-b64f-940eccfbdeb7","redirect":"notes/3125. 使得按位与结果为 0 的最大数字【中等】/README"},"3126":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"996133aa-8252-4e6b-af34-324a9066c0a0","redirect":"notes/3126. 服务器利用时间【中等】/README"},"3127":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ace71ff-99cc-4e9b-a1af-8496c2ae6439","redirect":"notes/3127. 构造相同颜色的正方形【简单】/README"},"3128":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec9294cf-af03-442a-ab8a-bf5f8ee45bce","redirect":"notes/3128. 直角三角形【中等】/README"},"3129":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef4ddd38-19ea-4179-a99f-0f37d2adfd90","redirect":"notes/3129. 找出所有稳定的二进制数组 I【中等】/README"},"3130":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8f16a8c-3b5d-4f72-be1d-6fec59e6b781","redirect":"notes/3130. 找出所有稳定的二进制数组 II【困难】/README"},"3131":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67d65996-729e-4ce7-af57-4f63e6e5e0da","redirect":"notes/3131. 找出与数组相加的整数 I【简单】/README"},"3132":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42d766f2-3cbf-40de-be12-a3f0d963ce1e","redirect":"notes/3132. 找出与数组相加的整数 II【中等】/README"},"3133":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"296eec57-b36f-44eb-ba46-87d017c76592","redirect":"notes/3133. 数组最后一个元素的最小值【中等】/README"},"3134":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"562dcf71-bb66-4f90-a217-8c3cb1651300","redirect":"notes/3134. 找出唯一性数组的中位数【困难】/README"},"3135":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0941cab5-0190-4887-9234-fe1fb0747451","redirect":"notes/3135. 通过添加或删除结尾字符来同化字符串【中等】/README"},"3136":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d519a5bd-665b-48f6-89b6-e592f3476b8d","redirect":"notes/3136. 有效单词【简单】/README"},"3137":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"91ba09e1-1b69-4d35-ba1c-dd63a17c7ef4","redirect":"notes/3137. K 周期字符串需要的最少操作次数【中等】/README"},"3138":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31fbf79f-d962-485e-8413-c163e5d03971","redirect":"notes/3138. 同位字符串连接的最小长度【中等】/README"},"3139":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"393bdcdc-aa2a-4977-8d8a-0397700ef01c","redirect":"notes/3139. 使数组中所有元素相等的最小开销【困难】/README"},"3140":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ad6085cb-18fc-4e3e-bacb-9ad51e19a27a","redirect":"notes/3140. 连续空余座位 II【中等】/README"},"3141":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32de218e-c420-4d43-82e0-7890949e83a4","redirect":"notes/3141. 最大汉明距离【困难】/README"},"3142":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e260580-3e0c-493a-a3d3-5b5adc99d0ad","redirect":"notes/3142. 判断矩阵是否满足条件【简单】/README"},"3143":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"74ad46c2-44f8-4014-8f56-76161d74bf95","redirect":"notes/3143. 正方形中的最多点数【中等】/README"},"3144":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a897e61-8ee7-4ab7-97d1-608b9d345079","redirect":"notes/3144. 分割字符频率相等的最少子字符串【中等】/README"},"3145":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c93e44a-e1e9-4c69-b508-b760b23e0df1","redirect":"notes/3145. 大数组元素的乘积【困难】/README"},"3146":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa15b6ab-7655-4a0a-84fd-e448fa2f1366","redirect":"notes/3146. 两个字符串的排列差【简单】/README"},"3147":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e55e21fe-af32-4038-808d-a11f4cd0ade1","redirect":"notes/3147. 从魔法师身上吸取的最大能量【中等】/README"},"3148":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df427935-8a7d-4bd5-aafd-e8fce18c3cab","redirect":"notes/3148. 矩阵中的最大得分【中等】/README"},"3149":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"faa88e7f-dac5-49c1-a158-3717fc258cbc","redirect":"notes/3149. 找出分数最低的排列【困难】/README"},"3150":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e8a715c-8a11-4ea8-b4a8-115ff9b2c46b","redirect":"notes/3150. 无效的推文 II【简单】/README"},"3151":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f00cbf7c-3c02-4d96-9820-d2697322ea71","redirect":"notes/3151. 特殊数组 I【简单】/README"},"3152":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48bf9499-9755-4095-ac12-ba3d3d9c8448","redirect":"notes/3152. 特殊数组 II【中等】/README"},"3153":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"640acc69-7288-4370-b741-0fe6b0d54457","redirect":"notes/3153. 所有数对中数位差之和【中等】/README"},"3154":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10409d74-3e6b-4c1d-931c-964f0475207c","redirect":"notes/3154. 到达第 K 级台阶的方案数【困难】/README"},"3155":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df0345c8-0f18-485c-9936-975606c56962","redirect":"notes/3155. 可升级服务器的最大数量【中等】/README"},"3156":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2fc8cfd-483d-42d7-85e3-eea3585a7140","redirect":"notes/3156. 员工任务持续时间和并发任务【困难】/README"},"3157":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b2f0c5a-be47-40f1-9652-5c4281633ece","redirect":"notes/3157. 找到具有最小和的树的层数【中等】/README"},"3158":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8bfa5c6-2397-4c19-912d-d20606ccd360","redirect":"notes/3158. 求出出现两次数字的 XOR 值【简单】/README"},"3159":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87ace698-8138-4dfe-a80d-a0ab00a40409","redirect":"notes/3159. 查询数组中元素的出现位置【中等】/README"},"3160":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0e67c09-21c4-41ac-83a5-ab736a3df00a","redirect":"notes/3160. 所有球里面不同颜色的数目【中等】/README"},"3161":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"73ae0298-dce7-499d-b199-21b68ea9dca2","redirect":"notes/3161. 物块放置查询【困难】/README"},"3162":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b646cbf8-b348-4209-9615-cc09f3ad7a01","redirect":"notes/3162. 优质数对的总数 I【简单】/README"},"3163":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa0088a9-8bb5-432d-b460-9b53b9ece450","redirect":"notes/3163. 压缩字符串 III【中等】/README"},"3164":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"701482cf-f726-400e-9178-84327d765f0c","redirect":"notes/3164. 优质数对的总数 II【中等】/README"},"3165":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c80a016-0722-4e78-a63b-04fc47d3a1ef","redirect":"notes/3165. 不包含相邻元素的子序列的最大和【困难】/README"},"3166":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"765cc14d-24fe-43b0-8333-c90c20376d73","redirect":"notes/3166. 计算停车费与时长【中等】/README"},"3167":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cba51222-776a-4cdd-b248-77f49e0a4014","redirect":"notes/3167. 字符串的更好压缩【中等】/README"},"3168":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1769ed81-de85-43d6-87dc-3428579efdfb","redirect":"notes/3168. 候诊室中的最少椅子数【简单】/README"},"3169":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de41d3ac-49fd-4f4d-ade3-09b64e0a9599","redirect":"notes/3169. 无需开会的工作日【中等】/README"},"3170":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a979e390-bb0a-4ece-85db-5120438734a2","redirect":"notes/3170. 删除星号以后字典序最小的字符串【中等】/README"},"3171":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8f99105-8702-4864-b4f4-140e4940352f","redirect":"notes/3171. 找到按位或最接近 K 的子数组【困难】/README"},"3172":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86bb8e9f-58c7-40c9-b7e2-e701b02e92e1","redirect":"notes/3172. 第二天验证【简单】/README"},"3173":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02ed1243-f552-4c37-b5d8-154ce518bc2c","redirect":"notes/3173. 相邻元素的按位或【简单】/README"},"3174":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24c6dc9a-df8f-4e0e-8ab7-5f77349b2cd6","redirect":"notes/3174. 清除数字【简单】/README"},"3175":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc1fd5ab-58d7-43ff-bad1-7369df43ef0c","redirect":"notes/3175. 找到连续赢 K 场比赛的第一位玩家【中等】/README"},"3176":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cda104a7-604f-4f25-8f63-faad8bb71ec7","redirect":"notes/3176. 求出最长好子序列 I【中等】/README"},"3177":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bff5e0fa-c72b-41fd-8758-c5fca42ceb76","redirect":"notes/3177. 求出最长好子序列 II【困难】/README"},"3178":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa69802d-0e37-4293-af22-e50a4a62356e","redirect":"notes/3178. 找出 K 秒后拿着球的孩子【简单】/README"},"3179":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e613474-763c-4c50-be17-dd23b6559d7c","redirect":"notes/3179. K 秒后第 N 个元素的值【中等】/README"},"3180":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c270c19c-8823-44cc-a6db-dbc861f9ea1e","redirect":"notes/3180. 执行操作可获得的最大总奖励 I【中等】/README"},"3181":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eef98db7-6da5-4def-b79b-7227c243a01c","redirect":"notes/3181. 执行操作可获得的最大总奖励 II【困难】/README"},"3182":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfaef106-3150-492e-8fb8-f8331bd99d28","redirect":"notes/3182. 查找得分最高的学生【中等】/README"},"3183":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"057e4328-2664-4670-be19-3672ded30e15","redirect":"notes/3183. 达到总和的方法数量【中等】/README"},"3184":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f77ae967-0a27-4fd8-af18-c2d5a7e27bdc","redirect":"notes/3184. 构成整天的下标对数目 I【简单】/README"},"3185":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ec973ab-4842-45b0-b148-a96a92ef6e9d","redirect":"notes/3185. 构成整天的下标对数目 II【中等】/README"},"3186":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e0db7ee-f774-4013-8635-7517b887d621","redirect":"notes/3186. 施咒的最大总伤害【中等】/README"},"3187":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d944955b-72b7-42e5-8b60-3a7e9337fd9c","redirect":"notes/3187. 数组中的峰值【困难】/README"},"3188":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19b426e7-3ecc-472e-a069-a1cbc22938f5","redirect":"notes/3188. 查找得分最高的学生 II【困难】/README"},"3189":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d538132-9cda-4391-92cb-a5f134f29911","redirect":"notes/3189. 得到一个和平棋盘的最少步骤【中等】/README"},"3190":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"95109c43-0e53-41b7-9cec-a72797f61d7d","redirect":"notes/3190. 使所有元素都可以被 3 整除的最少操作数【简单】/README"},"3191":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b1474350-7bea-4355-aa6b-60d2448631b1","redirect":"notes/3191. 使二进制数组全部等于 1 的最少操作次数 I【中等】/README"},"3192":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d0fe01f-9a3f-4f7b-a81d-4832d2286d7d","redirect":"notes/3192. 使二进制数组全部等于 1 的最少操作次数 II【中等】/README"},"3193":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"867d13ae-f467-4e5e-8bd9-3b3696b55857","redirect":"notes/3193. 统计逆序对的数目【困难】/README"},"3194":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4581ac6-5f6b-4ac3-9442-029586a2c393","redirect":"notes/3194. 最小元素和最大元素的最小平均值【简单】/README"},"3195":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45c77fa7-d4da-4db4-a40f-544bcf59a214","redirect":"notes/3195. 包含所有 1 的最小矩形面积 I【中等】/README"},"3196":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e369004-ffef-46c5-b6c2-8a6c3c2b0009","redirect":"notes/3196. 最大化子数组的总成本【中等】/README"},"3197":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99c6c596-ff49-4b99-b445-8ac64652b461","redirect":"notes/3197. 包含所有 1 的最小矩形面积 II【困难】/README"},"3198":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02d72143-e94e-433b-9e40-5ae4fa909c57","redirect":"notes/3198. 查找每个州的城市【简单】/README"},"3199":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6cf8180b-9ad4-43b6-88fc-06f734d9ec89","redirect":"notes/3199. 用偶数异或设置位计数三元组 I【简单】/README"},"3200":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc334fbe-a486-4a04-8c8a-759e07436c32","redirect":"notes/3200. 三角形的最大高度【简单】/README"},"3201":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57bd83e6-4596-4881-ad4a-5f28995f99dc","redirect":"notes/3201. 找出有效子序列的最大长度 I【中等】/README"},"3202":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53162512-e268-4638-a719-58b85bd6479a","redirect":"notes/3202. 找出有效子序列的最大长度 II【中等】/README"},"3203":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32304935-e749-49d7-aad0-d3252947c24b","redirect":"notes/3203. 合并两棵树后的最小直径【困难】/README"},"3204":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0295534-8e6f-41f1-8226-57a89183780f","redirect":"notes/3204. 按位用户权限分析【中等】/README"},"3205":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8adb548c-a994-4411-855d-5a9ed61aa476","redirect":"notes/3205. 最大数组跳跃得分 I【中等】/README"},"3206":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"640c6c14-4cad-4175-9ebd-9f045359ceb5","redirect":"notes/3206. 交替组 I【简单】/README"},"3207":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7d58f86-9b2c-494f-8401-8d536f60a241","redirect":"notes/3207. 与敌人战斗后的最大分数【中等】/README"},"3208":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf26ca84-50c6-466d-8e90-557460831e5d","redirect":"notes/3208. 交替组 II【中等】/README"},"3209":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00d5d37c-3e35-4195-bc26-678cee7eed56","redirect":"notes/3209. 子数组按位与值为 K 的数目【困难】/README"},"3210":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb357115-257e-4d0c-ac0a-6f8f4d743842","redirect":"notes/3210. 找出加密后的字符串【简单】/README"},"3211":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c5d49d7a-cb65-4f6b-ab61-1a7c258841b1","redirect":"notes/3211. 生成不含相邻零的二进制字符串【中等】/README"},"3212":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eee82e0b-3e29-4e15-905c-4552a21a4773","redirect":"notes/3212. 统计 X 和 Y 频数相等的子矩阵数量【中等】/README"},"3213":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3ca0004-c54c-4d6d-b701-192347147a20","redirect":"notes/3213. 最小代价构造字符串【困难】/README"},"3214":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6bf1668b-0e31-4db7-9a2d-dbd0cc3bb1a4","redirect":"notes/3214. 同比增长率【困难】/README"},"3215":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36f3ac09-ac2c-4e31-bb56-b2111477c911","redirect":"notes/3215. 用偶数异或设置位计数三元组 II【中等】/README"},"3216":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c94b620d-7766-4de3-b3d6-cbaf9751da6d","redirect":"notes/3216. 交换后字典序最小的字符串【简单】/README"},"3217":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd0f6499-bbb9-44ae-bd75-bb61795529ed","redirect":"notes/3217. 从链表中移除在数组中存在的节点【中等】/README"},"3218":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"64e394f6-2cf0-4df4-a6f3-99de9509b98c","redirect":"notes/3218. 切蛋糕的最小总开销 I【中等】/README"},"3219":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ccc84ed8-e8f8-4b50-ba87-c1dbb2f5d290","redirect":"notes/3219. 切蛋糕的最小总开销 II【困难】/README"},"3220":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67698d0b-d76d-47af-9c5a-469c5f8b9331","redirect":"notes/3220. 奇数和偶数交易【中等】/README"},"3221":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4404e6a6-93d9-4cc1-9465-9c596096720a","redirect":"notes/3221. 最大数组跳跃得分 II【中等】/README"},"3222":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f9e1cdc-1352-44c4-9bc9-583518a5fe71","redirect":"notes/3222. 求出硬币游戏的赢家【简单】/README"},"3223":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"516398b9-349c-4b6f-bbf2-369cda78f8d2","redirect":"notes/3223. 操作后字符串的最短长度【中等】/README"},"3224":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99fc2f2a-b4d4-4add-b88d-8277ee965886","redirect":"notes/3224. 使差值相等的最少数组改动次数【中等】/README"},"3225":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b34eefc0-adcd-489e-a637-69c6ddc42935","redirect":"notes/3225. 网格图操作后的最大分数【困难】/README"},"3226":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a378d93d-efeb-4ef2-ae4e-dba21d8af73d","redirect":"notes/3226. 使两个整数相等的位更改次数【简单】/README"},"3227":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a2d5ff0-174e-4c1e-ae88-32b2de63e36e","redirect":"notes/3227. 字符串元音游戏【中等】/README"},"3228":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"084a78e7-3ce7-4732-8708-14537f1cc6d8","redirect":"notes/3228. 将 1 移动到末尾的最大操作次数【中等】/README"},"3229":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93901fc0-4e85-4230-b761-dcf363a9eab9","redirect":"notes/3229. 使数组等于目标数组所需的最少操作次数【困难】/README"},"3230":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb09ec37-09ba-4710-b178-9c3079fc8151","redirect":"notes/3230. 客户购买行为分析【中等】/README"},"3231":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65f21111-19f7-4534-bdca-70ed08fa6747","redirect":"notes/3231. 要删除的递增子序列的最小数量【困难】/README"},"3232":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a631630b-809e-49d8-9b3a-97e2d57c4554","redirect":"notes/3232. 判断是否可以赢得数字游戏【简单】/README"},"3233":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a9c1f70-ecac-4873-b572-3579293ee1ac","redirect":"notes/3233. 统计不是特殊数字的数字数量【中等】/README"},"3234":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"285c6afe-e851-4245-8b9f-63cbfebd2442","redirect":"notes/3234. 统计 1 显著的字符串的数量【中等】/README"},"3235":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e9dab90a-8e66-4fc6-862f-089ae2c5410c","redirect":"notes/3235. 判断矩形的两个角落是否可达【困难】/README"},"3236":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0bb6753-dc12-4d4c-83c2-e828204196ea","redirect":"notes/3236. 首席执行官下属层级【困难】/README"},"3237":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89796dc8-091f-43c8-9a7f-2e8cb3d5a7df","redirect":"notes/3237. Alt 和 Tab 模拟【中等】/README"},"3238":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7f78740-ade3-4466-bdbc-a737846a4792","redirect":"notes/3238. 求出胜利玩家的数目【简单】/README"},"3239":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"440f6097-8c53-4ba9-ae9f-d664bb9cc476","redirect":"notes/3239. 最少翻转次数使二进制矩阵回文 I【中等】/README"},"3240":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"002d2d3b-9011-48c7-8242-947c7c8d691b","redirect":"notes/3240. 最少翻转次数使二进制矩阵回文 II【中等】/README"},"3241":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a55d6b2b-a26d-40a9-a72e-791f12f31d59","redirect":"notes/3241. 标记所有节点需要的时间【困难】/README"},"3242":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a5f726e-3080-4fec-b078-e735c1c4d814","redirect":"notes/3242. 设计相邻元素求和服务【简单】/README"},"3243":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bce12c9b-81af-4cbe-8cd5-d0f9cd743b23","redirect":"notes/3243. 新增道路查询后的最短距离 I【中等】/README"},"3244":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d0c0ab6-471d-4399-8275-45d406989c76","redirect":"notes/3244. 新增道路查询后的最短距离 II【困难】/README"},"3245":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1aca71da-09ce-4df3-a617-7943bc4df302","redirect":"notes/3245. 交替组 III【困难】/README"},"3246":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d133898e-aed1-4f33-b9aa-2a01910d8b7f","redirect":"notes/3246. 英超积分榜排名【简单】/README"},"3247":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"119265fe-6f83-40d4-8983-2b5bbe3c8158","redirect":"notes/3247. 奇数和子序列的数量【中等】/README"},"3248":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06bfefd6-d28a-495b-b287-581bf079d3a4","redirect":"notes/3248. 矩阵中的蛇【简单】/README"},"3249":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f1b7d9f1-b738-4ac7-80bb-bf14adf2b369","redirect":"notes/3249. 统计好节点的数目【中等】/README"},"3250":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8590bc6c-e761-4e59-96b3-e9530a59c9a8","redirect":"notes/3250. 单调数组对的数目 I【困难】/README"},"3251":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62072096-2e5d-4760-a57d-2d81ee89af6a","redirect":"notes/3251. 单调数组对的数目 II【困难】/README"},"3252":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66ae8757-7921-4e4f-be5f-1e6e293c91b5","redirect":"notes/3252. 英超积分榜排名 II【中等】/README"},"3253":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d17f6d3e-6d11-4e05-bf32-58b6e9dbaefc","redirect":"notes/3253. 最小代价构造字符串（简单）【中等】/README"},"3254":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2567fbbd-2f05-4692-96c3-96d1a9be9f4b","redirect":"notes/3254. 长度为 K 的子数组的能量值 I【中等】/README"},"3255":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"88879897-d3f2-4260-aa9b-ca74c38b42ad","redirect":"notes/3255. 长度为 K 的子数组的能量值 II【中等】/README"},"3256":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a79c1f3-2c65-4a37-b699-b7e59162380b","redirect":"notes/3256. 放三个车的价值之和最大 I【困难】/README"},"3257":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92977bb4-0e15-4fe4-a429-1d3ab67e4581","redirect":"notes/3257. 放三个车的价值之和最大 II【困难】/README"},"3258":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"919cb9df-65f6-4be3-b229-8ebcc7dce4bd","redirect":"notes/3258. 统计满足 K 约束的子字符串数量 I【简单】/README"},"3259":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0459b58-53bd-4235-8e38-6ff090ab1df5","redirect":"notes/3259. 超级饮料的最大强化能量【中等】/README"},"3260":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a69977fa-8949-426d-8985-45c9b5a4a60e","redirect":"notes/3260. 找出最大的 N 位 K 回文数【困难】/README"},"3261":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a87034e-b228-4387-8924-e8643b3f1065","redirect":"notes/3261. 统计满足 K 约束的子字符串数量 II【困难】/README"},"3262":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"77fa344f-3a7e-459b-a370-6b97b63936a3","redirect":"notes/3262. 查找重叠的班次【中等】/README"},"3263":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1b650c0-00b6-401b-8b13-e9e93c3524cf","redirect":"notes/3263. 将双链表转换为数组 I【简单】/README"},"3264":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ec4c2e0-293a-4839-a5cb-291d5f04fb35","redirect":"notes/3264. K 次乘运算后的最终数组 I【简单】/README"},"3265":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc304ef9-4456-444d-b0b9-67326d5f8ff4","redirect":"notes/3265. 统计近似相等数对 I【中等】/README"},"3266":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"095bb1bd-f3ce-477e-a51e-4d7c97ab36dc","redirect":"notes/3266. K 次乘运算后的最终数组 II【困难】/README"},"3267":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9ceccb9c-de5b-4367-bf71-ef2397a06648","redirect":"notes/3267. 统计近似相等数对 II【困难】/README"},"3268":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65771a15-a49b-469e-999d-48fa9216e808","redirect":"notes/3268. 查找重叠的班次 II【困难】/README"},"3269":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc834727-6eec-4747-86eb-9825f1163e08","redirect":"notes/3269. 构建两个递增数组【困难】/README"},"3270":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2b01efa-5b9e-4c36-9850-92ad13ae9e28","redirect":"notes/3270. 求出数字答案【简单】/README"},"3271":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd2e5af7-4ffa-4335-ad4b-f2e932169be2","redirect":"notes/3271. 哈希分割字符串【中等】/README"},"3272":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f064d779-8df8-4ba2-b688-03a864f6caa2","redirect":"notes/3272. 统计好整数的数目【困难】/README"},"3273":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25ebd5c7-47f2-41cf-ad77-1ce2256dc890","redirect":"notes/3273. 对 Bob 造成的最少伤害【困难】/README"},"3274":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90ec4972-c8fc-4275-8ace-2124f63ccd2a","redirect":"notes/3274. 检查棋盘方格颜色是否相同【简单】/README"},"3275":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1839375e-ad17-4a0d-83d5-004cb91c91c9","redirect":"notes/3275. 第 K 近障碍物查询【中等】/README"},"3276":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a505cb6-a862-4a38-a837-6fab75420028","redirect":"notes/3276. 选择矩阵中单元格的最大得分【困难】/README"},"3277":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"518a69e9-f862-45fb-b661-e7fe01fd762d","redirect":"notes/3277. 查询子数组最大异或值【困难】/README"},"3278":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a9cd97d-2c8a-42f4-8e7a-4f53da036c07","redirect":"notes/3278. 寻找数据科学家职位的候选人 II【中等】/README"},"3279":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c01d5855-1dea-49a7-988d-6ed79716a9bf","redirect":"notes/3279. 活塞占据的最大总区域【困难】/README"},"3280":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d2207a9-15c1-4d86-82c1-ce88cdccd1b3","redirect":"notes/3280. 将日期转换为二进制表示【简单】/README"},"3281":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cfff6a72-1318-4a9c-9ddc-e3ab06c52bb5","redirect":"notes/3281. 范围内整数的最大得分【中等】/README"},"3282":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f09a475e-1887-4533-a240-60780ee7cf4d","redirect":"notes/3282. 到达数组末尾的最大得分【中等】/README"},"3283":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b012f035-ded7-42c5-8fa6-df7044bad698","redirect":"notes/3283. 吃掉所有兵需要的最多移动次数【困难】/README"},"3284":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5e0f66a-b285-420a-92fe-9d1895884235","redirect":"notes/3284. 连续子数组的和【中等】/README"},"3285":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4efdcfbc-f904-4d35-b9c1-4040e9f3ac1c","redirect":"notes/3285. 找到稳定山的下标【简单】/README"},"3286":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca7ad322-0aef-427c-b47f-1f90871012e0","redirect":"notes/3286. 穿越网格图的安全路径【中等】/README"},"3287":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a830675-cfd5-4c7f-a0ec-c3614fb2c1d9","redirect":"notes/3287. 求出数组中最大序列值【困难】/README"},"3288":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e85c6127-ac7a-4cd5-a5ab-fd044cb74dfd","redirect":"notes/3288. 最长上升路径的长度【困难】/README"},"3289":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ede3b70-1bc4-48e2-ad2f-7b52585469b4","redirect":"notes/3289. 数字小镇中的捣蛋鬼【简单】/README"},"3290":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"def1c527-07cd-4e1c-aac4-0238d3d96215","redirect":"notes/3290. 最高乘法得分【中等】/README"},"3291":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"913b257d-9950-4686-ab07-02d2c1f7d946","redirect":"notes/3291. 形成目标字符串需要的最少字符串数 I【中等】/README"},"3292":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7223f25c-e7eb-41d2-8a5b-7328a0ec67b6","redirect":"notes/3292. 形成目标字符串需要的最少字符串数 II【困难】/README"},"3293":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"31676457-0906-4123-bfe8-c9075330aca9","redirect":"notes/3293. 计算产品最终价格【中等】/README"},"3294":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7bb0ac3c-9a6e-4c08-9d1d-3f554af28937","redirect":"notes/3294. 将双链表转换为数组 II【中等】/README"},"3295":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1896da2b-8dc6-484c-8578-c2a45e16ae2a","redirect":"notes/3295. 举报垃圾信息【中等】/README"},"3296":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bdc3497f-3547-4024-acf0-f9684e54dfda","redirect":"notes/3296. 移山所需的最少秒数【中等】/README"},"3297":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a71a9d35-63ac-4186-b734-89051c6573c2","redirect":"notes/3297. 统计重新排列后包含另一个字符串的子字符串数目 I【中等】/README"},"3298":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a8d33921-ac95-4732-989d-6a6a5c8f4323","redirect":"notes/3298. 统计重新排列后包含另一个字符串的子字符串数目 II【困难】/README"},"3299":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90867dd0-e569-4ac6-a3cd-020256cd0088","redirect":"notes/3299. 连续子序列的和【困难】/README"},"3300":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a744e14-30cd-4060-be1c-353b7fce3cb3","redirect":"notes/3300. 替换为数位和以后的最小元素【简单】/README"},"3301":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"70ee812d-5dd6-4785-b7d9-50073e16539b","redirect":"notes/3301. 高度互不相同的最大塔高和【中等】/README"},"3302":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"214b3600-fbc4-4673-83c7-fb045e553e81","redirect":"notes/3302. 字典序最小的合法序列【中等】/README"},"3303":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0e68cae-0410-4b85-9b36-ced35037523d","redirect":"notes/3303. 第一个几乎相等子字符串的下标【困难】/README"},"3304":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e677699-d50e-41e7-89f6-f894eaf17918","redirect":"notes/3304. 找出第 K 个字符 I【简单】/README"},"3305":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f04f7515-ca85-4a14-b59a-e8817080cffc","redirect":"notes/3305. 元音辅音字符串计数 I【中等】/README"},"3306":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0b45580b-c173-4e94-adc9-aa4779d1bf78","redirect":"notes/3306. 元音辅音字符串计数 II【中等】/README"},"3307":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5804d86-5251-4470-a45b-f932e8a849b8","redirect":"notes/3307. 找出第 K 个字符 II【困难】/README"},"3308":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d933aa99-483c-4aad-8e36-4aa394194596","redirect":"notes/3308. 寻找表现最佳的司机【中等】/README"},"3309":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4cbc35a5-55a4-429a-8786-939cb7a79ed6","redirect":"notes/3309. 连接二进制表示可形成的最大数值【中等】/README"},"3310":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02c05015-18a0-40e3-b802-7d358cf9d9c8","redirect":"notes/3310. 移除可疑的方法【中等】/README"},"3311":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"203d54da-7311-4f64-b3f3-4c90e6622b6f","redirect":"notes/3311. 构造符合图结构的二维矩阵【困难】/README"},"3312":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80a57092-3feb-41bc-bd4c-b70229388281","redirect":"notes/3312. 查询排序后的最大公约数【困难】/README"},"3313":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f322b3d-2cbe-44dd-a004-bc0223d06398","redirect":"notes/3313. 查找树中最后标记的节点【困难】/README"},"3314":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb9d8afa-cd5e-4e36-8827-011be998519e","redirect":"notes/3314. 构造最小位运算数组 I【简单】/README"},"3315":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b1dfc55-9914-43b7-99d3-c99bb1936275","redirect":"notes/3315. 构造最小位运算数组 II【中等】/README"},"3316":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c112e7dd-e88c-403b-8b14-51620bba5104","redirect":"notes/3316. 从原字符串里进行删除操作的最多次数【中等】/README"},"3317":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a47b4308-a927-48fb-8872-cfe8ce2d8418","redirect":"notes/3317. 安排活动的方案数【困难】/README"},"3318":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c81c522b-47ad-439b-bfca-a31b851a6d43","redirect":"notes/3318. 计算子数组的 x-sum I【简单】/README"},"3319":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a31dd2cb-aa8f-4066-9b5b-21b5d4256de3","redirect":"notes/3319. 第 K 大的完美二叉子树的大小【中等】/README"},"3320":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b65a7583-9ced-4cab-b06a-dac077be4215","redirect":"notes/3320. 统计能获胜的出招序列数【困难】/README"},"3321":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"864bbd54-224a-4111-881f-8a7fe8c4acd6","redirect":"notes/3321. 计算子数组的 x-sum II【困难】/README"},"3322":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1a93a18a-c9d0-4f82-9607-328f3df0a077","redirect":"notes/3322. 英超积分榜排名 III【中等】/README"},"3323":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41a35324-489c-4c9d-9c30-471862b8f41e","redirect":"notes/3323. 通过插入区间最小化连通组【中等】/README"},"3324":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"717d3de4-f1af-4bee-8959-7c07c5d0cf9a","redirect":"notes/3324. 出现在屏幕上的字符串序列【中等】/README"},"3325":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2130042-8d15-40ca-b857-186c3f4abaca","redirect":"notes/3325. 字符至少出现 K 次的子字符串 I【中等】/README"},"3326":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f06d038a-0671-4112-be69-b1f224b6f157","redirect":"notes/3326. 使数组非递减的最少除法操作次数【中等】/README"},"3327":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f2849b6e-fb7b-4e91-99a2-e72fecbea909","redirect":"notes/3327. 判断 DFS 字符串是否是回文串【困难】/README"},"3328":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f28f7bd9-6825-427b-ad95-29aaee9b4cd0","redirect":"notes/3328. 查找每个州的城市 II【中等】/README"},"3329":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e545fee2-1728-4e54-90ef-e53282cbcbba","redirect":"notes/3329. 字符至少出现 K 次的子字符串 II【困难】/README"},"3330":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a6a43b9-b6dd-474b-a329-72e5a2bcb905","redirect":"notes/3330. 找到初始输入字符串 I【简单】/README"},"3331":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2757a130-3675-4b96-adf6-ca2af3cd266c","redirect":"notes/3331. 修改后子树的大小【中等】/README"},"3332":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c679cef7-628b-4c99-9c63-b1bc81ea4985","redirect":"notes/3332. 旅客可以得到的最多点数【中等】/README"},"3333":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"84aaa6b8-c21c-45d1-b993-155fe8323957","redirect":"notes/3333. 找到初始输入字符串 II【困难】/README"},"3334":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0084a718-0eac-408e-af7c-bd1d90cf20c3","redirect":"notes/3334. 数组的最大因子得分【中等】/README"},"3335":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8e8d9603-e3c9-4001-9044-278a5d60982c","redirect":"notes/3335. 字符串转换后的长度 I【中等】/README"},"3336":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ce31b66f-d8bd-4b2a-83e1-251c61f48185","redirect":"notes/3336. 最大公约数相等的子序列数量【困难】/README"},"3337":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc70367f-6dac-4277-9d27-fe27de3a64f1","redirect":"notes/3337. 字符串转换后的长度 II【困难】/README"},"3338":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"721f8f7d-3be9-4e59-917f-748172772519","redirect":"notes/3338. 第二高的薪水 II【中等】/README"},"3339":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e37498d1-36ae-4b37-afc0-cd3eb33d5742","redirect":"notes/3339. 查找 K 偶数数组的数量【中等】/README"},"3340":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e3a0a2c-f35b-4d2c-9406-0c3a4aadd86e","redirect":"notes/3340. 检查平衡字符串【简单】/README"},"3341":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a44daac9-d150-4ec2-aee3-420166f22ffb","redirect":"notes/3341. 到达最后一个房间的最少时间 I【中等】/README"},"3342":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8735b0f1-1cc1-4967-a864-2b7a1316a626","redirect":"notes/3342. 到达最后一个房间的最少时间 II【中等】/README"},"3343":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81e65931-583f-4089-80ec-7babee076368","redirect":"notes/3343. 统计平衡排列的数目【困难】/README"},"3344":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"537832a6-fbf7-4019-ba4e-36ecdd125603","redirect":"notes/3344. 最大尺寸数组【中等】/README"},"3345":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80bb0932-efe9-41f3-9b07-e95d747bf8dc","redirect":"notes/3345. 最小可整除数位乘积 I【简单】/README"},"3346":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4264c45-d357-415e-bf59-169a51d98ed4","redirect":"notes/3346. 执行操作后元素的最高频率 I【中等】/README"},"3347":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e7a75a1-0d4d-4f6e-9f2b-023722e13b30","redirect":"notes/3347. 执行操作后元素的最高频率 II【困难】/README"},"3348":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a012187-8a1c-472d-a47e-91b6c910e290","redirect":"notes/3348. 最小可整除数位乘积 II【困难】/README"},"3349":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c19e874c-86c3-402e-8fc2-405e95a23b12","redirect":"notes/3349. 检测相邻递增子数组 I【简单】/README"},"3350":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4ede863b-22b3-4849-945c-72b02ee9f934","redirect":"notes/3350. 检测相邻递增子数组 II【中等】/README"},"3351":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e9877a41-bf5d-4e5a-8f94-179668b1f680","redirect":"notes/3351. 好子序列的元素之和【困难】/README"},"3352":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9760d49a-7684-4bd3-b090-98e78676d4d9","redirect":"notes/3352. 统计小于 N 的 K 可约简整数【困难】/README"},"3353":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34c5843e-c47e-4bf4-839a-4b6b9f0909ec","redirect":"notes/3353. 最小总操作数【简单】/README"},"3354":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da7ed1c1-1c8d-483b-9008-b4bcb1e30e29","redirect":"notes/3354. 使数组元素等于零【简单】/README"},"3355":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2887156e-7246-4023-80c1-2c44c5a2ef97","redirect":"notes/3355. 零数组变换 I【中等】/README"},"3356":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20d1b43d-72c7-4a58-b103-9d74844a5f8e","redirect":"notes/3356. 零数组变换 II【中等】/README"},"3357":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f243f133-021f-417c-a597-0b6672ffc5ea","redirect":"notes/3357. 最小化相邻元素的最大差值【困难】/README"},"3358":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a657cd8-25b0-46e3-95ea-c6ee6ba3a4db","redirect":"notes/3358. 评分为 NULL 的图书【简单】/README"},"3359":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0dd5820-6865-492a-a26d-56b4e87bdeaf","redirect":"notes/3359. 查找最大元素不超过 K 的有序子矩阵【困难】/README"},"3360":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d795d5a-8ccf-4cfd-99dc-80064da1619f","redirect":"notes/3360. 移除石头游戏【简单】/README"},"3361":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"980b6410-15c1-4e98-b6cd-854d8fac9622","redirect":"notes/3361. 两个字符串的切换距离【中等】/README"},"3362":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed83144e-92ef-4135-be6a-c0e67fd48640","redirect":"notes/3362. 零数组变换 III【中等】/README"},"3363":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c32ece01-dac9-4e48-92f6-1126047596c5","redirect":"notes/3363. 最多可收集的水果数目【困难】/README"},"3364":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20594832-81b8-4e5b-99ce-07c1f82d6639","redirect":"notes/3364. 最小正和子数组【简单】/README"},"3365":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"77ec8f96-b60e-4ec0-9261-44ec096a85b5","redirect":"notes/3365. 重排子字符串以形成目标字符串【中等】/README"},"3366":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3abe8e06-4289-4d06-b6ae-c052a05eef0e","redirect":"notes/3366. 最小数组和【中等】/README"},"3367":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d95ac9d8-570b-4ab3-b7ba-504d60c9d4bb","redirect":"notes/3367. 移除边之后的权重最大和【困难】/README"},"3368":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49e39544-dd6f-475a-8184-28cc9815e509","redirect":"notes/3368. 首字母大写【困难】/README"},"3369":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55266296-f45e-420e-8ec6-281783557e3f","redirect":"notes/3369. 设计数组统计跟踪器【困难】/README"},"3370":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01d0bc9b-6d01-44c2-9727-8e80230d91ab","redirect":"notes/3370. 仅含置位位的最小整数【简单】/README"},"3371":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"abe0de52-d939-4079-a4d1-dfd4e7a55a60","redirect":"notes/3371. 识别数组中的最大异常值【中等】/README"},"3372":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3084992f-3fc9-4950-9544-24c85d2b5556","redirect":"notes/3372. 连接两棵树后最大目标节点数目 I【中等】/README"},"3373":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5765c86-8ae5-4c0b-a621-af7932e3b79f","redirect":"notes/3373. 连接两棵树后最大目标节点数目 II【困难】/README"},"3374":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"275bf3d8-3ce0-4011-b2aa-5f0972306ea4","redirect":"notes/3374. 首字母大写 II【困难】/README"},"3375":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b35bba6-c9aa-48d2-8ab0-cce7dcf7e562","redirect":"notes/3375. 使数组的值全部为 K 的最少操作次数【简单】/README"},"3376":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3fa372de-a339-43ab-be1e-3d015a0388d0","redirect":"notes/3376. 破解锁的最少时间 I【中等】/README"},"3377":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e0f5247-2d78-4b77-8835-636c2c9e1b5c","redirect":"notes/3377. 使两个整数相等的数位操作【中等】/README"},"3378":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25241cae-6297-4de0-9375-f386ef63a38d","redirect":"notes/3378. 统计最小公倍数图中的连通块数目【困难】/README"},"3379":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af03e5a7-3d90-431d-a43d-c3054d5f1a19","redirect":"notes/3379. 转换数组【简单】/README"},"3380":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b2c29e1f-21ae-4c46-92f3-b0badf7542ff","redirect":"notes/3380. 用点构造面积最大的矩形 I【中等】/README"},"3381":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07029ab9-bc10-476c-824e-d4f7070342b3","redirect":"notes/3381. 长度可被 K 整除的子数组的最大元素和【中等】/README"},"3382":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b3587dd1-d8a7-4cc2-be82-04323b4d018a","redirect":"notes/3382. 用点构造面积最大的矩形 II【困难】/README"},"3383":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90db8d71-121c-4c8d-ab69-5fbe7ef134bd","redirect":"notes/3383. 施法所需最低符文数量【困难】/README"},"3384":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fff79e43-36a7-46a7-8c53-280e2bbab3d5","redirect":"notes/3384. 球队传球成功的优势得分【困难】/README"},"3385":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f6502b5-e679-4761-977b-b0174072c216","redirect":"notes/3385. 破解锁的最少时间 II【困难】/README"},"3386":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32dd94a3-c9e6-44ed-92e5-19b5cb4d03e9","redirect":"notes/3386. 按下时间最长的按钮【简单】/README"},"3387":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4a45636-d5cb-492e-882a-e43d696369fe","redirect":"notes/3387. 两天自由外汇交易后的最大货币数【中等】/README"},"3388":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc6cf1a2-4291-42d4-b426-da3cf49911a6","redirect":"notes/3388. 统计数组中的美丽分割【中等】/README"},"3389":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"467c7438-792f-4dd6-bf12-24dc58e97e63","redirect":"notes/3389. 使字符频率相等的最少操作次数【困难】/README"},"3390":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d51fa50-90b0-41b2-9464-c2a1f1911f2c","redirect":"notes/3390. Longest Team Pass Streak【困难】/README"},"3391":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3fc09af7-228e-4292-a5ca-a39ebfcecf01","redirect":"notes/3391. 设计一个高效的层跟踪三维二进制矩阵【中等】/README"},"3392":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ab1a10c-04c3-4b17-ac21-91e3a9ca70ed","redirect":"notes/3392. 统计符合条件长度为 3 的子数组数目【简单】/README"},"3393":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfe2ee21-1831-4b3c-83f0-d571b878a3e2","redirect":"notes/3393. 统计异或值为给定值的路径数目【中等】/README"},"3394":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6cefcb66-bc2e-446f-9093-2e8a3d2dfff3","redirect":"notes/3394. 判断网格图能否被切割成块【中等】/README"},"3395":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c209427-2c30-4280-aabc-bf575fd438c9","redirect":"notes/3395. 唯一中间众数子序列 I【困难】/README"},"3396":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b7b19785-5d54-455d-81f7-1b58e5e2b75a","redirect":"notes/3396. 使数组元素互不相同所需的最少操作次数【简单】/README"},"3397":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c9b4b54-91b7-4fd7-9f45-baaefa363278","redirect":"notes/3397. 执行操作后不同元素的最大数量【中等】/README"},"3398":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bce3e9ef-d1e0-46f4-a30f-d63fdf9397f7","redirect":"notes/3398. 字符相同的最短子字符串 I【困难】/README"},"3399":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"82dfe2b6-bdf7-454e-aa2b-b677810fbe74","redirect":"notes/3399. 字符相同的最短子字符串 II【困难】/README"},"3400":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f5c077b-23a5-4c28-a3e5-56fe49b6bec2","redirect":"notes/3400. 右移后的最大匹配索引数【中等】/README"},"3401":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0aaacd77-60ac-4978-891a-a06679a733e2","redirect":"notes/3401. 寻找环形礼物交换链【困难】/README"},"3402":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"659c994d-0163-41a4-9f25-38188f0b7cf5","redirect":"notes/3402. 使每一列严格递增的最少操作次数【简单】/README"},"3403":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79746168-4b36-4ad8-adaa-d0986eb61b72","redirect":"notes/3403. 从盒子中找出字典序最大的字符串 I【中等】/README"},"3404":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eeb1fcc6-71cb-45c3-8ca5-8a0da2278990","redirect":"notes/3404. 统计特殊子序列的数目【中等】/README"},"3405":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c36c87a6-28ae-4fd0-9a4b-42729f64523c","redirect":"notes/3405. 统计恰好有 K 个相等相邻元素的数组数目【困难】/README"},"3406":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a188d85d-af72-423c-b08a-befa24dc27cb","redirect":"notes/3406. 从盒子中找出字典序最大的字符串 II【困难】/README"},"3407":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0dfae925-d2ea-400a-9236-3bf2acbfde5e","redirect":"notes/3407. 子字符串匹配模式【简单】/README"},"3408":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9227a2ca-89db-4144-94d5-ff901627b1f3","redirect":"notes/3408. 设计任务管理器【中等】/README"},"3409":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8200eab-f6f9-4b7f-9939-a305c3ecdf00","redirect":"notes/3409. 最长相邻绝对差递减子序列【中等】/README"},"3410":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22b5bf06-608b-4b57-b933-709683276f6e","redirect":"notes/3410. 删除所有值为某个元素后的最大子数组和【困难】/README"},"3411":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0c370f9d-ddfc-4342-b8e9-32fbf4d0806a","redirect":"notes/3411. 最长乘积等价子数组【简单】/README"},"3412":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2b906fb-2bd8-4589-89fd-5fcd808dd68a","redirect":"notes/3412. 计算字符串的镜像分数【中等】/README"},"3413":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54e1837c-b773-4283-a147-6e4ca03e81ea","redirect":"notes/3413. 收集连续 K 个袋子可以获得的最多硬币数量【中等】/README"},"3414":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa3f84a5-cf98-422a-9ead-ff989a2dbf05","redirect":"notes/3414. 不重叠区间的最大得分【困难】/README"},"3415":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6631e900-4862-405d-9da4-78b6827e46ec","redirect":"notes/3415. 查找具有三个连续数字的产品【简单】/README"},"3416":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c76bc34-9652-46f6-a67f-a54a45ff06bd","redirect":"notes/3416. 唯一中间众数子序列 II【困难】/README"},"3417":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c3c4e9f6-e6c6-4197-a909-01aa07ab48f5","redirect":"notes/3417. 跳过交替单元格的之字形遍历【简单】/README"},"3418":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d863dffd-fb1a-4aa3-9341-9b82ca03f266","redirect":"notes/3418. 机器人可以获得的最大金币数【中等】/README"},"3419":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ee3e931-c7f8-473a-88fb-ad5b851f3e31","redirect":"notes/3419. 图的最大边权的最小值【中等】/README"},"3420":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5520c6a-09ac-48ff-8d79-e3f01ea9c862","redirect":"notes/3420. 统计 K 次操作以内得到非递减子数组的数目【困难】/README"},"3421":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"253e207b-0325-4070-a9a6-9b559460a6ab","redirect":"notes/3421. 查找进步的学生【中等】/README"},"3422":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"931ee6fa-54be-4f89-b7b1-7894f5220642","redirect":"notes/3422. 将子数组元素变为相等所需的最小操作数【中等】/README"},"3423":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1460dc3a-3934-445a-8cb6-11c280c6450c","redirect":"notes/3423. 循环数组中相邻元素的最大差值【简单】/README"},"3424":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e096498-5ed6-428e-aba9-de549b474b38","redirect":"notes/3424. 将数组变相同的最小代价【中等】/README"},"3425":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cce350a2-b068-42c2-94c2-73fed33bc140","redirect":"notes/3425. 最长特殊路径【困难】/README"},"3426":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"243f1365-f017-4f1a-8476-0ec17ddd66ae","redirect":"notes/3426. 所有安放棋子方案的曼哈顿距离【困难】/README"},"3427":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e11d5280-bb31-4bd2-84c0-e723c31cce21","redirect":"notes/3427. 变长子数组求和【简单】/README"},"3428":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46675bc4-5451-4159-b9f3-6736b6dfaf01","redirect":"notes/3428. 最多 K 个元素的子序列的最值之和【中等】/README"},"3429":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b06b3ed2-a268-4945-867a-de5e2e1b17b8","redirect":"notes/3429. 粉刷房子 IV【中等】/README"},"3430":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e0ee503-f4c5-4475-8586-71fc05972aa7","redirect":"notes/3430. 最多 K 个元素的子数组的最值之和【困难】/README"},"3431":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"720c5e44-97fd-45e7-b086-921f744bc190","redirect":"notes/3431. 对数字排序的最小解锁下标【中等】/README"},"3432":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"39fe9882-f6d9-45f7-be98-b98ed3a2589b","redirect":"notes/3432. 统计元素和差值为偶数的分区方案【简单】/README"},"3433":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5991b4e6-8ead-4893-8c99-4cf141a1bf8f","redirect":"notes/3433. 统计用户被提及情况【中等】/README"},"3434":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2409d248-2b84-4d29-92e7-3983b3aaab3e","redirect":"notes/3434. 子数组操作后的最大频率【中等】/README"},"3435":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f08bb68-e492-4aac-8194-9b94039f7f76","redirect":"notes/3435. 最短公共超序列的字母出现频率【困难】/README"},"3436":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab619c42-5b34-470b-a9ab-1606aec992ad","redirect":"notes/3436. 查找合法邮箱【简单】/README"},"3437":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd649f2a-0f27-42f0-8e25-b73a748116b2","redirect":"notes/3437. 全排列 III【中等】/README"},"3438":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57e639e2-cb51-4d85-8c3d-37f58a192f98","redirect":"notes/3438. 找到字符串中合法的相邻数字【简单】/README"},"3439":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fdfee80-c183-448b-af3c-ca3c26bf6292","redirect":"notes/3439. 重新安排会议得到最多空余时间 I【中等】/README"},"3440":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61c4d176-1043-4c9a-a248-82094bc3b61b","redirect":"notes/3440. 重新安排会议得到最多空余时间 II【中等】/README"},"3441":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e41b09f8-5780-4ec5-8546-c61b5563cf09","redirect":"notes/3441. 变成好标题的最少代价【困难】/README"},"3442":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38f3628b-dc64-4b65-90f7-44222e1887bd","redirect":"notes/3442. 奇偶频次间的最大差值 I【简单】/README"},"3443":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"232eb76a-2ca1-4538-9713-bb1eb224b030","redirect":"notes/3443. K 次修改后的最大曼哈顿距离【中等】/README"},"3444":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5554760e-fe09-45eb-a27a-89947d70b3f2","redirect":"notes/3444. 使数组包含目标值倍数的最少增量【困难】/README"},"3445":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"146318fd-a950-46b3-b799-e78c8a69d95c","redirect":"notes/3445. 奇偶频次间的最大差值 II【困难】/README"},"3446":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc0a08f2-3847-409f-ae85-d26c31912a69","redirect":"notes/3446. 按对角线进行矩阵排序【中等】/README"},"3447":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2df240fb-f9a3-46bc-b5be-3fbb2f77513f","redirect":"notes/3447. 将元素分配给有约束条件的组【中等】/README"},"3448":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98a0661b-b1a0-469e-a0ca-d1b02484c63c","redirect":"notes/3448. 统计可以被最后一个数位整除的子字符串数目【困难】/README"},"3449":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27d866d4-78cf-409d-8b81-7ac3c63edc59","redirect":"notes/3449. 最大化游戏分数的最小值【困难】/README"},"3450":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d9c06ad-4c64-46af-989f-2729bed51c61","redirect":"notes/3450. 一张长椅上的最多学生【简单】/README"},"3451":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4ed734ca-8545-4c11-8f90-86987b71a1a6","redirect":"notes/3451. 查找无效的 IP 地址【困难】/README"},"3452":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21c3ea54-9b51-4488-8985-c4cba59ea2b9","redirect":"notes/3452. 好数字之和【简单】/README"},"3453":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ced1ace-438b-4bec-807f-dc685d28727d","redirect":"notes/3453. 分割正方形 I【中等】/README"},"3454":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"188dbebb-b161-4561-8987-60be84c69fc5","redirect":"notes/3454. 分割正方形 II【困难】/README"},"3455":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19741352-88de-4736-a81f-9826de4ec96a","redirect":"notes/3455. 最短匹配子字符串【困难】/README"},"3456":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fbdb4f4-06f1-47a3-8607-d8815e233584","redirect":"notes/3456. 找出长度为 K 的特殊子字符串【简单】/README"},"3457":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"deb16e8b-8c29-4372-8693-e6d7a948af05","redirect":"notes/3457. 吃披萨【中等】/README"},"3458":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"108452a2-3674-4e1c-a3a9-11e80686e79c","redirect":"notes/3458. 选择 K 个互不重叠的特殊子字符串【中等】/README"},"3459":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"073f308f-3430-4ea6-a5fb-a001e66f9b80","redirect":"notes/3459. 最长 V 形对角线段的长度【困难】/README"},"3460":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"39971c34-1445-458b-b945-93dd1cb6ccef","redirect":"notes/3460. 最多删除一次后的最长公共前缀【中等】/README"},"3461":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db8c432f-e913-4221-84ba-92e178643c44","redirect":"notes/3461. 判断操作后字符串中的数字是否相等 I【简单】/README"},"3462":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b33af3ce-71e2-424f-968e-10f924d68524","redirect":"notes/3462. 提取至多 K 个元素的最大总和【中等】/README"},"3463":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85711daf-ab2a-4fff-9997-137763bdf2c3","redirect":"notes/3463. 判断操作后字符串中的数字是否相等 II【困难】/README"},"3464":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"425bb761-ed5c-4185-9fd7-78a04cd47a3d","redirect":"notes/3464. 正方形上的点之间的最大距离【困难】/README"},"3465":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1cf12bb3-09f3-479c-a532-120257717197","redirect":"notes/3465. 查找具有有效序列号的产品【简单】/README"},"3466":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48e0fd6c-04bd-46e4-a409-9415e69e5a0c","redirect":"notes/3466. 最大硬币收集量【中等】/README"},"3467":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1a51046-3815-4a14-a75e-a7af79bd33d3","redirect":"notes/3467. 将数组按照奇偶性转化【简单】/README"},"3468":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f40ba160-0d8b-4060-9e6d-cc2e634625fe","redirect":"notes/3468. 可行数组的数目【中等】/README"},"3469":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d85c507-cc00-409e-b8c6-13e5637cc1b9","redirect":"notes/3469. 移除所有数组元素的最小代价【中等】/README"},"3470":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7cc435e-06db-4d9e-85b7-6563e48dfafe","redirect":"notes/3470. 全排列 IV【困难】/README"},"3471":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72618f5a-3514-4715-882b-ac44345695ba","redirect":"notes/3471. 找出最大的几近缺失整数【简单】/README"},"3472":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"738a5431-7f55-4dac-89c4-ecf3c671a665","redirect":"notes/3472. 至多 K 次操作后的最长回文子序列【中等】/README"},"3473":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d8db0ae-01c4-4451-903e-797f5207de90","redirect":"notes/3473. 长度至少为 M 的 K 个子数组之和【中等】/README"},"3474":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b3b9429-5f4b-45bd-8feb-ae05e71a2d96","redirect":"notes/3474. 字典序最小的生成字符串【困难】/README"},"3475":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"281b4509-8474-4351-85e4-fff1b8a65111","redirect":"notes/3475. DNA 模式识别【中等】/README"},"3476":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98bff7c9-76ca-4b08-a319-4e0eb24e7545","redirect":"notes/3476. 最大化任务分配的利润【中等】/README"},"3477":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b2589c8-f4f8-4ebe-b43d-57d02618a484","redirect":"notes/3477. 水果成篮 II【简单】/README"},"3478":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0325653-08f4-48c0-99a4-aef500e6f52a","redirect":"notes/3478. 选出和最大的 K 个元素【中等】/README"},"3479":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"558cf7a7-25c2-4e86-bfad-1b6d0757d119","redirect":"notes/3479. 将水果装入篮子 III【中等】/README"},"3480":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"468fc8fd-e3cc-4324-ba5c-340ce549f64d","redirect":"notes/3480. 删除一个冲突对后最大子数组数目【困难】/README"},"3481":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f0f28f0-7b4b-4af7-9b8c-e73dda9557f3","redirect":"notes/3481. 应用替换【中等】/README"},"3482":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"69451b45-463e-4db4-9d1a-a1418194bdff","redirect":"notes/3482. 分析组织层级【困难】/README"},"3483":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c7f6298-4fa0-453f-bd68-eb777f95df27","redirect":"notes/3483. 不同三位偶数的数目【简单】/README"},"3484":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d4b9ae4-745d-478e-94ee-507ea5902184","redirect":"notes/3484. 设计电子表格【中等】/README"},"3485":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67b0a6fb-1774-48ce-b7d7-9f4967ab78e1","redirect":"notes/3485. 删除元素后 K 个字符串的最长公共前缀【困难】/README"},"3486":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2f0670d-57f4-4ab8-afc9-5bbb95892bce","redirect":"notes/3486. 最长特殊路径 II【困难】/README"},"3487":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd3f1b9d-6168-41ed-8650-834ddda8c87f","redirect":"notes/3487. 删除后的最大子数组元素和【简单】/README"},"3488":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba18ee00-fd86-4d7f-8c5c-857cd3b19446","redirect":"notes/3488. 距离最小相等元素查询【中等】/README"},"3489":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0876bb5-583f-4064-bec9-e0d03113b0e9","redirect":"notes/3489. 零数组变换 IV【中等】/README"},"3490":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7565fae-710c-4478-9768-0ec9a3f922c6","redirect":"notes/3490. 统计美丽整数的数目【困难】/README"},"3491":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f8907fd-e4ba-43de-9176-c56c4cc141fe","redirect":"notes/3491. 电话号码前缀【简单】/README"},"3492":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a535bdb-aa87-4da9-84df-1a80facc1713","redirect":"notes/3492. 船上可以装载的最大集装箱数量【简单】/README"},"3493":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e03d2b69-4da6-4119-9616-b243acb0bcb8","redirect":"notes/3493. 属性图【中等】/README"},"3494":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9806cf61-e5c6-4285-8123-aa20e8ea0a1e","redirect":"notes/3494. 酿造药水需要的最少总时间【中等】/README"},"3495":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ec71107-5021-4838-a5b6-3f190cf6dc85","redirect":"notes/3495. 使数组元素都变为零的最少操作次数【困难】/README"},"3496":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c787cbbd-f5ba-4af1-9a94-d5d1b3e51400","redirect":"notes/3496. 最大化配对删除后的得分【中等】/README"},"3497":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f451cd7-b75e-4c0f-ab2f-242ffecfba72","redirect":"notes/3497. 分析订阅转化【中等】/README"},"3498":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"913075af-41e2-4ea1-a545-e8968a264cd2","redirect":"notes/3498. 字符串的反转度【简单】/README"},"3499":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a9e3180-e7f7-4c1a-b0b4-e44c76cfa4a2","redirect":"notes/3499. 操作后最大活跃区段数 I【中等】/README"},"3500":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b4d88fa-ba74-4b65-b30e-a76eebd5f57f","redirect":"notes/3500. 将数组分割为子数组的最小代价【困难】/README"},"3501":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a6e171de-2b54-49c6-8e76-296529a609e1","redirect":"notes/3501. 操作后最大活跃区段数 II【困难】/README"},"3502":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae1fa67d-e2c1-4dcb-9742-3a61c8fb9263","redirect":"notes/3502. 到达每个位置的最小费用【简单】/README"},"3503":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a26feaec-e98c-4768-8273-b98fc7348f5e","redirect":"notes/3503. 子字符串连接后的最长回文串 I【中等】/README"},"3504":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f75e4a7d-91ac-4550-8f01-5fdb58bc18d5","redirect":"notes/3504. 子字符串连接后的最长回文串 II【困难】/README"},"3505":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26f131ff-2a41-4217-8e04-2627695194ab","redirect":"notes/3505. 使 K 个子数组内元素相等的最少操作数【困难】/README"},"3506":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b602cc66-0ade-4991-b9b5-b90148c911e0","redirect":"notes/3506. 查找消除细菌菌株所需时间【困难】/README"},"3507":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fc3a275-278a-446a-8767-dd669810fba4","redirect":"notes/3507. 移除最小数对使数组有序 I【简单】/README"},"3508":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"650b232b-3256-4bfd-8719-c028fd69d5e6","redirect":"notes/3508. 设计路由器【中等】/README"},"3509":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b1f61fb-14a9-4861-9812-26d31adb279b","redirect":"notes/3509. 最大化交错和为 K 的子序列乘积【困难】/README"},"3510":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2490d73-f444-4c11-a7ca-29638ec83cdb","redirect":"notes/3510. 移除最小数对使数组有序 II【困难】/README"},"3511":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2fc89b54-3a41-491b-8d9c-a0b3c452d87f","redirect":"notes/3511. 构造正数组【中等】/README"},"3512":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6ed9c378-08bb-46f9-b2a4-7731df5ff2e0","redirect":"notes/3512. 使数组和能被 K 整除的最少操作次数【简单】/README"},"3513":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c60744d-77f6-438a-abea-f4520905fb84","redirect":"notes/3513. 不同 XOR 三元组的数目 I【中等】/README"},"3514":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4539d333-357b-454e-b634-6dcea047d6b0","redirect":"notes/3514. 不同 XOR 三元组的数目 II【中等】/README"},"3515":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"05c85a5a-d3cf-487b-bfe6-076bce2d15e7","redirect":"notes/3515. 带权树中的最短路径【困难】/README"},"3516":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"28cc7249-2150-45d2-9408-df34bc0d7da5","redirect":"notes/3516. 找到最近的人【简单】/README"},"3517":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf872387-033b-41f3-96ec-e6369db23987","redirect":"notes/3517. 最小回文排列 I【中等】/README"},"3518":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d3dd361-73e9-47e7-b502-d3cbf7a51b6c","redirect":"notes/3518. 最小回文排列 II【困难】/README"},"3519":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02ad53a1-7d22-42d4-a3d4-a4457a85da8d","redirect":"notes/3519. 统计逐位非递减的整数【困难】/README"},"3520":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8da5100-2ec7-4f76-a10b-b1d868a002b7","redirect":"notes/3520. 逆序对计数的最小阈值【中等】/README"},"3521":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c55e6d24-d076-4431-8248-d384b8a5f3c9","redirect":"notes/3521. 查找推荐产品对【中等】/README"},"3522":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1cb92425-1e96-4aab-a2c8-eb524988f9b5","redirect":"notes/3522. 执行指令后的得分【中等】/README"},"3523":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c7956403-c699-444b-a86d-ebea41344918","redirect":"notes/3523. 非递减数组的最大长度【中等】/README"},"3524":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"929f91a9-0d8f-40d6-9919-6a80348a7fc0","redirect":"notes/3524. 求出数组的 X 值 I【中等】/README"},"3525":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"045bba48-5154-4c25-bc5b-a7daf40307ec","redirect":"notes/3525. 求出数组的 X 值 II【困难】/README"},"3526":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ffe6e677-418c-4108-8ecf-aa2c269f6ad5","redirect":"notes/3526. 范围异或查询与子数组反转【困难】/README"},"3527":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"50e5915a-48e5-4eb2-90a5-388643de4931","redirect":"notes/3527. 找到最常见的回答【中等】/README"},"3528":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2c4d412-c65f-419b-b95a-6a9d43fba409","redirect":"notes/3528. 单位转换 I【中等】/README"},"3529":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4be5c8ca-7e74-46c1-b756-b16ad834c482","redirect":"notes/3529. 统计水平子串和垂直子串重叠格子的数目【中等】/README"},"3530":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1263fce6-d67d-4369-88d9-a531b80327ce","redirect":"notes/3530. 有向无环图中合法拓扑排序的最大利润【困难】/README"},"3531":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8efff5c-0ffd-4cad-8e72-eccaf394c1ee","redirect":"notes/3531. 统计被覆盖的建筑【中等】/README"},"3532":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9584a955-83f4-4319-b491-76deed558540","redirect":"notes/3532. 针对图的路径存在性查询 I【中等】/README"},"3533":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"14ec5f77-9a61-460a-96ec-5f11851ce595","redirect":"notes/3533. 判断连接可整除性【困难】/README"},"3534":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b4422ca-06f3-41a7-adbb-745e0cf5228b","redirect":"notes/3534. 针对图的路径存在性查询 II【困难】/README"},"3535":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94df9b92-f7f0-4a98-a2b9-086c03c8fdb9","redirect":"notes/3535. 单位转换 II【中等】/README"},"3536":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d6087e7-0f7a-4125-9bba-079e55612b71","redirect":"notes/3536. 两个数字的最大乘积【简单】/README"},"3537":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d43bd0af-1557-4e90-a38d-6e2b861b608b","redirect":"notes/3537. 填充特殊网格【中等】/README"},"3538":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f08f1a16-2fc7-446a-9082-6afe82a3d6f3","redirect":"notes/3538. 合并得到最小旅行时间【困难】/README"},"3539":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"225981f5-eb20-4e49-8091-ee65638dec4c","redirect":"notes/3539. 魔法序列的数组乘积之和【困难】/README"},"3540":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bbb3630-17ae-4038-920b-f3aea5b69b9c","redirect":"notes/3540. 访问所有房屋的最短时间【中等】/README"},"3541":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab775f0a-95fa-46bb-8127-87279a0001d5","redirect":"notes/3541. 找到频率最高的元音和辅音【简单】/README"},"3542":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b050eb6-34cb-4c3d-a24a-aa187783beed","redirect":"notes/3542. 将所有元素变为 0 的最少操作次数【中等】/README"},"3543":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ccb7a3b7-1bfd-424a-99df-1bcf2410bee5","redirect":"notes/3543. K 条边路径的最大边权和【中等】/README"},"3544":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"155e705b-afa6-4b48-ada0-ee1d59a3f56f","redirect":"notes/3544. 子树反转和【困难】/README"},"3545":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8da5ef31-55f2-4f96-9cbd-6e5e4853f7f1","redirect":"notes/3545. 不同字符数量最多为 K 时的最少删除数【简单】/README"},"3546":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a3c429f-af03-41e5-863f-1e3b40401c4b","redirect":"notes/3546. 等和矩阵分割 I【中等】/README"},"3547":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f6dcc11-8f47-423a-a8ae-8bc84c96312d","redirect":"notes/3547. 图中边值的最大和【困难】/README"},"3548":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca044343-a05d-4181-887f-be6c8a205551","redirect":"notes/3548. 等和矩阵分割 II【困难】/README"},"3549":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6e3756d-38b9-48db-a5fb-34c8314abd71","redirect":"notes/3549. 两个多项式相乘【困难】/README"},"3550":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58ca006a-882a-4dad-b94f-1cfaa02bcfb4","redirect":"notes/3550. 数位和等于下标的最小下标【简单】/README"},"3551":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da12dad4-e026-477a-92e1-d08b6fb39268","redirect":"notes/3551. 数位和排序需要的最小交换次数【中等】/README"},"3552":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8423928e-4466-4566-8d9c-55beae664d5f","redirect":"notes/3552. 网格传送门旅游【中等】/README"},"3553":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1891f32-f87e-4481-ae14-7e803b633d51","redirect":"notes/3553. 包含给定路径的最小带权子树 II【困难】/README"},"3554":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"645f59fa-759e-4402-b7c6-ae04dad0935a","redirect":"notes/3554. 查找类别推荐对【困难】/README"},"3555":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0ca3091-80e8-4900-9428-e39669fe2794","redirect":"notes/3555. 排序每个滑动窗口中最小的子数组【中等】/README"},"3556":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d443418-578c-42cc-9bab-b5efa0b5eb29","redirect":"notes/3556. 最大质数子字符串之和【中等】/README"},"3557":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"635e5230-044e-4e57-bb2b-f3ce95251f08","redirect":"notes/3557. 不相交子字符串的最大数量【中等】/README"},"3558":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21b40622-38eb-4ef6-a394-7a04b26d21cc","redirect":"notes/3558. 给边赋权值的方案数 I【中等】/README"},"3559":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9b96146-3598-4ba7-b3be-fcb0cf9c8b0a","redirect":"notes/3559. 给边赋权值的方案数 II【困难】/README"},"3560":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6bf6a3c0-d60a-4238-80e7-63bdb845e579","redirect":"notes/3560. 木材运输的最小成本【简单】/README"},"3561":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a46f6165-cc74-40b9-8d1b-48f3c827d8b0","redirect":"notes/3561. 移除相邻字符【中等】/README"},"3562":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"319534f2-ff2b-4410-a5b8-6292e1408d01","redirect":"notes/3562. 折扣价交易股票的最大利润【困难】/README"},"3563":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34f1bdc0-3e87-468a-915c-8bbd2dd2c946","redirect":"notes/3563. 移除相邻字符后字典序最小的字符串【困难】/README"},"3564":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0842cb04-e154-4729-a34c-9f01c17f38b5","redirect":"notes/3564. 季节性销售分析【中等】/README"},"3606":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f469846e-cc0c-4642-83f5-aee03f3b4676","redirect":"notes/3606. 优惠券校验器/README"},"9996":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"083fa681-f503-4e8b-bbf7-b349202c8278","redirect":"notes/9996. hello-algo/README"},"9997":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96be1367-640a-4427-97ac-5cd3ce099473","redirect":"notes/9997. GitHub 技术社区 Doocs 开源项目 leetcode/README"},"9998":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"64080630-7267-4891-a46e-69cad745d26c","redirect":"notes/9998. leetcode 刷题指南 - 新手快速入门 - 数据结构、算法/README"},"9999":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"4dfb6761-9c27-47a1-9d85-51ea27a54a32","redirect":"notes/9999. 油猴脚本 - LeetCode 题目描述爬取/README"},"0001":{"bilibili":[],"yuque":["leetcode.0001"],"done":true,"enableDiscussions":true,"id":"e49a53e0-504e-467f-aa27-5d3f4a0d2de3","redirect":"notes/0001. 两数之和【简单】/README"},"0002":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"144a1852-4c9a-4352-8aab-13b8d5d2aac3","redirect":"notes/0002. 两数相加【中等】/README"},"0003":{"bilibili":[],"yuque":["leetcode.0003"],"done":true,"enableDiscussions":true,"id":"6f85db7f-b4d8-4c70-9bd1-98f6f00b8607","redirect":"notes/0003. 无重复字符的最长子串【中等】/README"},"0004":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c66096fc-68e1-4ba6-8130-9d9882983830","redirect":"notes/0004. 寻找两个正序数组的中位数【困难】/README"},"0005":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d77a2807-2d4c-4db8-84f2-66ae8b7988c5","redirect":"notes/0005. 最长回文子串【中等】/README"},"0006":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e1207b3-6e39-44f5-b28f-4f5e7125dcda","redirect":"notes/0006. Z 字形变换【中等】/README"},"0007":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de04cfc4-653e-4ea7-a0e6-e21e25380f57","redirect":"notes/0007. 整数反转【中等】/README"},"0008":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"17cd8c38-7e43-4c4c-ab6b-2925344bba05","redirect":"notes/0008. 字符串转换整数 (atoi)【中等】/README"},"0009":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d901907a-04a6-4e2c-a708-fb21de837854","redirect":"notes/0009. 回文数【简单】/README"},"0010":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"787982b2-c4d8-40bb-a906-3966907f2855","redirect":"notes/0010. 正则表达式匹配【困难】/README"},"0011":{"bilibili":[],"yuque":["leetcode.0011"],"done":false,"enableDiscussions":false,"id":"0cef3aef-2738-4e71-9e84-2a7c683c7612","redirect":"notes/0011. 盛最多水的容器【中等】/README"},"0012":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d60f4420-b6e8-45a8-92c5-cae48ce15960","redirect":"notes/0012. 整数转罗马数字【中等】/README"},"0013":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bdd4815-5991-42cb-90bd-db3354cfc466","redirect":"notes/0013. 罗马数字转整数【简单】/README"},"0014":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c19baba-8112-4548-a8ee-c29a3232a857","redirect":"notes/0014. 最长公共前缀【简单】/README"},"0015":{"bilibili":[],"yuque":["leetcode.0015"],"done":true,"enableDiscussions":true,"id":"662f7bca-37de-4786-b118-324b9fc94393","redirect":"notes/0015. 三数之和【中等】/README"},"0016":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf63d987-99fd-4cec-8d14-6710dd8d4b36","redirect":"notes/0016. 最接近的三数之和【中等】/README"},"0017":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a1736e29-4af5-4e25-9610-dfa37a38464e","redirect":"notes/0017. 电话号码的字母组合【中等】/README"},"0018":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7613ef1-ff77-4220-9b3c-b6685c1c4ccf","redirect":"notes/0018. 四数之和【中等】/README"},"0019":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9387e5c0-9fc0-4f21-af1c-9041a2a63887","redirect":"notes/0019. 删除链表的倒数第 N 个结点【中等】/README"},"0020":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1fb9814-5c00-45c9-89c7-66ccb9047833","redirect":"notes/0020. 有效的括号【简单】/README"},"0021":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d49b5b0-5870-437c-bf72-94ec6e44afd9","redirect":"notes/0021. 合并两个有序链表【简单】/README"},"0022":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"985f543f-78b5-4c8e-a509-ad0b9256600a","redirect":"notes/0022. 括号生成【中等】/README"},"0023":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9926244-2ea3-472c-9c0e-fd152ecdf8c2","redirect":"notes/0023. 合并 K 个升序链表【困难】/README"},"0024":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1cf37c16-ef4d-41ad-b6a9-838408fc3997","redirect":"notes/0024. 两两交换链表中的节点【中等】/README"},"0025":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f399e3e0-75cc-44b8-9eb1-ee853dfdc646","redirect":"notes/0025. K 个一组翻转链表【困难】/README"},"0026":{"bilibili":[],"yuque":["leetcode.0026"],"done":true,"enableDiscussions":true,"id":"a0f40185-9c75-4cbc-a019-90150cac1791","redirect":"notes/0026. 删除有序数组中的重复项【简单】/README"},"0027":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b8408136-e351-4b9c-ae66-e4c905bb81b6","redirect":"notes/0027. 移除元素【简单】/README"},"0028":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"631342b6-bb66-45d2-a72c-9926108ceeda","redirect":"notes/0028. 找出字符串中第一个匹配项的下标【简单】/README"},"0029":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b6f8b25-5f87-4e1f-9da8-c7357e6e7215","redirect":"notes/0029. 两数相除【中等】/README"},"0030":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af7ede54-6670-4846-8416-756f94792b90","redirect":"notes/0030. 串联所有单词的子串【困难】/README"},"0031":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10cd8cac-9b25-4fad-a2a9-c9183002a443","redirect":"notes/0031. 下一个排列【中等】/README"},"0032":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5dbbb03-8f25-413c-bb9b-abf38c34d6fc","redirect":"notes/0032. 最长有效括号【困难】/README"},"0033":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8c6e6109-f68d-437b-923e-cdab28089e33","redirect":"notes/0033. 搜索旋转排序数组【中等】/README"},"0034":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a0fd8d3-0066-4fe2-b83f-d1ca5a9a5fcc","redirect":"notes/0034. 在排序数组中查找元素的第一个和最后一个位置【中等】/README"},"0035":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5720cc3e-fc67-46d8-83bf-2f06c617c609","redirect":"notes/0035. 搜索插入位置【简单】/README"},"0036":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5bac2f16-4a09-4b60-b7bf-91830f21808f","redirect":"notes/0036. 有效的数独【中等】/README"},"0037":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"60d43c71-28cd-4434-b170-b4d8214c4ebf","redirect":"notes/0037. 解数独【困难】/README"},"0038":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8e2cb28-476e-47c7-a4c2-c69f3fdcda14","redirect":"notes/0038. 外观数列【中等】/README"},"0039":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb061976-ca11-4ba8-9f9c-0f3c89dd0d2b","redirect":"notes/0039. 组合总和【中等】/README"},"0040":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f52b24e-0172-4ba9-836d-ec433163b3ab","redirect":"notes/0040. 组合总和 II【中等】/README"},"0041":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f98eb94a-813b-4265-949d-4e1129599c2c","redirect":"notes/0041. 缺失的第一个正数【困难】/README"},"0042":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01c3ce37-bdb1-4f30-87df-1ae5611828b7","redirect":"notes/0042. 接雨水【困难】/README"},"0043":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bca2eb6d-ec26-439e-83d4-df035cf459aa","redirect":"notes/0043. 字符串相乘【中等】/README"},"0044":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4148948b-3cf1-4e16-b51a-e6fb3fb73a29","redirect":"notes/0044. 通配符匹配【困难】/README"},"0045":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b1b69786-9f08-4558-96c2-ade262455faa","redirect":"notes/0045. 跳跃游戏 II【中等】/README"},"0046":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3dc22060-9230-46f1-94ca-9423c40c65d8","redirect":"notes/0046. 全排列【中等】/README"},"0047":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d8c8a11-e26b-4193-8453-e5f828cef393","redirect":"notes/0047. 全排列 II【中等】/README"},"0048":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fdbec9be-6bf0-414d-8e3b-0b74af832b20","redirect":"notes/0048. 旋转图像【中等】/README"},"0049":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67210e39-a8f9-4311-a074-15a88a3529a9","redirect":"notes/0049. 字母异位词分组【中等】/README"},"0050":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5aca43c4-2bbd-4844-b07f-d714dc3a91fc","redirect":"notes/0050. Pow(x, n)【中等】/README"},"0051":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7cc8538-2dff-44c9-849e-3300176b2d97","redirect":"notes/0051. N 皇后【困难】/README"},"0052":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a1bbbca-6ddd-4981-ab5f-31ee1b43ffe3","redirect":"notes/0052. N 皇后 II【困难】/README"},"0053":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63fa3bed-dcf0-4a49-8062-28988c9fc6de","redirect":"notes/0053. 最大子数组和【中等】/README"},"0054":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"48e9e17e-cb04-4cfc-ab93-c11fdc172628","redirect":"notes/0054. 螺旋矩阵【中等】/README"},"0055":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"497bfa5d-dc08-4040-8f97-6f46fea36099","redirect":"notes/0055. 跳跃游戏【中等】/README"},"0056":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"beb35150-e336-48a9-afe7-d027a089b682","redirect":"notes/0056. 合并区间【中等】/README"},"0057":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49140bd1-142c-4fe4-9f0a-43c626f03599","redirect":"notes/0057. 插入区间【中等】/README"},"0058":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"17fd1aa3-cba5-410e-b64a-8fa48b559571","redirect":"notes/0058. 最后一个单词的长度【简单】/README"},"0059":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9cf6ec44-0be4-456f-8a89-d712f7c1cf29","redirect":"notes/0059. 螺旋矩阵 II【中等】/README"},"0060":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c1d9466-692d-4e4b-9087-24cb927a5035","redirect":"notes/0060. 排列序列【困难】/README"},"0061":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2921d1fb-7259-4466-9cef-1ed7e777c699","redirect":"notes/0061. 旋转链表【中等】/README"},"0062":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3dad3730-2236-4b6c-9feb-d0765a1e3333","redirect":"notes/0062. 不同路径【中等】/README"},"0063":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed0a251c-a817-441b-968c-ab0d89424efc","redirect":"notes/0063. 不同路径 II【中等】/README"},"0064":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed5abe49-8e62-42ef-8cfe-b56966ff9398","redirect":"notes/0064. 最小路径和【中等】/README"},"0065":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c045f1ae-b14f-4b7e-a9e4-fc356dccb421","redirect":"notes/0065. 有效数字【困难】/README"},"0066":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ae6c653-ab49-4c70-b6c6-e76a4fc67d30","redirect":"notes/0066. 加一【简单】/README"},"0067":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa193765-ddc9-4378-b930-99e23e4d4f15","redirect":"notes/0067. 二进制求和【简单】/README"},"0068":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86457e3b-38ba-41e9-8fce-a2371cce4020","redirect":"notes/0068. 文本左右对齐【困难】/README"},"0069":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"8bc2697c-b0e3-49e6-bdef-b3bffe4573f2","redirect":"notes/0069. x 的平方根【简单】/README"},"0070":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"37946945-dd29-4fc7-b90e-d4e6bf5dcdda","redirect":"notes/0070. 爬楼梯【简单】/README"},"0071":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a416f54a-d7d0-4974-8482-3f89c45e122c","redirect":"notes/0071. 简化路径【中等】/README"},"0072":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f148c246-67c5-4101-afdf-8a874db977a4","redirect":"notes/0072. 编辑距离【中等】/README"},"0073":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b894249-d54d-4cb8-b68f-0f73826b1414","redirect":"notes/0073. 矩阵置零【中等】/README"},"0074":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4c1210f9-86c1-4c8a-83b8-fd21432720e8","redirect":"notes/0074. 搜索二维矩阵【中等】/README"},"0075":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6dae11dd-dd8b-404e-809f-fe6f7daa0122","redirect":"notes/0075. 颜色分类【中等】/README"},"0076":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea0bb20c-bfd7-4e79-baae-b6fde0a274ee","redirect":"notes/0076. 最小覆盖子串【困难】/README"},"0077":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"afb8024f-99b5-46f0-8425-ab9fc8dcd9a2","redirect":"notes/0077. 组合【中等】/README"},"0078":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c3df77f-caaa-4680-9806-966b344e730c","redirect":"notes/0078. 子集【中等】/README"},"0079":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e409f7bd-36eb-4c18-b19d-991832f76159","redirect":"notes/0079. 单词搜索【中等】/README"},"0080":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33b0c8f1-72aa-408e-a3f7-3825cb896bf1","redirect":"notes/0080. 删除有序数组中的重复项 II【中等】/README"},"0081":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b9af3a22-e6e2-4bba-a3d2-36b803bccb27","redirect":"notes/0081. 搜索旋转排序数组 II【中等】/README"},"0082":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb91110c-641b-4271-bd2e-94941b5124fa","redirect":"notes/0082. 删除排序链表中的重复元素 II【中等】/README"},"0083":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"911e64f9-b9c9-400f-adbd-791145e9cae8","redirect":"notes/0083. 删除排序链表中的重复元素【简单】/README"},"0084":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"641f8f9f-8dcb-4fdb-a5d6-842f8d4d40b0","redirect":"notes/0084. 柱状图中最大的矩形【困难】/README"},"0085":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b53a7682-2955-4780-855a-5937ad24adcf","redirect":"notes/0085. 最大矩形【困难】/README"},"0086":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54ea566e-03cc-43ee-b1fa-4d3995dd05ce","redirect":"notes/0086. 分隔链表【中等】/README"},"0087":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f8e33c1-ed16-4921-b159-da204f748aa8","redirect":"notes/0087. 扰乱字符串【困难】/README"},"0088":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c3fe45a-32a3-44d5-bebc-5cfae3e4a0a8","redirect":"notes/0088. 合并两个有序数组【简单】/README"},"0089":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"66408458-698d-4dc9-874c-503fac7ca060","redirect":"notes/0089. 格雷编码【中等】/README"},"0090":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98353e71-9c32-441f-a96c-326a40000761","redirect":"notes/0090. 子集 II【中等】/README"},"0091":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8b1a222-6e67-4c95-802a-35851e0612b5","redirect":"notes/0091. 解码方法【中等】/README"},"0092":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"547614c0-aed6-4305-9260-1e48cd1daae9","redirect":"notes/0092. 反转链表 II【中等】/README"},"0093":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8087c932-27b8-4826-89bb-be7f9d3df1fe","redirect":"notes/0093. 复原 IP 地址【中等】/README"},"0094":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dfb56a94-7536-4d08-8440-670664ce0887","redirect":"notes/0094. 二叉树的中序遍历【简单】/README"},"0095":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c055e2c-77a6-4f17-8ff2-db75a2cd6285","redirect":"notes/0095. 不同的二叉搜索树 II【中等】/README"},"0096":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0511994-d1ef-4b84-af7e-979427bcc951","redirect":"notes/0096. 不同的二叉搜索树【中等】/README"},"0097":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ba93a46-29a4-4991-b600-2923e8729d91","redirect":"notes/0097. 交错字符串【中等】/README"},"0098":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"578c6338-f4d3-49fd-8f70-a24d44208f54","redirect":"notes/0098. 验证二叉搜索树【中等】/README"},"0099":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e1ca929-b8c6-4acd-8b31-417d0c17ab73","redirect":"notes/0099. 恢复二叉搜索树【中等】/README"},"0100":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"eb742043-534b-4965-8c1e-1c254fc099ba","redirect":"notes/0100. 相同的树【简单】/README"},"0101":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"c3c62884-5fdb-4eb6-8479-228e96a70019","redirect":"notes/0101. 对称二叉树【简单】/README"},"0102":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa89b5a7-f2ce-4729-8109-2943a7600fbc","redirect":"notes/0102. 二叉树的层序遍历【中等】/README"},"0103":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06467f7f-3aa4-48f2-83b5-323a87dd9b67","redirect":"notes/0103. 二叉树的锯齿形层序遍历【中等】/README"},"0104":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"1fc36929-3167-41a2-9e75-6b67807751ef","redirect":"notes/0104. 二叉树的最大深度【简单】/README"},"0105":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10953e9b-3e5f-40eb-8479-e69bc3260448","redirect":"notes/0105. 从前序与中序遍历序列构造二叉树【中等】/README"},"0106":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5707077a-2daf-44be-b453-796338446215","redirect":"notes/0106. 从中序与后序遍历序列构造二叉树【中等】/README"},"0107":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8b9c2a2-624f-44e6-9230-487e214e8a44","redirect":"notes/0107. 二叉树的层序遍历 II【中等】/README"},"0108":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"37b2f794-b45d-4a6a-80f9-f82cc656cdfa","redirect":"notes/0108. 将有序数组转换为二叉搜索树【简单】/README"},"0109":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa89bb53-9f4f-420f-b2ad-484a7d45acd1","redirect":"notes/0109. 有序链表转换二叉搜索树【中等】/README"},"0110":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c3e830c-5bca-4804-9f52-a1ada508f6e9","redirect":"notes/0110. 平衡二叉树【简单】/README"},"0111":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9c351ad-75cc-4697-9cdc-8714ed697b51","redirect":"notes/0111. 二叉树的最小深度【简单】/README"},"0112":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a2cbb93-bd42-4b40-b979-212c599a0ed8","redirect":"notes/0112. 路径总和【简单】/README"},"0113":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c542910c-6d9e-4cc0-ab0d-18b2e395c9e0","redirect":"notes/0113. 路径总和 II【中等】/README"},"0114":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0782b8db-38b9-4078-a105-9022f06eda74","redirect":"notes/0114. 二叉树展开为链表【中等】/README"},"0115":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b66bc2cc-3a50-4cb1-8b7b-b812728ed67f","redirect":"notes/0115. 不同的子序列【困难】/README"},"0116":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d1efca6-e865-4a78-b098-4e27fd9cdfee","redirect":"notes/0116. 填充每个节点的下一个右侧节点指针【中等】/README"},"0117":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b7d8c9a1-0132-493d-803f-a7a29c04bff4","redirect":"notes/0117. 填充每个节点的下一个右侧节点指针 II【中等】/README"},"0118":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0c436f3-4745-4fb7-afb4-c7c90e0a74ba","redirect":"notes/0118. 杨辉三角【简单】/README"},"0119":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f9107417-2adc-4109-8c7b-12504a2464e9","redirect":"notes/0119. 杨辉三角 II【简单】/README"},"0120":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55ec3937-e030-4db6-8740-f161c371e6e2","redirect":"notes/0120. 三角形最小路径和【中等】/README"},"0121":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"18d1fcb9-5ab1-47fb-b7f5-a03b6bc94a00","redirect":"notes/0121. 买卖股票的最佳时机【简单】/README"},"0122":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5bc7ccc8-aeaa-4554-9325-b16d4e794527","redirect":"notes/0122. 买卖股票的最佳时机 II【中等】/README"},"0123":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3b4a04d-8c01-4615-bd0d-ada905665003","redirect":"notes/0123. 买卖股票的最佳时机 III【困难】/README"},"0124":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85e1a371-82a0-4754-a193-1741f951c31f","redirect":"notes/0124. 二叉树中的最大路径和【困难】/README"},"0125":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f433349-b20c-49bc-b974-fd03faed7fb9","redirect":"notes/0125. 验证回文串【简单】/README"},"0126":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6796c19f-d85c-4595-a4ba-1896cf721729","redirect":"notes/0126. 单词接龙 II【困难】/README"},"0127":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a8891255-8c2f-4b2c-8de0-29f0d952e29d","redirect":"notes/0127. 单词接龙【困难】/README"},"0128":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1014dcac-ff0c-469c-ac74-4baeb2052722","redirect":"notes/0128. 最长连续序列【中等】/README"},"0129":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ff059be-6d36-4cbb-9f9e-9ffc60f5ffbd","redirect":"notes/0129. 求根节点到叶节点数字之和【中等】/README"},"0130":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a0822c9b-b156-4383-95a9-e486fcdac0f0","redirect":"notes/0130. 被围绕的区域【中等】/README"},"0131":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"557f7260-bd5a-4c98-8b68-bdce91bef960","redirect":"notes/0131. 分割回文串【中等】/README"},"0132":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d95840de-93d2-4bc4-8678-992fd1a98a1d","redirect":"notes/0132. 分割回文串 II【困难】/README"},"0133":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fe941e3-4bcc-4294-8962-a2ac1dcc9617","redirect":"notes/0133. 克隆图【中等】/README"},"0134":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fd254ca-a123-465f-808e-3c9b14032358","redirect":"notes/0134. 加油站【中等】/README"},"0135":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f1eeeec7-9e40-41bb-bf27-7d88b1b1d7df","redirect":"notes/0135. 分发糖果【困难】/README"},"0136":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80ad9596-5dfa-405c-88bb-a199ed2e7fa6","redirect":"notes/0136. 只出现一次的数字【简单】/README"},"0137":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1340b0b5-93ee-4adf-bf5e-064c52de590a","redirect":"notes/0137. 只出现一次的数字 II【中等】/README"},"0138":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47efb3bc-590e-42e5-8db9-be4928e9c6e5","redirect":"notes/0138. 随机链表的复制【中等】/README"},"0139":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"509d2a59-dbb2-4c0f-8c69-cc34fa2d5681","redirect":"notes/0139. 单词拆分【中等】/README"},"0140":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7109e949-0f58-47e0-b5d6-189b04e33767","redirect":"notes/0140. 单词拆分 II【困难】/README"},"0141":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a38cf81-cb4c-440d-8250-866ea030173c","redirect":"notes/0141. 环形链表【简单】/README"},"0142":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5093053b-350d-41d8-a832-cf2f1adf237b","redirect":"notes/0142. 环形链表 II【中等】/README"},"0143":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"91e1624b-836c-4bba-b8a3-d15b02dec03a","redirect":"notes/0143. 重排链表【中等】/README"},"0144":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0139bf2c-d79b-4863-8ef0-4e79b6b4f561","redirect":"notes/0144. 二叉树的前序遍历【简单】/README"},"0145":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32509402-802b-4821-8e21-10489280dda4","redirect":"notes/0145. 二叉树的后序遍历【简单】/README"},"0146":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd9032f8-1ada-494e-a096-7592786a39f1","redirect":"notes/0146. LRU 缓存【中等】/README"},"0147":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c83862e2-4fec-477d-84b6-651eebd1727f","redirect":"notes/0147. 对链表进行插入排序【中等】/README"},"0148":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfa6220c-a52a-4be2-b293-9aedfb007fae","redirect":"notes/0148. 排序链表【中等】/README"},"0149":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fd09d40-d212-4f7d-aaba-0c99507275e2","redirect":"notes/0149. 直线上最多的点数【困难】/README"},"0150":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15459aa5-2dec-4481-a0e3-86ebebc8341b","redirect":"notes/0150. 逆波兰表达式求值【中等】/README"},"0151":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"347b0e77-8124-45a7-8727-92026ba3cf6a","redirect":"notes/0151. 反转字符串中的单词【中等】/README"},"0152":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d6dfdba9-0b7f-48a3-9acb-5b9bd2f9dd70","redirect":"notes/0152. 乘积最大子数组【中等】/README"},"0153":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eea71ad9-e1d8-456a-8b24-ab2ef251cf5a","redirect":"notes/0153. 寻找旋转排序数组中的最小值【中等】/README"},"0154":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3903d91f-279a-42c8-a2b7-588f0d9d8743","redirect":"notes/0154. 寻找旋转排序数组中的最小值 II【困难】/README"},"0155":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e7599a8-3375-4d42-96ea-44794e4534bb","redirect":"notes/0155. 最小栈【中等】/README"},"0156":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"485f049b-190f-4d4b-a222-57661b1f08b5","redirect":"notes/0156. 上下翻转二叉树【中等】/README"},"0157":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0357cfe0-d9e1-457d-baea-895dcc11f503","redirect":"notes/0157. 用 Read4 读取 N 个字符【简单】/README"},"0158":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6493909-a872-4a6d-9ff3-3c3fdb229455","redirect":"notes/0158. 用 Read4 读取 N 个字符 II - 多次调用【困难】/README"},"0159":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b646404c-de5b-4183-a0ee-072ea0020ab7","redirect":"notes/0159. 至多包含两个不同字符的最长子串【中等】/README"},"0160":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e67163b3-f958-4d66-bb29-472cb918c5b8","redirect":"notes/0160. 相交链表【简单】/README"},"0161":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"638c8880-29c9-4e83-89f6-c774b8b7fec3","redirect":"notes/0161. 相隔为 1 的编辑距离【中等】/README"},"0162":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1fef195a-9a2c-4acd-8bdd-794110bd0f19","redirect":"notes/0162. 寻找峰值【中等】/README"},"0163":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57675f13-3002-4a78-8c7c-790b4a69da2a","redirect":"notes/0163. 缺失的区间【简单】/README"},"0164":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25c25988-1767-4ef7-9c2a-1b70a9fc7138","redirect":"notes/0164. 最大间距【中等】/README"},"0165":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7dc0b088-f42b-4e61-9d61-258062628847","redirect":"notes/0165. 比较版本号【中等】/README"},"0166":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef5895df-2011-4d5c-bc2e-d992d2d2336e","redirect":"notes/0166. 分数到小数【中等】/README"},"0167":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1def1d98-7157-490f-a0b2-b76a46db98c6","redirect":"notes/0167. 两数之和 II - 输入有序数组【中等】/README"},"0168":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fb6a781-8747-4806-98d1-49eeacc7fa93","redirect":"notes/0168. Excel 表列名称【简单】/README"},"0169":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6824bf82-2c4f-4042-920a-ffcddba13b6f","redirect":"notes/0169. 多数元素【简单】/README"},"0170":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5a19d6e2-9fbc-4bd5-a7d8-7e7406f5caeb","redirect":"notes/0170. 两数之和 III - 数据结构设计【简单】/README"},"0171":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c27e5df-b688-4de3-92ae-b77668b27515","redirect":"notes/0171. Excel 表列序号【简单】/README"},"0172":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2a5a9f2e-8a55-4e9b-a0eb-e811f000c33b","redirect":"notes/0172. 阶乘后的零【中等】/README"},"0173":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27c219e5-44a8-429c-909c-dbfa45ddcdef","redirect":"notes/0173. 二叉搜索树迭代器【中等】/README"},"0174":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f117269-3ff7-4219-a571-afc68376a108","redirect":"notes/0174. 地下城游戏【困难】/README"},"0175":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f49e7eb-ca7e-422b-947d-93bb6449e4c3","redirect":"notes/0175. 组合两个表【简单】/README"},"0176":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"debca368-31a8-44ae-9c04-c025545c3d76","redirect":"notes/0176. 第二高的薪水【中等】/README"},"0177":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ab8920e-58d6-4556-be25-6e0997405750","redirect":"notes/0177. 第N高的薪水【中等】/README"},"0178":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fafe4c39-48b8-4fe0-a764-56c38275f1ac","redirect":"notes/0178. 分数排名【中等】/README"},"0179":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5c4e544-b342-471a-bada-08a970011da3","redirect":"notes/0179. 最大数【中等】/README"},"0180":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bc39323-fc8d-4433-b45c-e3e8f3a72142","redirect":"notes/0180. 连续出现的数字【中等】/README"},"0181":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f2bad41a-39b8-47d0-bdc5-90eddf5b9da6","redirect":"notes/0181. 超过经理收入的员工【简单】/README"},"0182":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11192240-0f57-4794-afcf-aa894bdcb83f","redirect":"notes/0182. 查找重复的电子邮箱【简单】/README"},"0183":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b34f6d03-5444-42ce-9a2e-46daa90b8eff","redirect":"notes/0183. 从不订购的客户【简单】/README"},"0184":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b250f64b-5066-41e7-9692-a04c63f2b36d","redirect":"notes/0184. 部门工资最高的员工【中等】/README"},"0185":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2db42d30-0666-4dc0-9c59-479895f4bf0c","redirect":"notes/0185. 部门工资前三高的所有员工【困难】/README"},"0186":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79cba581-b941-491a-960c-3413ac586877","redirect":"notes/0186. 反转字符串中的单词 II【中等】/README"},"0187":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"04b11ade-a0bb-4e63-8ac0-ee3407cd245e","redirect":"notes/0187. 重复的DNA序列【中等】/README"},"0188":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"829bc3d2-a82a-434b-bf10-55e37e17cd52","redirect":"notes/0188. 买卖股票的最佳时机 IV【困难】/README"},"0189":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d9965c18-34e1-4004-9c3c-5b0a063269df","redirect":"notes/0189. 轮转数组【中等】/README"},"0190":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2b9e47e-84af-45a6-a196-29da16d0c0f4","redirect":"notes/0190. 颠倒二进制位【简单】/README"},"0191":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e1e4607-b81e-4006-9283-b50a3436bae1","redirect":"notes/0191. 位1的个数【简单】/README"},"0192":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11f9babf-8c3a-425d-a740-b9eb113b88d8","redirect":"notes/0192. 统计词频【中等】/README"},"0193":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0b7db0b8-eb7b-4e5b-be45-24faa7708d75","redirect":"notes/0193. 有效电话号码【简单】/README"},"0194":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61ba126a-f4f4-4670-a8f4-298e1c18100f","redirect":"notes/0194. 转置文件【中等】/README"},"0195":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e22f2c9e-1934-415a-9064-f66def2d98e9","redirect":"notes/0195. 第十行【简单】/README"},"0196":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b40d7a7-3bdf-4444-9407-644d5d5144dd","redirect":"notes/0196. 删除重复的电子邮箱【简单】/README"},"0197":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4664836-4af0-4a3c-bfe9-36725d46f891","redirect":"notes/0197. 上升的温度【简单】/README"},"0198":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"80e54104-1c2e-4093-b4f9-cadd4f91f751","redirect":"notes/0198. 打家劫舍【中等】/README"},"0199":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c91b2ce9-dd25-4769-af83-d3974b3f965e","redirect":"notes/0199. 二叉树的右视图【中等】/README"},"0200":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d378f815-727a-40f3-9c6d-06194e68cf1b","redirect":"notes/0200. 岛屿数量【中等】/README"},"0201":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a3d1a74-046a-4235-b509-a1392dbdedd0","redirect":"notes/0201. 数字范围按位与【中等】/README"},"0202":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef316762-46eb-4f6c-b1c5-1e4bbb27d0b9","redirect":"notes/0202. 快乐数【简单】/README"},"0203":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e256b030-e447-4ed5-979b-3422a1cf6dcd","redirect":"notes/0203. 移除链表元素【简单】/README"},"0204":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6fe7151c-ca68-422d-ae5e-8d9b6c5a5f99","redirect":"notes/0204. 计数质数【中等】/README"},"0205":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f399b64-82ed-40b0-bb48-55ac3976e870","redirect":"notes/0205. 同构字符串【简单】/README"},"0206":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"84a4039d-ea1b-4720-8021-7316f4f66b66","redirect":"notes/0206. 反转链表【简单】/README"},"0207":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"178e0e61-65f3-49a5-91ef-3043666c2f63","redirect":"notes/0207. 课程表【中等】/README"},"0208":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a7e09d0a-fa03-4eed-9749-e76312232f4c","redirect":"notes/0208. 实现 Trie (前缀树)【中等】/README"},"0209":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5977d4a0-d463-4a36-82a6-36a8d6d1aca1","redirect":"notes/0209. 长度最小的子数组【中等】/README"},"0210":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cbcf57f0-3ee6-41f3-958d-97caaaf8ff06","redirect":"notes/0210. 课程表 II【中等】/README"},"0211":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99794aca-7c65-4b4d-8dba-83fbc871ab40","redirect":"notes/0211. 添加与搜索单词 - 数据结构设计【中等】/README"},"0212":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b856be2-27eb-4b6c-afbf-7d87fc9e33b3","redirect":"notes/0212. 单词搜索 II【困难】/README"},"0213":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bfa1e0f9-fe9c-4ef4-9fd7-da40aaf2a70b","redirect":"notes/0213. 打家劫舍 II【中等】/README"},"0214":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be6dbd57-c125-451b-8b3c-7b6e50b5ae36","redirect":"notes/0214. 最短回文串【困难】/README"},"0215":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3e52de6-4113-491d-a78f-d6edf54a8e85","redirect":"notes/0215. 数组中的第K个最大元素【中等】/README"},"0216":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4f97459d-15e5-47a1-b8d5-4587b30ddf20","redirect":"notes/0216. 组合总和 III【中等】/README"},"0217":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a08e777-79ae-459a-b26e-d672f80615ff","redirect":"notes/0217. 存在重复元素【简单】/README"},"0218":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8c730ae4-f47a-4474-9599-34a5e895aed1","redirect":"notes/0218. 天际线问题【困难】/README"},"0219":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6108039a-ada1-4915-8d57-16956d61d158","redirect":"notes/0219. 存在重复元素 II【简单】/README"},"0220":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0fc75d0f-1aca-4c2d-9cad-9e276ace3dc4","redirect":"notes/0220. 存在重复元素 III【困难】/README"},"0221":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7891cb15-3c01-4611-9bde-e121cad563ed","redirect":"notes/0221. 最大正方形【中等】/README"},"0222":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"afcbf133-e270-4521-b676-3a17259f84a6","redirect":"notes/0222. 完全二叉树的节点个数【简单】/README"},"0223":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0cc0d99a-f7e7-4fea-be9f-1935d011eba0","redirect":"notes/0223. 矩形面积【中等】/README"},"0224":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f293a74b-1ca6-4f4d-a0db-e2f1a6d9dca0","redirect":"notes/0224. 基本计算器【困难】/README"},"0225":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a4bed14-8a35-4823-baa7-167004ab2659","redirect":"notes/0225. 用队列实现栈【简单】/README"},"0226":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6dffb02a-0a00-478a-a7d7-1ca27c6e741a","redirect":"notes/0226. 翻转二叉树【简单】/README"},"0227":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b54cfff-d19e-4e17-9698-c912d02f2a87","redirect":"notes/0227. 基本计算器 II【中等】/README"},"0228":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"0d24d15e-73c7-4f5b-8f51-418c283a22e5","redirect":"notes/0228. 汇总区间【简单】/README"},"0229":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4144ead-b85d-4249-bd93-30aaa12e6ee4","redirect":"notes/0229. 多数元素 II【中等】/README"},"0230":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3fc95b0-0669-422f-9d47-86643b5b2c1d","redirect":"notes/0230. 二叉搜索树中第 K 小的元素【中等】/README"},"0231":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5baf8d27-e79c-40fd-aac7-b777a2cef62b","redirect":"notes/0231. 2 的幂【简单】/README"},"0232":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a09ec326-9cd6-4afd-971a-5a24350ec8a7","redirect":"notes/0232. 用栈实现队列【简单】/README"},"0233":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d770d91-a678-437f-b90a-b22fe95ae9d9","redirect":"notes/0233. 数字 1 的个数【困难】/README"},"0234":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9b06b2a0-62e1-4be0-a955-24dd4421442d","redirect":"notes/0234. 回文链表【简单】/README"},"0235":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57f11e61-3ef2-47fb-a2df-be98278f23fa","redirect":"notes/0235. 二叉搜索树的最近公共祖先【中等】/README"},"0236":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b46effd3-46b8-4927-9c43-bb5a7d09aad2","redirect":"notes/0236. 二叉树的最近公共祖先【中等】/README"},"0237":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"464815d6-11fd-47d5-aa8c-917f1e922ad6","redirect":"notes/0237. 删除链表中的节点【中等】/README"},"0238":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d2c1c9d-a0dc-413e-8b44-0a5c748987a8","redirect":"notes/0238. 除自身以外数组的乘积【中等】/README"},"0239":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ad12883a-cf2b-459a-9b7d-4a30e5ac5c9d","redirect":"notes/0239. 滑动窗口最大值【困难】/README"},"0240":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d220c0f-f484-48eb-be17-e8a19b1d7c95","redirect":"notes/0240. 搜索二维矩阵 II【中等】/README"},"0241":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"715cdee9-86ad-493a-b1ff-2f20feed4546","redirect":"notes/0241. 为运算表达式设计优先级【中等】/README"},"0242":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a371fb63-b008-417e-92a6-f0992637f10a","redirect":"notes/0242. 有效的字母异位词【简单】/README"},"0243":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d66860b4-6473-4040-9189-1d61499f07ce","redirect":"notes/0243. 最短单词距离【简单】/README"},"0244":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94cc26b1-03f5-47f9-ac0d-536565579305","redirect":"notes/0244. 最短单词距离 II【中等】/README"},"0245":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b08b9e1a-49ac-4cda-9a52-56a844d3536e","redirect":"notes/0245. 最短单词距离 III【中等】/README"},"0246":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ebdff1db-08bb-488b-a136-b6ee61916387","redirect":"notes/0246. 中心对称数【简单】/README"},"0247":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"787d2557-3adf-4617-8c5b-dd7dcad21e54","redirect":"notes/0247. 中心对称数 II【中等】/README"},"0248":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4dc85603-0bc2-40b9-8be1-576481d50bc3","redirect":"notes/0248. 中心对称数 III【困难】/README"},"0249":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2174ced9-e591-4872-9ae0-3b4adb378a94","redirect":"notes/0249. 移位字符串分组【中等】/README"},"0250":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1e27a7b-c10f-425e-b67c-bdd5c4862b8e","redirect":"notes/0250. 统计同值子树【中等】/README"},"0251":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0fe5d7e-6c59-44f3-934d-fcb7c9e2c074","redirect":"notes/0251. 展开二维向量【中等】/README"},"0252":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ada2a68-6235-4388-a4a8-5fc292db8e87","redirect":"notes/0252. 会议室【简单】/README"},"0253":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93facaef-d0c8-4858-92f8-582ffd9cee8a","redirect":"notes/0253. 会议室 II【中等】/README"},"0254":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b8f625f-dd14-4635-8054-9fab8146b906","redirect":"notes/0254. 因子的组合【中等】/README"},"0255":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e4df54e3-6028-43b3-b496-0c3db2c0fd05","redirect":"notes/0255. 验证二叉搜索树的前序遍历序列【中等】/README"},"0256":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b41a80f7-0187-42da-a5e9-e61fea30075c","redirect":"notes/0256. 粉刷房子【中等】/README"},"0257":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2822033a-20dc-4d07-8b1d-db24c96bd366","redirect":"notes/0257. 二叉树的所有路径【简单】/README"},"0258":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d03f18d9-6272-4057-a631-c81d9f43c527","redirect":"notes/0258. 各位相加【简单】/README"},"0259":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7fdb6db0-1161-46c5-950d-a100dca0a627","redirect":"notes/0259. 较小的三数之和【中等】/README"},"0260":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96c0f3f1-27a3-4c15-9a04-55ef92f267b3","redirect":"notes/0260. 只出现一次的数字 III【中等】/README"},"0261":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b92076b9-8b99-4a88-a9d3-84fc89891c58","redirect":"notes/0261. 以图判树【中等】/README"},"0262":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55ba2e81-5a33-4b43-bc4f-2c12bc3ca9f6","redirect":"notes/0262. 行程和用户【困难】/README"},"0263":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e5c4926-a33d-4813-b3ee-338628600488","redirect":"notes/0263. 丑数【简单】/README"},"0264":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f68ff50-bb53-4125-9fb5-19fea9b59f85","redirect":"notes/0264. 丑数 II【中等】/README"},"0265":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"812e56a0-13d9-483b-af40-f6d4b540760f","redirect":"notes/0265. 粉刷房子 II【困难】/README"},"0266":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4cba012d-90ab-4bb2-84b1-8f035d76eda1","redirect":"notes/0266. 回文排列【简单】/README"},"0267":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89852c2a-432b-426f-a0db-fadc7c9ad3f7","redirect":"notes/0267. 回文排列 II【中等】/README"},"0268":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"f088186f-4364-4944-b182-24f5a445ebac","redirect":"notes/0268. 丢失的数字【简单】/README"},"0269":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"60654222-4b54-47ae-a99e-cba0d270c9ed","redirect":"notes/0269. 火星词典【困难】/README"},"0270":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b4a7e2be-6dfb-40cf-b855-8564cca8150b","redirect":"notes/0270. 最接近的二叉搜索树值【简单】/README"},"0271":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3f2984c9-0eb0-4a79-97bd-b36b3774c4db","redirect":"notes/0271. 字符串的编码与解码【中等】/README"},"0272":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"34a08560-c6a4-420d-8acb-bc59dd81dde3","redirect":"notes/0272. 最接近的二叉搜索树值 II【困难】/README"},"0273":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc81207b-a124-4e7f-8c98-141ec21b17d8","redirect":"notes/0273. 整数转换英文表示【困难】/README"},"0274":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"012f864d-ba1e-44ce-89d3-f4527c3efbb0","redirect":"notes/0274. H 指数【中等】/README"},"0275":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47375da0-040d-4ae3-a0f5-92048be5fa47","redirect":"notes/0275. H 指数 II【中等】/README"},"0276":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d227b7f5-fe08-4096-9080-7a535d86b1e5","redirect":"notes/0276. 栅栏涂色【中等】/README"},"0277":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5013441-5864-41fc-9cf4-f0e821dbb2bf","redirect":"notes/0277. 搜寻名人【中等】/README"},"0278":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b89173ec-04d6-4be7-960f-529eb110b90c","redirect":"notes/0278. 第一个错误的版本【简单】/README"},"0279":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a276c19-1aa0-43cb-8e27-a91cada1d80e","redirect":"notes/0279. 完全平方数【中等】/README"},"0280":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f98d2a36-a46a-4166-9a4c-035c1fec16e1","redirect":"notes/0280. 摆动排序【中等】/README"},"0281":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd70e28a-c1c3-45f2-b1e1-f7092a17fab8","redirect":"notes/0281. 锯齿迭代器【中等】/README"},"0282":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8471a3c8-08f6-4496-882a-68203b6fabec","redirect":"notes/0282. 给表达式添加运算符【困难】/README"},"0283":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c1b44d7-4c55-444b-ba43-cffadcbacb30","redirect":"notes/0283. 移动零【简单】/README"},"0284":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e2e59b2-4fa2-42d1-bded-802b833361df","redirect":"notes/0284. 窥视迭代器【中等】/README"},"0285":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da7a114d-fbea-4a17-a1ab-2b11afdd61b0","redirect":"notes/0285. 二叉搜索树中的中序后继【中等】/README"},"0286":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dbde9fef-d2b0-48a6-b0cf-c4165fc4303a","redirect":"notes/0286. 墙与门【中等】/README"},"0287":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec748fa4-78e8-432e-833b-1e6e2fa948d3","redirect":"notes/0287. 寻找重复数【中等】/README"},"0288":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"69814bac-d92c-4cab-ae82-e16c9ab2de2a","redirect":"notes/0288. 单词的唯一缩写【中等】/README"},"0289":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e62e483e-a38a-4347-97d0-ca6384dda223","redirect":"notes/0289. 生命游戏【中等】/README"},"0290":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5f0265f-86a2-47c4-befa-8ac4c6023fb0","redirect":"notes/0290. 单词规律【简单】/README"},"0291":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ec483b9-26e9-43e4-b51b-cec05ace7365","redirect":"notes/0291. 单词规律 II【中等】/README"},"0292":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4e962e8-916c-42e5-bc93-aa79449ce775","redirect":"notes/0292. Nim 游戏【简单】/README"},"0293":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d192de98-a7b8-4d06-add2-0f4f47e4d6a0","redirect":"notes/0293. 翻转游戏【简单】/README"},"0294":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aec6842e-be9a-4d4e-bde1-94d2fa13f29b","redirect":"notes/0294. 翻转游戏 II【中等】/README"},"0295":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b803dcfb-e9ce-4999-b07d-fe089bcf950e","redirect":"notes/0295. 数据流的中位数【困难】/README"},"0296":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0b51b881-8b5d-4e25-9f99-f2ea05a80ca5","redirect":"notes/0296. 最佳的碰头地点【困难】/README"},"0297":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2486e17b-60cc-4d04-8292-ac053b4c1a81","redirect":"notes/0297. 二叉树的序列化与反序列化【困难】/README"},"0298":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47fcea05-ecdc-46df-9263-ef0cd5153417","redirect":"notes/0298. 二叉树最长连续序列【中等】/README"},"0299":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6320d935-726c-4e98-b0b0-12c1e2fa379f","redirect":"notes/0299. 猜数字游戏【中等】/README"},"0300":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61adf816-e585-4393-800a-0f8fd1aca8a8","redirect":"notes/0300. 最长递增子序列【中等】/README"},"0301":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b89d78e0-5eb2-4196-9929-d1d99d6d6918","redirect":"notes/0301. 删除无效的括号【困难】/README"},"0302":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be25b21a-18e1-4afb-a547-202eb6baa453","redirect":"notes/0302. 包含全部黑色像素的最小矩形【困难】/README"},"0303":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"a62d2259-8422-4091-ae82-09cf67003533","redirect":"notes/0303. 区域和检索 - 数组不可变【简单】/README"},"0304":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0feaabd7-ad82-4265-af02-226d8165bb80","redirect":"notes/0304. 二维区域和检索 - 矩阵不可变【中等】/README"},"0305":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab28c724-b575-4fd6-b922-e78b4c3e8acb","redirect":"notes/0305. 岛屿数量 II【困难】/README"},"0306":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd078d9d-21b9-42c6-a7a6-37838f9b6fe4","redirect":"notes/0306. 累加数【中等】/README"},"0307":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2b2bf2e-79e5-4816-bb36-05d4ecf57d83","redirect":"notes/0307. 区域和检索 - 数组可修改【中等】/README"},"0308":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b98f5eef-10c0-4ce0-99a1-1cfe99d68bcc","redirect":"notes/0308. 二维区域和检索 - 矩阵可修改【中等】/README"},"0309":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f9c666e-f153-4d03-93ec-c598bd47f0ac","redirect":"notes/0309. 买卖股票的最佳时机含冷冻期【中等】/README"},"0310":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f57836f3-3927-49b0-a6ad-c65c45a9307c","redirect":"notes/0310. 最小高度树【中等】/README"},"0311":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fa543983-8b33-4243-aebb-076e37ce1486","redirect":"notes/0311. 稀疏矩阵的乘法【中等】/README"},"0312":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"25e08e3c-e6cd-497f-84eb-5c769ca6ecd1","redirect":"notes/0312. 戳气球【困难】/README"},"0313":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9e18a20-acf5-4007-8c79-0d144ab8633b","redirect":"notes/0313. 超级丑数【中等】/README"},"0314":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed40b727-91f4-460c-9b65-813a3981b612","redirect":"notes/0314. 二叉树的垂直遍历【中等】/README"},"0315":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d0ec530-7b1c-4901-a2ad-86509df0f15a","redirect":"notes/0315. 计算右侧小于当前元素的个数【困难】/README"},"0316":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3ef066cf-d770-4e4f-ae0e-38103c84c269","redirect":"notes/0316. 去除重复字母【中等】/README"},"0317":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"600f0a40-99ee-402c-b649-9454c2cb7d40","redirect":"notes/0317. 离建筑物最近的距离【困难】/README"},"0318":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0c91c20c-ed97-43ff-acd4-51313ed4fb34","redirect":"notes/0318. 最大单词长度乘积【中等】/README"},"0319":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1735e26d-3b8b-4687-a7a9-bc0eca42902c","redirect":"notes/0319. 灯泡开关【中等】/README"},"0320":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a4af73d-41e0-4fda-a3ba-17814c3889c0","redirect":"notes/0320. 列举单词的全部缩写【中等】/README"},"0321":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"668231bd-24b5-49f5-8bc5-f7a57d7e3b57","redirect":"notes/0321. 拼接最大数【困难】/README"},"0322":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f659205-0d6e-4fad-93d0-d7c8d9919e3e","redirect":"notes/0322. 零钱兑换【中等】/README"},"0323":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22e3060c-cced-49ce-966a-43506c415e34","redirect":"notes/0323. 无向图中连通分量的数目【中等】/README"},"0324":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5fb69245-4a15-4395-b65c-8e0ea7277f88","redirect":"notes/0324. 摆动排序 II【中等】/README"},"0325":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3de08797-a4aa-4ce1-b457-3daba9195fd4","redirect":"notes/0325. 和等于 k 的最长子数组长度【中等】/README"},"0326":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de36c13b-4f16-41f5-8ad5-5d29d661ae38","redirect":"notes/0326. 3 的幂【简单】/README"},"0327":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46a25bdb-d75d-4d91-8f70-1fb61d066365","redirect":"notes/0327. 区间和的个数【困难】/README"},"0328":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d166212-3810-4ccb-b8fe-8763a9725d10","redirect":"notes/0328. 奇偶链表【中等】/README"},"0329":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"830ff505-b35b-4dad-9567-7b54161b3178","redirect":"notes/0329. 矩阵中的最长递增路径【困难】/README"},"0330":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d99803b9-21b3-45b1-9018-b2adb140a2bc","redirect":"notes/0330. 按要求补齐数组【困难】/README"},"0331":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01df88c8-1f95-4e3c-903f-d56e30e56293","redirect":"notes/0331. 验证二叉树的前序序列化【中等】/README"},"0332":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"04a51c6b-cc2c-49bd-be7a-8d908fa82e01","redirect":"notes/0332. 重新安排行程【困难】/README"},"0333":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06eb4d8c-f324-45d8-99e1-41e9085d510d","redirect":"notes/0333. 最大二叉搜索子树【中等】/README"},"0334":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5726bb46-2a42-4a2d-a679-a55fc8a1a216","redirect":"notes/0334. 递增的三元子序列【中等】/README"},"0335":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"19498397-51ad-4de6-ab2f-6cc14df9f5e5","redirect":"notes/0335. 路径交叉【困难】/README"},"0336":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c4887f34-8349-49b2-8fd0-5f8c8fe79ff0","redirect":"notes/0336. 回文对【困难】/README"},"0337":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e27aa13-6dc2-4aab-8029-f001d2811852","redirect":"notes/0337. 打家劫舍 III【中等】/README"},"0338":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"12962a70-1113-4018-b469-2d6c208bea6f","redirect":"notes/0338. 比特位计数【简单】/README"},"0339":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d77c9c03-e396-4991-a882-5b3e7837d3ad","redirect":"notes/0339. 嵌套列表加权和【中等】/README"},"0340":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"564e04fd-a651-4404-9e77-06f8a4cbf74e","redirect":"notes/0340. 至多包含 K 个不同字符的最长子串【中等】/README"},"0341":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1e9838d-2526-4407-bff5-87eda7bd96ce","redirect":"notes/0341. 扁平化嵌套列表迭代器【中等】/README"},"0342":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3d0c4c1b-6d22-43e4-b0ab-a4d888e107bb","redirect":"notes/0342. 4的幂【简单】/README"},"0343":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0cd874a-6128-4ba5-a96b-14174df50e36","redirect":"notes/0343. 整数拆分【中等】/README"},"0344":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1dafc87c-3bc0-4db1-bfb1-144b3e6e3790","redirect":"notes/0344. 反转字符串【简单】/README"},"0345":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b7d7f449-4bbb-4321-b6a3-ca0c719ee9a5","redirect":"notes/0345. 反转字符串中的元音字母【简单】/README"},"0346":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cdd51787-1434-4140-8bb9-a314649a50a8","redirect":"notes/0346. 数据流中的移动平均值【简单】/README"},"0347":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d63c8c1a-68ce-4b04-bed9-048cfd06c018","redirect":"notes/0347. 前 K 个高频元素【中等】/README"},"0348":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1465e471-5de0-46d8-9282-ef9da90d5431","redirect":"notes/0348. 设计井字棋【中等】/README"},"0349":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"74a4c7dd-9b77-46df-acf8-18fb9b75fbdd","redirect":"notes/0349. 两个数组的交集【简单】/README"},"0350":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"584dcbc6-5dbc-49c9-a0b9-784abc5b819f","redirect":"notes/0350. 两个数组的交集 II【简单】/README"},"0351":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8f1b926b-fe3c-4e32-aea0-c1da76952296","redirect":"notes/0351. 安卓系统手势解锁【中等】/README"},"0352":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4ef4c8c3-037c-4de9-b4e4-56b79b7809c6","redirect":"notes/0352. 将数据流变为多个不相交区间【困难】/README"},"0353":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c116183-284d-4b38-9e34-d0620e1952b8","redirect":"notes/0353. 贪吃蛇【中等】/README"},"0354":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e6f75b4-6b31-45b0-b2e0-09dfe832fc18","redirect":"notes/0354. 俄罗斯套娃信封问题【困难】/README"},"0355":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d1c24a9-f0da-4719-8060-addaaccf168f","redirect":"notes/0355. 设计推特【中等】/README"},"0356":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79d023dc-6fc2-4bc8-9ff7-c6db3e0a1990","redirect":"notes/0356. 直线镜像【中等】/README"},"0357":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"85579ef3-e763-42b7-9c2c-5deecbcaa04a","redirect":"notes/0357. 统计各位数字都不同的数字个数【中等】/README"},"0358":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23572213-829b-465e-ae5e-cba92dee3ce9","redirect":"notes/0358. K 距离间隔重排字符串【困难】/README"},"0359":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb8fc976-6751-4efa-924f-154d0ad1df8b","redirect":"notes/0359. 日志速率限制器【简单】/README"},"0360":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0220a1ce-deb7-486e-80ae-fd95fa3bd2f1","redirect":"notes/0360. 有序转化数组【中等】/README"},"0361":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c2c310d-44a3-40e9-8156-ea6902459155","redirect":"notes/0361. 轰炸敌人【中等】/README"},"0362":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c489f0e1-8d83-4108-b46c-cced55ca247d","redirect":"notes/0362. 敲击计数器【中等】/README"},"0363":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea1194bb-bb56-40b5-ab94-88177de893b7","redirect":"notes/0363. 矩形区域不超过 K 的最大数值和【困难】/README"},"0364":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"452caa73-3212-4fd6-9de1-1093008f426c","redirect":"notes/0364. 嵌套列表加权和 II【中等】/README"},"0365":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"829dff19-d31e-4802-8f88-392afb8354fa","redirect":"notes/0365. 水壶问题【中等】/README"},"0366":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a7841e6-f77d-4e88-996b-11dade60a312","redirect":"notes/0366. 寻找二叉树的叶子节点【中等】/README"},"0367":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0751a7fc-5ca7-4e73-9288-34264a0fbd8e","redirect":"notes/0367. 有效的完全平方数【简单】/README"},"0368":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"998ede02-0fb3-461c-a9da-3617c729a1ac","redirect":"notes/0368. 最大整除子集【中等】/README"},"0369":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a725de3-c0b8-43a7-a624-1d5fcefbac1a","redirect":"notes/0369. 给单链表加一【中等】/README"},"0370":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00eaa325-a148-4edf-b210-2070d1b1f201","redirect":"notes/0370. 区间加法【中等】/README"},"0371":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a16cac37-381a-4340-9d01-66e28fef6b63","redirect":"notes/0371. 两整数之和【中等】/README"},"0372":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6b32c8e7-00fa-4c8b-95a7-22989534e704","redirect":"notes/0372. 超级次方【中等】/README"},"0373":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf771052-0f8e-4fd5-97a7-b73ac00d87cc","redirect":"notes/0373. 查找和最小的 K 对数字【中等】/README"},"0374":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6319194c-5492-4cd7-bb70-557c8efe2407","redirect":"notes/0374. 猜数字大小【简单】/README"},"0375":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32cc00fb-f477-406d-92a0-3ffd75513e19","redirect":"notes/0375. 猜数字大小 II【中等】/README"},"0376":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2dac2e39-4506-425a-b21f-3b0c71db04e7","redirect":"notes/0376. 摆动序列【中等】/README"},"0377":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3884b96f-43da-4be9-94f8-2015b85c08c4","redirect":"notes/0377. 组合总和 Ⅳ【中等】/README"},"0378":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"141d6327-a91c-4368-ac76-ee2353e10a6c","redirect":"notes/0378. 有序矩阵中第 K 小的元素【中等】/README"},"0379":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62b65cb7-553e-47a3-9b38-96b2c451cb16","redirect":"notes/0379. 电话目录管理系统【中等】/README"},"0380":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49c411cf-c502-404f-b730-679ff36d0216","redirect":"notes/0380. O(1) 时间插入、删除和获取随机元素【中等】/README"},"0381":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24103954-3033-40a2-81f5-718cf5ac4a87","redirect":"notes/0381. O(1) 时间插入、删除和获取随机元素 - 允许重复【困难】/README"},"0382":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5d3ec8b-18f7-4b48-91e8-56a847c61305","redirect":"notes/0382. 链表随机节点【中等】/README"},"0383":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be36e4f1-5a19-4cb6-8567-76d6a7b4bfd4","redirect":"notes/0383. 赎金信【简单】/README"},"0384":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f620b5f5-fe12-40c8-8e9a-46a79d53c6cf","redirect":"notes/0384. 打乱数组【中等】/README"},"0385":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"edcf6485-6fd4-49c3-8626-4961bf6ffb80","redirect":"notes/0385. 迷你语法分析器【中等】/README"},"0386":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d6a258f-1485-4c39-adc2-9f2008a32f81","redirect":"notes/0386. 字典序排数【中等】/README"},"0387":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ebda416-2835-4f0c-ae4a-34a2229855e3","redirect":"notes/0387. 字符串中的第一个唯一字符【简单】/README"},"0388":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92d1f8c3-870c-45f2-ace5-de1de469a9c9","redirect":"notes/0388. 文件的最长绝对路径【中等】/README"},"0389":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"094fd908-a42c-438e-a5a8-06fe7732ed08","redirect":"notes/0389. 找不同【简单】/README"},"0390":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca616c26-6b88-4c9a-9b99-027217cf36bd","redirect":"notes/0390. 消除游戏【中等】/README"},"0391":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21445ea7-d08f-4c13-96aa-d296ebd68ed9","redirect":"notes/0391. 完美矩形【困难】/README"},"0392":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fc67dfef-6896-4f69-951f-f199ac658c9e","redirect":"notes/0392. 判断子序列【简单】/README"},"0393":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e5257c05-6767-4697-9bac-3fcd7af47a94","redirect":"notes/0393. UTF-8 编码验证【中等】/README"},"0394":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bde21380-b2e9-4832-900b-d334e743ef9c","redirect":"notes/0394. 字符串解码【中等】/README"},"0395":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a494aa03-8415-4cdc-ad02-c232d24d5b3a","redirect":"notes/0395. 至少有 K 个重复字符的最长子串【中等】/README"},"0396":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fcb28deb-ab0e-482e-b3c0-99877aa1bb46","redirect":"notes/0396. 旋转函数【中等】/README"},"0397":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33c159ae-b782-4feb-8475-ea28955c2f84","redirect":"notes/0397. 整数替换【中等】/README"},"0398":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"51136b97-b38d-4e38-a4b4-b2f592f6a4d1","redirect":"notes/0398. 随机数索引【中等】/README"},"0399":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e116ce21-3ee8-4b36-8476-06c7225310c2","redirect":"notes/0399. 除法求值【中等】/README"},"0400":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fdf5677-8def-41ba-bce3-edd6fda78126","redirect":"notes/0400. 第 N 位数字【中等】/README"},"0401":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be373327-3b9c-4494-bbee-5a333c094817","redirect":"notes/0401. 二进制手表【简单】/README"},"0402":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42136c35-d34e-4373-95b3-bd236b1aa5a8","redirect":"notes/0402. 移掉 K 位数字【中等】/README"},"0403":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7ad0e7cb-f5ac-4114-8b31-d9436c2f5f21","redirect":"notes/0403. 青蛙过河【困难】/README"},"0404":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8dd677f-9300-4b48-a693-108a2c390bf6","redirect":"notes/0404. 左叶子之和【简单】/README"},"0405":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"debfa9c6-d022-4b64-be94-5a88a69864ae","redirect":"notes/0405. 数字转换为十六进制数【简单】/README"},"0406":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f10c02e-fea2-4dd9-a890-420f2f90b6d7","redirect":"notes/0406. 根据身高重建队列【中等】/README"},"0407":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"46e6108d-d36a-4c49-b69a-380c5c1f38e5","redirect":"notes/0407. 接雨水 II【困难】/README"},"0408":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1f36208-d82e-4d62-bd07-92fb9814e0c7","redirect":"notes/0408. 有效单词缩写【简单】/README"},"0409":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5406780-5efe-4e52-9d62-d15e8bf285bf","redirect":"notes/0409. 最长回文串【简单】/README"},"0410":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a59e63f8-0dd8-47b0-aa09-45361a7778b6","redirect":"notes/0410. 分割数组的最大值【困难】/README"},"0411":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"01e2b0f8-cc4f-4a08-aaea-7a5629554e78","redirect":"notes/0411. 最短独占单词缩写【困难】/README"},"0412":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72738287-587a-4e38-99d6-2a07e06cb904","redirect":"notes/0412. Fizz Buzz【简单】/README"},"0413":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1da836da-09c1-4950-8f04-090f9018ed4a","redirect":"notes/0413. 等差数列划分【中等】/README"},"0414":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"42bee06f-7269-4670-83e0-b94b70ee1ee6","redirect":"notes/0414. 第三大的数【简单】/README"},"0415":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a276b26-dbe8-4b62-91b5-93dd096692b6","redirect":"notes/0415. 字符串相加【简单】/README"},"0416":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4ee626f-0791-4d14-a02a-c5afa2021288","redirect":"notes/0416. 分割等和子集【中等】/README"},"0417":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1626e9f9-475b-4e7c-8441-6e721d5bdd4e","redirect":"notes/0417. 太平洋大西洋水流问题【中等】/README"},"0418":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6001d777-052b-40ab-9e45-bbd54a22aacd","redirect":"notes/0418. 屏幕可显示句子的数量【中等】/README"},"0419":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58c6c482-0329-4131-aca0-1ed9d7a4d4ec","redirect":"notes/0419. 棋盘上的战舰【中等】/README"},"0420":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"612db666-e001-4502-a5f3-e39a563d70ff","redirect":"notes/0420. 强密码检验器【困难】/README"},"0421":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b45e3f6-dcae-4958-be3c-480fe9d8acb2","redirect":"notes/0421. 数组中两个数的最大异或值【中等】/README"},"0422":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"463b3bdc-e713-4c25-b47d-931c3d938619","redirect":"notes/0422. 有效的单词方块【简单】/README"},"0423":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5f468275-969f-4ac1-a449-19e29eb3948e","redirect":"notes/0423. 从英文中重建数字【中等】/README"},"0424":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"77b81175-d8ba-452c-8468-9e04412b971a","redirect":"notes/0424. 替换后的最长重复字符【中等】/README"},"0425":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f650b8f9-bb76-41f6-a18a-d98e285067b2","redirect":"notes/0425. 单词方块【困难】/README"},"0426":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0c175909-162b-4f8f-91a1-f8a4b630ed23","redirect":"notes/0426. 将二叉搜索树转化为排序的双向链表【中等】/README"},"0427":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f7c493f-348e-43fe-a77d-fb9c60186a9a","redirect":"notes/0427. 建立四叉树【中等】/README"},"0428":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24719683-a628-43c4-bcad-514fbea50b70","redirect":"notes/0428. 序列化和反序列化 N 叉树【困难】/README"},"0429":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a2165320-e419-4e7b-a436-ae163887185f","redirect":"notes/0429. N 叉树的层序遍历【中等】/README"},"0430":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58b50ca7-72a0-42b7-9b83-0290d8dd126f","redirect":"notes/0430. 扁平化多级双向链表【中等】/README"},"0431":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49a78479-68c4-46ea-8b36-34a32a27bc66","redirect":"notes/0431. 将 N 叉树编码为二叉树【困难】/README"},"0432":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d943a2bf-40e9-44d2-81ec-8b71a756a770","redirect":"notes/0432. 全 O(1) 的数据结构【困难】/README"},"0433":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"40f26ec7-41ee-47af-a3a5-c53f8cec6cb6","redirect":"notes/0433. 最小基因变化【中等】/README"},"0434":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e93ed8c-d9c4-4ab4-bac0-c70a963be58f","redirect":"notes/0434. 字符串中的单词数【简单】/README"},"0435":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"845f619c-e508-4010-b6f6-dc7ac51fab1e","redirect":"notes/0435. 无重叠区间【中等】/README"},"0436":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e084ef87-1a2b-44b5-9999-fb396e3e1e87","redirect":"notes/0436. 寻找右区间【中等】/README"},"0437":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea8dbcee-9b84-4a5c-9bef-fccb3425a178","redirect":"notes/0437. 路径总和 III【中等】/README"},"0438":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1239f476-d69b-47fd-a32b-e9a4ec2ff8c0","redirect":"notes/0438. 找到字符串中所有字母异位词【中等】/README"},"0439":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22917f62-de09-4d8d-8136-80a8b9b84b61","redirect":"notes/0439. 三元表达式解析器【中等】/README"},"0440":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0cdec68f-7aa6-4894-96a7-318bfd9e68cd","redirect":"notes/0440. 字典序的第K小数字【困难】/README"},"0441":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38489727-ea4d-48df-a924-69e3ff59d259","redirect":"notes/0441. 排列硬币【简单】/README"},"0442":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef68f7a8-e04f-48ff-ba9c-b1dcb4b4aa84","redirect":"notes/0442. 数组中重复的数据【中等】/README"},"0443":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c6910a2-adf7-49c0-981a-6de3379e9938","redirect":"notes/0443. 压缩字符串【中等】/README"},"0444":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6f076b12-561f-4ccd-8041-1fde49e84d37","redirect":"notes/0444. 序列重建【中等】/README"},"0445":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb9253ce-dcd0-40b2-8c74-de2b39b84eea","redirect":"notes/0445. 两数相加 II【中等】/README"},"0446":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"058c7e1f-a4f3-4088-8868-f18da587f2e1","redirect":"notes/0446. 等差数列划分 II - 子序列【困难】/README"},"0447":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b74bb2f-260a-4b20-89a3-8f4462fe407c","redirect":"notes/0447. 回旋镖的数量【中等】/README"},"0448":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"b53b706f-cd57-40f7-9146-b47eeba792b1","redirect":"notes/0448. 找到所有数组中消失的数字【简单】/README"},"0449":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae976125-cd92-4516-ad43-6a20c775a558","redirect":"notes/0449. 序列化和反序列化二叉搜索树【中等】/README"},"0450":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"974c4cee-2437-4124-b520-cbf85d4d4d59","redirect":"notes/0450. 删除二叉搜索树中的节点【中等】/README"},"0451":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"490deb8b-b92c-4cb4-8d06-1dc4136c1903","redirect":"notes/0451. 根据字符出现频率排序【中等】/README"},"0452":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd481ba1-f069-413e-8d60-9eba411ee3bb","redirect":"notes/0452. 用最少数量的箭引爆气球【中等】/README"},"0453":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5abf7be3-557a-4b28-a252-73a3c32c8782","redirect":"notes/0453. 最小操作次数使数组元素相等【中等】/README"},"0454":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d37198ab-80d4-432e-9124-86a54d39889e","redirect":"notes/0454. 四数相加 II【中等】/README"},"0455":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"73a36778-91fc-4d9f-b4ba-0d62da394a45","redirect":"notes/0455. 分发饼干【简单】/README"},"0456":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6bd8391a-3b0c-437b-a640-fa2530b4faa4","redirect":"notes/0456. 132 模式【中等】/README"},"0457":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5bd24b86-a4a1-40d4-965f-dc2f611068e9","redirect":"notes/0457. 环形数组是否存在循环【中等】/README"},"0458":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b974987e-7af9-4f5b-982c-5b44953233e3","redirect":"notes/0458. 可怜的小猪【困难】/README"},"0459":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e6f4105-d636-4360-939b-1c63a9b70d1c","redirect":"notes/0459. 重复的子字符串【简单】/README"},"0460":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c471b983-1a62-4f44-bcce-c4e5e2e37bf2","redirect":"notes/0460. LFU 缓存【困难】/README"},"0461":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"325473cb-0c31-4309-90e6-69c084be2818","redirect":"notes/0461. 汉明距离【简单】/README"},"0462":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef932928-599c-494b-a3c3-3af98c93ab52","redirect":"notes/0462. 最小操作次数使数组元素相等 II【中等】/README"},"0463":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"73f5d4b8-9d92-4ea8-8863-2fdfc1ec4197","redirect":"notes/0463. 岛屿的周长【简单】/README"},"0464":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8a5271ff-9030-47a7-97d6-9bc0953626ea","redirect":"notes/0464. 我能赢吗【中等】/README"},"0465":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb1f7c7b-0e93-4f58-9405-2677863a3cfa","redirect":"notes/0465. 最优账单平衡【困难】/README"},"0466":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ba276695-df7c-43ab-bedb-3139322329bb","redirect":"notes/0466. 统计重复个数【困难】/README"},"0467":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fed0109a-297a-418d-b531-57ac080ff038","redirect":"notes/0467. 环绕字符串中唯一的子字符串【中等】/README"},"0468":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65ea2d1c-8489-4a6e-a39c-436ef3904c86","redirect":"notes/0468. 验证IP地址【中等】/README"},"0469":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb917be0-fd9d-4a96-ab86-f35c968cbdfe","redirect":"notes/0469. 凸多边形【中等】/README"},"0470":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a8c973c-e676-4ee9-aba4-eb759c9e3272","redirect":"notes/0470. 用 Rand7() 实现 Rand10()【中等】/README"},"0471":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"541eee79-4a35-4d35-b094-da7e6e6bb9c8","redirect":"notes/0471. 编码最短长度的字符串【困难】/README"},"0472":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02daa7c4-b5d1-4a02-82a6-3bb778a9c60e","redirect":"notes/0472. 连接词【困难】/README"},"0473":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9607d4c9-1675-409f-8875-1c12c28dfb24","redirect":"notes/0473. 火柴拼正方形【中等】/README"},"0474":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ad7ec34-8364-4f2e-8b7b-104cf19abe7a","redirect":"notes/0474. 一和零【中等】/README"},"0475":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41941a32-b32c-4540-b29f-2898f845d37f","redirect":"notes/0475. 供暖器【中等】/README"},"0476":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47bb3361-14bc-4151-ba00-9c4588e5fd63","redirect":"notes/0476. 数字的补数【简单】/README"},"0477":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6de3e698-bc88-41c7-811e-234a37a7d7fd","redirect":"notes/0477. 汉明距离总和【中等】/README"},"0478":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87f9142e-2c1d-42c0-bf96-9f96696ab16d","redirect":"notes/0478. 在圆内随机生成点【中等】/README"},"0479":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ef2d66d-5242-49bf-9643-f5156744ddd8","redirect":"notes/0479. 最大回文数乘积【困难】/README"},"0480":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20f8a9b0-9ccf-49d7-98c3-8f9424c4885b","redirect":"notes/0480. 滑动窗口中位数【困难】/README"},"0481":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c8e42bd9-b995-473b-b0a3-d072ac14e7ce","redirect":"notes/0481. 神奇字符串【中等】/README"},"0482":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b90b6e5-cfc3-4ef0-82be-a3139578d06b","redirect":"notes/0482. 密钥格式化【简单】/README"},"0483":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8012e873-245e-4ba5-98c6-248e2da17d04","redirect":"notes/0483. 最小好进制【困难】/README"},"0484":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"44d5d333-1ef1-453a-ad1e-bd86c48b2071","redirect":"notes/0484. 寻找排列【中等】/README"},"0485":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ca52344d-f178-490e-808d-377bb1d99342","redirect":"notes/0485. 最大连续 1 的个数【简单】/README"},"0486":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"852b4f43-8a43-4272-8476-a16daf250508","redirect":"notes/0486. 预测赢家【中等】/README"},"0487":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"649c099f-1de2-45dd-995b-1ebe8ad5c56c","redirect":"notes/0487. 最大连续1的个数 II【中等】/README"},"0488":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45ef17ca-7b8e-4572-92f8-7d65c03c0d92","redirect":"notes/0488. 祖玛游戏【困难】/README"},"0489":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bccbe3dd-0a93-4d65-a262-ad0d1a7896bb","redirect":"notes/0489. 扫地机器人【困难】/README"},"0490":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71f046f2-c3be-4c6c-a38a-9c737227b3fe","redirect":"notes/0490. 迷宫【中等】/README"},"0491":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f684665b-c961-4b98-a586-f6ced8f48145","redirect":"notes/0491. 非递减子序列【中等】/README"},"0492":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"682ff249-0acf-4259-b40a-edc035845ea8","redirect":"notes/0492. 构造矩形【简单】/README"},"0493":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"49e162ba-dfee-4ae0-b110-f0dc0369dbbc","redirect":"notes/0493. 翻转对【困难】/README"},"0494":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27c7bbe0-ee68-49e6-ae4a-1f280923ed3a","redirect":"notes/0494. 目标和【中等】/README"},"0495":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"9e5491e3-fe74-4765-86d9-d6dc8c9d8a87","redirect":"notes/0495. 提莫攻击【简单】/README"},"0496":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"32c679b5-3451-4bc5-98f3-7d5a8e76449c","redirect":"notes/0496. 下一个更大元素 I【简单】/README"},"0497":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"60891590-2699-40d3-a623-e44f02e4e7a6","redirect":"notes/0497. 非重叠矩形中的随机点【中等】/README"},"0498":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99470232-2494-47fa-b22b-dd85d2ec83a4","redirect":"notes/0498. 对角线遍历【中等】/README"},"0499":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec44069d-672d-41f5-bc17-ca198f246e9b","redirect":"notes/0499. 迷宫 III【困难】/README"},"0500":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"71f92361-a38a-4ae4-b1fe-60de884006eb","redirect":"notes/0500. 键盘行【简单】/README"},"0501":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1fc46aba-2627-4afa-8002-a95663ce3aae","redirect":"notes/0501. 二叉搜索树中的众数【简单】/README"},"0502":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5403a2e8-7e8a-47b0-abc7-b0c8b306bc84","redirect":"notes/0502. IPO【困难】/README"},"0503":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"52e189cf-a271-4a1b-ae32-f85626b5b982","redirect":"notes/0503. 下一个更大元素 II【中等】/README"},"0504":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f800be2-8c04-4ed8-8e4e-7ef85295770d","redirect":"notes/0504. 七进制数【简单】/README"},"0505":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa655454-b07d-4dc2-8fa0-3ddcd08ce80e","redirect":"notes/0505. 迷宫 II【中等】/README"},"0506":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"62ac8e9e-7d33-4db7-ab89-e600c60e94f6","redirect":"notes/0506. 相对名次【简单】/README"},"0507":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b1609176-ee07-4dc3-9709-53e81190d9bb","redirect":"notes/0507. 完美数【简单】/README"},"0508":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5980d3fb-9b4c-4a8e-a3bf-11bddcbc2caa","redirect":"notes/0508. 出现次数最多的子树元素和【中等】/README"},"0509":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"b47a6d18-c956-4b3b-b68b-9807f4f52a28","redirect":"notes/0509. 斐波那契数【简单】/README"},"0510":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a28353d-6d9e-43b3-8789-a0a68770ba32","redirect":"notes/0510. 二叉搜索树中的中序后继 II【中等】/README"},"0511":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ca61d34-a5d3-4ee0-85ab-a07285e99785","redirect":"notes/0511. 游戏玩法分析 I【简单】/README"},"0512":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72f00dba-6e22-422c-8a02-0e556925f79a","redirect":"notes/0512. 游戏玩法分析 II【简单】/README"},"0513":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09ca9665-53ad-4b56-8543-4cd75461917d","redirect":"notes/0513. 找树左下角的值【中等】/README"},"0514":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c595a48d-5cdd-4fc0-9c34-15b43d1d2512","redirect":"notes/0514. 自由之路【困难】/README"},"0515":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"41db3513-f509-491e-abf5-d43c957309c1","redirect":"notes/0515. 在每个树行中找最大值【中等】/README"},"0516":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0649fdc6-8e20-4ca7-9593-372107c12198","redirect":"notes/0516. 最长回文子序列【中等】/README"},"0517":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"364098eb-d92f-448a-bde7-f2784e8919ff","redirect":"notes/0517. 超级洗衣机【困难】/README"},"0518":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dcebfbe3-be3f-48ec-9180-9450181a38f4","redirect":"notes/0518. 零钱兑换 II【中等】/README"},"0519":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"70ab3f33-a2ac-40dd-99f5-acf23b3c8046","redirect":"notes/0519. 随机翻转矩阵【中等】/README"},"0520":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a42ca13d-91b7-4909-8131-a65fb9ce8712","redirect":"notes/0520. 检测大写字母【简单】/README"},"0521":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"855402f7-8920-4daf-a1ee-dd10b842e7e1","redirect":"notes/0521. 最长特殊序列 Ⅰ【简单】/README"},"0522":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5597680-1e07-4be9-a0b4-3885504f2e80","redirect":"notes/0522. 最长特殊序列 II【中等】/README"},"0523":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d537da16-a336-4039-9351-a9a91fab8cf4","redirect":"notes/0523. 连续的子数组和【中等】/README"},"0524":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd03a3da-7357-4121-8f81-74916608b78d","redirect":"notes/0524. 通过删除字母匹配到字典里最长单词【中等】/README"},"0525":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eeead7a3-8740-4641-bf2b-d437b8375ca9","redirect":"notes/0525. 连续数组【中等】/README"},"0526":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6573ed23-92d6-481e-bac6-848bb5531ab6","redirect":"notes/0526. 优美的排列【中等】/README"},"0527":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"540751bc-7ad1-4ebb-b04a-7a3ea0a3e0a0","redirect":"notes/0527. 单词缩写【困难】/README"},"0528":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d8ef24a6-5783-42e7-bd0a-15bdcd2a080d","redirect":"notes/0528. 按权重随机选择【中等】/README"},"0529":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf0a702c-cc99-4cc4-be54-e2e397500f25","redirect":"notes/0529. 扫雷游戏【中等】/README"},"0530":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55481991-f8ed-462c-84ea-d38dd2807e64","redirect":"notes/0530. 二叉搜索树的最小绝对差【简单】/README"},"0531":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"411ffb85-e5a1-4801-9b21-dd2285f6117d","redirect":"notes/0531. 孤独像素 I【中等】/README"},"0532":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a207bd4d-ab17-4e5e-977b-5967144cf8f7","redirect":"notes/0532. 数组中的 k-diff 数对【中等】/README"},"0533":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11da6998-e392-4205-8057-1ca60e4e8f6f","redirect":"notes/0533. 孤独像素 II【中等】/README"},"0534":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b14d9fa-b5f8-455f-8ab9-6806fb010113","redirect":"notes/0534. 游戏玩法分析 III【中等】/README"},"0535":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a15fc725-8816-40d1-a322-248106bdea55","redirect":"notes/0535. TinyURL 的加密与解密【中等】/README"},"0536":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"06b6dd05-2209-4110-8226-68441727502e","redirect":"notes/0536. 从字符串生成二叉树【中等】/README"},"0537":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea3fe47f-981c-46ee-ac3b-744b1fae0c92","redirect":"notes/0537. 复数乘法【中等】/README"},"0538":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d362af53-c377-4e52-ae36-ec51a7bd95b1","redirect":"notes/0538. 把二叉搜索树转换为累加树【中等】/README"},"0539":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4da2625d-8ad6-49c0-8184-fcfdd084c7c0","redirect":"notes/0539. 最小时间差【中等】/README"},"0540":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f1a4d1da-5f36-4493-b9c5-bf49bb436688","redirect":"notes/0540. 有序数组中的单一元素【中等】/README"},"0541":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"92698aff-fd5e-4d9b-84fc-8294b8279f54","redirect":"notes/0541. 反转字符串 II【简单】/README"},"0542":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7fececab-d677-4d38-a138-4f5c6c060d9a","redirect":"notes/0542. 01 矩阵【中等】/README"},"0543":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d732f29e-1de0-4c24-8615-ad034551892b","redirect":"notes/0543. 二叉树的直径【简单】/README"},"0544":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"135a8a08-0742-4820-b2a2-5625a5dbe951","redirect":"notes/0544. 输出比赛匹配对【中等】/README"},"0545":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11e3880a-05d6-4a3e-a5d0-5396ba7b4ae8","redirect":"notes/0545. 二叉树的边界【中等】/README"},"0546":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7f3b4cf-d658-461b-ba34-dd254f1ad679","redirect":"notes/0546. 移除盒子【困难】/README"},"0547":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9e7c4d8-d702-428b-b379-1bc929fab98f","redirect":"notes/0547. 省份数量【中等】/README"},"0548":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d17dbeb7-8b09-4f40-a3d8-9dda89fe840e","redirect":"notes/0548. 将数组分割成和相等的子数组【困难】/README"},"0549":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9331960b-1254-4696-8857-0ca2069e8870","redirect":"notes/0549. 二叉树最长连续序列 II【中等】/README"},"0550":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4fc8ebae-364e-41a8-90b2-36b1f4e56ea1","redirect":"notes/0550. 游戏玩法分析 IV【中等】/README"},"0551":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37a83476-7e3a-4b3e-afe1-908947e14393","redirect":"notes/0551. 学生出勤记录 I【简单】/README"},"0552":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"925ead65-21e7-4108-8244-f795ce5eb542","redirect":"notes/0552. 学生出勤记录 II【困难】/README"},"0553":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"182fd235-de86-43e8-8ed4-fb89bc292d26","redirect":"notes/0553. 最优除法【中等】/README"},"0554":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90665f2d-42e8-4935-ac60-670910721f58","redirect":"notes/0554. 砖墙【中等】/README"},"0555":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f875eed2-c471-4f55-8d5f-44d1be458056","redirect":"notes/0555. 分割连接字符串【中等】/README"},"0556":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27141ed0-8a2f-414e-9585-c58dd74948d1","redirect":"notes/0556. 下一个更大元素 III【中等】/README"},"0557":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33c217f7-aa2d-4b98-97e1-cc055558df3e","redirect":"notes/0557. 反转字符串中的单词 III【简单】/README"},"0558":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37ba6514-47dc-47fa-80fd-48ac5f286e50","redirect":"notes/0558. 四叉树交集【中等】/README"},"0559":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3b3725dc-8efe-4a42-a4b3-0e57b742569e","redirect":"notes/0559. N 叉树的最大深度【简单】/README"},"0560":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"acc3c502-2e70-4052-b790-e49a8b4325de","redirect":"notes/0560. 和为 K 的子数组【中等】/README"},"0561":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"56e8cd07-81fa-42c3-90c8-721d60d1d878","redirect":"notes/0561. 数组拆分【简单】/README"},"0562":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b52ca589-2d11-4526-8c01-f7e430b53d81","redirect":"notes/0562. 矩阵中最长的连续1线段【中等】/README"},"0563":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d82fde7-48cb-4433-a767-2682e24ee537","redirect":"notes/0563. 二叉树的坡度【简单】/README"},"0564":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f2ee239-0f37-43dc-bbba-b0d21cfbb4ef","redirect":"notes/0564. 寻找最近的回文数【困难】/README"},"0565":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"78da77fa-7dbb-4a14-b500-0aa9aac229ce","redirect":"notes/0565. 数组嵌套【中等】/README"},"0566":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"abe7ac4e-e92a-4d37-9cc1-1517903b6ac8","redirect":"notes/0566. 重塑矩阵【简单】/README"},"0567":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f75af42-13f2-4424-a6f4-baa6b8eaff56","redirect":"notes/0567. 字符串的排列【中等】/README"},"0568":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c873b29b-caa5-46e3-a219-944962d27d79","redirect":"notes/0568. 最大休假天数【困难】/README"},"0569":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"71ef8828-fbd9-403c-aca1-82f533702630","redirect":"notes/0569. 员工薪水中位数【困难】/README"},"0570":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23fc880d-7142-44f5-bb43-cd18dc9f8297","redirect":"notes/0570. 至少有5名直接下属的经理【中等】/README"},"0571":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c536d10e-bb33-4c7e-8dc9-0181d7fac0d0","redirect":"notes/0571. 给定数字的频率查询中位数【困难】/README"},"0572":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24af84b6-2f41-4f2f-a8ad-d84d69ddbf67","redirect":"notes/0572. 另一棵树的子树【简单】/README"},"0573":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"de1523fa-653b-4546-95e4-026939b5ffa7","redirect":"notes/0573. 松鼠模拟【中等】/README"},"0574":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e745b0e3-2c58-4fbd-a612-4ce8132468c2","redirect":"notes/0574. 当选者【中等】/README"},"0575":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e771c8f3-e84a-47a5-b2e8-cb9ffa512e86","redirect":"notes/0575. 分糖果【简单】/README"},"0576":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a194612-7065-4399-b55c-d2f9073b4d4f","redirect":"notes/0576. 出界的路径数【中等】/README"},"0577":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"317bd943-b284-4f0b-9ea9-66259488e3a6","redirect":"notes/0577. 员工奖金【简单】/README"},"0578":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e352180b-8be2-428a-8f74-bfcb1251fcf4","redirect":"notes/0578. 查询回答率最高的问题【中等】/README"},"0579":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72383827-3996-49c7-9439-73c8a442bfd5","redirect":"notes/0579. 查询员工的累计薪水【困难】/README"},"0580":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c91ea62-47f9-4a7d-8b4a-06f0a36d4604","redirect":"notes/0580. 统计各专业学生人数【中等】/README"},"0581":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2e61771a-b862-4b5d-b753-c88051c7a4c5","redirect":"notes/0581. 最短无序连续子数组【中等】/README"},"0582":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab2c1671-455b-42cb-8abb-f7655340c701","redirect":"notes/0582. 杀掉进程【中等】/README"},"0583":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2290690b-54af-40fb-ba27-205e742fde25","redirect":"notes/0583. 两个字符串的删除操作【中等】/README"},"0584":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e4c3082-9af3-4492-aef5-abcc52710e0b","redirect":"notes/0584. 寻找用户推荐人【简单】/README"},"0585":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd66383e-bc29-4d02-8e85-a58aeeb17da7","redirect":"notes/0585. 2016年的投资【中等】/README"},"0586":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d729c85-7d65-4455-b62b-e6a3608d26f9","redirect":"notes/0586. 订单最多的客户【简单】/README"},"0587":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dc4fd6df-6c07-42aa-8d99-fad617432d8c","redirect":"notes/0587. 安装栅栏【困难】/README"},"0588":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a0249df7-d786-4f2c-8bcb-e3596278bcb1","redirect":"notes/0588. 设计内存文件系统【困难】/README"},"0589":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ce251c4d-06f0-4e95-89ad-79245b3853be","redirect":"notes/0589. N 叉树的前序遍历【简单】/README"},"0590":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e66ef6c1-0c3b-4609-992c-bcbe6175848a","redirect":"notes/0590. N 叉树的后序遍历【简单】/README"},"0591":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4cc8f81d-269d-41ab-9139-1dd5c6212678","redirect":"notes/0591. 标签验证器【困难】/README"},"0592":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6fcc5e0f-a9a5-47c5-a44e-0da8d73f89c4","redirect":"notes/0592. 分数加减运算【中等】/README"},"0593":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"587ab58f-d013-4e49-8c54-e6925899cf0b","redirect":"notes/0593. 有效的正方形【中等】/README"},"0594":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"109f26ee-1ade-43ab-9965-77d4881d1063","redirect":"notes/0594. 最长和谐子序列【简单】/README"},"0595":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6fee2ce-43f4-4abe-be3c-85ba26534ddf","redirect":"notes/0595. 大的国家【简单】/README"},"0596":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9acf67e2-c506-4b8a-9631-bdb53616383c","redirect":"notes/0596. 超过 5 名学生的课【简单】/README"},"0597":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c2442dce-c195-473c-819f-b25575915e79","redirect":"notes/0597. 好友申请 I：总体通过率【简单】/README"},"0598":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4ff4e9ba-4510-4039-b1ca-677fc8302bb2","redirect":"notes/0598. 区间加法 II【简单】/README"},"0599":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"05f6800f-6374-4362-925d-65adb8f7220b","redirect":"notes/0599. 两个列表的最小索引总和【简单】/README"},"0600":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"459ea5db-40d1-4d2a-ac3d-c7e827e0521f","redirect":"notes/0600. 不含连续1的非负整数【困难】/README"},"0601":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81429e84-9d3f-419d-b4f3-c1acedeef704","redirect":"notes/0601. 体育馆的人流量【困难】/README"},"0602":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0f6374f3-d73f-4106-b98a-7304d1a063cb","redirect":"notes/0602. 好友申请 II ：谁有最多的好友【中等】/README"},"0603":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed759d0c-0716-4f8c-a4a6-a52ab5fc5da6","redirect":"notes/0603. 连续空余座位【简单】/README"},"0604":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6972120f-49d9-4194-a252-d3159e09b22d","redirect":"notes/0604. 迭代压缩字符串【简单】/README"},"0605":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"2484db74-d71f-4e17-a744-3c9b08e1f045","redirect":"notes/0605. 种花问题【简单】/README"},"0606":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"81f4747d-c590-456d-bee0-f2c57c6764b5","redirect":"notes/0606. 根据二叉树创建字符串【中等】/README"},"0607":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"21910688-cedc-41c8-910c-0f1ca975624b","redirect":"notes/0607. 销售员【简单】/README"},"0608":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5a8c13d-9aca-4786-ac92-87a0a83f0d06","redirect":"notes/0608. 树节点【中等】/README"},"0609":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"42ee6cf3-5ee9-4bb5-b819-e55ac758db63","redirect":"notes/0609. 在系统中查找重复文件【中等】/README"},"0610":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"044c0a48-fa81-4b56-b4a4-264875c37b10","redirect":"notes/0610. 判断三角形【简单】/README"},"0611":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7c620d1-2cd1-477f-a116-5137c54cd2c5","redirect":"notes/0611. 有效三角形的个数【中等】/README"},"0612":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11445e46-f384-489c-a406-04c9e4ebcd84","redirect":"notes/0612. 平面上的最近距离【中等】/README"},"0613":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e7030ec-130b-4304-bdd8-51c698f836f5","redirect":"notes/0613. 直线上的最近距离【简单】/README"},"0614":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"47ef6e1b-825c-4df1-8a37-27a7949c56f3","redirect":"notes/0614. 二级关注者【中等】/README"},"0615":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b8db6b2-7217-4555-8f31-9bc46fabf517","redirect":"notes/0615. 平均工资：部门与公司比较【困难】/README"},"0616":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"030a9dd8-2b7d-4d83-a6b9-ba6adff0d194","redirect":"notes/0616. 给字符串添加加粗标签【中等】/README"},"0617":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ae989de8-02b6-4d25-a16f-d34205ed44dc","redirect":"notes/0617. 合并二叉树【简单】/README"},"0618":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5cb7b692-5304-4579-8b68-08909736ce28","redirect":"notes/0618. 学生地理信息报告【困难】/README"},"0619":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa874f85-180d-4550-8a28-64801a977246","redirect":"notes/0619. 只出现一次的最大数字【简单】/README"},"0620":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e790728e-7a3e-44ea-8863-45edaa7a071d","redirect":"notes/0620. 有趣的电影【简单】/README"},"0621":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"77158982-d13e-43a0-9f01-2119d056baf9","redirect":"notes/0621. 任务调度器【中等】/README"},"0622":{"bilibili":[],"yuque":["leetcode.0622"],"done":false,"enableDiscussions":false,"id":"20216884-c039-4f49-89aa-0e0b36ecf8bf","redirect":"notes/0622. 设计循环队列【中等】/README"},"0623":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"248a68bc-3905-44f0-9ddb-6b2b7a2b56b5","redirect":"notes/0623. 在二叉树中增加一行【中等】/README"},"0624":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c10d1936-b840-4f97-b1af-cb67766d4af8","redirect":"notes/0624. 数组列表中的最大距离【中等】/README"},"0625":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d7207ae-b7bd-48ed-a6ab-1124b2586137","redirect":"notes/0625. 最小因式分解【中等】/README"},"0626":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5aa7f989-bebd-44d5-b7fd-493416b8dfa5","redirect":"notes/0626. 换座位【中等】/README"},"0627":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8194cb03-2797-4602-a067-87c436852f66","redirect":"notes/0627. 变更性别【简单】/README"},"0628":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"5ce24d7d-ca7d-4858-a8fc-b87a9376afb6","redirect":"notes/0628. 三个数的最大乘积【简单】/README"},"0629":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"287d797e-7229-4cd7-8de5-44d4df4d431b","redirect":"notes/0629. K 个逆序对数组【困难】/README"},"0630":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4442d355-f781-4e7d-8d37-34baa2bfd1f5","redirect":"notes/0630. 课程表 III【困难】/README"},"0631":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87a15cea-e755-477a-abd9-987e6e8560d7","redirect":"notes/0631. 设计 Excel 求和公式【困难】/README"},"0632":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b481e77e-dcbd-47fe-97d3-e5cb4ab41b7e","redirect":"notes/0632. 最小区间【困难】/README"},"0633":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa7b42cd-f2a8-46fc-a4bc-59b7747ebd7a","redirect":"notes/0633. 平方数之和【中等】/README"},"0634":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"394c82df-cba1-4cc3-a7e8-c0d970f61b3e","redirect":"notes/0634. 寻找数组的错位排列【中等】/README"},"0635":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c0582a69-6968-4f39-bacc-89ceb18f969e","redirect":"notes/0635. 设计日志存储系统【中等】/README"},"0636":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e953fddf-d60f-465e-8618-8bdb5897815a","redirect":"notes/0636. 函数的独占时间【中等】/README"},"0637":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd6e09f1-b4ad-4531-9016-c630fcb7d8b8","redirect":"notes/0637. 二叉树的层平均值【简单】/README"},"0638":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e57f3fd8-b588-4ca5-a7b1-9ae2d68dcf1c","redirect":"notes/0638. 大礼包【中等】/README"},"0639":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"22e0c484-e029-4623-81a1-3f6bda9fe326","redirect":"notes/0639. 解码方法 II【困难】/README"},"0640":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af61dc9d-0f66-4e88-8632-59e2cb6b4784","redirect":"notes/0640. 求解方程【中等】/README"},"0641":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a845e51b-6cfb-4f81-b972-a1b081cb39ff","redirect":"notes/0641. 设计循环双端队列【中等】/README"},"0642":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c141b8a2-f5d5-4b1a-9b92-d49e8cbf9189","redirect":"notes/0642. 设计搜索自动补全系统【困难】/README"},"0643":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9b1d0a9-26bf-42c2-92e1-623af36d3714","redirect":"notes/0643. 子数组最大平均数 I【简单】/README"},"0644":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"150221b2-3aab-4512-8c8c-37d672124268","redirect":"notes/0644. 子数组最大平均数 II【困难】/README"},"0645":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"996659a2-c7c3-4533-8340-d69f03177b02","redirect":"notes/0645. 错误的集合【简单】/README"},"0646":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"91459c2e-bb20-4666-93b6-7a81582c39b9","redirect":"notes/0646. 最长数对链【中等】/README"},"0647":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6d5a4202-7430-4b86-8caf-1828943300c4","redirect":"notes/0647. 回文子串【中等】/README"},"0648":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24f01850-84c1-4209-bf59-a7a0f4181d4b","redirect":"notes/0648. 单词替换【中等】/README"},"0649":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d1c88759-3cea-4f31-96ee-e9f2aa06eef3","redirect":"notes/0649. Dota2 参议院【中等】/README"},"0650":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"793a4a48-b661-4af9-ac8b-827c0d213ebf","redirect":"notes/0650. 两个键的键盘【中等】/README"},"0651":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1bcb3d70-c652-4ebc-b543-bab4591dc0bb","redirect":"notes/0651. 四个键的键盘【中等】/README"},"0652":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ede66e1c-fd85-4d48-8713-0457f5f15b1b","redirect":"notes/0652. 寻找重复的子树【中等】/README"},"0653":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f97b9ac6-f39c-4740-bc72-14db5b1c9870","redirect":"notes/0653. 两数之和 IV - 输入二叉搜索树【简单】/README"},"0654":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0ebbc61-6136-472a-a72c-b54df1586f45","redirect":"notes/0654. 最大二叉树【中等】/README"},"0655":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e61fd8cf-c7ba-469c-9048-dc18c5bb253f","redirect":"notes/0655. 输出二叉树【中等】/README"},"0656":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c3590755-4b0a-4f15-9af2-06254173f9e2","redirect":"notes/0656. 成本最小路径【困难】/README"},"0657":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cd5607bd-539d-44a6-95e9-3280b273aa45","redirect":"notes/0657. 机器人能否返回原点【简单】/README"},"0658":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb704432-1a99-49d6-a1c0-2d835e37c3ef","redirect":"notes/0658. 找到 K 个最接近的元素【中等】/README"},"0659":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7b42dc80-ea50-4f22-b90e-737696866977","redirect":"notes/0659. 分割数组为连续子序列【中等】/README"},"0660":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb7e679d-812f-47bf-baeb-f348ddf83469","redirect":"notes/0660. 移除 9【困难】/README"},"0661":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc179d46-d4f7-4613-ad7a-740235c1fbd8","redirect":"notes/0661. 图片平滑器【简单】/README"},"0662":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d191646-0625-4a6f-b401-c72596af8cc4","redirect":"notes/0662. 二叉树最大宽度【中等】/README"},"0663":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4b38bd7-0a05-4b04-8bb2-e40f460aba25","redirect":"notes/0663. 均匀树划分【中等】/README"},"0664":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cbdd26b7-94ec-46d2-ad0d-e649c291e991","redirect":"notes/0664. 奇怪的打印机【困难】/README"},"0665":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6fd7f260-a2e0-4600-9ead-4098ef79ae9a","redirect":"notes/0665. 非递减数列【中等】/README"},"0666":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8053d41-8f6b-40ff-a1f0-ed960cca71dc","redirect":"notes/0666. 路径总和 IV【中等】/README"},"0667":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b5ca05ee-49b6-4e95-baf1-27776fe4306e","redirect":"notes/0667. 优美的排列 II【中等】/README"},"0668":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e6e6a481-04fa-4d20-986d-d77e940b9eef","redirect":"notes/0668. 乘法表中第k小的数【困难】/README"},"0669":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ef6f38e-e1ec-4209-8e6f-b7808d0bb422","redirect":"notes/0669. 修剪二叉搜索树【中等】/README"},"0670":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ce13f0e8-82e6-407e-ae22-a801be79ad37","redirect":"notes/0670. 最大交换【中等】/README"},"0671":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8779ccc9-48c4-4ca0-897e-487cd0f55bc8","redirect":"notes/0671. 二叉树中第二小的节点【简单】/README"},"0672":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d25b778f-4121-4df1-b6c6-b0717ac1c40a","redirect":"notes/0672. 灯泡开关 Ⅱ【中等】/README"},"0673":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4afc8dbf-5d64-4714-a110-d2c7a7a720e9","redirect":"notes/0673. 最长递增子序列的个数【中等】/README"},"0674":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8080b537-4cb6-459b-938b-13f842f7fb5b","redirect":"notes/0674. 最长连续递增序列【简单】/README"},"0675":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2230528c-e9c3-4fc4-be9a-eda6ed3e5d2c","redirect":"notes/0675. 为高尔夫比赛砍树【困难】/README"},"0676":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"873f2211-3231-4b7d-8367-a850cbb42535","redirect":"notes/0676. 实现一个魔法字典【中等】/README"},"0677":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"695e8556-ff38-48d5-9ade-807a9aa38d75","redirect":"notes/0677. 键值映射【中等】/README"},"0678":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"554cbe36-97f0-480a-88ac-79cac46824d0","redirect":"notes/0678. 有效的括号字符串【中等】/README"},"0679":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ed88a3e8-d1a9-465a-81b0-ad97576f89e5","redirect":"notes/0679. 24 点游戏【困难】/README"},"0680":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d5e86314-12a6-46eb-841a-4459ca3615f8","redirect":"notes/0680. 验证回文串 II【简单】/README"},"0681":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"225705f2-31ab-4d1c-86ab-9b17a5375557","redirect":"notes/0681. 最近时刻【中等】/README"},"0682":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"43c6dcbc-a94a-4b4f-ad43-03efd6e73908","redirect":"notes/0682. 棒球比赛【简单】/README"},"0683":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"78871eba-9e82-4f4d-a4b7-87eb83b1681e","redirect":"notes/0683. K 个关闭的灯泡【困难】/README"},"0684":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"94880984-003b-429f-88a5-bb5599f102f3","redirect":"notes/0684. 冗余连接【中等】/README"},"0685":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"081dc0b8-a4a6-472f-af3e-96f502ede31a","redirect":"notes/0685. 冗余连接 II【困难】/README"},"0686":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ac26cae4-2903-4553-af4e-5bb19e1e3450","redirect":"notes/0686. 重复叠加字符串匹配【中等】/README"},"0687":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b441e690-f2c6-4c71-8602-7a8711898c99","redirect":"notes/0687. 最长同值路径【中等】/README"},"0688":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54c4b07b-b84f-4070-9eaf-6faa8e1ad5ca","redirect":"notes/0688. 骑士在棋盘上的概率【中等】/README"},"0689":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f52a8384-dd6e-4021-8108-05fd751b0380","redirect":"notes/0689. 三个无重叠子数组的最大和【困难】/README"},"0690":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"135a58dc-008e-46fb-b03b-a8691bce0bd2","redirect":"notes/0690. 员工的重要性【中等】/README"},"0691":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b117f3a-35e1-4b39-ade6-dbd5cac15bdb","redirect":"notes/0691. 贴纸拼词【困难】/README"},"0692":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7fbb9a8-8678-42b0-ac80-dd2cb4a47c00","redirect":"notes/0692. 前K个高频单词【中等】/README"},"0693":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be29cd9e-5dd2-4a0c-a897-cca3908dd21a","redirect":"notes/0693. 交替位二进制数【简单】/README"},"0694":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2718dde7-b69d-4fdb-8eec-8743277f2dba","redirect":"notes/0694. 不同岛屿的数量【中等】/README"},"0695":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f3d3cb70-287d-4b3c-a378-3700a8f9667a","redirect":"notes/0695. 岛屿的最大面积【中等】/README"},"0696":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"842eb8d6-e08d-448e-9e71-8c93cad12ea5","redirect":"notes/0696. 计数二进制子串【简单】/README"},"0697":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6a591949-cda5-4c43-82e1-904efdb7df35","redirect":"notes/0697. 数组的度【简单】/README"},"0698":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"78b95a57-a29f-48a8-b76c-da9e86125d8f","redirect":"notes/0698. 划分为k个相等的子集【中等】/README"},"0699":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7bdb81a5-3fd9-4b0c-a07f-c9294d069b03","redirect":"notes/0699. 掉落的方块【困难】/README"},"0700":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e749f5d3-dfcd-4597-a08e-938694d33585","redirect":"notes/0700. 二叉搜索树中的搜索【简单】/README"},"0701":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3eaae606-db0c-42cf-9d43-d86338a15526","redirect":"notes/0701. 二叉搜索树中的插入操作【中等】/README"},"0702":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"17e46a8c-fda6-4f4e-8798-e462d7d2c473","redirect":"notes/0702. 搜索长度未知的有序数组【中等】/README"},"0703":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8b807a04-a83a-49e6-bccd-1f3c5f1610b2","redirect":"notes/0703. 数据流中的第 K 大元素【简单】/README"},"0704":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"10738637-0a5f-4f60-9cd1-e98e93b79761","redirect":"notes/0704. 二分查找【简单】/README"},"0705":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e8f4def-993a-4ebb-aee8-4c0b7767662c","redirect":"notes/0705. 设计哈希集合【简单】/README"},"0706":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f829ef27-9eb0-4ef5-b591-25bf77d1cc19","redirect":"notes/0706. 设计哈希映射【简单】/README"},"0707":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"82cb2020-c555-4093-b99e-171a8b45698b","redirect":"notes/0707. 设计链表【中等】/README"},"0708":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e3df069b-c1e4-4438-b674-f1221e051298","redirect":"notes/0708. 循环有序列表的插入【中等】/README"},"0709":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e56fb98-8a76-4921-a27d-0bb89f4df473","redirect":"notes/0709. 转换成小写字母【简单】/README"},"0710":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1e5d4665-10df-423c-841d-52505d6e910d","redirect":"notes/0710. 黑名单中的随机数【困难】/README"},"0711":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b4880e66-82f9-453a-93cc-44e0ec189119","redirect":"notes/0711. 不同岛屿的数量 II【困难】/README"},"0712":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c6763031-b629-43d7-83ca-c6bc25be75e2","redirect":"notes/0712. 两个字符串的最小ASCII删除和【中等】/README"},"0713":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e18ea220-be2f-485a-9e43-cf083bea272c","redirect":"notes/0713. 乘积小于 K 的子数组【中等】/README"},"0714":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fd48399a-c04f-40c0-a7c3-f0988960f8ae","redirect":"notes/0714. 买卖股票的最佳时机含手续费【中等】/README"},"0715":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ffc32b52-a919-4746-aebe-9b69a119967a","redirect":"notes/0715. Range 模块【困难】/README"},"0716":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"26a5b890-ae8f-4be4-9750-b0960516de06","redirect":"notes/0716. 最大栈【困难】/README"},"0717":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cee24bb2-f5df-4916-a82e-da6a231c4a89","redirect":"notes/0717. 1 比特与 2 比特字符【简单】/README"},"0718":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c2bf823-91d2-4010-8414-1db280addb45","redirect":"notes/0718. 最长重复子数组【中等】/README"},"0719":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a5373b72-c75b-4cc8-9860-4733f8859985","redirect":"notes/0719. 找出第 K 小的数对距离【困难】/README"},"0720":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f744d278-30b7-4be0-8123-51597cbf33c2","redirect":"notes/0720. 词典中最长的单词【中等】/README"},"0721":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8994271f-ea60-4308-a4e0-ed632a37d398","redirect":"notes/0721. 账户合并【中等】/README"},"0722":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e47dc436-278d-4303-a391-22d149a8bfe6","redirect":"notes/0722. 删除注释【中等】/README"},"0723":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9e4ea8c2-34a7-4560-bacd-2817e87e58f2","redirect":"notes/0723. 粉碎糖果【中等】/README"},"0724":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"15d6cee1-8da2-4ab4-b372-44f4ee397366","redirect":"notes/0724. 寻找数组的中心下标【简单】/README"},"0725":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54344f23-91ba-46bf-867f-961416f7d977","redirect":"notes/0725. 分隔链表【中等】/README"},"0726":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7d698d52-d97e-4058-a126-5544045e1ee6","redirect":"notes/0726. 原子的数量【困难】/README"},"0727":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2c64b278-cce1-4dd9-9dc5-fd3ec70d1ce1","redirect":"notes/0727. 最小窗口子序列【困难】/README"},"0728":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8f593d8-f941-42e3-8301-05874c038eb2","redirect":"notes/0728. 自除数【简单】/README"},"0729":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"509bdf21-bdc8-4e10-8318-05e5b4487f7b","redirect":"notes/0729. 我的日程安排表 I【中等】/README"},"0730":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86c6c750-8d92-4cb9-bb3f-b3ef387912db","redirect":"notes/0730. 统计不同回文子序列【困难】/README"},"0731":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dab56e6a-f18f-4ff0-b14e-6e8edd66e912","redirect":"notes/0731. 我的日程安排表 II【中等】/README"},"0732":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b1dfc456-da0c-4337-bbc8-da01c5adc5d3","redirect":"notes/0732. 我的日程安排表 III【困难】/README"},"0733":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c8ce5bb-16d6-4e71-96da-e7fc267bdc13","redirect":"notes/0733. 图像渲染【简单】/README"},"0734":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f11dfae0-7715-44f0-81d7-ebfd8c9d7513","redirect":"notes/0734. 句子相似性【简单】/README"},"0735":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5ec6eb6f-3402-4a6a-b4ca-4acaf7dc73c3","redirect":"notes/0735. 小行星碰撞【中等】/README"},"0736":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b57e24d9-ea10-4ab7-896b-ceda9b8a6ceb","redirect":"notes/0736. Lisp 语法解析【困难】/README"},"0737":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d0c36fca-58bb-42d2-9d84-bc7742204e51","redirect":"notes/0737. 句子相似性 II【中等】/README"},"0738":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4ae5023-5e55-406b-9e88-05d227e7ad87","redirect":"notes/0738. 单调递增的数字【中等】/README"},"0739":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"abcd7528-fec6-4ee2-853a-b8ce6014c907","redirect":"notes/0739. 每日温度【中等】/README"},"0740":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"43c5ffad-88a2-4f25-a7a6-691097b05095","redirect":"notes/0740. 删除并获得点数【中等】/README"},"0741":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9b47c191-cf52-4c8d-8384-524b276b98a4","redirect":"notes/0741. 摘樱桃【困难】/README"},"0742":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f3159e4-f45e-45ea-9e67-7175ba99bb8d","redirect":"notes/0742. 二叉树最近的叶节点【中等】/README"},"0743":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c23bf13e-1e0b-4e33-bcf5-b7bea6da4c6e","redirect":"notes/0743. 网络延迟时间【中等】/README"},"0744":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56351e7f-bbef-405c-82ef-48e2f48bdc54","redirect":"notes/0744. 寻找比目标字母大的最小字母【简单】/README"},"0745":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c072a4ce-098e-43c8-b44d-7596ffc26c29","redirect":"notes/0745. 前缀和后缀搜索【困难】/README"},"0746":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"90670cac-55b8-4b07-a1c8-b2e501d3ec8c","redirect":"notes/0746. 使用最小花费爬楼梯【简单】/README"},"0747":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a18d7a72-c2c5-47f6-b54c-18e1addcf6ca","redirect":"notes/0747. 至少是其他数字两倍的最大数【简单】/README"},"0748":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"f3fcb831-1942-4a51-a57a-0db66644d1b1","redirect":"notes/0748. 最短补全词【简单】/README"},"0749":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"aa7fbd22-2670-4e37-975d-ade776305af4","redirect":"notes/0749. 隔离病毒【困难】/README"},"0750":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e83de3b-d300-42eb-816f-3016a44180c2","redirect":"notes/0750. 角矩形的数量【中等】/README"},"0751":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a8b7b44-99bc-4b00-bf0e-e5a9fb5c12c6","redirect":"notes/0751. IP 到 CIDR【中等】/README"},"0752":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ecc3d35c-82b5-4241-8865-a347c62b64d5","redirect":"notes/0752. 打开转盘锁【中等】/README"},"0753":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1bccfc40-ad7e-45e8-90ee-61effb9ba216","redirect":"notes/0753. 破解保险箱【困难】/README"},"0754":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"034beaec-5826-423b-9efa-9f5c2ed8037f","redirect":"notes/0754. 到达终点数字【中等】/README"},"0755":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d28dfbdf-5df9-4ff2-8acd-b8122580e0f2","redirect":"notes/0755. 倒水【中等】/README"},"0756":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df0d5318-b06d-4ac2-b729-0484b7c71576","redirect":"notes/0756. 金字塔转换矩阵【中等】/README"},"0757":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a378b67-6376-46dc-b00c-7a5b6e9a3fd5","redirect":"notes/0757. 设置交集大小至少为2【困难】/README"},"0758":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6c6fb02a-c9d1-4a2d-9afa-d9e5b4422788","redirect":"notes/0758. 字符串中的加粗单词【中等】/README"},"0759":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"da9cec50-763c-4bb9-b6a4-e2b0a3a0fe4c","redirect":"notes/0759. 员工空闲时间【困难】/README"},"0760":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b32473e4-5fce-4c80-9923-65d2a1831bf5","redirect":"notes/0760. 找出变位映射【简单】/README"},"0761":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63750a08-7847-4f00-92f0-b187ad845a45","redirect":"notes/0761. 特殊的二进制序列【困难】/README"},"0762":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"be9242ef-00c9-4cf1-af26-819c955f0113","redirect":"notes/0762. 二进制表示中质数个计算置位【简单】/README"},"0763":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5b5af3f0-2b1d-407f-8ca7-96cc8c4c48af","redirect":"notes/0763. 划分字母区间【中等】/README"},"0764":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"63f5f498-5169-4703-82a3-12962e5e950e","redirect":"notes/0764. 最大加号标志【中等】/README"},"0765":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23cf52b8-67a9-43f6-8e4c-9278c401a435","redirect":"notes/0765. 情侣牵手【困难】/README"},"0766":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"97e64a4a-7114-44a7-ae72-c6af5ffeabbc","redirect":"notes/0766. 托普利茨矩阵【简单】/README"},"0767":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e8319dd3-3694-4be1-b82f-2e0128655fe1","redirect":"notes/0767. 重构字符串【中等】/README"},"0768":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"72672370-049a-4ff8-a5dc-042a163e7f1c","redirect":"notes/0768. 最多能完成排序的块 II【困难】/README"},"0769":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf4288ec-5ae8-42a3-9161-78d24018cd33","redirect":"notes/0769. 最多能完成排序的块【中等】/README"},"0770":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"27798b23-c571-4459-a288-394b4ca7f405","redirect":"notes/0770. 基本计算器 IV【困难】/README"},"0771":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"45ed99e9-e93c-402b-ad53-e20250d3581d","redirect":"notes/0771. 宝石与石头【简单】/README"},"0772":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0e91ef8e-8336-44cf-8cb0-8c430d713e3e","redirect":"notes/0772. 基本计算器 III【困难】/README"},"0773":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"440e3e22-c967-4974-8b95-76beb3590990","redirect":"notes/0773. 滑动谜题【困难】/README"},"0774":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d489a816-0e5e-4117-9702-9029843d95a9","redirect":"notes/0774. 最小化去加油站的最大距离【困难】/README"},"0775":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dcf14819-a542-4eef-914a-469598b2c79e","redirect":"notes/0775. 全局倒置与局部倒置【中等】/README"},"0776":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb032b74-26ff-415c-a0f0-c8e5e450b04e","redirect":"notes/0776. 拆分二叉搜索树【中等】/README"},"0777":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c098c09e-2727-4c02-a010-a2823f97bf05","redirect":"notes/0777. 在 LR 字符串中交换相邻字符【中等】/README"},"0778":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8de82198-dc22-49dc-a8bd-6eb7bf2a470c","redirect":"notes/0778. 水位上升的泳池中游泳【困难】/README"},"0779":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f99983e-1822-4dfa-a22b-865c5750ef7f","redirect":"notes/0779. 第K个语法符号【中等】/README"},"0780":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d7b6e9eb-b3d0-4be1-a9ae-4c8a15c24910","redirect":"notes/0780. 到达终点【困难】/README"},"0781":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f26f29c8-a311-4507-b795-96935b8860db","redirect":"notes/0781. 森林中的兔子【中等】/README"},"0782":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9251a537-c39a-4457-b188-447f30d3414c","redirect":"notes/0782. 变为棋盘【困难】/README"},"0783":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"afd1214a-767e-464b-b7c4-1389402b9387","redirect":"notes/0783. 二叉搜索树节点最小距离【简单】/README"},"0784":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2e33d8a-1dae-49d4-abfa-f43b3fffe185","redirect":"notes/0784. 字母大小写全排列【中等】/README"},"0785":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"435921db-dff7-457c-9532-41216e22458a","redirect":"notes/0785. 判断二分图【中等】/README"},"0786":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bc6d543b-08a9-47b4-9ac5-97eed5529f77","redirect":"notes/0786. 第 K 个最小的质数分数【中等】/README"},"0787":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"baade125-1b85-42a7-b29a-ed9f0c8fe68c","redirect":"notes/0787. K 站中转内最便宜的航班【中等】/README"},"0788":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3c87a2f1-3269-48b8-8c3e-736c162b3ea0","redirect":"notes/0788. 旋转数字【中等】/README"},"0789":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7bae3c92-d04b-4a32-af67-937482eabd29","redirect":"notes/0789. 逃脱阻碍者【中等】/README"},"0790":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"740e66d2-a41c-413c-91ca-132f6a45d254","redirect":"notes/0790. 多米诺和托米诺平铺【中等】/README"},"0791":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f94cdb2f-058f-4a82-9d4e-c2d27ddcd5ed","redirect":"notes/0791. 自定义字符串排序【中等】/README"},"0792":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3a042a21-91a3-4f18-86c9-0aa5f995b54d","redirect":"notes/0792. 匹配子序列的单词数【中等】/README"},"0793":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1fec24b6-441e-4bf7-8f07-a2ca50ff6636","redirect":"notes/0793. 阶乘函数后 K 个零【困难】/README"},"0794":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1f1db2ff-05fc-4926-83b0-1c84052eaa4b","redirect":"notes/0794. 有效的井字游戏【中等】/README"},"0795":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"79eb5d1c-096a-450d-9c6a-567761f962ce","redirect":"notes/0795. 区间子数组个数【中等】/README"},"0796":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"767d42fb-0f83-487a-bf60-f98120012949","redirect":"notes/0796. 旋转字符串【简单】/README"},"0797":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59ed8bd2-e9f3-4f7b-8ece-8c5ec5c4bf8d","redirect":"notes/0797. 所有可能的路径【中等】/README"},"0798":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"097a4308-9b6d-43ea-bebc-74b3df1460eb","redirect":"notes/0798. 得分最高的最小轮调【困难】/README"},"0799":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ed8d68f-9935-467d-9c42-da57d3db1382","redirect":"notes/0799. 香槟塔【中等】/README"},"0800":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"960a0ff9-bca9-4435-979c-819c8acac5e2","redirect":"notes/0800. 相似 RGB 颜色【简单】/README"},"0801":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5020332f-b8bf-4308-b8ab-43c0398648cf","redirect":"notes/0801. 使序列递增的最小交换次数【困难】/README"},"0802":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e7c26552-8074-4efe-87ff-6fb487c8056b","redirect":"notes/0802. 找到最终的安全状态【中等】/README"},"0803":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"74749b61-6d8e-4457-872b-dd23e840e7bf","redirect":"notes/0803. 打砖块【困难】/README"},"0804":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"3d7db98a-a6e7-4b23-983f-9eb7bea399dc","redirect":"notes/0804. 唯一摩尔斯密码词【简单】/README"},"0805":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7453b994-b1dd-4455-9315-a45835417159","redirect":"notes/0805. 数组的均值分割【困难】/README"},"0806":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7c5418ba-3c15-493a-a22f-fb2e8cdb3700","redirect":"notes/0806. 写字符串需要的行数【简单】/README"},"0807":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d0ae59d-f57b-4f2e-9d11-585a0bae3fcd","redirect":"notes/0807. 保持城市天际线【中等】/README"},"0808":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"771f97fc-71b7-4345-8496-210371cf0351","redirect":"notes/0808. 分汤【中等】/README"},"0809":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"dd88cafb-c156-475f-bc6a-492aae4f83f9","redirect":"notes/0809. 情感丰富的文字【中等】/README"},"0810":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f4bf9673-04f6-4e8e-b1a9-bb01af514652","redirect":"notes/0810. 黑板异或游戏【困难】/README"},"0811":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4a2f5dd0-4387-49a2-95a0-5414708d8bde","redirect":"notes/0811. 子域名访问计数【中等】/README"},"0812":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"53dd851f-9902-4c8c-b846-c9d7806045ae","redirect":"notes/0812. 最大三角形面积【简单】/README"},"0813":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9c66a070-242c-4090-9f2d-1daf34b40a2b","redirect":"notes/0813. 最大平均值和的分组【中等】/README"},"0814":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b00403b7-f57b-416a-b54b-d15517aa4104","redirect":"notes/0814. 二叉树剪枝【中等】/README"},"0815":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e649c59-4792-471a-8ece-7aef473c25bf","redirect":"notes/0815. 公交路线【困难】/README"},"0816":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b05cc9d3-5855-40a7-8b94-77e744e9d6f6","redirect":"notes/0816. 模糊坐标【中等】/README"},"0817":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7e7b8317-3675-4c7a-af14-a70aa1ad8601","redirect":"notes/0817. 链表组件【中等】/README"},"0818":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d12a4387-6b3b-4dfd-8219-849969cab85b","redirect":"notes/0818. 赛车【困难】/README"},"0819":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"d7fb0417-7868-409c-9abe-c75a62f184c1","redirect":"notes/0819. 最常见的单词【简单】/README"},"0820":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87605f04-dc0b-4e52-a504-159452cd662a","redirect":"notes/0820. 单词的压缩编码【中等】/README"},"0821":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36930ce5-600f-4454-8287-9f907cbe2efa","redirect":"notes/0821. 字符的最短距离【简单】/README"},"0822":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"596f8a2e-27a0-4b0a-8ddb-188b85c660a4","redirect":"notes/0822. 翻转卡片游戏【中等】/README"},"0823":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"24a50bfa-aad9-40ee-8d1e-181fc92da374","redirect":"notes/0823. 带因子的二叉树【中等】/README"},"0824":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"54920414-58b5-4961-9f99-bd75937fc7cd","redirect":"notes/0824. 山羊拉丁文【简单】/README"},"0825":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e2bf5267-d8a2-4cf7-874c-17f64355c6fc","redirect":"notes/0825. 适龄的朋友【中等】/README"},"0826":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ac4b6e4d-086b-4e58-9338-8e4d05559f76","redirect":"notes/0826. 安排工作以达到最大收益【中等】/README"},"0827":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"23a53985-cb5a-4720-af44-bfb7ed91f0a5","redirect":"notes/0827. 最大人工岛【困难】/README"},"0828":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ef36902-ede5-401b-a2ef-7d26bc59a2b0","redirect":"notes/0828. 统计子串中的唯一字符【困难】/README"},"0829":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d45fadd2-27ea-4a31-84d1-ee5bb2e679d0","redirect":"notes/0829. 连续整数求和【困难】/README"},"0830":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e4f13fd-fd01-4f6b-9aa0-d55c73a424ce","redirect":"notes/0830. 较大分组的位置【简单】/README"},"0831":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e1f15504-dc98-40ae-9f11-0551d48eb761","redirect":"notes/0831. 隐藏个人信息【中等】/README"},"0832":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1aee07ec-451b-4c91-8ae6-9e0c0c07c4c5","redirect":"notes/0832. 翻转图像【简单】/README"},"0833":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ebf0d4b-ebd5-487e-8ca3-e0a052822185","redirect":"notes/0833. 字符串中的查找与替换【中等】/README"},"0834":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"96093525-bab9-4bb1-95df-d28f52d7bd20","redirect":"notes/0834. 树中距离之和【困难】/README"},"0835":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bbbdee9a-8bfa-4fae-b417-179bd555a81b","redirect":"notes/0835. 图像重叠【中等】/README"},"0836":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5811069b-61a1-4eaa-a188-f30968545436","redirect":"notes/0836. 矩形重叠【简单】/README"},"0837":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5bde20fe-6a86-449d-bf66-b5ff3f1f14b5","redirect":"notes/0837. 新 21 点【中等】/README"},"0838":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"17588cd2-71b4-4fca-858c-776813f5c3fd","redirect":"notes/0838. 推多米诺【中等】/README"},"0839":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"af691613-6ee5-412f-9e07-7fe7ddc20f66","redirect":"notes/0839. 相似字符串组【困难】/README"},"0840":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"37969412-0fe3-4a13-b030-bf18cf0b274f","redirect":"notes/0840. 矩阵中的幻方【中等】/README"},"0841":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6144f08a-1c7d-4ab8-816e-7ccc97bfc2c6","redirect":"notes/0841. 钥匙和房间【中等】/README"},"0842":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6e62c9be-7477-4f23-854c-795b1fbb5798","redirect":"notes/0842. 将数组拆分成斐波那契序列【中等】/README"},"0843":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1b4ee05a-0edf-41b1-a514-dd14d60e72c4","redirect":"notes/0843. 猜猜这个单词【困难】/README"},"0844":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d230a97a-27d5-4eb2-bfde-57e7a3187f4b","redirect":"notes/0844. 比较含退格的字符串【简单】/README"},"0845":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cfa85bb0-3660-4d46-8c58-ee460ad844ce","redirect":"notes/0845. 数组中的最长山脉【中等】/README"},"0846":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1d644bf9-db27-4f4e-ab79-2d54d8cd3f8f","redirect":"notes/0846. 一手顺子【中等】/README"},"0847":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"728518cb-798a-46f7-8bd1-23b6cd492dc0","redirect":"notes/0847. 访问所有节点的最短路径【困难】/README"},"0848":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b0cf2b1a-c547-4770-a278-67b1051caf12","redirect":"notes/0848. 字母移位【中等】/README"},"0849":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07cc840e-05bf-4fea-a78d-112194622863","redirect":"notes/0849. 到最近的人的最大距离【中等】/README"},"0850":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"57ef233e-7c86-47ce-a0f3-dbbb8704d53e","redirect":"notes/0850. 矩形面积 II【困难】/README"},"0851":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"880f8045-fd09-4c6f-be34-07f9b34b29e6","redirect":"notes/0851. 喧闹和富有【中等】/README"},"0852":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e67c201b-2e35-48b9-bdcf-04fc72752d34","redirect":"notes/0852. 山脉数组的峰顶索引【中等】/README"},"0853":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"09f9fa2e-cee8-46f7-9e2f-a692b186b64a","redirect":"notes/0853. 车队【中等】/README"},"0854":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"36d3a7f3-5636-4902-888d-da2e4b6496b9","redirect":"notes/0854. 相似度为 K 的字符串【困难】/README"},"0855":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0cfa2521-a8ab-46d3-b599-3d5e8bd1b984","redirect":"notes/0855. 考场就座【中等】/README"},"0856":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bd5ccdf5-f5d7-4d13-b69c-19c95d2459f2","redirect":"notes/0856. 括号的分数【中等】/README"},"0857":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1c765d5a-7b59-4c8c-9be5-ea82f7c06692","redirect":"notes/0857. 雇佣 K 名工人的最低成本【困难】/README"},"0858":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ec2e3aff-1b4a-4a7e-98bc-14871ad57fda","redirect":"notes/0858. 镜面反射【中等】/README"},"0859":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8330e156-f994-4eb1-b106-f93f0cd6b2ed","redirect":"notes/0859. 亲密字符串【简单】/README"},"0860":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"20f89fd9-5ee3-4812-a08e-7c9a3591a11b","redirect":"notes/0860. 柠檬水找零【简单】/README"},"0861":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4642611f-07e7-4e00-b6c2-c398d77a4cfd","redirect":"notes/0861. 翻转矩阵后的得分【中等】/README"},"0862":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"587e933f-e780-45ec-82af-c9e9929bd3ea","redirect":"notes/0862. 和至少为 K 的最短子数组【困难】/README"},"0863":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5014ff41-e8a5-44ef-a9dd-35d44b3b82d9","redirect":"notes/0863. 二叉树中所有距离为 K 的结点【中等】/README"},"0864":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"db4ea170-30a7-477b-9a61-1c922f9a41b4","redirect":"notes/0864. 获取所有钥匙的最短路径【困难】/README"},"0865":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2ffb6b50-5129-46ca-aeed-3d9a8792bea2","redirect":"notes/0865. 具有所有最深节点的最小子树【中等】/README"},"0866":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f3fc352-8718-4815-80e7-4c25bc59de7c","redirect":"notes/0866. 回文质数【中等】/README"},"0867":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c1248f5a-495b-4e6f-bf93-56a567d09185","redirect":"notes/0867. 转置矩阵【简单】/README"},"0868":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2150244a-675c-44e2-a748-a7454e908a05","redirect":"notes/0868. 二进制间距【简单】/README"},"0869":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c9c10c6b-decd-4d7d-a1a6-2c9e8d1507be","redirect":"notes/0869. 重新排序得到 2 的幂【中等】/README"},"0870":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a4d33946-6428-4b30-a2bf-8293cad09191","redirect":"notes/0870. 优势洗牌【中等】/README"},"0871":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8f5f0ee9-5f57-45f5-bda5-3936936845f0","redirect":"notes/0871. 最低加油次数【困难】/README"},"0872":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b442baeb-41b3-4476-b02c-89ff64160303","redirect":"notes/0872. 叶子相似的树【简单】/README"},"0873":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"6d59cbde-3065-4acb-8dc6-32b4abebb55f","redirect":"notes/0873. 最长的斐波那契子序列的长度【中等】/README"},"0874":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9a2524d7-c1b3-4857-8d68-014bdd39a227","redirect":"notes/0874. 模拟行走机器人【中等】/README"},"0875":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3e43ac68-caba-47e7-9d94-62992bb5001b","redirect":"notes/0875. 爱吃香蕉的珂珂【中等】/README"},"0876":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"189b574f-7675-43c6-a20a-42bef2c14284","redirect":"notes/0876. 链表的中间结点【简单】/README"},"0877":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4d50a230-af2a-4c48-971c-be0b82da524b","redirect":"notes/0877. 石子游戏【中等】/README"},"0878":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c195cb69-78d4-4859-8542-2d1588c4f072","redirect":"notes/0878. 第 N 个神奇数字【困难】/README"},"0879":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"02935819-e799-42be-bee3-4a8d5337737a","redirect":"notes/0879. 盈利计划【困难】/README"},"0880":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0c8b56dc-dc95-4b5a-be28-d286cb5388c7","redirect":"notes/0880. 索引处的解码字符串【中等】/README"},"0881":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"00a59543-cdc3-4f5e-8341-0cfb4bf024e3","redirect":"notes/0881. 救生艇【中等】/README"},"0882":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"98fc049d-4258-4311-aca5-ef571bf717f7","redirect":"notes/0882. 细分图中的可到达节点【困难】/README"},"0883":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bf3da844-2946-4365-8b5f-479934dd525b","redirect":"notes/0883. 三维形体投影面积【简单】/README"},"0884":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8813471b-c7d7-4d5e-b54a-f09c3d61ef06","redirect":"notes/0884. 两句话中的不常见单词【简单】/README"},"0885":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7f4d6ea1-d180-4e04-aaa3-dee893774642","redirect":"notes/0885. 螺旋矩阵 III【中等】/README"},"0886":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2b3b1595-8cef-4609-b44b-293f6c603e4f","redirect":"notes/0886. 可能的二分法【中等】/README"},"0887":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"55e8aabe-4a51-49d8-b115-4faab83b19de","redirect":"notes/0887. 鸡蛋掉落【困难】/README"},"0888":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"38a3cf2b-17c9-4374-86f1-8645ac183f81","redirect":"notes/0888. 公平的糖果交换【简单】/README"},"0889":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2def45fe-ca4f-4ec5-9b62-a5e104cee082","redirect":"notes/0889. 根据前序和后序遍历构造二叉树【中等】/README"},"0890":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4e2c1a95-e469-4851-afac-897ec70a83ae","redirect":"notes/0890. 查找和替换模式【中等】/README"},"0891":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1df7a38d-2ff9-4a5c-ae35-92f81264a272","redirect":"notes/0891. 子序列宽度之和【困难】/README"},"0892":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1373c5ad-a92c-4c96-8e5f-2e416914b85c","redirect":"notes/0892. 三维形体的表面积【简单】/README"},"0893":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1eae17d2-9a1f-4359-ad96-3a40bc3dacff","redirect":"notes/0893. 特殊等价字符串组【中等】/README"},"0894":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d398dc9-60ad-461f-9eb5-382f995bcddb","redirect":"notes/0894. 所有可能的真二叉树【中等】/README"},"0895":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59ef27ec-cb27-4032-89cb-32db06ff2793","redirect":"notes/0895. 最大频率栈【困难】/README"},"0896":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ddfd1afb-82e9-4972-a97c-56f8aa82015b","redirect":"notes/0896. 单调数列【简单】/README"},"0897":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fb7a4652-1a3d-4d30-9503-58ac2295b61e","redirect":"notes/0897. 递增顺序搜索树【简单】/README"},"0898":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d93c6388-99c0-48eb-ba17-07e008467d0b","redirect":"notes/0898. 子数组按位或操作【中等】/README"},"0899":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"99dc5241-7c9f-4819-82e4-dca0bdde2195","redirect":"notes/0899. 有序队列【困难】/README"},"0900":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef2e86af-97b6-4143-9eb4-b830597e08aa","redirect":"notes/0900. RLE 迭代器【中等】/README"},"0901":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"282d37d8-22dd-416f-9ce7-98131133efe8","redirect":"notes/0901. 股票价格跨度【中等】/README"},"0902":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cf7e8979-2e85-48e5-9ad6-310064b9231c","redirect":"notes/0902. 最大为 N 的数字组合【困难】/README"},"0903":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cfe09c2f-c194-44e7-acf9-4040f1db83fa","redirect":"notes/0903. DI 序列的有效排列【困难】/README"},"0904":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"3bf9a37e-feba-48af-9754-5e00cd8958e1","redirect":"notes/0904. 水果成篮【中等】/README"},"0905":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"59a1b39c-24fa-4f70-8d9a-9c4550739c26","redirect":"notes/0905. 按奇偶排序数组【简单】/README"},"0906":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"418f1bf8-7de1-4828-8abc-b7e6406aa612","redirect":"notes/0906. 超级回文数【困难】/README"},"0907":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8de0264f-6860-48d4-88b3-80f4cb1b2015","redirect":"notes/0907. 子数组的最小值之和【中等】/README"},"0908":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"328e546e-3c76-4c0f-b5a6-2b82cb52189d","redirect":"notes/0908. 最小差值 I【简单】/README"},"0909":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ac3e09ca-2138-4d2b-b813-530b44b92f28","redirect":"notes/0909. 蛇梯棋【中等】/README"},"0910":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5e9088bc-da5c-4881-936c-d41130fcdb16","redirect":"notes/0910. 最小差值 II【中等】/README"},"0911":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a091d757-2015-4cfe-a68b-2fcdbb7ddd6c","redirect":"notes/0911. 在线选举【中等】/README"},"0912":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8198f4b8-d173-4cb4-98de-55f69e85e45c","redirect":"notes/0912. 排序数组【中等】/README"},"0913":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1a241ea8-2429-46eb-9699-13bf90e2a2ec","redirect":"notes/0913. 猫和老鼠【困难】/README"},"0914":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d38fccd6-a6fa-411a-b77f-f6670d1bc068","redirect":"notes/0914. 卡牌分组【简单】/README"},"0915":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"df742bdd-d19f-4272-98ea-d48c99b716d8","redirect":"notes/0915. 分割数组【中等】/README"},"0916":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f7fbe7b1-3b28-4bb2-91a5-5c825ab75a59","redirect":"notes/0916. 单词子集【中等】/README"},"0917":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d1e3f1a-2f5d-48a4-826b-2f3d6df0cadb","redirect":"notes/0917. 仅仅反转字母【简单】/README"},"0918":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2d9d1b94-2cb8-492b-8183-98dfea7487f6","redirect":"notes/0918. 环形子数组的最大和【中等】/README"},"0919":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"93860426-e0ee-452e-82f0-f6d881216eec","redirect":"notes/0919. 完全二叉树插入器【中等】/README"},"0920":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ff8457da-e5f4-445e-b552-0445a89b1c22","redirect":"notes/0920. 播放列表的数量【困难】/README"},"0921":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4aee68a0-91bf-40ec-a2f2-c3fb18c2fb28","redirect":"notes/0921. 使括号有效的最少添加【中等】/README"},"0922":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d4c196f6-86d1-47c3-8711-e27912548005","redirect":"notes/0922. 按奇偶排序数组 II【简单】/README"},"0923":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e0742d64-e482-4be9-9d74-8a7d9256a439","redirect":"notes/0923. 三数之和的多种可能【中等】/README"},"0924":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8583f6c9-bded-47f5-a622-151a5ccd6b84","redirect":"notes/0924. 尽量减少恶意软件的传播【困难】/README"},"0925":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"876ffdca-a45e-41e7-bdea-69cb0255f35d","redirect":"notes/0925. 长按键入【简单】/README"},"0926":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cb31907a-e72e-45f4-a48d-b77f6e9b68be","redirect":"notes/0926. 将字符串翻转到单调递增【中等】/README"},"0927":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"5c8685c5-1186-419b-9032-0d292dbd1807","redirect":"notes/0927. 三等分【困难】/README"},"0928":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d88a1afa-b4f6-4e31-93c5-16525bff8431","redirect":"notes/0928. 尽量减少恶意软件的传播 II【困难】/README"},"0929":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"62a7fec5-0d77-403b-9db5-2a12ad879e0a","redirect":"notes/0929. 独特的电子邮件地址【简单】/README"},"0930":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0d84756a-e2cf-4ed9-b8eb-e45e1c595675","redirect":"notes/0930. 和相同的二元子数组【中等】/README"},"0931":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"05af971e-a1c4-4bcd-aabd-9e8470383ecf","redirect":"notes/0931. 下降路径最小和【中等】/README"},"0932":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9757430a-d22f-4e31-b2bb-caadc98959f7","redirect":"notes/0932. 漂亮数组【中等】/README"},"0933":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"736cd976-9852-40bf-a39b-ab3ff9216319","redirect":"notes/0933. 最近的请求次数【简单】/README"},"0934":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"58283111-c4c4-4f67-ac62-87117dd86847","redirect":"notes/0934. 最短的桥【中等】/README"},"0935":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fe4905be-7006-462f-be1b-df570801eed0","redirect":"notes/0935. 骑士拨号器【中等】/README"},"0936":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bab0f971-d109-4e84-a761-aa19902c67b6","redirect":"notes/0936. 戳印序列【困难】/README"},"0937":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6e252e2-27d4-4821-a95a-ad01ff08d12b","redirect":"notes/0937. 重新排列日志文件【中等】/README"},"0938":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7cf4d5ba-3ead-4962-9c7a-29959ef4b519","redirect":"notes/0938. 二叉搜索树的范围和【简单】/README"},"0939":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e6ed8e7e-0245-4e4b-9168-decf9f3e42b5","redirect":"notes/0939. 最小面积矩形【中等】/README"},"0940":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"35598c5f-78b7-4b10-8241-874162ef5500","redirect":"notes/0940. 不同的子序列 II【困难】/README"},"0941":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"092ea901-4917-4b30-a7ff-c525f363051d","redirect":"notes/0941. 有效的山脉数组【简单】/README"},"0942":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2f6a234d-c18e-4549-867c-40f83b192fa6","redirect":"notes/0942. 增减字符串匹配【简单】/README"},"0943":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a00becd0-21c9-4b80-9536-44f72a606677","redirect":"notes/0943. 最短超级串【困难】/README"},"0944":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"4b6b43c1-ff5c-4eb1-8f7b-1a8825a3ada4","redirect":"notes/0944. 删列造序【简单】/README"},"0945":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"6146d2a1-1456-4f6f-b79e-0d8dd394b970","redirect":"notes/0945. 使数组唯一的最小增量【中等】/README"},"0946":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9f2e3236-5626-41e1-9cd8-7ac368b7cf03","redirect":"notes/0946. 验证栈序列【中等】/README"},"0947":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0ebae3c8-0021-41ac-b5e7-6e8ce198457b","redirect":"notes/0947. 移除最多的同行或同列石头【中等】/README"},"0948":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a203b2c6-5a0b-4641-a584-4c23fd216e5f","redirect":"notes/0948. 令牌放置【中等】/README"},"0949":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"eb7a7ee5-4fce-415c-8557-de2e55054bde","redirect":"notes/0949. 给定数字能组成的最大时间【中等】/README"},"0950":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"86f492a4-1ff4-47d3-895b-a7495cb14737","redirect":"notes/0950. 按递增顺序显示卡牌【中等】/README"},"0951":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"467e9a80-bdbf-4606-ae3d-f0ffcf9d31d2","redirect":"notes/0951. 翻转等价二叉树【中等】/README"},"0952":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9bc86c36-9881-4563-aa2b-b2bdfecc7f88","redirect":"notes/0952. 按公因数计算最大组件大小【困难】/README"},"0953":{"bilibili":[],"yuque":[],"done":true,"enableDiscussions":true,"id":"d44ba485-a8a3-423a-bbee-e64d4fa7b95a","redirect":"notes/0953. 验证外星语词典【简单】/README"},"0954":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"87d47cc1-4875-4907-8654-9821f8d3324b","redirect":"notes/0954. 二倍数对数组【中等】/README"},"0955":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"61563056-fe64-4744-8ecd-4f70c76662d6","redirect":"notes/0955. 删列造序 II【中等】/README"},"0956":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ab7889de-9faf-4cdc-8ff6-2bcea6ae2516","redirect":"notes/0956. 最高的广告牌【困难】/README"},"0957":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ddb04eb4-aaf3-471f-9e6e-287ca2376dfa","redirect":"notes/0957. N 天后的牢房【中等】/README"},"0958":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8d640f80-c91c-4b77-992a-cc92d8ccbfcb","redirect":"notes/0958. 二叉树的完全性检验【中等】/README"},"0959":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d3e97e81-3ce3-4eb6-bcf6-6b1a3f64368d","redirect":"notes/0959. 由斜杠划分区域【中等】/README"},"0960":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"8ffb1ae7-e92f-4aae-b3b8-d9f9d07cbad9","redirect":"notes/0960. 删列造序 III【困难】/README"},"0961":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"024bfc9d-1a2f-4edb-9f3c-976d772b3778","redirect":"notes/0961. 在长度 2N 的数组中找出重复 N 次的元素【简单】/README"},"0962":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e220a904-f663-4d61-abd4-c6b20dd8d40f","redirect":"notes/0962. 最大宽度坡【中等】/README"},"0963":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a9f66333-9eb1-47cd-bc1d-2f474304b96f","redirect":"notes/0963. 最小面积矩形 II【中等】/README"},"0964":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"447b3769-b808-4851-81a6-9e2207a989ba","redirect":"notes/0964. 表示数字的最少运算符【困难】/README"},"0965":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7813862e-3ed5-4de9-ba21-a4431120b1bf","redirect":"notes/0965. 单值二叉树【简单】/README"},"0966":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"611de00c-3717-4737-ac73-9b9ab48934f0","redirect":"notes/0966. 元音拼写检查器【中等】/README"},"0967":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc5ab3b2-b948-4592-8cc4-49051d48229f","redirect":"notes/0967. 连续差相同的数字【中等】/README"},"0968":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"50cba6c3-d4fc-478f-bf3b-a741aef17e53","redirect":"notes/0968. 监控二叉树【困难】/README"},"0969":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"11d59108-0bcf-4784-992a-19f40feff8fc","redirect":"notes/0969. 煎饼排序【中等】/README"},"0970":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ea39cd33-af6e-4be9-9bbc-db755ef6a418","redirect":"notes/0970. 强整数【中等】/README"},"0971":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f8b97197-01cb-4d9d-89c6-09219e14ade1","redirect":"notes/0971. 翻转二叉树以匹配先序遍历【中等】/README"},"0972":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f23e5fc4-cc7d-4f5d-b93b-5b2518d8b200","redirect":"notes/0972. 相等的有理数【困难】/README"},"0973":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"b6aaf60b-6b87-456d-a42f-66013fbbd13d","redirect":"notes/0973. 最接近原点的 K 个点【中等】/README"},"0974":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"33d79b69-d711-4578-8e55-b9a20ac13f04","redirect":"notes/0974. 和可被 K 整除的子数组【中等】/README"},"0975":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"f5206b3f-f7fa-4ac4-8c04-66405fa6b8a5","redirect":"notes/0975. 奇偶跳【困难】/README"},"0976":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"56da4868-af5f-4278-8b9f-32f4e63be5fb","redirect":"notes/0976. 三角形的最大周长【简单】/README"},"0977":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"7a39f65e-1d2a-4b79-914a-08222be2a532","redirect":"notes/0977. 有序数组的平方【简单】/README"},"0978":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"caf104ae-bd78-490e-a54e-f7364714c810","redirect":"notes/0978. 最长湍流子数组【中等】/README"},"0979":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ee0dee76-b2e8-472c-942f-e5cfdae7f6a6","redirect":"notes/0979. 在二叉树中分配硬币【中等】/README"},"0980":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"cc7f0f48-812e-492c-86e1-7be463ee74f4","redirect":"notes/0980. 不同路径 III【困难】/README"},"0981":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ef05861f-48e1-41ba-8f79-c4c132898efa","redirect":"notes/0981. 基于时间的键值存储【中等】/README"},"0982":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"bb95b851-4a99-41ea-8e83-d5a11d2ad583","redirect":"notes/0982. 按位与为零的三元组【困难】/README"},"0983":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d9ba5b76-a036-4fa9-a4c7-c1102840d704","redirect":"notes/0983. 最低票价【中等】/README"},"0984":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"67761cff-9e9a-4359-be40-face7a239a42","redirect":"notes/0984. 不含 AAA 或 BBB 的字符串【中等】/README"},"0985":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"07c1a05d-5604-48cb-a3de-6341204889e2","redirect":"notes/0985. 查询后的偶数和【中等】/README"},"0986":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"89a40778-2fa5-43eb-93d3-62112f0fd2b7","redirect":"notes/0986. 区间列表的交集【中等】/README"},"0987":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"2edd3687-e120-41f9-8ffe-439cd23908ef","redirect":"notes/0987. 二叉树的垂序遍历【困难】/README"},"0988":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"0a050bef-258a-4c06-87d3-57a105a21b31","redirect":"notes/0988. 从叶结点开始的最小字符串【中等】/README"},"0989":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d2ba0a4d-3a82-4bbe-bc7a-6aa2e146aecc","redirect":"notes/0989. 数组形式的整数加法【简单】/README"},"0990":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fe8ef6b9-53da-45c8-8f64-71f0b58de66d","redirect":"notes/0990. 等式方程的可满足性【中等】/README"},"0991":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"e712988c-5c65-42cc-a101-256a7ca7aaaf","redirect":"notes/0991. 坏了的计算器【中等】/README"},"0992":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"fba493d0-d29a-4ec3-afae-0bdefd411d19","redirect":"notes/0992. K 个不同整数的子数组【困难】/README"},"0993":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"65122d88-8b47-4a7a-9105-35cc03dff63a","redirect":"notes/0993. 二叉树的堂兄弟节点【简单】/README"},"0994":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"d93a0acb-aeaf-459e-bbd7-7567bcc28e9e","redirect":"notes/0994. 腐烂的橘子【中等】/README"},"0995":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"9571d1ed-b1e0-4985-9746-a4856075f85d","redirect":"notes/0995. K 连续位的最小翻转次数【困难】/README"},"0996":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"a985b76f-d933-43fc-828b-30a4b080033e","redirect":"notes/0996. 平方数组的数目【困难】/README"},"0997":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"ad683b5b-b84f-4088-845f-863254795592","redirect":"notes/0997. 找到小镇的法官【简单】/README"},"0998":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"1ad15d2d-ef18-4d0e-a6c8-553bd9525877","redirect":"notes/0998. 最大二叉树 II【中等】/README"},"0999":{"bilibili":[],"yuque":[],"done":false,"enableDiscussions":false,"id":"c09a95bb-d6bb-49d9-ae6a-eb1802cebd3d","redirect":"notes/0999. 可以被一步捕获的棋子数【简单】/README"}}');
const formatDate = (timestamp) => {
  const date = new Date(timestamp);
  const year = date.getFullYear();
  const month = String(date.getMonth() + 1).padStart(2, "0");
  const day = String(date.getDate()).padStart(2, "0");
  const weekDays = ["日", "一", "二", "三", "四", "五", "六"];
  const weekDay = weekDays[date.getDay()];
  const hours = String(date.getHours()).padStart(2, "0");
  const minutes = String(date.getMinutes()).padStart(2, "0");
  const seconds = String(date.getSeconds()).padStart(2, "0");
  const footprintsDay = getFootprintsDay(timestamp);
  return `👣 ${footprintsDay} | ${year}年${month}月${day}日 周${weekDay} ${hours}:${minutes}:${seconds}`;
};
const getFootprintsDay = (timestamp = Date.now()) => Math.floor(
  (timestamp - new Date(1999, 5, 29).getTime()) / (1e3 * 60 * 60 * 24)
) + 1;
const scrollToTop = () => window.scrollTo({ top: 0, behavior: "smooth" });
const _sfc_main$3 = {
  __name: "Layout",
  __ssrInlineRender: true,
  setup(__props) {
    const { Layout: Layout2 } = theme;
    const vpData = useData$1();
    useRouter();
    const route = useRoute();
    const currentNoteId = computed(() => {
      const match = vpData.page.value.relativePath.match(/notes\/(\d{4})\./);
      return match ? match[1] : null;
    });
    const currentNoteConfig = computed(() => {
      return currentNoteId.value && data[currentNoteId.value] ? data[currentNoteId.value] : {
        bilibili: [],
        done: false,
        enableDiscussions: false
        // 默认值
      };
    });
    const isDiscussionsVisible = computed(
      () => currentNoteConfig.value.enableDiscussions
    );
    const vscodeNotesDir = ref("");
    const updateVscodeNoteDir = () => {
      if (typeof window !== "undefined") {
        const notesDir = localStorage.getItem(NOTES_DIR_KEY);
        vscodeNotesDir.value = notesDir ? `vscode://file/${notesDir}/${vpData.page.value.relativePath}` : "";
      }
    };
    onMounted(() => {
      updateVscodeNoteDir();
    });
    watch(
      () => vpData.page.value.relativePath,
      () => {
        updateVscodeNoteDir();
      }
    );
    const isHomeReadme = computed(() => vpData.page.value.filePath === TOC_MD);
    const doneNotesLen = computed(() => data$1 == null ? void 0 : data$1.doneNotesLen);
    const isCopied = ref(false);
    const copyRawFile = () => {
      if (!data$1) return;
      navigator.clipboard.writeText(data$1.fileContent);
      isCopied.value = true;
      setTimeout(() => isCopied.value = false, 1e3);
      const targetWindow = window.open("https://tdahuyou.github.io/m2mm/", "_blank");
      setTimeout(() => {
        targetWindow.postMessage(
          {
            senderID: "__TNotes__",
            message: data$1.fileContent
          },
          "*"
        );
      }, 1e3);
    };
    const showNotFound = ref(false);
    const currentPath = ref("");
    const matchedId = ref("");
    const redirectPath = ref("");
    function checkRedirect() {
      if (typeof window === "undefined") return false;
      currentPath.value = window.location.pathname;
      const match = currentPath.value.match(
        /\/TNotes[^/]+\/notes\/(\d{4})[^/]*(?:\/.*)?$/
      );
      if (match) {
        matchedId.value = match[1];
        const targetNote = data[matchedId.value];
        redirectPath.value = targetNote ? targetNote.redirect : "";
        if (targetNote && targetNote.redirect) {
          const base = vpData.site.value.base;
          const targetPath = `${base}${targetNote.redirect}`;
          if (currentPath.value !== targetPath) {
            console.log(`Redirecting from ${currentPath.value} to ${targetPath}`);
            window.location.href = targetPath;
            return true;
          }
        }
      }
      return false;
    }
    computed(() => {
      try {
        return decodeURIComponent(currentPath.value);
      } catch (e) {
        console.error("Failed to decode URI:", e);
        return currentPath.value;
      }
    });
    onMounted(() => {
      setTimeout(() => {
        if (vpData.page.value.isNotFound) {
          const redirected = checkRedirect();
          if (!redirected) {
            showNotFound.value = true;
          }
        }
      }, 1e3);
    });
    watch(
      () => route.path,
      () => {
        setTimeout(() => {
          if (vpData.page.value.isNotFound) {
            const redirected = checkRedirect();
            if (!redirected) {
              showNotFound.value = true;
            }
          }
        }, 1e3);
      }
    );
    return (_ctx, _push, _parent, _attrs) => {
      _push(ssrRenderComponent(unref(Layout2), _attrs, createSlots({
        "doc-top": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(ImagePreview, null, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_sfc_main$4, null, null, _parent2, _scopeId));
          } else {
            return [
              createVNode(ImagePreview),
              createVNode(_sfc_main$4)
            ];
          }
        }),
        "doc-before": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="doc-before-container" data-v-d72c1e43${_scopeId}><div class="left-area" data-v-d72c1e43${_scopeId}><div class="vscode-box" style="${ssrRenderStyle(vscodeNotesDir.value ? null : { display: "none" })}" data-v-d72c1e43${_scopeId}><a${ssrRenderAttr("href", vscodeNotesDir.value)} aria-label="open in vscode" title="open in vscode" target="_blank" data-v-d72c1e43${_scopeId}><img${ssrRenderAttr("src", unref(icon__vscode$1))} alt="open in vscode" data-v-d72c1e43${_scopeId}></a></div><div class="github-box" style="${ssrRenderStyle(isHomeReadme.value ? null : { display: "none" })}" data-v-d72c1e43${_scopeId}><a${ssrRenderAttr("href", `https://github.com/Tdahuyou/${unref(vpData).page.value.title.toLowerCase()}/blob/main/README.md`)}${ssrRenderAttr("aria-label", `Tdahuyou github - ${unref(vpData).page.value.title.toLowerCase()} 笔记仓库链接`)}${ssrRenderAttr("title", `Tdahuyou github - ${unref(vpData).page.value.title.toLowerCase()} 笔记仓库链接`)} target="_blank" rel="noopener" data-v-d72c1e43${_scopeId}><img${ssrRenderAttr("src", unref(icon__github$1))} alt="github icon" data-v-d72c1e43${_scopeId}></a></div><div class="copy-box" style="${ssrRenderStyle(isHomeReadme.value ? null : { display: "none" })}" data-v-d72c1e43${_scopeId}><span class="tip" style="${ssrRenderStyle(isCopied.value ? null : { display: "none" })}" data-v-d72c1e43${_scopeId}>Copied!</span><button class="copy-raw-file" title="Copy raw file" data-v-d72c1e43${_scopeId}><img class="icon"${ssrRenderAttr("src", unref(m2mm))} alt="icon__clipboard" data-v-d72c1e43${_scopeId}></button></div></div><div class="right-area" style="${ssrRenderStyle(isHomeReadme.value ? null : { display: "none" })}" data-v-d72c1e43${_scopeId}><span title="已完成笔记数量" data-v-d72c1e43${_scopeId}>✅ 已完成：${ssrInterpolate(doneNotesLen.value)}</span></div></div>`);
          } else {
            return [
              createVNode("div", { class: "doc-before-container" }, [
                createVNode("div", { class: "left-area" }, [
                  withDirectives(createVNode("div", { class: "vscode-box" }, [
                    createVNode("a", {
                      href: vscodeNotesDir.value,
                      "aria-label": "open in vscode",
                      title: "open in vscode",
                      target: "_blank"
                    }, [
                      createVNode("img", {
                        src: unref(icon__vscode$1),
                        alt: "open in vscode"
                      }, null, 8, ["src"])
                    ], 8, ["href"])
                  ], 512), [
                    [vShow, vscodeNotesDir.value]
                  ]),
                  withDirectives(createVNode("div", { class: "github-box" }, [
                    createVNode("a", {
                      href: `https://github.com/Tdahuyou/${unref(vpData).page.value.title.toLowerCase()}/blob/main/README.md`,
                      "aria-label": `Tdahuyou github - ${unref(vpData).page.value.title.toLowerCase()} 笔记仓库链接`,
                      title: `Tdahuyou github - ${unref(vpData).page.value.title.toLowerCase()} 笔记仓库链接`,
                      target: "_blank",
                      rel: "noopener"
                    }, [
                      createVNode("img", {
                        src: unref(icon__github$1),
                        alt: "github icon"
                      }, null, 8, ["src"])
                    ], 8, ["href", "aria-label", "title"])
                  ], 512), [
                    [vShow, isHomeReadme.value]
                  ]),
                  withDirectives(createVNode("div", { class: "copy-box" }, [
                    withDirectives(createVNode("span", { class: "tip" }, "Copied!", 512), [
                      [vShow, isCopied.value]
                    ]),
                    createVNode("button", {
                      class: "copy-raw-file",
                      onClick: copyRawFile,
                      title: "Copy raw file"
                    }, [
                      createVNode("img", {
                        class: "icon",
                        src: unref(m2mm),
                        alt: "icon__clipboard"
                      }, null, 8, ["src"])
                    ])
                  ], 512), [
                    [vShow, isHomeReadme.value]
                  ])
                ]),
                withDirectives(createVNode("div", { class: "right-area" }, [
                  createVNode("span", { title: "已完成笔记数量" }, "✅ 已完成：" + toDisplayString(doneNotesLen.value), 1)
                ], 512), [
                  [vShow, isHomeReadme.value]
                ])
              ])
            ];
          }
        }),
        "doc-footer-before": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="footer-update-time" title="笔记更新时间" data-v-d72c1e43${_scopeId}>${ssrInterpolate(unref(formatDate)(unref(vpData).page.value.lastUpdated))}</div>`);
          } else {
            return [
              createVNode("div", {
                class: "footer-update-time",
                title: "笔记更新时间"
              }, toDisplayString(unref(formatDate)(unref(vpData).page.value.lastUpdated)), 1)
            ];
          }
        }),
        "doc-after": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (isDiscussionsVisible.value) {
              _push2(ssrRenderComponent(Discussions, {
                id: currentNoteConfig.value.id
              }, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              isDiscussionsVisible.value ? (openBlock(), createBlock(Discussions, {
                key: 0,
                id: currentNoteConfig.value.id
              }, null, 8, ["id"])) : createCommentVNode("", true)
            ];
          }
        }),
        "aside-top": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) ;
          else {
            return [];
          }
        }),
        "aside-outline-before": withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<span style="${ssrRenderStyle({ "cursor": "pointer", "height": "1em", "width": "1em" })}" title="回到顶部" data-v-d72c1e43${_scopeId}><img${ssrRenderAttr("src", unref(icon__totop))} alt="to top" data-v-d72c1e43${_scopeId}></span>`);
          } else {
            return [
              createVNode("span", {
                onClick: unref(scrollToTop),
                style: { "cursor": "pointer", "height": "1em", "width": "1em" },
                title: "回到顶部"
              }, [
                createVNode("img", {
                  src: unref(icon__totop),
                  alt: "to top"
                }, null, 8, ["src"])
              ], 8, ["onClick"])
            ];
          }
        }),
        _: 2
      }, [
        showNotFound.value ? {
          name: "not-found",
          fn: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div class="not-found-container" data-v-d72c1e43${_scopeId}><h1 data-v-d72c1e43${_scopeId}>404</h1><p data-v-d72c1e43${_scopeId}>Page not found</p></div>`);
            } else {
              return [
                createVNode("div", { class: "not-found-container" }, [
                  createVNode("h1", null, "404"),
                  createVNode("p", null, "Page not found")
                ])
              ];
            }
          }),
          key: "0"
        } : void 0
      ]), _parent));
    };
  }
};
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/Layout/Layout.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const Layout = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["__scopeId", "data-v-d72c1e43"]]);
const _sfc_main$2 = {
  __name: "Settings",
  __ssrInlineRender: true,
  setup(__props) {
    const path = ref("");
    if (typeof window !== "undefined") {
      path.value = localStorage.getItem(NOTES_DIR_KEY);
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<!--[--><div class="container" data-v-cad5414f><p class="label" data-v-cad5414f><label for="path" data-v-cad5414f>⚙️ 本地知识库的绝对路径:</label></p><p class="input-container" data-v-cad5414f><input id="path"${ssrRenderAttr("value", path.value)} placeholder="请输入当前笔记文件夹所在位置" class="input" data-v-cad5414f></p><ul class="instructions" data-v-cad5414f><li data-v-cad5414f>配置本地笔记文件夹所在位置，以便使用 VSCode 快速打开笔记。</li><li data-v-cad5414f>⚠️ 注意：要求是 PC 环境。</li></ul></div><hr data-v-cad5414f><div class="button-container" data-v-cad5414f><button class="button" data-v-cad5414f>save</button></div><!--]-->`);
    };
  }
};
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/Settings/Settings.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const Settings = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["__scopeId", "data-v-cad5414f"]]);
const icon__fold = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='%235961ff'%20d='M2%204h20v2H2zm0%205.57L5.887%2012L2%2014.43zM7%2011h15v2H7zm-5%207h20v2H2z'%20/%3e%3c/svg%3e";
const icon__github = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='1em'%20height='1em'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='%235961ff'%20d='M12%20.297c-6.63%200-12%205.373-12%2012c0%205.303%203.438%209.8%208.205%2011.385c.6.113.82-.258.82-.577c0-.285-.01-1.04-.015-2.04c-3.338.724-4.042-1.61-4.042-1.61C4.422%2018.07%203.633%2017.7%203.633%2017.7c-1.087-.744.084-.729.084-.729c1.205.084%201.838%201.236%201.838%201.236c1.07%201.835%202.809%201.305%203.495.998c.108-.776.417-1.305.76-1.605c-2.665-.3-5.466-1.332-5.466-5.93c0-1.31.465-2.38%201.235-3.22c-.135-.303-.54-1.523.105-3.176c0%200%201.005-.322%203.3%201.23c.96-.267%201.98-.399%203-.405c1.02.006%202.04.138%203%20.405c2.28-1.552%203.285-1.23%203.285-1.23c.645%201.653.24%202.873.12%203.176c.765.84%201.23%201.91%201.23%203.22c0%204.61-2.805%205.625-5.475%205.92c.42.36.81%201.096.81%202.22c0%201.606-.015%202.896-.015%203.286c0%20.315.21.69.825.57C20.565%2022.092%2024%2017.592%2024%2012.297c0-6.627-5.373-12-12-12'%20/%3e%3c/svg%3e";
const icon__vscode = "data:image/svg+xml,%3csvg%20t='1733712883490'%20class='icon'%20viewBox='0%200%201024%201024'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20p-id='23919'%20width='200'%20height='200'%3e%3cpath%20d='M746.222933%20102.239573l-359.799466%20330.820267L185.347413%20281.4976%20102.2464%20329.864533l198.20544%20182.132054-198.20544%20182.132053%2083.101013%2048.510293%20201.076054-151.558826%20359.799466%20330.676906%20175.527254-85.251413V187.4944z%20m0%20217.57952v384.341334l-255.040853-192.177494z'%20fill='%235961ff'%20p-id='23920'%3e%3c/path%3e%3c/svg%3e";
const icon__card = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='%235961ff'%20d='M3%206h18v12H3zM2%204a1%201%200%200%200-1%201v14a1%201%200%200%200%201%201h20a1%201%200%200%200%201-1V5a1%201%200%200%200-1-1zm11%205h6v2h-6zm5%204h-5v2h5zM6%2013h1v3h2v-5H6zm3-5H7v2h2z'/%3e%3c/svg%3e";
const icon__folder = "data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='24'%20height='24'%20viewBox='0%200%2024%2024'%3e%3cpath%20fill='none'%20stroke='%235961ff'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='1.5'%20d='M2%2011V4.6a.6.6%200%200%201%20.6-.6h6.178a.6.6%200%200%201%20.39.144l3.164%202.712a.6.6%200%200%200%20.39.144H21.4a.6.6%200%200%201%20.6.6V11M2%2011v8.4a.6.6%200%200%200%20.6.6h18.8a.6.6%200%200%200%20.6-.6V11M2%2011h20'/%3e%3c/svg%3e";
const _sfc_main$1 = {
  __name: "SidebarCard",
  __ssrInlineRender: true,
  props: {
    pending: {
      type: Boolean,
      default: false
    },
    done: {
      type: Boolean,
      default: true
    },
    deprecated: {
      type: Boolean,
      default: false
    }
  },
  setup(__props) {
    const props = __props;
    const viewMode = ref(localStorage.getItem(NOTES_VIEW_KEY) || "cards");
    const expandedGroupsFolder = ref(/* @__PURE__ */ new Set());
    watch(viewMode, (newMode) => {
      localStorage.setItem(NOTES_VIEW_KEY, newMode);
    });
    onMounted(() => {
      const savedViewMode = localStorage.getItem(NOTES_VIEW_KEY);
      if (savedViewMode) {
        viewMode.value = savedViewMode;
      }
    });
    const folderViewData = computed(() => {
      const result = {};
      articles.forEach((article) => {
        const firstLevelCategory = article.firstLevelCategory;
        if (!result[firstLevelCategory]) {
          result[firstLevelCategory] = {
            name: firstLevelCategory,
            articles: [],
            fullPath: firstLevelCategory
          };
        }
        result[firstLevelCategory].articles.push(article);
      });
      return result;
    });
    useRouter();
    const { theme: theme2, site } = useData$1();
    const baseUrl = site.value.base.replace(/\/$/, "");
    const { articles, groups } = extractArticlesWithGroups(
      theme2.value.sidebar,
      props.pending,
      props.done,
      props.deprecated
    );
    const expandedGroups = ref(new Set(Object.keys(groups)));
    function extractArticlesWithGroups(sidebar, showPending, showDone, showDeprecated) {
      const articles2 = [];
      const groups2 = {};
      function traverse(items, groupPath = []) {
        for (let i = 0; i < items.length; i++) {
          const item = items[i];
          if (item.items && Array.isArray(item.items)) {
            const newGroupPath = [...groupPath, item.text];
            traverse(item.items, newGroupPath);
          } else if (item.text) {
            let shouldInclude = false;
            let status = "";
            let cleanText = "";
            if (item.text.startsWith("✅") && showDone) {
              shouldInclude = true;
              status = "done";
              cleanText = item.text.replace("✅ ", "");
            } else if (item.text.startsWith("⏰") && showPending) {
              shouldInclude = true;
              status = "pending";
              cleanText = item.text.replace("⏰ ", "");
            } else if (item.text.startsWith("❌") && showDeprecated) {
              shouldInclude = true;
              status = "deprecated";
              cleanText = item.text.replace("❌ ", "");
            }
            if (shouldInclude) {
              const group = groupPath.join(" / ");
              const firstLevelCategory = groupPath[0] || "未分类";
              const realNumber = extractRealNumberFromLink(item.link);
              const title = extractTitleFromText(cleanText);
              const fullLink = baseUrl ? baseUrl + item.link : item.link;
              const article = {
                text: title,
                realNumber,
                link: fullLink,
                relativePath: item.link,
                // 存储相对路径
                group: group || "未分类",
                status,
                firstLevelCategory
              };
              articles2.push(article);
              if (!groups2[firstLevelCategory]) {
                groups2[firstLevelCategory] = [];
              }
              groups2[firstLevelCategory].push(article);
            }
          }
        }
      }
      traverse(sidebar);
      return { articles: articles2, groups: groups2 };
    }
    function extractRealNumberFromLink(link2) {
      if (!link2) return "0000";
      const match = link2.match(/\/notes\/(\d{4})/);
      return match ? match[1] : "0000";
    }
    function extractTitleFromText(text) {
      if (!text) return "";
      return text.replace(/^\d{4}\.?\s/, "");
    }
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "sidebar-view-container" }, _attrs))} data-v-792feb53><div class="control-bar" data-v-792feb53><div class="view-toggle" data-v-792feb53><button class="${ssrRenderClass({ active: viewMode.value === "cards" })}" data-v-792feb53><img${ssrRenderAttr("src", unref(icon__card))} alt="卡片视图" data-v-792feb53></button><button class="${ssrRenderClass({ active: viewMode.value === "folder" })}" data-v-792feb53><img${ssrRenderAttr("src", unref(icon__folder))} alt="文件夹视图" data-v-792feb53></button></div><div class="actions" data-v-792feb53><button class="fold-toggle" data-v-792feb53><img${ssrRenderAttr("src", unref(icon__fold))} alt="折叠/展开" data-v-792feb53></button><button class="github-link" data-v-792feb53><img${ssrRenderAttr("src", unref(icon__github))} alt="GitHub仓库" data-v-792feb53></button><button class="vscode-open" data-v-792feb53><img${ssrRenderAttr("src", unref(icon__vscode))} alt="使用 VS Code 打开本地知识库" data-v-792feb53></button></div></div>`);
      if (viewMode.value === "cards") {
        _push(`<div class="sidebar-cards" data-v-792feb53><!--[-->`);
        ssrRenderList(unref(groups), (groupArticles, groupName, gIndex) => {
          _push(`<div data-v-792feb53><div class="group-header" data-v-792feb53>${ssrInterpolate(groupName)} <div class="toggle-icon" data-v-792feb53>`);
          if (expandedGroups.value.has(groupName)) {
            _push(`<span data-v-792feb53>📂</span>`);
          } else {
            _push(`<span data-v-792feb53>${ssrInterpolate(groupArticles.length)} 📂</span>`);
          }
          _push(`</div></div>`);
          if (expandedGroups.value.has(groupName)) {
            _push(`<div class="cards-grid" data-v-792feb53><!--[-->`);
            ssrRenderList(groupArticles, (article, aIndex) => {
              _push(`<div class="card" data-v-792feb53><div class="card-header" data-v-792feb53><div class="card-numbers" data-v-792feb53><div class="${ssrRenderClass([`status-${article.status}`, "card-number-display"])}" data-v-792feb53>${ssrInterpolate((article.status === "done" ? "✅ " : article.status === "pending" ? "⏰ " : article.status === "deprecated" ? "❌ " : "✅ ") + article.realNumber)}</div></div><div class="card-index" data-v-792feb53>${ssrInterpolate(gIndex + 1 + "." + (aIndex + 1))}</div></div><div class="card-body" data-v-792feb53><h3 class="card-title" data-v-792feb53><a${ssrRenderAttr("href", article.link)} class="title-link" data-v-792feb53>${ssrInterpolate(article.text)}</a></h3></div></div>`);
            });
            _push(`<!--]--></div>`);
          } else {
            _push(`<!---->`);
          }
          _push(`</div>`);
        });
        _push(`<!--]--></div>`);
      } else {
        _push(`<!---->`);
      }
      if (viewMode.value === "folder") {
        _push(`<div class="folder-view" data-v-792feb53><div class="folder-tree" data-v-792feb53><!--[-->`);
        ssrRenderList(folderViewData.value, (folder, folderName) => {
          _push(`<div class="folder-group" data-v-792feb53><div class="folder-header" data-v-792feb53><span class="folder-icon" data-v-792feb53>${ssrInterpolate(expandedGroupsFolder.value.has(folder.fullPath) ? "📂" : "📁")}</span><span class="folder-name" data-v-792feb53>${ssrInterpolate(folderName)}</span><span class="folder-count" data-v-792feb53>${ssrInterpolate(folder.articles.length)} 篇</span></div>`);
          if (expandedGroupsFolder.value.has(folder.fullPath)) {
            _push(`<div class="folder-content" data-v-792feb53><!--[-->`);
            ssrRenderList(folder.articles, (article) => {
              _push(`<div class="folder-article" data-v-792feb53><div class="article-info" data-v-792feb53><span class="${ssrRenderClass([`status-${article.status}`, "article-status"])}" data-v-792feb53>${ssrInterpolate(article.status === "done" ? "✅" : article.status === "pending" ? "⏰" : article.status === "deprecated" ? "❌" : "📄")}</span><span class="article-title" data-v-792feb53>${ssrInterpolate(article.text)}</span></div><button class="vscode-article" title="在 VS Code 中打开笔记目录" data-v-792feb53><img${ssrRenderAttr("src", unref(icon__vscode))} alt="打开笔记目录" data-v-792feb53></button></div>`);
            });
            _push(`<!--]--></div>`);
          } else {
            _push(`<!---->`);
          }
          _push(`</div>`);
        });
        _push(`<!--]--></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="stats-info" data-v-792feb53><div class="stat-item" data-v-792feb53><span class="stat-label" data-v-792feb53>🗓 创建时间</span><span class="stat-value" data-v-792feb53>${ssrInterpolate(unref(formatDate)(unref(ROOT_ITEM).created_at))}</span></div><div class="stat-item" data-v-792feb53><span class="stat-label" data-v-792feb53>♻️ 更新时间</span><span class="stat-value" data-v-792feb53>${ssrInterpolate(unref(formatDate)(unref(ROOT_ITEM).updated_at))}</span></div><div class="stat-item" data-v-792feb53><span class="stat-label" data-v-792feb53>✅ 完成进度</span><span class="stat-value" data-v-792feb53>${ssrInterpolate(unref(ROOT_ITEM).completed_notes_count)} / ${ssrInterpolate(unref(articles).length)} ≈ ${ssrInterpolate(Math.floor(
        unref(ROOT_ITEM).completed_notes_count / unref(articles).length * 100
      ))}%</span></div></div></div>`);
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/SidebarCard/SidebarCard.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const SidebarCard = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["__scopeId", "data-v-792feb53"]]);
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "MarkMap",
  __ssrInlineRender: true,
  props: {
    content: { type: String, default: "" },
    duration: { type: Number, default: 100 },
    spacingVertical: { type: Number, default: 10 },
    spacingHorizontal: { type: Number, default: 20 },
    nodeMinHeight: { type: Number, default: 24 },
    initialExpandLevel: { type: Number, default: 3 }
  },
  setup(__props) {
    const props = __props;
    const svgRef = ref(null);
    const containerRef = ref(null);
    let markmapInstance = null;
    let observer = null;
    let toolbarEl = null;
    const expandLevel = ref(props.initialExpandLevel);
    const transformer = new Transformer();
    const isFullscreen = ref(false);
    function renderMarkmap(content, level = expandLevel.value) {
      if (!svgRef.value) return;
      nextTick().then(() => {
        if (markmapInstance) {
          try {
            markmapInstance.destroy();
          } catch {
          }
          markmapInstance = null;
        }
        if (!content.trim()) {
          svgRef.value.innerHTML = '<text x="20" y="30" fill="#999">空内容</text>';
          return;
        }
        try {
          const { root } = transformer.transform(content);
          const options = {
            autoFit: true,
            initialExpandLevel: level,
            duration: props.duration,
            nodeMinHeight: props.nodeMinHeight,
            spacingVertical: props.spacingVertical,
            spacingHorizontal: props.spacingHorizontal,
            maxInitialScale: 2,
            maxWidth: 400,
            // default color
            // color: (node): string => defaultColorFn(`${node.state?.path || ''}`),
            color: (node) => {
              var _a;
              return +((_a = node.state) == null ? void 0 : _a.path) === 1 ? "var(--vp-c-brand-3)" : "var(--vp-c-brand-1)";
            }
          };
          markmapInstance = Markmap.create(svgRef.value, options, root);
          setTimeout(() => {
            try {
              markmapInstance == null ? void 0 : markmapInstance.fit();
            } catch (e) {
              console.warn("fit failed", e);
            }
          }, 0);
          initToolbar();
          setupObserver();
        } catch (error) {
          console.error("Markmap render error:", error);
          svgRef.value.innerHTML = `<text x="20" y="30" fill="red">Markmap 错误: ${error.message}</text>`;
        }
      });
    }
    function initToolbar() {
      if (!markmapInstance || !containerRef.value) return;
      if (toolbarEl) {
        toolbarEl.remove();
      }
      const { el } = Toolbar.create(markmapInstance);
      toolbarEl = el;
      toolbarEl.style.position = "absolute";
      toolbarEl.style.top = "1rem";
      toolbarEl.style.right = ".5rem";
      toolbarEl.style.scale = ".8";
      const brand = toolbarEl.querySelector(".mm-toolbar-brand");
      if (brand) toolbarEl.removeChild(brand);
      containerRef.value.appendChild(toolbarEl);
      addFullscreenButton(toolbarEl);
      addUpdateButton(toolbarEl);
    }
    function addFullscreenButton(toolbar) {
      const fullscreenBtn = document.createElement("div");
      fullscreenBtn.className = "mm-toolbar-item";
      fullscreenBtn.title = isFullscreen.value ? "退出全屏" : "全屏";
      fullscreenBtn.innerHTML = isFullscreen.value ? "R" : "M";
      fullscreenBtn.addEventListener("click", toggleFullscreen);
      toolbar.appendChild(fullscreenBtn);
    }
    function addUpdateButton(toolbar) {
      const updateContainer = document.createElement("div");
      updateContainer.style.display = "flex";
      updateContainer.style.alignItems = "center";
      updateContainer.style.gap = "8px";
      updateContainer.style.marginRight = "5px";
      const levelInput = document.createElement("input");
      levelInput.type = "number";
      levelInput.min = "1";
      levelInput.max = "100";
      levelInput.value = expandLevel.value.toString();
      levelInput.style.width = "2rem";
      levelInput.style.textAlign = "center";
      levelInput.title = "展开层级";
      levelInput.addEventListener("change", (e) => {
        const value = parseInt(e.target.value);
        if (!isNaN(value)) {
          expandLevel.value = value;
        }
      });
      const updateBtn = document.createElement("button");
      updateBtn.innerText = "L";
      updateBtn.title = "更新层级";
      updateBtn.addEventListener("click", onUpdateClick);
      updateContainer.appendChild(levelInput);
      updateContainer.appendChild(updateBtn);
      toolbar.insertBefore(updateContainer, toolbar.firstChild);
    }
    function toggleFullscreen() {
      if (!containerRef.value) return;
      if (!isFullscreen.value) {
        if (containerRef.value.requestFullscreen) {
          containerRef.value.requestFullscreen().catch((err) => {
            console.error("全屏请求失败:", err);
          });
        } else if (containerRef.value.webkitRequestFullscreen) {
          containerRef.value.webkitRequestFullscreen();
        } else if (containerRef.value.msRequestFullscreen) {
          containerRef.value.msRequestFullscreen();
        }
      } else {
        if (document.exitFullscreen) {
          document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
          document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
          document.msExitFullscreen();
        }
      }
    }
    function handleFullscreenChange() {
      isFullscreen.value = !!(document.fullscreenElement || document.webkitFullscreenElement || document.msFullscreenElement);
      if (toolbarEl) {
        const fullscreenBtn = toolbarEl.querySelector(
          ".mm-toolbar-item:last-child"
        );
        if (fullscreenBtn) {
          fullscreenBtn.title = isFullscreen.value ? "退出全屏" : "全屏";
          fullscreenBtn.innerHTML = isFullscreen.value ? "R" : "M";
        }
      }
      if (svgRef.value) {
        if (isFullscreen.value) {
          svgRef.value.style.height = "calc(100vh - 100px)";
        } else {
          svgRef.value.style.height = "400px";
        }
        setTimeout(() => {
          if (markmapInstance) {
            try {
              markmapInstance.fit();
            } catch (e) {
              console.warn("居中失败", e);
            }
          }
        }, 300);
      }
    }
    function setupObserver() {
      if (!svgRef.value) return;
      if (observer !== null) {
        observer.disconnect();
      }
      observer = new MutationObserver(() => {
      });
      observer.observe(svgRef.value, {
        childList: true,
        subtree: true,
        attributes: true
      });
    }
    watch(
      () => props.content,
      (newVal) => {
        renderMarkmap(decodeURIComponent(newVal || ""));
      }
    );
    function onUpdateClick() {
      renderMarkmap(decodeURIComponent(props.content || ""), expandLevel.value);
    }
    onMounted(() => {
      renderMarkmap(decodeURIComponent(props.content || ""));
      document.addEventListener("fullscreenchange", handleFullscreenChange);
      document.addEventListener("webkitfullscreenchange", handleFullscreenChange);
      document.addEventListener("MSFullscreenChange", handleFullscreenChange);
    });
    onBeforeUnmount(() => {
      if (markmapInstance) {
        try {
          markmapInstance.destroy();
        } catch {
        }
        markmapInstance = null;
      }
      if (observer !== null) {
        observer.disconnect();
        observer = null;
      }
      document.removeEventListener("fullscreenchange", handleFullscreenChange);
      document.removeEventListener("webkitfullscreenchange", handleFullscreenChange);
      document.removeEventListener("MSFullscreenChange", handleFullscreenChange);
    });
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({
        class: "markmap-container",
        ref_key: "containerRef",
        ref: containerRef,
        style: { "position": "relative", "margin": "1rem 0", "min-height": "450px" }
      }, _attrs))}><svg style="${ssrRenderStyle({ "width": "100%", "height": "400px" })}"></svg></div>`);
    };
  }
});
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(".vitepress/components/MarkMap/MarkMap.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const RawTheme = {
  extends: theme,
  // doc: https://vitepress.dev/zh/guide/extending-default-theme#layout-slots
  // 使用注入插槽的包装组件覆盖 Layout
  Layout,
  // doc: https://vitepress.dev/zh/guide/extending-default-theme#registering-global-components
  enhanceApp({ app }) {
    app.component("BilibiliOutsidePlayer", _sfc_main$a);
    app.component("B", _sfc_main$a);
    app.component("Discussions", Discussions);
    app.component("EnWordList", EnWordList);
    app.component("E", EnWordList);
    app.component("Footprints", _sfc_main$6);
    app.component("F", _sfc_main$6);
    app.component("Settings", Settings);
    app.component("SidebarCard", SidebarCard);
    app.component("MarkMap", _sfc_main);
  }
};
const ClientOnly = defineComponent({
  setup(_, { slots }) {
    const show = ref(false);
    onMounted(() => {
      show.value = true;
    });
    return () => show.value && slots.default ? slots.default() : null;
  }
});
function useCodeGroups() {
  if (inBrowser) {
    window.addEventListener("click", (e) => {
      var _a;
      const el = e.target;
      if (el.matches(".vp-code-group input")) {
        const group = (_a = el.parentElement) == null ? void 0 : _a.parentElement;
        if (!group)
          return;
        const i = Array.from(group.querySelectorAll("input")).indexOf(el);
        if (i < 0)
          return;
        const blocks = group.querySelector(".blocks");
        if (!blocks)
          return;
        const current = Array.from(blocks.children).find((child) => child.classList.contains("active"));
        if (!current)
          return;
        const next = blocks.children[i];
        if (!next || current === next)
          return;
        current.classList.remove("active");
        next.classList.add("active");
        const label = group == null ? void 0 : group.querySelector(`label[for="${el.id}"]`);
        label == null ? void 0 : label.scrollIntoView({ block: "nearest" });
      }
    });
  }
}
function useCopyCode() {
  if (inBrowser) {
    const timeoutIdMap = /* @__PURE__ */ new WeakMap();
    window.addEventListener("click", (e) => {
      var _a;
      const el = e.target;
      if (el.matches('div[class*="language-"] > button.copy')) {
        const parent = el.parentElement;
        const sibling = (_a = el.nextElementSibling) == null ? void 0 : _a.nextElementSibling;
        if (!parent || !sibling) {
          return;
        }
        const isShell = /language-(shellscript|shell|bash|sh|zsh)/.test(parent.className);
        const ignoredNodes = [".vp-copy-ignore", ".diff.remove"];
        const clone = sibling.cloneNode(true);
        clone.querySelectorAll(ignoredNodes.join(",")).forEach((node) => node.remove());
        let text = clone.textContent || "";
        if (isShell) {
          text = text.replace(/^ *(\$|>) /gm, "").trim();
        }
        copyToClipboard(text).then(() => {
          el.classList.add("copied");
          clearTimeout(timeoutIdMap.get(el));
          const timeoutId = setTimeout(() => {
            el.classList.remove("copied");
            el.blur();
            timeoutIdMap.delete(el);
          }, 2e3);
          timeoutIdMap.set(el, timeoutId);
        });
      }
    });
  }
}
async function copyToClipboard(text) {
  try {
    return navigator.clipboard.writeText(text);
  } catch {
    const element = document.createElement("textarea");
    const previouslyFocusedElement = document.activeElement;
    element.value = text;
    element.setAttribute("readonly", "");
    element.style.contain = "strict";
    element.style.position = "absolute";
    element.style.left = "-9999px";
    element.style.fontSize = "12pt";
    const selection = document.getSelection();
    const originalRange = selection ? selection.rangeCount > 0 && selection.getRangeAt(0) : null;
    document.body.appendChild(element);
    element.select();
    element.selectionStart = 0;
    element.selectionEnd = text.length;
    document.execCommand("copy");
    document.body.removeChild(element);
    if (originalRange) {
      selection.removeAllRanges();
      selection.addRange(originalRange);
    }
    if (previouslyFocusedElement) {
      previouslyFocusedElement.focus();
    }
  }
}
function useUpdateHead(route, siteDataByRouteRef) {
  let isFirstUpdate = true;
  let managedHeadElements = [];
  const updateHeadTags = (newTags) => {
    if (isFirstUpdate) {
      isFirstUpdate = false;
      newTags.forEach((tag) => {
        const headEl = createHeadElement(tag);
        for (const el of document.head.children) {
          if (el.isEqualNode(headEl)) {
            managedHeadElements.push(el);
            return;
          }
        }
      });
      return;
    }
    const newElements = newTags.map(createHeadElement);
    managedHeadElements.forEach((oldEl, oldIndex) => {
      const matchedIndex = newElements.findIndex((newEl) => newEl == null ? void 0 : newEl.isEqualNode(oldEl ?? null));
      if (matchedIndex !== -1) {
        delete newElements[matchedIndex];
      } else {
        oldEl == null ? void 0 : oldEl.remove();
        delete managedHeadElements[oldIndex];
      }
    });
    newElements.forEach((el) => el && document.head.appendChild(el));
    managedHeadElements = [...managedHeadElements, ...newElements].filter(Boolean);
  };
  watchEffect(() => {
    const pageData = route.data;
    const siteData2 = siteDataByRouteRef.value;
    const pageDescription = pageData && pageData.description;
    const frontmatterHead = pageData && pageData.frontmatter.head || [];
    const title = createTitle(siteData2, pageData);
    if (title !== document.title) {
      document.title = title;
    }
    const description = pageDescription || siteData2.description;
    let metaDescriptionElement = document.querySelector(`meta[name=description]`);
    if (metaDescriptionElement) {
      if (metaDescriptionElement.getAttribute("content") !== description) {
        metaDescriptionElement.setAttribute("content", description);
      }
    } else {
      createHeadElement(["meta", { name: "description", content: description }]);
    }
    updateHeadTags(mergeHead(siteData2.head, filterOutHeadDescription(frontmatterHead)));
  });
}
function createHeadElement([tag, attrs, innerHTML]) {
  const el = document.createElement(tag);
  for (const key in attrs) {
    el.setAttribute(key, attrs[key]);
  }
  if (innerHTML) {
    el.innerHTML = innerHTML;
  }
  if (tag === "script" && attrs.async == null) {
    el.async = false;
  }
  return el;
}
function isMetaDescription(headConfig) {
  return headConfig[0] === "meta" && headConfig[1] && headConfig[1].name === "description";
}
function filterOutHeadDescription(head) {
  return head.filter((h2) => !isMetaDescription(h2));
}
const hasFetched = /* @__PURE__ */ new Set();
const createLink = () => document.createElement("link");
const viaDOM = (url) => {
  const link2 = createLink();
  link2.rel = `prefetch`;
  link2.href = url;
  document.head.appendChild(link2);
};
const viaXHR = (url) => {
  const req = new XMLHttpRequest();
  req.open("GET", url, req.withCredentials = true);
  req.send();
};
let link;
const doFetch = inBrowser && (link = createLink()) && link.relList && link.relList.supports && link.relList.supports("prefetch") ? viaDOM : viaXHR;
function usePrefetch() {
  if (!inBrowser) {
    return;
  }
  if (!window.IntersectionObserver) {
    return;
  }
  let conn;
  if ((conn = navigator.connection) && (conn.saveData || /2g/.test(conn.effectiveType))) {
    return;
  }
  const rIC = window.requestIdleCallback || setTimeout;
  let observer = null;
  const observeLinks = () => {
    if (observer) {
      observer.disconnect();
    }
    observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const link2 = entry.target;
          observer.unobserve(link2);
          const { pathname } = link2;
          if (!hasFetched.has(pathname)) {
            hasFetched.add(pathname);
            const pageChunkPath = pathToFile(pathname);
            if (pageChunkPath)
              doFetch(pageChunkPath);
          }
        }
      });
    });
    rIC(() => {
      document.querySelectorAll("#app a").forEach((link2) => {
        const { hostname, pathname } = new URL(link2.href instanceof SVGAnimatedString ? link2.href.animVal : link2.href, link2.baseURI);
        const extMatch = pathname.match(/\.\w+$/);
        if (extMatch && extMatch[0] !== ".html") {
          return;
        }
        if (
          // only prefetch same tab navigation, since a new tab will load
          // the lean js chunk instead.
          link2.target !== "_blank" && // only prefetch inbound links
          hostname === location.hostname
        ) {
          if (pathname !== location.pathname) {
            observer.observe(link2);
          } else {
            hasFetched.add(pathname);
          }
        }
      });
    });
  };
  onMounted(observeLinks);
  const route = useRoute();
  watch(() => route.path, observeLinks);
  onUnmounted(() => {
    observer && observer.disconnect();
  });
}
function resolveThemeExtends(theme2) {
  if (theme2.extends) {
    const base = resolveThemeExtends(theme2.extends);
    return {
      ...base,
      ...theme2,
      async enhanceApp(ctx) {
        if (base.enhanceApp)
          await base.enhanceApp(ctx);
        if (theme2.enhanceApp)
          await theme2.enhanceApp(ctx);
      }
    };
  }
  return theme2;
}
const Theme = resolveThemeExtends(RawTheme);
const VitePressApp = defineComponent({
  name: "VitePressApp",
  setup() {
    const { site, lang, dir } = useData$1();
    onMounted(() => {
      watchEffect(() => {
        document.documentElement.lang = lang.value;
        document.documentElement.dir = dir.value;
      });
    });
    if (site.value.router.prefetchLinks) {
      usePrefetch();
    }
    useCopyCode();
    useCodeGroups();
    if (Theme.setup)
      Theme.setup();
    return () => h(Theme.Layout);
  }
});
async function createApp() {
  globalThis.__VITEPRESS__ = true;
  const router = newRouter();
  const app = newApp();
  app.provide(RouterSymbol, router);
  const data2 = initData(router.route);
  app.provide(dataSymbol, data2);
  app.component("Mermaid", _sfc_main$1g);
  app.component("Content", Content);
  app.component("ClientOnly", ClientOnly);
  Object.defineProperties(app.config.globalProperties, {
    $frontmatter: {
      get() {
        return data2.frontmatter.value;
      }
    },
    $params: {
      get() {
        return data2.page.value.params;
      }
    }
  });
  if (Theme.enhanceApp) {
    await Theme.enhanceApp({
      app,
      router,
      siteData: siteDataRef
    });
  }
  return { app, router, data: data2 };
}
function newApp() {
  return createSSRApp(VitePressApp);
}
function newRouter() {
  let isInitialPageLoad = inBrowser;
  return createRouter((path) => {
    let pageFilePath = pathToFile(path);
    let pageModule = null;
    if (pageFilePath) {
      if (isInitialPageLoad) {
        pageFilePath = pageFilePath.replace(/\.js$/, ".lean.js");
      }
      if (false) ;
      else {
        pageModule = import(
          /*@vite-ignore*/
          pageFilePath
        );
      }
    }
    if (inBrowser) {
      isInitialPageLoad = false;
    }
    return pageModule;
  }, Theme.NotFound);
}
if (inBrowser) {
  createApp().then(({ app, router, data: data2 }) => {
    router.go().then(() => {
      useUpdateHead(router.route, data2.site);
      app.mount("#app");
    });
  });
}
async function render(path) {
  const { app, router } = await createApp();
  await router.go(path);
  const ctx = { content: "", vpSocialIcons: /* @__PURE__ */ new Set() };
  ctx.content = await renderToString(app, ctx);
  return ctx;
}
export {
  useRouter as a,
  createSearchTranslate as c,
  dataSymbol as d,
  escapeRegExp as e,
  inBrowser as i,
  pathToFile as p,
  render,
  useData as u
};
